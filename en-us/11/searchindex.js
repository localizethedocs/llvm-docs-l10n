Search.setIndex({"alltitles": {"!vcall_visibility Metadata": [[623, "vcall-visibility-metadata"]], "#0 - BLOCKINFO Block": [[454, "blockinfo-block"]], "#include <iostream> is Forbidden": [[467, "include-iostream-is-forbidden"]], "#include Style": [[467, "include-style"]], "#include as Little as Possible": [[467, "include-as-little-as-possible"]], "-aa-eval: Exhaustive Alias Analysis Precision Evaluator": [[587, "aa-eval-exhaustive-alias-analysis-precision-evaluator"]], "-adce: Aggressive Dead Code Elimination": [[587, "adce-aggressive-dead-code-elimination"]], "-aggressive-instcombine: Combine expression patterns": [[587, "aggressive-instcombine-combine-expression-patterns"]], "-always-inline: Inliner for always_inline functions": [[587, "always-inline-inliner-for-always-inline-functions"]], "-argpromotion: Promote \u2018by reference\u2019 arguments to scalars": [[587, "argpromotion-promote-by-reference-arguments-to-scalars"]], "-basic-aa: Basic Alias Analysis (stateless AA impl)": [[587, "basic-aa-basic-alias-analysis-stateless-aa-impl"]], "-basiccg: Basic CallGraph Construction": [[587, "basiccg-basic-callgraph-construction"]], "-bb-vectorize: Basic-Block Vectorization": [[587, "bb-vectorize-basic-block-vectorization"]], "-block-placement: Profile Guided Basic Block Placement": [[587, "block-placement-profile-guided-basic-block-placement"]], "-break-crit-edges: Break critical edges in CFG": [[587, "break-crit-edges-break-critical-edges-in-cfg"]], "-codegenprepare: Optimize for code generation": [[587, "codegenprepare-optimize-for-code-generation"]], "-constmerge: Merge Duplicate Global Constants": [[587, "constmerge-merge-duplicate-global-constants"]], "-constprop: Simple constant propagation": [[587, "constprop-simple-constant-propagation"]], "-count-aa: Count Alias Analysis Query Responses": [[587, "count-aa-count-alias-analysis-query-responses"]], "-da: Dependence Analysis": [[587, "da-dependence-analysis"]], "-dce: Dead Code Elimination": [[587, "dce-dead-code-elimination"]], "-deadargelim: Dead Argument Elimination": [[587, "deadargelim-dead-argument-elimination"]], "-deadarghaX0r: Dead Argument Hacking (BUGPOINT USE ONLY; DO NOT USE)": [[587, "deadarghax0r-dead-argument-hacking-bugpoint-use-only-do-not-use"]], "-deadtypeelim: Dead Type Elimination": [[587, "deadtypeelim-dead-type-elimination"]], "-debug-aa: AA use debugger": [[587, "debug-aa-aa-use-debugger"]], "-die: Dead Instruction Elimination": [[587, "die-dead-instruction-elimination"]], "-domfrontier: Dominance Frontier Construction": [[587, "domfrontier-dominance-frontier-construction"]], "-domtree: Dominator Tree Construction": [[587, "domtree-dominator-tree-construction"]], "-dot-callgraph: Print Call Graph to \u201cdot\u201d file": [[587, "dot-callgraph-print-call-graph-to-dot-file"]], "-dot-cfg-only: Print CFG of function to \u201cdot\u201d file (with no function bodies)": [[587, "dot-cfg-only-print-cfg-of-function-to-dot-file-with-no-function-bodies"]], "-dot-cfg: Print CFG of function to \u201cdot\u201d file": [[587, "dot-cfg-print-cfg-of-function-to-dot-file"]], "-dot-dom-only: Print dominance tree of function to \u201cdot\u201d file (with no function bodies)": [[587, "dot-dom-only-print-dominance-tree-of-function-to-dot-file-with-no-function-bodies"]], "-dot-dom: Print dominance tree of function to \u201cdot\u201d file": [[587, "dot-dom-print-dominance-tree-of-function-to-dot-file"]], "-dot-postdom-only: Print postdominance tree of function to \u201cdot\u201d file (with no function bodies)": [[587, "dot-postdom-only-print-postdominance-tree-of-function-to-dot-file-with-no-function-bodies"]], "-dot-postdom: Print postdominance tree of function to \u201cdot\u201d file": [[587, "dot-postdom-print-postdominance-tree-of-function-to-dot-file"]], "-dse: Dead Store Elimination": [[587, "dse-dead-store-elimination"]], "-extract-blocks: Extract Basic Blocks From Module (for bugpoint use)": [[587, "extract-blocks-extract-basic-blocks-from-module-for-bugpoint-use"]], "-functionattrs: Deduce function attributes": [[587, "functionattrs-deduce-function-attributes"]], "-globaldce: Dead Global Elimination": [[587, "globaldce-dead-global-elimination"]], "-globalopt: Global Variable Optimizer": [[587, "globalopt-global-variable-optimizer"]], "-globalsmodref-aa: Simple mod/ref analysis for globals": [[587, "globalsmodref-aa-simple-mod-ref-analysis-for-globals"]], "-gvn: Global Value Numbering": [[587, "gvn-global-value-numbering"]], "-indvars: Canonicalize Induction Variables": [[587, "indvars-canonicalize-induction-variables"]], "-inline: Function Integration/Inlining": [[587, "inline-function-integration-inlining"]], "-instcombine: Combine redundant instructions": [[587, "instcombine-combine-redundant-instructions"]], "-instcount: Counts the various types of Instructions": [[587, "instcount-counts-the-various-types-of-instructions"]], "-instnamer: Assign names to anonymous instructions": [[587, "instnamer-assign-names-to-anonymous-instructions"]], "-internalize: Internalize Global Symbols": [[587, "internalize-internalize-global-symbols"]], "-intervals: Interval Partition Construction": [[587, "intervals-interval-partition-construction"]], "-ipconstprop: Interprocedural constant propagation": [[587, "ipconstprop-interprocedural-constant-propagation"]], "-ipsccp: Interprocedural Sparse Conditional Constant Propagation": [[587, "ipsccp-interprocedural-sparse-conditional-constant-propagation"]], "-iv-users: Induction Variable Users": [[587, "iv-users-induction-variable-users"]], "-jump-threading: Jump Threading": [[587, "jump-threading-jump-threading"]], "-lazy-value-info: Lazy Value Information Analysis": [[587, "lazy-value-info-lazy-value-information-analysis"]], "-lcssa: Loop-Closed SSA Form Pass": [[587, "lcssa-loop-closed-ssa-form-pass"]], "-libcall-aa: LibCall Alias Analysis": [[587, "libcall-aa-libcall-alias-analysis"]], "-licm: Loop Invariant Code Motion": [[587, "licm-loop-invariant-code-motion"]], "-lint: Statically lint-checks LLVM IR": [[587, "lint-statically-lint-checks-llvm-ir"]], "-loop-deletion: Delete dead loops": [[587, "loop-deletion-delete-dead-loops"]], "-loop-extract-single: Extract at most one loop into a new function": [[587, "loop-extract-single-extract-at-most-one-loop-into-a-new-function"]], "-loop-extract: Extract loops into new functions": [[587, "loop-extract-extract-loops-into-new-functions"]], "-loop-reduce: Loop Strength Reduction": [[587, "loop-reduce-loop-strength-reduction"]], "-loop-rotate: Rotate Loops": [[587, "loop-rotate-rotate-loops"]], "-loop-simplify: Canonicalize natural loops": [[587, "loop-simplify-canonicalize-natural-loops"]], "-loop-unroll-and-jam: Unroll and Jam loops": [[587, "loop-unroll-and-jam-unroll-and-jam-loops"]], "-loop-unroll: Unroll loops": [[587, "loop-unroll-unroll-loops"]], "-loop-unswitch: Unswitch loops": [[587, "loop-unswitch-unswitch-loops"]], "-loops: Natural Loop Information": [[587, "loops-natural-loop-information"]], "-loweratomic: Lower atomic intrinsics to non-atomic form": [[587, "loweratomic-lower-atomic-intrinsics-to-non-atomic-form"]], "-lowerinvoke: Lower invokes to calls, for unwindless code generators": [[587, "lowerinvoke-lower-invokes-to-calls-for-unwindless-code-generators"]], "-lowerswitch: Lower SwitchInsts to branches": [[587, "lowerswitch-lower-switchinsts-to-branches"]], "-mem2reg: Promote Memory to Register": [[587, "mem2reg-promote-memory-to-register"]], "-memcpyopt: MemCpy Optimization": [[587, "memcpyopt-memcpy-optimization"]], "-memdep: Memory Dependence Analysis": [[587, "memdep-memory-dependence-analysis"]], "-mergefunc: Merge Functions": [[587, "mergefunc-merge-functions"]], "-mergereturn: Unify function exit nodes": [[587, "mergereturn-unify-function-exit-nodes"]], "-module-debuginfo: Decodes module-level debug info": [[587, "module-debuginfo-decodes-module-level-debug-info"]], "-partial-inliner: Partial Inliner": [[587, "partial-inliner-partial-inliner"]], "-postdomfrontier: Post-Dominance Frontier Construction": [[587, "postdomfrontier-post-dominance-frontier-construction"]], "-postdomtree: Post-Dominator Tree Construction": [[587, "postdomtree-post-dominator-tree-construction"]], "-print-alias-sets: Alias Set Printer": [[587, "print-alias-sets-alias-set-printer"]], "-print-callgraph-sccs: Print SCCs of the Call Graph": [[587, "print-callgraph-sccs-print-sccs-of-the-call-graph"]], "-print-callgraph: Print a call graph": [[587, "print-callgraph-print-a-call-graph"]], "-print-cfg-sccs: Print SCCs of each function CFG": [[587, "print-cfg-sccs-print-sccs-of-each-function-cfg"]], "-print-dom-info: Dominator Info Printer": [[587, "print-dom-info-dominator-info-printer"]], "-print-externalfnconstants: Print external fn callsites passed constants": [[587, "print-externalfnconstants-print-external-fn-callsites-passed-constants"]], "-print-function: Print function to stderr": [[587, "print-function-print-function-to-stderr"]], "-print-module: Print module to stderr": [[587, "print-module-print-module-to-stderr"]], "-print-used-types: Find Used Types": [[587, "print-used-types-find-used-types"]], "-prune-eh: Remove unused exception handling info": [[587, "prune-eh-remove-unused-exception-handling-info"]], "-reassociate: Reassociate expressions": [[587, "reassociate-reassociate-expressions"]], "-reg2mem: Demote all values to stack slots": [[587, "reg2mem-demote-all-values-to-stack-slots"]], "-regions: Detect single entry single exit regions": [[587, "regions-detect-single-entry-single-exit-regions"]], "-scalar-evolution: Scalar Evolution Analysis": [[587, "scalar-evolution-scalar-evolution-analysis"]], "-sccp: Sparse Conditional Constant Propagation": [[587, "sccp-sparse-conditional-constant-propagation"]], "-scev-aa: ScalarEvolution-based Alias Analysis": [[587, "scev-aa-scalarevolution-based-alias-analysis"]], "-simplifycfg: Simplify the CFG": [[587, "simplifycfg-simplify-the-cfg"]], "-sink: Code sinking": [[587, "sink-code-sinking"]], "-sroa: Scalar Replacement of Aggregates": [[587, "sroa-scalar-replacement-of-aggregates"]], "-stack-safety: Stack Safety Analysis": [[587, "stack-safety-stack-safety-analysis"]], "-strip-dead-debug-info: Strip debug info for unused symbols": [[587, "strip-dead-debug-info-strip-debug-info-for-unused-symbols"]], "-strip-dead-prototypes: Strip Unused Function Prototypes": [[587, "strip-dead-prototypes-strip-unused-function-prototypes"]], "-strip-debug-declare: Strip all llvm.dbg.declare intrinsics": [[587, "strip-debug-declare-strip-all-llvm-dbg-declare-intrinsics"]], "-strip-nondebug: Strip all symbols, except dbg symbols, from a module": [[587, "strip-nondebug-strip-all-symbols-except-dbg-symbols-from-a-module"]], "-strip: Strip all symbols from a module": [[587, "strip-strip-all-symbols-from-a-module"]], "-tailcallelim: Tail Call Elimination": [[587, "tailcallelim-tail-call-elimination"]], "-targetdata: Target Data Layout": [[587, "targetdata-target-data-layout"]], "-transform-warning: Report missed forced transformations": [[587, "transform-warning-report-missed-forced-transformations"]], "-verify: Module Verifier": [[587, "verify-module-verifier"]], "-view-cfg-only: View CFG of function (with no function bodies)": [[587, "view-cfg-only-view-cfg-of-function-with-no-function-bodies"]], "-view-cfg: View CFG of function": [[587, "view-cfg-view-cfg-of-function"]], "-view-dom-only: View dominance tree of function (with no function bodies)": [[587, "view-dom-only-view-dominance-tree-of-function-with-no-function-bodies"]], "-view-dom: View dominance tree of function": [[587, "view-dom-view-dominance-tree-of-function"]], "-view-postdom-only: View postdominance tree of function (with no function bodies)": [[587, "view-postdom-only-view-postdominance-tree-of-function-with-no-function-bodies"]], "-view-postdom: View postdominance tree of function": [[587, "view-postdom-view-postdominance-tree-of-function"]], ".amd_kernel_code_t": [[447, "amd-kernel-code-t"]], ".amdgcn.gfx_generation_minor": [[447, "amdgcn-gfx-generation-minor"]], ".amdgcn.gfx_generation_number": [[447, "amdgcn-gfx-generation-number"]], ".amdgcn.gfx_generation_stepping": [[447, "amdgcn-gfx-generation-stepping"]], ".amdgcn.next_free_sgpr": [[447, "amdgcn-next-free-sgpr"]], ".amdgcn.next_free_vgpr": [[447, "amdgcn-next-free-vgpr"]], ".amdgcn_target <target>": [[447, "amdgcn-target-target"]], ".amdgpu_hsa_kernel (name)": [[447, "amdgpu-hsa-kernel-name"]], ".amdgpu_metadata": [[447, "amdgpu-metadata"]], ".amdhsa_kernel <name>": [[447, "amdhsa-kernel-name"]], ".cv_def_range Directive": [[521, "cv-def-range-directive"]], ".cv_file Directive": [[521, "cv-file-directive"]], ".cv_filechecksumoffset Directive": [[521, "cv-filechecksumoffset-directive"]], ".cv_filechecksums Directive": [[521, "cv-filechecksums-directive"]], ".cv_fpo_data Directive": [[521, "cv-fpo-data-directive"]], ".cv_func_id Directive": [[521, "cv-func-id-directive"]], ".cv_inline_linetable Directive": [[521, "cv-inline-linetable-directive"]], ".cv_inline_site_id Directive": [[521, "cv-inline-site-id-directive"]], ".cv_linetable Directive": [[521, "cv-linetable-directive"]], ".cv_loc Directive": [[521, "cv-loc-directive"]], ".cv_stringtable Directive": [[521, "cv-stringtable-directive"]], ".debug_info section attribute form roles": [[442, "amdgpu-dwarf-debug-info-section-attribute-form-roles-table"]], ".hsa_code_object_isa [major, minor, stepping, vendor, arch]": [[447, "hsa-code-object-isa-major-minor-stepping-vendor-arch"]], ".hsa_code_object_version major, minor": [[447, "hsa-code-object-version-major-minor"]], ".kernel.sgpr_count": [[447, "kernel-sgpr-count"]], ".kernel.vgpr_count": [[447, "kernel-vgpr-count"]], ".linker-options Section (linker options)": [[521, "linker-options-section-linker-options"]], ".linkonce Directive": [[521, "linkonce-directive"]], ".o File Writing": [[464, "o-file-writing"]], ".option.machine_version_major": [[447, "option-machine-version-major"]], ".option.machine_version_minor": [[447, "option-machine-version-minor"]], ".option.machine_version_stepping": [[447, "option-machine-version-stepping"]], ".section Directive": [[521, "section-directive"], [521, "id2"]], "1. IR-level VP intrinsics": [[595, "ir-level-vp-intrinsics"]], "10,000 ft View": [[463, "ft-view"]], "2. CodeGen support": [[595, "codegen-support"]], "3-Stage Non-Determinism": [[449, "stage-non-determinism"]], "3. Lift InstSimplify/InstCombine/DAGCombiner to VP": [[595, "lift-instsimplify-instcombine-dagcombiner-to-vp"]], "32-Bit and 64-Bit DWARF Formats": [[442, "bit-and-64-bit-dwarf-formats"], [447, "bit-and-64-bit-dwarf-formats"]], "4. Deprecate llvm.masked.* / llvm.experimental.reduce.*": [[595, "deprecate-llvm-masked-llvm-experimental-reduce"]], "5. Predicated IR Instructions": [[595, "predicated-ir-instructions"]], "6-bit characters": [[454, "bit-characters"]], "64-bit load checking instructions": [[606, "bit-load-checking-instructions"]], "<algorithm>": [[510, "algorithm"]], "<deque>": [[589, "deque"]], "<list>": [[589, "list"]], "<map>": [[589, "map"]], "<math.h> and <cmath>": [[510, "math-h-and-cmath"]], "<set>": [[589, "set"]], "<std::complex>": [[510, "std-complex"]], "<vector>": [[589, "vector"]], "A": [[560, "a"]], "A Benchmark for the C/C++ Standard Library": [[593, "a-benchmark-for-the-c-c-standard-library"]], "A Bug to be Aware Of": [[552, "a-bug-to-be-aware-of"]], "A Spectre Variant #1 Mitigation Technique": [[606, "a-spectre-variant-1-mitigation-technique"]], "A flag-less alternative on Haswell, Zen and newer processors": [[606, "a-flag-less-alternative-on-haswell-zen-and-newer-processors"]], "A guide to Dockerfiles for building LLVM": [[518, null]], "A sorted \u2018vector\u2019": [[589, "a-sorted-vector"], [589, "dss-sortedvectormap"]], "AAPCS": [[453, "aapcs"]], "AArch64 & ARM": [[511, "aarch64-arm"]], "AArch64 Target": [[549, "aarch64-target"]], "ABI": [[511, "abi"]], "ABI Breaking Checks": [[589, "abi-breaking-checks"]], "ABI Compatibility": [[592, "abi-compatibility"]], "ADDITIONAL OPTIONS": [[472, "additional-options"]], "AFL compatibility": [[561, "afl-compatibility"]], "AMDGPU": [[511, "amdgpu"]], "AMDGPU Address Spaces": [[447, "amdgpu-address-spaces-table"]], "AMDGPU Architectures": [[447, "amdgpu-architecture-table"]], "AMDGPU Clang Debug Options": [[447, "amdgpu-clang-debug-options-table"]], "AMDGPU Code Object V2 ELF Note Record Enumeration Values": [[447, "amdgpu-elf-note-record-enumeration-values-table-v2"]], "AMDGPU Code Object V2 ELF Note Records": [[447, "amdgpu-elf-note-records-table-v2"]], "AMDGPU Code Object V3 ELF Note Record Enumeration Values": [[447, "amdgpu-elf-note-record-enumeration-values-table-v3"]], "AMDGPU Code Object V3 ELF Note Records": [[447, "amdgpu-elf-note-records-table-v3"]], "AMDGPU DWARF Address Class Mapping": [[447, "amdgpu-dwarf-address-class-mapping-table"]], "AMDGPU DWARF Address Space Mapping": [[447, "amdgpu-dwarf-address-space-mapping-table"]], "AMDGPU DWARF Register Mapping": [[447, "amdgpu-dwarf-register-mapping-table"]], "AMDGPU EF_AMDGPU_MACH Values": [[447, "amdgpu-ef-amdgpu-mach-table"]], "AMDGPU ELF Header": [[447, "amdgpu-elf-header-table"]], "AMDGPU ELF Header Enumeration Values": [[447, "amdgpu-elf-header-enumeration-values-table"]], "AMDGPU ELF Header e_flags": [[447, "amdgpu-elf-header-e-flags-table"]], "AMDGPU ELF Relocation Records": [[447, "amdgpu-elf-relocation-records-table"]], "AMDGPU ELF Sections": [[447, "amdgpu-elf-sections-table"]], "AMDGPU ELF Symbols": [[447, "amdgpu-elf-symbols-table"]], "AMDGPU Environments": [[447, "amdgpu-environment-table"]], "AMDGPU Instruction Syntax": [[444, null]], "AMDGPU Instructions Notation": [[443, null]], "AMDGPU LLVM IR Attributes": [[447, "amdgpu-llvm-ir-attributes-table"]], "AMDGPU Operating Systems": [[447, "amdgpu-os-table"]], "AMDGPU Processors": [[447, "amdgpu-processor-table"]], "AMDGPU Target Features": [[447, "amdgpu-target-feature-table"]], "AMDGPU Trap Handler for AMDHSA OS": [[447, "amdgpu-trap-handler-for-amdhsa-os-table"]], "AMDGPU Trap Handler for Non-AMDHSA OS": [[447, "amdgpu-trap-handler-for-non-amdhsa-os-table"]], "AMDGPU Vendors": [[447, "amdgpu-vendor-table"]], "AMDHSA": [[447, "amdhsa"]], "AMDHSA Code Object V2 Kernel Argument Metadata Map": [[447, "amdgpu-amdhsa-code-object-kernel-argument-metadata-map-table-v2"]], "AMDHSA Code Object V2 Kernel Attribute Metadata Map": [[447, "amdgpu-amdhsa-code-object-kernel-attribute-metadata-map-table-v2"]], "AMDHSA Code Object V2 Kernel Code Properties Metadata Map": [[447, "amdgpu-amdhsa-code-object-kernel-code-properties-metadata-map-table-v2"]], "AMDHSA Code Object V2 Kernel Metadata Map": [[447, "amdgpu-amdhsa-code-object-kernel-metadata-map-table-v2"]], "AMDHSA Code Object V2 Metadata Map": [[447, "amdgpu-amdhsa-code-object-metadata-map-table-v2"]], "AMDHSA Code Object V3 Kernel Argument Metadata Map": [[447, "amdgpu-amdhsa-code-object-kernel-argument-metadata-map-table-v3"]], "AMDHSA Code Object V3 Kernel Metadata Map": [[447, "amdgpu-amdhsa-code-object-kernel-metadata-map-table-v3"]], "AMDHSA Code Object V3 Metadata Map": [[447, "amdgpu-amdhsa-code-object-metadata-map-table-v3"]], "AMDHSA Kernel Assembler Directives": [[447, "amdhsa-kernel-directives-table"]], "AMDHSA LLVM Sync Scopes": [[447, "amdgpu-amdhsa-llvm-sync-scopes-table"]], "AMDHSA Memory Model Code Sequences GFX6-GFX10": [[447, "amdgpu-amdhsa-memory-model-code-sequences-gfx6-gfx10-table"]], "AMDHSA Memory Model Single Thread Optimization Constraints GFX6-GFX10": [[447, "amdgpu-amdhsa-memory-model-single-thread-optimization-constraints-gfx6-gfx10-table"]], "AMDPAL": [[447, "amdpal"]], "API Reference": [[597, "api-reference"]], "API: InstructionSelector": [[536, "api-instructionselector"]], "API: LegalizerInfo": [[538, "api-legalizerinfo"]], "API: RegisterBankInfo": [[541, "api-registerbankinfo"]], "ARM64/COFF-Dependent": [[521, "arm64-coff-dependent"]], "AST Extensions for If/Then/Else": [[652, "ast-extensions-for-if-then-else"], [663, "ast-extensions-for-if-then-else"]], "AST Extensions for the \u2018for\u2019 Loop": [[652, "ast-extensions-for-the-for-loop"], [663, "ast-extensions-for-the-for-loop"]], "Abandoning a change": [[588, "abandoning-a-change"]], "Abbreviated Record Encoding": [[454, "abbreviated-record-encoding"]], "Abbreviation IDs": [[454, "abbreviation-ids"]], "Abbreviations": [[454, "abbreviations"]], "About": [[632, null]], "Absolute Expressions": [[446, "absolute-expressions"]], "Absolute Symbols": [[573, "absolute-symbols"]], "Absolute Symbols, Aliases, and Reexports": [[573, "absolute-symbols-aliases-and-reexports"]], "Abstract": [[454, "abstract"], [524, "abstract"], [526, "abstract"], [559, "abstract"], [593, "abstract"], [596, "abstract"], [611, "abstract"]], "Abstract Machine Model": [[610, "abstract-machine-model"]], "Accelerated Access": [[442, "accelerated-access"], [447, "accelerated-access"]], "Accepting membership": [[603, "accepting-membership"]], "Access": [[603, "access"]], "Accumulating Predicate State": [[606, "accumulating-predicate-state"]], "Accurate Garbage Collection Intrinsics": [[559, "accurate-garbage-collection-intrinsics"]], "Achieving Isolation with LLVMContext": [[589, "achieving-isolation-with-llvmcontext"]], "Acknowledge All Reviewer Feedback": [[466, "acknowledge-all-reviewer-feedback"]], "Acquire": [[451, "acquire"]], "AcquireRelease": [[451, "acquirerelease"]], "Actively working on fixing bugs": [[457, "actively-working-on-fixing-bugs"]], "Add SelectionDAG node types": [[448, "add-selectiondag-node-types"]], "Add documentation and tests": [[448, "add-documentation-and-tests"]], "Add the intrinsic": [[448, "add-the-intrinsic"]], "Adding Finer Granularity": [[574, "adding-finer-granularity"]], "Adding a JIT Compiler": [[651, "adding-a-jit-compiler"], [662, "adding-a-jit-compiler"]], "Adding a New Target": [[517, "adding-a-new-target"]], "Adding a derived type": [[520, "adding-a-derived-type"]], "Adding a fundamental type": [[520, "adding-a-fundamental-type"]], "Adding a new SelectionDAG node": [[520, "adding-a-new-selectiondag-node"]], "Adding a new instruction": [[520, "adding-a-new-instruction"]], "Adding a new intrinsic function": [[520, "adding-a-new-intrinsic-function"]], "Adding a new type": [[520, "adding-a-new-type"]], "Adding an Established Project To the LLVM Monorepo": [[517, "adding-an-established-project-to-the-llvm-monorepo"]], "Adding debug counters to aid in debugging your code": [[589, "adding-debug-counters-to-aid-in-debugging-your-code"]], "Adding freeform text to help output": [[509, "adding-freeform-text-to-help-output"]], "Adding to this document": [[524, "adding-to-this-document"]], "Additional Documentation": [[447, "additional-documentation"]], "Additional Information": [[598, "additional-information"]], "Additional Topics": [[597, "additional-topics"], [624, "additional-topics"]], "Address Class Identifier": [[447, "address-class-identifier"]], "Address Class and Address Space Encodings": [[442, "address-class-and-address-space-encodings"]], "Address Computation": [[527, "address-computation"]], "Address Remapping": [[564, "address-remapping"]], "Address Space Conversion": [[572, "address-space-conversion"]], "Address Space Identifier": [[447, "address-space-identifier"]], "Address Spaces": [[447, "address-spaces"], [572, "address-spaces"], [572, "id10"]], "Address class": [[442, "amdgpu-dwarf-address-class-table"]], "Address class encodings": [[442, "amdgpu-dwarf-address-class-encodings-table"]], "Addresses of Basic Blocks": [[559, "addresses-of-basic-blocks"]], "Adjusting Existing Variables for Mutation": [[654, "adjusting-existing-variables-for-mutation"], [665, "adjusting-existing-variables-for-mutation"]], "Advanced Build Configurations": [[449, null]], "Advanced Concepts": [[514, "advanced-concepts"]], "Advanced Topics": [[589, "advanced-topics"], [667, "advanced-topics"]], "Advanced features": [[561, "advanced-features"]], "Advantages": [[594, "advantages"]], "Advantages:": [[516, "advantages"]], "Advertisement": [[568, "advertisement"]], "Advice for using bugpoint": [[458, "advice-for-using-bugpoint"]], "Advice on Packaging LLVM": [[586, null]], "Aggregate Operations": [[559, "aggregate-operations"]], "Aggregate Types": [[559, "aggregate-types"]], "Aggregates": [[535, "aggregates"]], "Ahead-of-Time Compilation Mode": [[656, "ahead-of-time-compilation-mode"]], "Aim to Make Efficient Use of Everyone\u2019s Time": [[466, "aim-to-make-efficient-use-of-everyone-s-time"]], "Alias Summary": [[559, "alias-summary"]], "Alias analysis driven transformations": [[450, "alias-analysis-driven-transformations"]], "AliasAnalysis Class Overview": [[450, "aliasanalysis-class-overview"]], "AliasAnalysis chaining behavior": [[450, "aliasanalysis-chaining-behavior"]], "Aliases": [[559, "aliases"]], "Aliases and Reexports": [[573, "aliases-and-reexports"]], "Alignment": [[453, "alignment"]], "Alignment and Block Boundaries": [[581, "alignment-and-block-boundaries"]], "Allocating Stacklets": [[604, "allocating-stacklets"]], "Allocator": [[602, "allocator"]], "Allocator Support": [[545, "allocator-support"]], "Alternative Approaches": [[562, "alternative-approaches"]], "Alternative using a cmake cache": [[549, "alternative-using-a-cmake-cache"]], "Ambiguous Transformation Order": [[622, "ambiguous-transformation-order"]], "An Example Using the LLVM Tool Chain": [[529, "an-example-using-the-llvm-tool-chain"], [531, "an-example-using-the-llvm-tool-chain"]], "Analysis Group Concepts": [[627, "analysis-group-concepts"]], "Analysis Passes": [[587, "analysis-passes"]], "Announce the Release": [[551, "announce-the-release"]], "Anonymous Namespaces": [[467, "anonymous-namespaces"]], "Appealing": [[601, "appealing"]], "Apple Clang Builds (A More Complex Bootstrap)": [[449, "apple-clang-builds-a-more-complex-bootstrap"]], "Applications/Libraries": [[593, "applications-libraries"]], "Architecture & Platform Information for Compiler Writers": [[511, null]], "Areas Requiring Attention": [[513, "areas-requiring-attention"]], "Argument Aliases": [[509, "argument-aliases"]], "Argument Handling": [[463, "argument-handling"]], "Arguments": [[559, "id633"], [559, "id638"], [559, "id643"], [559, "id648"], [559, "id653"], [559, "id658"], [559, "id663"], [559, "id668"], [559, "id673"], [559, "id678"], [559, "id683"], [559, "id688"]], "Arguments:": [[513, "arguments"], [513, "id4"], [513, "id7"], [513, "id10"], [513, "id13"], [513, "id16"], [513, "id19"], [513, "id21"], [513, "id25"], [513, "id28"], [513, "id31"], [513, "id34"], [513, "id36"], [513, "id38"], [513, "id41"], [513, "id44"], [513, "id48"], [513, "id51"], [559, "arguments"], [559, "id29"], [559, "id34"], [559, "id39"], [559, "id45"], [559, "id50"], [559, "id55"], [559, "id60"], [559, "id65"], [559, "id70"], [559, "id80"], [559, "id85"], [559, "id90"], [559, "id95"], [559, "id100"], [559, "id105"], [559, "id110"], [559, "id115"], [559, "id120"], [559, "id125"], [559, "id130"], [559, "id135"], [559, "id140"], [559, "id145"], [559, "id150"], [559, "id155"], [559, "id160"], [559, "id165"], [559, "id170"], [559, "id175"], [559, "id180"], [559, "id185"], [559, "id190"], [559, "id195"], [559, "id200"], [559, "id205"], [559, "id210"], [559, "id215"], [559, "id220"], [559, "id225"], [559, "id230"], [559, "id235"], [559, "id240"], [559, "id245"], [559, "id250"], [559, "id255"], [559, "id260"], [559, "id265"], [559, "id270"], [559, "id275"], [559, "id280"], [559, "id285"], [559, "id290"], [559, "id295"], [559, "id300"], [559, "id305"], [559, "id310"], [559, "id315"], [559, "id320"], [559, "id325"], [559, "id330"], [559, "id336"], [559, "id342"], [559, "id349"], [559, "id355"], [559, "id359"], [559, "id363"], [559, "id368"], [559, "id372"], [559, "id376"], [559, "id380"], [559, "id390"], [559, "id394"], [559, "id410"], [559, "id414"], [559, "id424"], [559, "id428"], [559, "id432"], [559, "id449"], [559, "id453"], [559, "id457"], [559, "id461"], [559, "id465"], [559, "id469"], [559, "id473"], [559, "id477"], [559, "id481"], [559, "id485"], [559, "id489"], [559, "id493"], [559, "id497"], [559, "id501"], [559, "id505"], [559, "id509"], [559, "id513"], [559, "id517"], [559, "id521"], [559, "id525"], [559, "id529"], [559, "id533"], [559, "id537"], [559, "id541"], [559, "id545"], [559, "id549"], [559, "id553"], [559, "id557"], [559, "id561"], [559, "id565"], [559, "id569"], [559, "id573"], [559, "id583"], [559, "id587"], [559, "id591"], [559, "id595"], [559, "id599"], [559, "id603"], [559, "id608"], [559, "id613"], [559, "id618"], [559, "id623"], [559, "id628"], [559, "id695"], [559, "id700"], [559, "id704"], [559, "id708"], [559, "id712"], [559, "id716"], [559, "id719"], [559, "id723"], [559, "id726"], [559, "id730"], [559, "id733"], [559, "id736"], [559, "id739"], [559, "id742"], [559, "id745"], [559, "id748"], [559, "id751"], [559, "id754"], [559, "id757"], [559, "id760"], [559, "id763"], [559, "id766"], [559, "id769"], [559, "id774"], [559, "id779"], [559, "id783"], [559, "id787"], [559, "id792"], [559, "id797"], [559, "id802"], [559, "id807"], [559, "id812"], [559, "id817"], [559, "id822"], [559, "id827"], [559, "id832"], [559, "id837"], [559, "id842"], [559, "id847"], [559, "id852"], [559, "id857"], [559, "id861"], [559, "id865"], [559, "id869"], [559, "id873"], [559, "id877"], [559, "id881"], [559, "id885"], [559, "id889"], [559, "id893"], [559, "id897"], [559, "id901"], [559, "id905"], [559, "id909"], [559, "id913"], [559, "id917"], [559, "id921"], [559, "id925"], [559, "id929"], [559, "id933"], [559, "id937"], [559, "id941"], [559, "id945"], [559, "id949"], [559, "id953"], [559, "id957"], [559, "id961"], [559, "id965"], [559, "id969"], [559, "id973"], [559, "id977"], [559, "id981"], [559, "id985"], [559, "id989"], [559, "id993"], [559, "id997"], [559, "id1001"], [559, "id1005"], [559, "id1009"], [559, "id1013"], [559, "id1017"], [559, "id1021"], [559, "id1025"], [559, "id1029"], [559, "id1033"], [559, "id1037"], [559, "id1041"], [559, "id1045"], [559, "id1049"], [559, "id1053"], [559, "id1057"], [559, "id1064"], [559, "id1068"], [559, "id1072"], [559, "id1075"], [559, "id1078"], [559, "id1082"], [559, "id1086"], [559, "id1090"], [559, "id1094"], [559, "id1098"], [559, "id1102"], [559, "id1106"], [559, "id1109"], [559, "id1112"], [559, "id1115"], [559, "id1119"], [559, "id1123"], [559, "id1129"], [559, "id1136"], [559, "id1142"], [559, "id1150"], [559, "id1155"], [559, "id1160"], [559, "id1201"], [559, "id1205"], [559, "id1209"]], "Arithmetic and Logical Operations": [[442, "arithmetic-and-logical-operations"]], "Arithmetic with Overflow Intrinsics": [[559, "arithmetic-with-overflow-intrinsics"]], "Arm Soft-Float Target": [[549, "arm-soft-float-target"]], "Arm architecture not given": [[549, "arm-architecture-not-given"]], "ArmNeon": [[613, "armneon"]], "ArmNeonSema": [[613, "armneonsema"]], "ArmNeonTest": [[613, "armneontest"]], "Armv6-m, Armv7-m and Armv7E-M targets": [[549, "armv6-m-armv7-m-and-armv7e-m-targets"]], "Array Type": [[559, "array-type"]], "Asm Table Formats": [[519, "asm-table-formats"]], "Asm template argument modifiers": [[559, "asm-template-argument-modifiers"]], "AsmMatcher": [[613, "asmmatcher"]], "AsmWriter": [[613, "asmwriter"]], "Assembler": [[447, "assembler"]], "Assembly Parser": [[464, "assembly-parser"]], "Assembly Printer": [[626, "assembly-printer"]], "Assert Liberally": [[467, "assert-liberally"]], "Assume Operand Bundles": [[559, "assume-operand-bundles"]], "Atomic Memory Ordering Constraints": [[559, "atomic-memory-ordering-constraints"]], "Atomic instructions": [[451, "atomic-instructions"]], "Atomic orderings": [[451, "atomic-orderings"]], "Atomics and Codegen": [[451, "atomics-and-codegen"]], "Atomics and IR optimization": [[451, "atomics-and-ir-optimization"]], "AttrBuilder": [[555, "attrbuilder"]], "AttrDocs": [[613, "attrdocs"]], "Attribute": [[555, "attribute"]], "Attribute Encodings": [[442, "attribute-encodings"]], "Attribute Groups": [[559, "attribute-groups"]], "Attribute Types": [[442, "attribute-types"]], "Attribute encodings": [[442, "amdgpu-dwarf-attribute-encodings-table"]], "Attribute names": [[442, "amdgpu-dwarf-attribute-names-table"]], "AttributeList": [[555, "attributelist"]], "Attributes by Tag Value (Informative)": [[442, "attributes-by-tag-value-informative"]], "Attributes by tag value": [[442, "amdgpu-dwarf-attributes-by-tag-value-table"]], "Attribution of Changes": [[517, "attribution-of-changes"]], "Audience": [[626, "audience"]], "Authoring Guidelines": [[607, "authoring-guidelines"]], "Auto-Vectorization in LLVM": [[625, null]], "Automatic Debugger Selection": [[458, "automatic-debugger-selection"]], "Automatic Linker Flags Named Metadata": [[559, "automatic-linker-flags-named-metadata"]], "Automatic lfence on Conditional Edges": [[606, "automatic-lfence-on-conditional-edges"]], "Available AliasAnalysis implementations": [[450, "available-aliasanalysis-implementations"]], "Available Fuzzers": [[525, "available-fuzzers"]], "Avoid loads and stores of large aggregate type": [[524, "avoid-loads-and-stores-of-large-aggregate-type"]], "Avoid std::endl": [[467, "avoid-std-endl"]], "Avoiding Heap Allocations": [[513, "avoiding-heap-allocations"]], "B": [[560, "b"]], "BINARY INPUT AND OUTPUT": [[495, "binary-input-and-output"]], "BUGS": [[484, "bugs"], [491, "bugs"], [494, "bugs"], [495, "bugs"], [496, "bugs"], [502, "bugs"], [504, "bugs"], [505, "bugs"]], "Background": [[461, "background"], [515, "background"], [552, "background"]], "Background on Windows exceptions": [[519, "background-on-windows-exceptions"]], "Background on historical bugpoint issues": [[459, "background-on-historical-bugpoint-issues"]], "Barriers": [[572, "barriers"]], "Base & Derived Pointers": [[610, "base-derived-pointers"]], "Basic CMake usage": [[462, "usage"]], "Basic Commands": [[471, "basic-commands"]], "Basic Expression Parsing": [[649, "basic-expression-parsing"], [660, "basic-expression-parsing"]], "Basic Inspection and Traversal Routines": [[589, "basic-inspection-and-traversal-routines"]], "Basic Mode": [[628, "basic-mode"]], "Basic Setup": [[552, "basic-setup"]], "Basic Steps": [[626, "basic-steps"]], "Basic Usage": [[498, "basic-usage"]], "Basic code required": [[627, "basic-code-required"]], "Basic concepts": [[617, "basic-concepts"]], "Basic migration": [[591, "basic-migration"]], "Basic operation": [[532, "basic-operation"]], "Basics": [[454, "basics"], [571, "basics"]], "Benchmarking tips": [[452, null]], "Benchmarks": [[593, "benchmarks"], [619, "benchmarks"]], "Beware of non-determinism due to ordering of pointers": [[467, "beware-of-non-determinism-due-to-ordering-of-pointers"]], "Beware of non-deterministic sorting order of equal elements": [[467, "beware-of-non-deterministic-sorting-order-of-equal-elements"]], "Beware unnecessary copies with auto": [[467, "beware-unnecessary-copies-with-auto"]], "Big bang": [[594, "big-bang"]], "Bigger Pieces of Work": [[512, "bigger-pieces-of-work"]], "Binary Expression Parsing": [[649, "binary-expression-parsing"], [660, "binary-expression-parsing"]], "Binary Operations": [[559, "binary-operations"]], "Binary Operators": [[446, "binary-operators"]], "Bisecting": [[591, "bisecting"]], "Bisecting LLVM code": [[532, null]], "Bisecting across multiple roots": [[532, "bisecting-across-multiple-roots"]], "Bisecting commits": [[529, "bisecting-commits"]], "Bisection Index Values": [[574, "bisection-index-values"]], "Bit Manipulation Intrinsics": [[559, "bit-manipulation-intrinsics"]], "Bit storage containers (BitVector, SparseBitVector, CoalescingBitVector)": [[589, "bit-storage-containers-bitvector-sparsebitvector-coalescingbitvector"]], "BitValue": [[631, "bitvalue"]], "BitVector": [[589, "bitvector"]], "Bitcode Wrapper Format": [[454, "bitcode-wrapper-format"]], "Bitconverts": [[453, "bitconverts"]], "Bitstream Format": [[454, "bitstream-format"]], "Bitwise Binary Operations": [[559, "bitwise-binary-operations"]], "Blitz++": [[593, "blitz"]], "Block Bias": [[455, "block-bias"]], "Block Frequency": [[455, "block-frequency"]], "Block Mass": [[455, "block-mass"]], "Block References": [[565, "block-references"]], "Block Scalars": [[631, "block-scalars"]], "Blocks": [[454, "blocks"]], "Bodies": [[616, "bodies"]], "Boolean Arguments": [[509, "boolean-arguments"]], "Bootstrap Builds": [[449, "bootstrap-builds"]], "Bottleneck Analysis": [[493, "bottleneck-analysis"]], "Braced Initializer Lists": [[467, "braced-initializer-lists"]], "Branch Folding and If Conversion": [[626, "branch-folding-and-if-conversion"]], "Branch Probability": [[455, "branch-probability"]], "Branch Weight": [[455, "branch-weight"]], "BranchInst": [[456, "branchinst"]], "Branching/Stashing/Updating for Local Development or Experiments": [[591, "branching-stashing-updating-for-local-development-or-experiments"]], "Buffer Underflow/Overflow Detection": [[545, "buffer-underflow-overflow-detection"]], "Bug Fixes": [[512, "bug-fixes"]], "Bug Reporting Process": [[599, "bug-reporting-process"]], "Bug Reports": [[512, "bug-reports"]], "Bugpoint Redesign": [[459, null]], "Bugs and Enhancements": [[610, "bugs-and-enhancements"]], "Build Bots": [[592, "build-bots"]], "Build Clang Binary Distribution": [[551, "build-clang-binary-distribution"]], "Build Integration": [[558, "build-integration"]], "Build-time use optimization": [[570, "build-time-use-optimization"]], "Building Clang with PGO": [[548, "building-clang-with-pgo"]], "Building LLVM with CMake": [[462, null]], "Building a Distribution of LLVM": [[460, null]], "Building a JIT in LLVM": [[667, "building-a-jit-in-llvm"]], "Building a JIT: Adding Optimizations \u2013 An introduction to ORC Layers": [[634, null]], "Building a JIT: Extreme Laziness - Using Compile Callbacks to JIT from ASTs": [[636, null]], "Building a JIT: Per-function Lazy Compilation": [[635, null]], "Building a JIT: Remote-JITing \u2013 Process Isolation and Laziness at a Distance": [[637, null]], "Building a JIT: Starting out with KaleidoscopeJIT": [[633, null]], "Building a single sub-project": [[591, "building-a-single-sub-project"]], "Building and Running": [[525, "building-and-running"]], "Building compiler-rt builtins for Arm": [[549, "building-compiler-rt-builtins-for-arm"]], "Building fallible iterators and iterator ranges": [[589, "building-fallible-iterators-and-iterator-ranges"]], "Building pass plugins": [[627, "building-pass-plugins"]], "Building the SelectionDAG": [[448, "building-the-selectiondag"]], "Building with XRay": [[629, "building-with-xray"]], "Buildmasters": [[546, "buildmasters"]], "Built In GC Strategies": [[526, "built-in-gc-strategies"]], "Built in register allocators": [[464, "built-in-register-allocators"]], "Built-in expect Instructions": [[456, "built-in-expect-instructions"]], "Built-in expect.with.probability Instruction": [[456, "built-in-expect-with-probability-instruction"]], "Built-in types": [[631, "built-in-types"]], "Builtin parsers": [[509, "builtin-parsers"]], "Bundled Instructions": [[565, "bundled-instructions"]], "C": [[560, "c"]], "C API": [[600, "c-api"]], "C API Changes": [[517, "c-api-changes"]], "C API Details": [[567, "c-api-details"]], "C type width Module Flags Metadata": [[559, "c-type-width-module-flags-metadata"]], "C++ Features": [[586, "c-features"]], "C++ Performance Benchmarks": [[593, "c-performance-benchmarks"]], "C++ Standard Library": [[467, "c-standard-library"]], "C++ Standard Versions": [[467, "c-standard-versions"]], "C++ special member functions information": [[605, "c-special-member-functions-information"]], "C++ specific debug information": [[605, "c-specific-debug-information"]], "C/C++ front-end specific debug information": [[605, "c-c-front-end-specific-debug-information"]], "C/C++ function information": [[605, "c-c-function-information"]], "C/C++ global variable information": [[605, "c-c-global-variable-information"]], "C/C++ source file information": [[605, "c-c-source-file-information"]], "C99-style Hexadecimal Floating-point Constants": [[521, "c99-style-hexadecimal-floating-point-constants"]], "CFA Definition Instructions": [[442, "cfa-definition-instructions"]], "CFG Modifications": [[456, "cfg-modifications"]], "CFI": [[447, "cfi"]], "CFIIndex Operands": [[565, "cfiindex-operands"]], "CMake Caches": [[462, "cmake-caches"]], "CMake Primer": [[463, null]], "CODE GENERATION OPTIONS": [[474, "code-generation-options"]], "COFF Syntax": [[668, "coff-syntax"]], "COFF-SPECIFIC OPTIONS": [[505, "coff-specific-options"]], "COMMANDS": [[481, "commands"], [491, "commands"], [496, "commands"], [498, "commands"]], "COMPONENTS": [[480, "components"]], "CONSTANTS_BLOCK Contents": [[454, "constants-block-contents"]], "CORAL-2 Benchmarks": [[593, "coral-2-benchmarks"]], "CTags": [[613, "ctags"]], "Call Convention": [[447, "call-convention"]], "Call Frame Calling Address": [[442, "call-frame-calling-address"]], "Call Frame Information": [[442, "call-frame-information"], [442, "id3"], [447, "call-frame-information"]], "Call Frame Instruction Usage": [[442, "call-frame-instruction-usage"]], "Call Frame Instructions": [[442, "call-frame-instructions"]], "Call Site Attributes": [[559, "call-site-attributes"]], "Call frame instruction encodings": [[442, "amdgpu-dwarf-call-frame-instruction-encodings-table"]], "Call-clobbered registers": [[464, "call-clobbered-registers"]], "CallArgument Records": [[630, "callargument-records"]], "CallInst": [[456, "callinst"]], "Callee-cleanup Calling Conventions": [[557, "callee-cleanup-calling-conventions"]], "Calling Conventions": [[559, "calling-conventions"], [626, "calling-conventions"]], "CallingConv": [[613, "callingconv"]], "Calls": [[559, "calls"]], "Can Code Be Reviewed After It Is Committed?": [[466, "can-code-be-reviewed-after-it-is-committed"]], "Can GEP index into vector elements?": [[527, "can-gep-index-into-vector-elements"]], "Can I cast an object\u2019s address to integer and add it to null?": [[527, "can-i-cast-an-object-s-address-to-integer-and-add-it-to-null"]], "Can I compare two values computed with GEPs?": [[527, "can-i-compare-two-values-computed-with-geps"]], "Can I compile C or C++ code to platform-independent LLVM bitcode?": [[522, "can-i-compile-c-or-c-code-to-platform-independent-llvm-bitcode"]], "Can I compute the distance between two objects, and add that value to one address to compute the other address?": [[527, "can-i-compute-the-distance-between-two-objects-and-add-that-value-to-one-address-to-compute-the-other-address"]], "Can I do GEP with a different pointer type than the type of the underlying object?": [[527, "can-i-do-gep-with-a-different-pointer-type-than-the-type-of-the-underlying-object"]], "Can I do type-based alias analysis on LLVM IR?": [[527, "can-i-do-type-based-alias-analysis-on-llvm-ir"]], "Can I modify LLVM source code and redistribute the modified source?": [[522, "can-i-modify-llvm-source-code-and-redistribute-the-modified-source"]], "Can I modify the LLVM source code and redistribute binaries or other tools based on it, without redistributing the source?": [[522, "can-i-modify-the-llvm-source-code-and-redistribute-binaries-or-other-tools-based-on-it-without-redistributing-the-source"]], "Can array indices be negative?": [[527, "can-array-indices-be-negative"]], "Changes to building LLVM": [[598, "changes-to-building-llvm"]], "Changes to the AArch64 Backend": [[598, "changes-to-the-aarch64-backend"]], "Changes to the AMDGPU Target": [[598, "changes-to-the-amdgpu-target"]], "Changes to the ARM Backend": [[598, "changes-to-the-arm-backend"]], "Changes to the AVR Target": [[598, "changes-to-the-avr-target"]], "Changes to the DAG infrastructure": [[598, "changes-to-the-dag-infrastructure"]], "Changes to the Debug Info": [[598, "changes-to-the-debug-info"]], "Changes to the Gold Plugin": [[598, "changes-to-the-gold-plugin"]], "Changes to the JIT infrastructure": [[598, "changes-to-the-jit-infrastructure"]], "Changes to the LLVM IR": [[598, "changes-to-the-llvm-ir"]], "Changes to the LLVM tools": [[598, "changes-to-the-llvm-tools"]], "Changes to the Policy": [[603, "changes-to-the-policy"]], "Changes to the PowerPC Target": [[598, "changes-to-the-powerpc-target"]], "Changes to the RISC-V Target": [[598, "changes-to-the-risc-v-target"]], "Changes to the SystemZ Target": [[598, "changes-to-the-systemz-target"]], "Changes to the WebAssembly Target": [[598, "changes-to-the-webassembly-target"]], "Changes to the Windows Target": [[598, "changes-to-the-windows-target"]], "Changes to the X86 Target": [[598, "changes-to-the-x86-target"]], "Chapter 1 Introduction": [[633, "chapter-1-introduction"]], "Chapter 2 Introduction": [[634, "chapter-2-introduction"], [649, "chapter-2-introduction"], [660, "chapter-2-introduction"]], "Chapter 3 Introduction": [[635, "chapter-3-introduction"], [650, "chapter-3-introduction"], [661, "chapter-3-introduction"]], "Chapter 4 Introduction": [[636, "chapter-4-introduction"], [651, "chapter-4-introduction"], [662, "chapter-4-introduction"]], "Chapter 5 Introduction": [[637, "chapter-5-introduction"], [652, "chapter-5-introduction"], [663, "chapter-5-introduction"]], "Chapter 6 Introduction": [[653, "chapter-6-introduction"], [664, "chapter-6-introduction"]], "Chapter 7 Introduction": [[654, "chapter-7-introduction"], [665, "chapter-7-introduction"]], "Chapter 8 Introduction": [[655, "chapter-8-introduction"]], "Chapter 9 Introduction": [[656, "chapter-9-introduction"]], "Checkout LLVM from Git": [[529, "checkout-llvm-from-git"]], "Checkout via SVN (deprecated)": [[529, "checkout-via-svn-deprecated"]], "Checkout/Clone Multiple Projects, with Commit Access": [[591, "checkout-clone-multiple-projects-with-commit-access"]], "Checkout/Clone a Single Project, with Commit Access": [[591, "checkout-clone-a-single-project-with-commit-access"]], "Choosing a target": [[655, "choosing-a-target"]], "Choosing new members": [[603, "choosing-new-members"]], "Chrome Trace Viewer Visualization": [[629, "chrome-trace-viewer-visualization"]], "Chunk Header": [[602, "chunk-header"]], "Clang": [[602, "clang"], [624, "id1"]], "Clang BackEnds": [[613, "clang-backends"]], "Clang uses the host header files": [[549, "clang-uses-the-host-header-files"]], "ClangAttrClasses": [[613, "clangattrclasses"]], "ClangAttrDump": [[613, "clangattrdump"]], "ClangAttrImpl": [[613, "clangattrimpl"]], "ClangAttrList": [[613, "clangattrlist"]], "ClangAttrPCHRead": [[613, "clangattrpchread"]], "ClangAttrPCHWrite": [[613, "clangattrpchwrite"]], "ClangAttrParsedAttrImpl": [[613, "clangattrparsedattrimpl"]], "ClangAttrParsedAttrKinds": [[613, "clangattrparsedattrkinds"]], "ClangAttrParsedAttrList": [[613, "clangattrparsedattrlist"]], "ClangAttrParserStringSwitches": [[613, "clangattrparserstringswitches"]], "ClangAttrSpellingListIndex": [[613, "clangattrspellinglistindex"]], "ClangAttrSpellings": [[613, "clangattrspellings"]], "ClangAttrTemplateInstantiate": [[613, "clangattrtemplateinstantiate"]], "ClangAttrVisitor": [[613, "clangattrvisitor"]], "ClangCommentCommandInfo": [[613, "clangcommentcommandinfo"]], "ClangCommentCommandList": [[613, "clangcommentcommandlist"]], "ClangCommentHTMLNamedCharacterReferences": [[613, "clangcommenthtmlnamedcharacterreferences"]], "ClangCommentHTMLTags": [[613, "clangcommenthtmltags"]], "ClangCommentHTMLTagsProperties": [[613, "clangcommenthtmltagsproperties"]], "ClangCommentNodes": [[613, "clangcommentnodes"]], "ClangDeclNodes": [[613, "clangdeclnodes"]], "ClangDiagGroups": [[613, "clangdiaggroups"]], "ClangDiagsDefs": [[613, "clangdiagsdefs"]], "ClangDiagsIndexName": [[613, "clangdiagsindexname"]], "ClangSACheckers": [[613, "clangsacheckers"]], "ClangStmtNodes": [[613, "clangstmtnodes"]], "Class overviews": [[467, "class-overviews"]], "Class template arguments": [[615, "class-template-arguments"]], "Classes and definitions": [[615, "classes-and-definitions"]], "Cleanups": [[519, "cleanups"]], "Clients for debugging and evaluation of implementations": [[450, "clients-for-debugging-and-evaluation-of-implementations"]], "Clobber constraints": [[559, "clobber-constraints"]], "CoalescingBitVector": [[589, "coalescingbitvector"]], "Code Blocks": [[607, "code-blocks"]], "Code Conventions": [[447, "code-conventions"]], "Code Emission": [[464, "code-emission"]], "Code Generation": [[564, "code-generation"], [624, "code-generation"]], "Code Generation Setup": [[650, "code-generation-setup"], [661, "code-generation-setup"]], "Code Generation for If/Then/Else": [[652, "code-generation-for-if-then-else"], [663, "code-generation-for-if-then-else"]], "Code Generation for the \u2018for\u2019 Loop": [[652, "code-generation-for-the-for-loop"], [663, "code-generation-for-the-for-loop"]], "Code Generator Intrinsics": [[559, "code-generator-intrinsics"]], "Code Generator backend info": [[615, "code-generator-backend-info"]], "Code Object Metadata": [[447, "code-object-metadata"]], "Code Object Target Identification": [[447, "code-object-target-identification"]], "Code Object V2 Directives (-mattr=-code-object-v3)": [[447, "code-object-v2-directives-mattr-code-object-v3"]], "Code Object V2 Example Source Code (-mattr=-code-object-v3)": [[447, "code-object-v2-example-source-code-mattr-code-object-v3"]], "Code Object V2 Metadata (-mattr=-code-object-v3)": [[447, "code-object-v2-metadata-mattr-code-object-v3"]], "Code Object V2 Note Records (-mattr=-code-object-v3)": [[447, "code-object-v2-note-records-mattr-code-object-v3"]], "Code Object V2 Predefined Symbols (-mattr=-code-object-v3)": [[447, "code-object-v2-predefined-symbols-mattr-code-object-v3"]], "Code Object V3 Directives (-mattr=+code-object-v3)": [[447, "code-object-v3-directives-mattr-code-object-v3"]], "Code Object V3 Example Source Code (-mattr=+code-object-v3)": [[447, "code-object-v3-example-source-code-mattr-code-object-v3"]], "Code Object V3 Metadata (-mattr=+code-object-v3)": [[447, "code-object-v3-metadata-mattr-code-object-v3"]], "Code Object V3 Note Records (-mattr=+code-object-v3)": [[447, "code-object-v3-note-records-mattr-code-object-v3"]], "Code Object V3 Predefined Symbols (-mattr=+code-object-v3)": [[447, "code-object-v3-predefined-symbols-mattr-code-object-v3"]], "Code Organization": [[611, "code-organization"]], "Code Owners": [[517, "code-owners"]], "Code Reviews": [[517, "code-reviews"]], "Code Reviews with Phabricator": [[588, null]], "Code Reviews, Speed, and Reciprocity": [[466, "code-reviews-speed-and-reciprocity"]], "Code Transformation Metadata": [[622, null]], "Code generator bugs": [[553, "code-generator-bugs"]], "Code generator debugger": [[458, "code-generator-debugger"]], "Code-Review Workflow": [[466, "code-review-workflow"]], "CodeEmitter": [[613, "codeemitter"]], "CodeView": [[585, "codeview"]], "CodeView Debug Info Format": [[605, "codeview-debug-info-format"]], "CodeView Symbol Records": [[575, null]], "CodeView Type Record List": [[584, "codeview-type-record-list"]], "CodeView Type Records": [[576, null]], "CodeView-Dependent": [[521, "codeview-dependent"]], "Collaboration": [[603, "collaboration"]], "Collecting options as a set of flags": [[509, "collecting-options-as-a-set-of-flags"]], "Collector Requirements": [[526, "collector-requirements"]], "Color conversion": [[593, "color-conversion"]], "Comdats": [[559, "comdats"]], "Command Line Utilities": [[597, "command-line-utilities"]], "Command line flags": [[625, "command-line-flags"]], "Command-Line Options": [[459, "command-line-options"]], "CommandLine 2.0 Library Manual": [[509, null]], "Comment Formatting": [[467, "comment-formatting"]], "Commenting": [[467, "commenting"]], "Commit an API Change in LLVM and Update the Sub-projects": [[591, "commit-an-api-change-in-llvm-and-update-the-sub-projects"]], "Commit messages": [[517, "commit-messages"]], "Committing a change": [[588, "committing-a-change"]], "Committing someone\u2019s change from Phabricator": [[588, "committing-someone-s-change-from-phabricator"]], "Common CMake Flags": [[619, "common-cmake-flags"]], "Common Configuration Options": [[619, "common-configuration-options"]], "Common Issues": [[572, "common-issues"]], "Common Problems": [[529, "common-problems"], [531, "common-problems"]], "Community": [[632, "community"]], "Community Testing": [[551, "community-testing"]], "Community wide proposals": [[528, "community-wide-proposals"]], "Comparison and logarithmical search": [[571, "comparison-and-logarithmical-search"]], "Compilation": [[619, "compilation"]], "Compilation Models": [[510, "compilation-models"]], "Compile Flags": [[586, "compile-flags"]], "Compile Unit": [[656, "compile-unit"]], "Compile-time optimization bugs": [[553, "compile-time-optimization-bugs"]], "Compiler-rt builds but the tests fail to build": [[549, "compiler-rt-builds-but-the-tests-fail-to-build"]], "Compiler/Platform-specific topics": [[462, "compiler-platform-specific-topics"]], "Compiling CUDA Code": [[510, "compiling-cuda-code"]], "Compiling CUDA with clang": [[510, null]], "Compiling the LLVM Suite Source Code": [[529, "compiling-the-llvm-suite-source-code"]], "Complex Constants": [[559, "complex-constants"]], "ComplexPatterns": [[536, "complexpatterns"]], "Component Overview": [[558, "component-overview"]], "Composite Location Description Operations": [[442, "composite-location-description-operations"]], "Composite Rules": [[538, "composite-rules"]], "Compute User Data": [[447, "compute-user-data"]], "Computing stack maps": [[526, "computing-stack-maps"]], "Concatenating Errors with joinErrors": [[589, "concatenating-errors-with-joinerrors"]], "Conclusions": [[649, "conclusions"], [660, "conclusions"]], "Concrete Bases and Deeper Hierarchies": [[552, "concrete-bases-and-deeper-hierarchies"]], "Confidentiality": [[603, "confidentiality"]], "Configuration": [[619, "configuration"]], "Configuring CMake": [[550, "configuring-cmake"]], "Configuring External Tests": [[620, "configuring-external-tests"]], "Configuring LLVM to Build Fuzzers": [[525, "configuring-llvm-to-build-fuzzers"]], "Configuring the Module": [[655, "configuring-the-module"]], "Considerations": [[453, "considerations"]], "Consistent Semantics": [[611, "consistent-semantics"]], "Constant Expressions": [[559, "constant-expressions"]], "Constant Pool Indices": [[565, "constant-pool-indices"]], "Constants": [[534, "constants"], [559, "constants"]], "Constrained Floating-Point Intrinsics": [[559, "constrained-floating-point-intrinsics"]], "Constrained libm-equivalent Intrinsics": [[559, "constrained-libm-equivalent-intrinsics"]], "Constraining test execution": [[621, "constraining-test-execution"]], "Constraint Codes": [[559, "constraint-codes"]], "Contents": [[552, "contents"], [605, "id7"]], "Contents of the Name Index": [[442, "contents-of-the-name-index"]], "Contextual markups": [[567, "contextual-markups"]], "Continuous Tracking with LNT": [[619, "continuous-tracking-with-lnt"]], "Continuously Running and Finding Bugs": [[525, "continuously-running-and-finding-bugs"]], "Contributing to LLVM": [[512, null]], "Control Flow": [[463, "control-flow"], [534, "control-flow"]], "Control Flow Operations": [[442, "control-flow-operations"]], "Control Flow Verification Tool Design Document": [[461, null]], "Controlling Fidelity": [[629, "controlling-fidelity"]], "Controlling options grouping": [[509, "controlling-options-grouping"]], "Controlling other formatting options": [[509, "controlling-other-formatting-options"]], "Controlling the number of occurrences required and allowed": [[509, "controlling-the-number-of-occurrences-required-and-allowed"]], "Controlling whether or not a value must be specified": [[509, "controlling-whether-or-not-a-value-must-be-specified"]], "Conventions": [[445, "conventions"], [446, "conventions"], [572, "conventions"]], "Conversion Operations": [[559, "conversion-operations"]], "Conversion of Floating-Point Values": [[446, "conversion-of-floating-point-values"]], "Conversion of Integer Values": [[446, "conversion-of-integer-values"]], "Conversion of Relocatable Values": [[446, "conversion-of-relocatable-values"]], "Copyright": [[517, "copyright"]], "Copyright, License, and Patents": [[517, "copyright-license-and-patents"]], "Core Pipeline": [[539, null]], "CoroCleanup": [[513, "corocleanup"]], "CoroEarly": [[513, "coroearly"]], "CoroElide": [[513, "coroelide"]], "CoroSplit": [[513, "corosplit"]], "Coroutine Manipulation Intrinsics": [[513, "coroutine-manipulation-intrinsics"]], "Coroutine Promise": [[513, "coroutine-promise"]], "Coroutine Representation": [[513, "coroutine-representation"]], "Coroutine Structure Intrinsics": [[513, "coroutine-structure-intrinsics"]], "Coroutine Transformation": [[513, "coroutine-transformation"]], "Coroutine Transformation Passes": [[513, "coroutine-transformation-passes"]], "Coroutines by Example": [[513, "coroutines-by-example"]], "Coroutines in LLVM": [[513, null]], "Corpus": [[561, "corpus"]], "Counter": [[514, "id3"]], "Counter Expressions": [[514, "counter-expressions"]], "Counter:": [[514, "counter"], [514, "id8"]], "Coverage Mapping Header:": [[514, "coverage-mapping-header"]], "Crash debugger": [[458, "crash-debugger"]], "Crashing Bugs": [[553, "crashing-bugs"]], "Create Release Branch": [[551, "create-release-branch"]], "Creating New Articles": [[607, "creating-new-articles"]], "Creating an LLVM Project": [[590, null]], "Creating and inserting new Instructions": [[589, "creating-and-inserting-new-instructions"]], "Creating new registries": [[627, "creating-new-registries"]], "Criteria": [[603, "criteria"]], "Cross Compilation and External Devices": [[619, "cross-compilation-and-external-devices"]], "Cross compiling": [[462, "cross-compiling"]], "Cross-Compiling LLVM": [[529, "cross-compiling-llvm"]], "Cross-Compiling from x86_64 to ARM": [[550, "cross-compiling-from-x86-64-to-arm"]], "Current Contributors - Transferring from SVN": [[517, "current-contributors-transferring-from-svn"]], "Current Status": [[591, "current-status"], [592, "current-status"]], "Currently": [[591, "currently"], [591, "id7"], [591, "id9"], [591, "id11"]], "Custom": [[626, "custom"]], "Custom GC Strategies": [[526, "custom-gc-strategies"]], "Custom SDNodes": [[536, "custom-sdnodes"]], "Custom Scalar": [[631, "custom-scalar"]], "Custom Suites": [[619, "custom-suites"]], "Custom formatting": [[589, "custom-formatting"]], "Custom lowering of intrinsics": [[526, "custom-lowering-of-intrinsics"]], "CustomEventMarker Records": [[630, "customeventmarker-records"]], "D": [[560, "d"]], "DAGISel": [[613, "dagisel"]], "DARPA HPCS SSCA#2 C/OpenMP reference implementation": [[593, "darpa-hpcs-ssca-2-c-openmp-reference-implementation"]], "DBI Stream Options": [[497, "dbi-stream-options"]], "DEFINE_ABBREV Encoding": [[454, "define-abbrev-encoding"]], "DESCRIPTION": [[468, "description"], [469, "description"], [470, "description"], [472, "description"], [473, "description"], [474, "description"], [475, "description"], [476, "description"], [477, "description"], [478, "description"], [479, "description"], [480, "description"], [481, "description"], [481, "id2"], [481, "id4"], [481, "id7"], [481, "id10"], [482, "description"], [483, "description"], [484, "description"], [485, "description"], [486, "description"], [487, "description"], [488, "description"], [489, "description"], [490, "description"], [491, "description"], [492, "description"], [493, "description"], [494, "description"], [495, "description"], [496, "description"], [498, "description"], [498, "id2"], [498, "id4"], [498, "id7"], [499, "description"], [500, "description"], [501, "description"], [502, "description"], [503, "description"], [504, "description"], [505, "description"], [506, "description"], [507, "description"], [508, "description"]], "DETAILED OUTPUT DEFINITIONS": [[478, "detailed-output-definitions"]], "DFAPacketizer": [[613, "dfapacketizer"]], "DIBasicType": [[559, "dibasictype"]], "DICompileUnit": [[559, "dicompileunit"]], "DICompositeType": [[559, "dicompositetype"]], "DIDerivedType": [[559, "diderivedtype"]], "DIEnumerator": [[559, "dienumerator"]], "DIExpression": [[559, "diexpression"]], "DIFFERENCES TO LLVM-READELF": [[501, "differences-to-llvm-readelf"]], "DIFile": [[559, "difile"]], "DIFlags": [[559, "diflags"]], "DIGlobalVariable": [[559, "diglobalvariable"]], "DIGlobalVariableExpression": [[559, "diglobalvariableexpression"]], "DIImportedEntity": [[559, "diimportedentity"]], "DILexicalBlock": [[559, "dilexicalblock"]], "DILexicalBlockFile": [[559, "dilexicalblockfile"]], "DILocalVariable": [[559, "dilocalvariable"]], "DILocation": [[559, "dilocation"]], "DIMacro": [[559, "dimacro"]], "DIMacroFile": [[559, "dimacrofile"]], "DINamespace": [[559, "dinamespace"]], "DIObjCProperty": [[559, "diobjcproperty"]], "DISubprogram": [[559, "disubprogram"]], "DISubrange": [[559, "disubrange"]], "DISubroutineType": [[559, "disubroutinetype"]], "DITemplateTypeParameter": [[559, "ditemplatetypeparameter"]], "DITemplateValueParameter": [[559, "ditemplatevalueparameter"]], "DLL Storage Classes": [[559, "dll-storage-classes"]], "DPP/DPP16 Modifiers": [[445, "dpp-dpp16-modifiers"]], "DPP16": [[0, "dpp16"], [1, "dpp16"]], "DPP8": [[0, "dpp8"], [1, "dpp8"]], "DPP8 Modifiers": [[445, "dpp8-modifiers"]], "DS": [[0, "ds"], [2, "ds"], [3, "ds"], [4, "ds"], [447, "ds"]], "DS Modifiers": [[445, "ds-modifiers"]], "DWARF Debug Information": [[447, "dwarf-debug-information"]], "DWARF Emission Setup": [[656, "dwarf-emission-setup"]], "DWARF Expressions": [[442, "dwarf-expressions"], [442, "id1"]], "DWARF Location List Expressions": [[442, "dwarf-location-list-expressions"]], "DWARF Operation Encodings": [[442, "amdgpu-dwarf-operation-encodings-table"]], "DWARF Operation Expressions": [[442, "dwarf-operation-expressions"]], "DWARF Proposal For Heterogeneous Debugging": [[442, null]], "DW_AT_LLVM_active_lane": [[447, "dw-at-llvm-active-lane"]], "DW_AT_LLVM_augmentation": [[447, "dw-at-llvm-augmentation"]], "DW_AT_LLVM_lane_pc": [[447, "dw-at-llvm-lane-pc"]], "Data Dependence Graph": [[516, "data-dependence-graph"]], "Data Layout": [[559, "data-layout"], [572, "data-layout"]], "Data Records": [[454, "data-records"]], "Data Representation": [[442, "data-representation"]], "Data Representation of the Name Index": [[442, "data-representation-of-the-name-index"]], "Data Section": [[630, "data-section"]], "Data:": [[514, "data"]], "Debug information and optimizations": [[605, "debug-information-and-optimizations"]], "Debug information consumers": [[605, "debug-information-consumers"]], "Debugger Information Entry Attributes": [[447, "debugger-information-entry-attributes"]], "Debugger Intrinsics": [[559, "debugger-intrinsics"]], "Debugger intrinsic functions": [[605, "debugger-intrinsic-functions"]], "Debugging": [[539, "debugging"], [589, "debugging"]], "Debugging Information Entry Attributes": [[442, "debugging-information-entry-attributes"]], "Debugging Information Extension for Objective C Properties": [[605, "debugging-information-extension-for-objective-c-properties"]], "Debugging Information tests": [[621, "debugging-information-tests"], [621, "id1"]], "Debugging JIT-ed Code With GDB": [[515, null]], "Debugging MCJIT-ed code": [[515, "debugging-mcjit-ed-code"]], "Debugging Tools": [[471, "debugging-tools"]], "Debugging information format": [[605, "debugging-information-format"], [605, "id4"]], "Debugging with XRay": [[629, null]], "Declarations": [[616, "declarations"]], "Default values": [[631, "default-values"]], "Define a new ABI and/or calling convention": [[606, "define-a-new-abi-and-or-calling-convention"]], "Defining a Register": [[626, "defining-a-register"]], "Defining a Register Class": [[626, "defining-a-register-class"]], "Definitions": [[560, "definitions"], [596, "definitions"], [608, "definitions"]], "Delayed Freelist": [[602, "delayed-freelist"]], "Deleting GlobalVariables": [[589, "deleting-globalvariables"]], "Deleting Instructions": [[589, "deleting-instructions"], [589, "schanges-deleting-sub"]], "Deleting a MIR-level MachineInstr": [[554, "deleting-a-mir-level-machineinstr"]], "Deleting an IR-level Instruction": [[554, "deleting-an-ir-level-instruction"]], "Deoptimization Operand Bundles": [[559, "deoptimization-operand-bundles"]], "Dependence Graphs in LLVM": [[516, null]], "Dependencies": [[586, "dependencies"]], "Dependent Libs Named Metadata": [[559, "dependent-libs-named-metadata"]], "Deprecated and Removed Features/APIs": [[598, "deprecated-and-removed-features-apis"]], "Dereferencing": [[463, "dereferencing"]], "Describing Aliasing Properties": [[524, "describing-aliasing-properties"]], "Describing Language Specific Properties": [[524, "describing-language-specific-properties"]], "Description": [[458, "description"], [497, "description"], [562, "description"]], "Design": [[545, "design"], [602, "design"]], "Design Considerations": [[557, "design-considerations"]], "Design Guidelines": [[596, "design-guidelines"]], "Design Ideas": [[461, "design-ideas"]], "Design Overview": [[573, "design-overview"]], "Design Philosophy": [[458, "design-philosophy"], [562, "design-philosophy"]], "Design Trade-offs": [[516, "design-trade-offs"]], "Design and Implementation Reference": [[543, "design-and-implementation-reference"]], "Design and Usage of the InAlloca Attribute": [[557, null]], "Design of MemorySSA": [[570, "design-of-memoryssa"]], "Design tradeoffs": [[570, "design-tradeoffs"]], "Designing Type Hierarchies and Polymorphic Interfaces": [[589, "designing-type-hierarchies-and-polymorphic-interfaces"]], "Details": [[605, "details"], [625, "details"]], "Detecting clang vs NVCC from code": [[510, "detecting-clang-vs-nvcc-from-code"]], "Determining absolute position with getPosition()": [[509, "determining-absolute-position-with-getposition"]], "Developer Policies": [[517, "developer-policies"]], "Developer Tools": [[471, "developer-tools"]], "Developing LLVM passes out of source": [[462, "developing-llvm-passes-out-of-source"]], "Developing libFuzzer": [[561, "developing-libfuzzer"]], "Development Process": [[528, "development-process"]], "Diagnostics": [[625, "diagnostics"]], "Dialect Differences Between clang and nvcc": [[510, "dialect-differences-between-clang-and-nvcc"]], "Dictionaries": [[561, "dictionaries"]], "Difference between install and install-distribution": [[460, "difference-between-install-and-install-distribution"]], "Different Pass styles": [[450, "different-pass-styles"]], "Differentiating variable kinds": [[594, "differentiating-variable-kinds"]], "Direct Stack Map Entries": [[608, "direct-stack-map-entries"]], "Directory Layout": [[529, "directory-layout"]], "Disadvantages": [[594, "disadvantages"]], "Disadvantages:": [[516, "disadvantages"]], "Disassembler": [[464, "disassembler"], [613, "disassembler"]], "Disclosure": [[603, "disclosure"]], "Discussion Medium": [[603, "discussion-medium"]], "Displaying and Analyzing Results": [[619, "displaying-and-analyzing-results"]], "Dissecting the Kernel": [[572, "dissecting-the-kernel"]], "Dissecting the sample:": [[514, "dissecting-the-sample"]], "Distinct Save and Suspend": [[513, "distinct-save-and-suspend"]], "Dither": [[593, "dither"]], "Do Not Use using namespace std": [[467, "do-not-use-using-namespace-std"]], "Do not use Braced Initializer Lists to Call a Constructor": [[467, "do-not-use-braced-initializer-lists-to-call-a-constructor"]], "Do not use RTTI or Exceptions": [[467, "do-not-use-rtti-or-exceptions"]], "Do not use Static Constructors": [[467, "do-not-use-static-constructors"]], "Docker basics": [[518, "docker-basics"]], "Document List": [[631, "document-list"]], "Documentation": [[632, "documentation"]], "Don\u2019t Expose System Headers": [[611, "don-t-expose-system-headers"]], "Don\u2019t Include System Headers": [[611, "don-t-include-system-headers"]], "Don\u2019t Unintentionally Block a Review": [[466, "don-t-unintentionally-block-a-review"]], "Don\u2019t Use Braces on Simple Single-Statement Bodies of if/else/loop Statements": [[467, "don-t-use-braces-on-simple-single-statement-bodies-of-if-else-loop-statements"]], "Don\u2019t check dependent loads": [[606, "don-t-check-dependent-loads"]], "Don\u2019t check loads from compile-time constant stack offsets": [[606, "don-t-check-loads-from-compile-time-constant-stack-offsets"]], "Don\u2019t evaluate end() every time through a loop": [[467, "don-t-evaluate-end-every-time-through-a-loop"]], "Don\u2019t use default labels in fully covered switches over enumerations": [[467, "don-t-use-default-labels-in-fully-covered-switches-over-enumerations"]], "Don\u2019t use else after a return": [[467, "don-t-use-else-after-a-return"]], "Don\u2019t use inline when defining a function in a class definition": [[467, "don-t-use-inline-when-defining-a-function-in-a-class-definition"]], "Doxygen Use in Documentation Comments": [[467, "doxygen-use-in-documentation-comments"]], "Driver Changes and Closing Thoughts": [[650, "driver-changes-and-closing-thoughts"], [661, "driver-changes-and-closing-thoughts"]], "Dynamic Allocation": [[464, "dynamic-allocation"]], "Dynamically adding command line options": [[509, "dynamically-adding-command-line-options"]], "EC Substream": [[577, "ec-substream"]], "ELF Code Object": [[447, "elf-code-object"]], "ELF SPECIFIC OPTIONS": [[501, "elf-specific-options"]], "ELF-Dependent": [[521, "elf-dependent"]], "ELF-SPECIFIC OPTIONS": [[495, "elf-specific-options"], [505, "elf-specific-options"]], "END_BLOCK Encoding": [[454, "end-block-encoding"]], "ENTER_SUBBLOCK Encoding": [[454, "enter-subblock-encoding"]], "EXAMPLE": [[482, "example"], [504, "example"]], "EXAMPLE 1": [[492, "example-1"]], "EXAMPLE 1: benchmarking instructions": [[487, "example-1-benchmarking-instructions"]], "EXAMPLE 2": [[492, "example-2"]], "EXAMPLE 2: benchmarking a custom code snippet": [[487, "example-2-benchmarking-a-custom-code-snippet"]], "EXAMPLE 3": [[492, "example-3"]], "EXAMPLE 3: analysis": [[487, "example-3-analysis"]], "EXAMPLES": [[480, "examples"], [498, "examples"], [506, "examples"]], "EXECUTION OPTIONS": [[472, "execution-options"]], "EXIT STATUS": [[468, "exit-status"], [469, "exit-status"], [470, "exit-status"], [472, "exit-status"], [473, "exit-status"], [474, "exit-status"], [476, "exit-status"], [477, "exit-status"], [478, "exit-status"], [479, "exit-status"], [480, "exit-status"], [481, "exit-status"], [482, "exit-status"], [484, "exit-status"], [485, "exit-status"], [486, "exit-status"], [487, "exit-status"], [488, "exit-status"], [490, "exit-status"], [492, "exit-status"], [493, "exit-status"], [494, "exit-status"], [495, "exit-status"], [498, "exit-status"], [500, "exit-status"], [501, "exit-status"], [502, "exit-status"], [503, "exit-status"], [504, "exit-status"], [505, "exit-status"], [506, "exit-status"], [507, "exit-status"], [508, "exit-status"]], "EXP": [[0, "exp"], [2, "exp"], [3, "exp"], [4, "exp"]], "EXP Modifiers": [[445, "exp-modifiers"]], "EXPORT COMMAND": [[481, "export-command"]], "Efficiency": [[557, "efficiency"]], "Efficiency Issues": [[450, "efficiency-issues"]], "Element Wise Atomic Memory Intrinsics": [[559, "element-wise-atomic-memory-intrinsics"]], "Embed the predicate state into the high bit(s) of the stack pointer": [[606, "embed-the-predicate-state-into-the-high-bit-s-of-the-stack-pointer"]], "Embedded Module": [[565, "embedded-module"]], "Embedded PowerPC Processors manuals and docs": [[511, "embedded-powerpc-processors-manuals-and-docs"]], "Embedding LLVM in your project": [[462, "embedding-llvm-in-your-project"]], "Emit Object Code": [[655, "emit-object-code"]], "Emitting assembly code: GCMetadataPrinter": [[526, "emitting-assembly-code-gcmetadataprinter"]], "Emitting function stack size information": [[464, "emitting-function-stack-size-information"]], "Emitting remark diagnostics in the object file": [[600, "emitting-remark-diagnostics-in-the-object-file"]], "Enabling optimization remarks": [[600, "enabling-optimization-remarks"]], "Encoding": [[514, "encoding"]], "Encoding Suffices": [[444, "encoding-suffices"]], "End-user Options": [[473, "end-user-options"]], "EndOfBuffer Records": [[630, "endofbuffer-records"]], "Ending Execution with llvm_shutdown()": [[589, "ending-execution-with-llvm-shutdown"]], "Engine Creation": [[564, "engine-creation"]], "Error Handling": [[631, "error-handling"]], "Error Types": [[602, "error-types"]], "Error and Warning Messages": [[467, "error-and-warning-messages"]], "Error handling": [[589, "error-handling"]], "Example": [[515, "example"], [545, "example"], [617, "example"]], "Example (custom deallocation function):": [[513, "example-custom-deallocation-function"]], "Example (final suspend point):": [[513, "example-final-suspend-point"]], "Example (normal suspend point):": [[513, "example-normal-suspend-point"]], "Example (standard deallocation functions):": [[513, "example-standard-deallocation-functions"]], "Example Nested Subsection": [[607, "example-nested-subsection"]], "Example Section": [[566, "example-section"], [607, "example-section"]], "Example Subsection": [[566, "example-subsection"]], "Example Subsubsection": [[566, "example-subsubsection"]], "Example Usage": [[574, "example-usage"]], "Example implementations of getAnalysisUsage": [[627, "example-implementations-of-getanalysisusage"]], "Example of link time optimization": [[544, "example-of-link-time-optimization"], [562, "example-of-link-time-optimization"]], "Example with clang": [[529, "example-with-clang"]], "Example:": [[513, "example"], [513, "id23"], [513, "id46"], [513, "id53"], [559, "example"], [559, "id31"], [559, "id36"], [559, "id42"], [559, "id47"], [559, "id52"], [559, "id57"], [559, "id62"], [559, "id67"], [559, "id74"], [559, "id82"], [559, "id87"], [559, "id92"], [559, "id97"], [559, "id102"], [559, "id107"], [559, "id112"], [559, "id117"], [559, "id122"], [559, "id127"], [559, "id132"], [559, "id137"], [559, "id142"], [559, "id147"], [559, "id152"], [559, "id157"], [559, "id162"], [559, "id167"], [559, "id172"], [559, "id177"], [559, "id182"], [559, "id187"], [559, "id192"], [559, "id197"], [559, "id202"], [559, "id212"], [559, "id217"], [559, "id222"], [559, "id227"], [559, "id232"], [559, "id237"], [559, "id242"], [559, "id247"], [559, "id252"], [559, "id257"], [559, "id262"], [559, "id267"], [559, "id272"], [559, "id277"], [559, "id282"], [559, "id287"], [559, "id292"], [559, "id297"], [559, "id302"], [559, "id307"], [559, "id312"], [559, "id317"], [559, "id322"], [559, "id327"], [559, "id332"], [559, "id338"], [559, "id345"], [559, "id352"], [559, "id446"], [559, "id596"], [559, "id600"]], "Example: C-level intrinsics -> assembly": [[453, "example-c-level-intrinsics-assembly"]], "Examples": [[442, "examples"], [537, "examples"], [559, "id635"], [559, "id640"], [559, "id645"], [559, "id650"], [559, "id655"], [559, "id660"], [559, "id665"], [559, "id670"], [559, "id675"], [559, "id680"], [559, "id685"], [559, "id690"], [561, "examples"]], "Examples:": [[559, "examples"], [559, "id207"], [559, "id605"], [559, "id610"], [559, "id615"], [559, "id620"], [559, "id625"], [559, "id630"], [559, "id697"], [559, "id720"], [559, "id727"], [559, "id771"], [559, "id776"], [559, "id789"], [559, "id794"], [559, "id799"], [559, "id804"], [559, "id809"], [559, "id814"], [559, "id819"], [559, "id824"], [559, "id829"], [559, "id834"], [559, "id839"], [559, "id844"], [559, "id849"], [559, "id854"]], "Exception Handling Frame": [[519, "exception-handling-frame"]], "Exception Handling Intrinsics": [[519, "exception-handling-intrinsics"], [559, "exception-handling-intrinsics"]], "Exception Handling in LLVM": [[519, null]], "Exception Handling support on the target": [[519, "exception-handling-support-on-the-target"]], "Exception Handling using the Windows Runtime": [[519, "exception-handling-using-the-windows-runtime"]], "Exception Tables": [[519, "exception-tables"]], "Exceptions": [[557, "exceptions"]], "Executing PTX": [[572, "executing-ptx"]], "Executing the Tests": [[462, "executing-the-tests"]], "Existing alias analysis implementations and clients": [[450, "existing-alias-analysis-implementations-and-clients"]], "Expand": [[626, "expand"]], "Experimental Statepoint Intrinsics": [[559, "experimental-statepoint-intrinsics"]], "Experimental Vector Reduction Intrinsics": [[559, "experimental-vector-reduction-intrinsics"]], "Experts Should Review Code": [[466, "experts-should-review-code"]], "Explicit Representation": [[610, "explicit-representation"]], "Exploiting external storage": [[509, "exploiting-external-storage"]], "Expression Code Generation": [[650, "expression-code-generation"], [661, "expression-code-generation"]], "Expressions": [[446, "expressions"]], "Extending LLVM: Adding instructions, intrinsics, types, etc.": [[520, null]], "Extension Guide": [[509, "extending-the-library"]], "External Open Source Projects Using LLVM 11": [[598, "external-open-source-projects-using-llvm-11"]], "External Suites": [[619, "external-suites"]], "External Symbol Operands": [[565, "external-symbol-operands"]], "External Tutorials": [[667, "external-tutorials"]], "Extra Statistics to Further Diagnose Performance Issues": [[493, "extra-statistics-to-further-diagnose-performance-issues"]], "Extra files": [[621, "extra-files"]], "F": [[560, "f"]], "FAQ": [[561, "faq"]], "FFmpeg": [[593, "ffmpeg"]], "FLAT": [[0, "flat"], [2, "flat"], [3, "flat"], [4, "flat"], [8, "flat"], [447, "flat"]], "FLAT Modifiers": [[445, "flat-modifiers"]], "FLOATING POINT OPTIONS": [[474, "floating-point-options"]], "FORMAT OF STATISTICS OUTPUT": [[486, "format-of-statistics-output"]], "FTensors": [[593, "ftensors"]], "FUNCTION_BLOCK Contents": [[454, "function-block-contents"]], "Fallible constructors": [[589, "fallible-constructors"]], "Fast-Math Flags": [[559, "fast-math-flags"]], "FastISel": [[613, "fastisel"]], "FastISel Replacement": [[543, "fastisel-replacement"]], "FaultMaps and implicit checks": [[523, null]], "Feature detection": [[593, "feature-detection"]], "Features": [[573, "features"], [592, "features"], [625, "features"]], "File Headers": [[467, "file-headers"]], "File ID Mapping": [[514, "file-id-mapping"]], "File ID:": [[514, "file-id"]], "File Info Substream": [[577, "file-info-substream"]], "File Layout": [[581, "file-layout"], [585, "file-layout"]], "File inclusion": [[615, "file-inclusion"]], "File scope entities": [[615, "file-scope-entities"]], "FileCheck - Flexible pattern matching file verifier": [[468, null]], "FileCheck Numeric Substitution Blocks": [[468, "filecheck-numeric-substitution-blocks"]], "FileCheck Pseudo Numeric Variables": [[468, "filecheck-pseudo-numeric-variables"]], "FileCheck Regex Matching Syntax": [[468, "filecheck-regex-matching-syntax"]], "FileCheck String Substitution Blocks": [[468, "filecheck-string-substitution-blocks"]], "Filing a report": [[601, "filing-a-report"]], "Filtering and Sorting Options": [[497, "filtering-and-sorting-options"]], "Final Preparations": [[564, "final-preparations"]], "Final Suspend": [[513, "final-suspend"]], "Finding call sites: a slightly more complex example": [[589, "finding-call-sites-a-slightly-more-complex-example"]], "Finding potential reviewers": [[588, "finding-potential-reviewers"]], "Fine grained debug info with DEBUG_TYPE and the -debug-only option": [[589, "fine-grained-debug-info-with-debug-type-and-the-debug-only-option"]], "FireHose": [[593, "firehose"]], "First Class Types": [[559, "first-class-types"]], "Fixed (preassigned) registers": [[464, "fixed-preassigned-registers"]], "Fixed Lookup": [[605, "fixed-lookup"]], "Fixed Point Arithmetic Intrinsics": [[559, "fixed-point-arithmetic-intrinsics"]], "Fixed Size Arrays": [[589, "fixed-size-arrays"]], "Fixed Width Integers": [[454, "fixed-width-value"]], "Flags that control numerical code": [[510, "flags-that-control-numerical-code"]], "Flame Graph Generation": [[629, "flame-graph-generation"]], "Flat Scratch": [[447, "flat-scratch"]], "Flight Data Recorder Mode": [[628, "flight-data-recorder-mode"]], "Floating Point Denorm Mode Enumeration Values": [[447, "amdgpu-amdhsa-floating-point-denorm-mode-enumeration-values-table"]], "Floating Point Environment Manipulation intrinsics": [[559, "floating-point-environment-manipulation-intrinsics"]], "Floating Point Operations": [[534, "floating-point-operations"]], "Floating Point Rounding Mode Enumeration Values": [[447, "amdgpu-amdhsa-floating-point-rounding-mode-enumeration-values-table"]], "Floating-Point Environment": [[559, "floating-point-environment"]], "Floating-Point Numbers": [[446, "floating-point-numbers"]], "Floating-Point Types": [[559, "floating-point-types"]], "Flow Mapping": [[631, "flow-mapping"]], "Flow Sequence": [[631, "flow-sequence"]], "For developers to commit changes from Git": [[529, "for-developers-to-commit-changes-from-git"]], "Fork mode": [[561, "fork-mode"]], "Format Background": [[605, "format-background"]], "Format Grammar and Invariants": [[630, "format-grammar-and-invariants"]], "Format Lambdas Like Blocks Of Code": [[467, "format-lambdas-like-blocks-of-code"]], "Format of Debugging Information": [[442, "format-of-debugging-information"]], "Formatting strings (the formatv function)": [[589, "formatting-strings-the-formatv-function"]], "Fortran function information": [[605, "fortran-function-information"]], "Fortran specific debug information": [[605, "fortran-specific-debug-information"]], "Fragile tests": [[621, "fragile-tests"]], "Frame Layout": [[464, "frame-layout"]], "Frame Pointer": [[447, "frame-pointer"]], "FreePOOMA": [[593, "freepooma"]], "Frequently Asked Questions (FAQ)": [[522, null]], "Frequently-used CMake variables": [[462, "frequently-used-cmake-variables"]], "Front-end bugs": [[553, "front-end-bugs"]], "Full Code Listing": [[633, "full-code-listing"], [634, "full-code-listing"], [635, "full-code-listing"], [636, "full-code-listing"], [637, "full-code-listing"], [649, "full-code-listing"], [650, "full-code-listing"], [651, "full-code-listing"], [652, "full-code-listing"], [653, "full-code-listing"], [654, "id1"], [655, "full-code-listing"], [656, "full-code-listing"], [660, "full-code-listing"], [661, "full-code-listing"], [662, "full-code-listing"], [663, "full-code-listing"], [664, "full-code-listing"], [665, "id1"]], "Funclet Operand Bundles": [[559, "funclet-operand-bundles"]], "Funclet parent tokens": [[519, "funclet-parent-tokens"]], "Funclet transitions": [[519, "funclet-transitions"]], "Function Attributes": [[559, "function-attributes"]], "Function Code Generation": [[650, "function-code-generation"], [661, "function-code-generation"]], "Function Entry Counts": [[456, "function-entry-counts"]], "Function Flags": [[559, "function-flags"]], "Function Record Order": [[630, "function-record-order"]], "Function Records": [[630, "function-records"]], "Function Summary": [[559, "function-summary"]], "Function Type": [[559, "function-type"]], "Function calls": [[464, "function-calls"]], "Function record:": [[514, "function-record"]], "Function template": [[589, "function-template"]], "FunctionComparator::cmpType": [[571, "functioncomparator-cmptype"]], "FunctionComparator::compare(void)": [[571, "functioncomparator-compare-void"]], "Functions": [[559, "functions"], [656, "functions"]], "Functions Vs Macros": [[463, "functions-vs-macros"]], "Functions comparison": [[571, "functions-comparison"]], "Further Exploration": [[629, "further-exploration"]], "Further Help": [[590, "further-help"]], "Future Features": [[573, "future-features"]], "Future Work": [[628, "future-work"]], "Future Work: Fine Grained Control and API-Integration": [[606, "future-work-fine-grained-control-and-api-integration"]], "Future directions for the SelectionDAG": [[464, "future-directions-for-the-selectiondag"]], "Future extensions planned": [[627, "future-extensions-planned"]], "Fuzz Target": [[561, "fuzz-target"]], "Fuzzer Usage": [[561, "fuzzer-usage"]], "Fuzzer-friendly build mode": [[561, "fuzzer-friendly-build-mode"]], "Fuzzing LLVM libraries and tools": [[525, null]], "G": [[560, "g"]], "GC Live Operand Bundles": [[559, "gc-live-operand-bundles"]], "GC Transition Operand Bundles": [[559, "gc-transition-operand-bundles"]], "GC Transitions": [[610, "gc-transitions"]], "GCOV COMMAND": [[481, "gcov-command"]], "GDB Version": [[515, "gdb-version"]], "GENERAL AND MULTI-FORMAT OPTIONS": [[501, "general-and-multi-format-options"]], "GENERAL OPTIONS": [[472, "general-options"], [474, "general-options"]], "GENERIC AND CROSS-PLATFORM OPTIONS": [[495, "generic-and-cross-platform-options"], [505, "generic-and-cross-platform-options"]], "GNU binutils replacements": [[471, "gnu-binutils-replacements"]], "GWP-ASan": [[545, null]], "GWP-ASan vs. ASan": [[545, "gwp-asan-vs-asan"]], "G_ADD, G_SUB, G_MUL, G_AND, G_OR, G_XOR, G_SDIV, G_UDIV, G_SREM, G_UREM": [[534, "g-add-g-sub-g-mul-g-and-g-or-g-xor-g-sdiv-g-udiv-g-srem-g-urem"]], "G_ADDRSPACE_CAST": [[534, "g-addrspace-cast"]], "G_ANYEXT": [[534, "g-anyext"]], "G_ATOMICRMW_XCHG, G_ATOMICRMW_ADD, G_ATOMICRMW_SUB, G_ATOMICRMW_AND, G_ATOMICRMW_NAND, G_ATOMICRMW_OR, G_ATOMICRMW_XOR, G_ATOMICRMW_MAX, G_ATOMICRMW_MIN, G_ATOMICRMW_UMAX, G_ATOMICRMW_UMIN, G_ATOMICRMW_FADD, G_ATOMICRMW_FSUB": [[534, "g-atomicrmw-xchg-g-atomicrmw-add-g-atomicrmw-sub-g-atomicrmw-and-g-atomicrmw-nand-g-atomicrmw-or-g-atomicrmw-xor-g-atomicrmw-max-g-atomicrmw-min-g-atomicrmw-umax-g-atomicrmw-umin-g-atomicrmw-fadd-g-atomicrmw-fsub"]], "G_ATOMIC_CMPXCHG": [[534, "g-atomic-cmpxchg"]], "G_ATOMIC_CMPXCHG_WITH_SUCCESS": [[534, "g-atomic-cmpxchg-with-success"]], "G_BITCAST": [[534, "g-bitcast"]], "G_BITREVERSE": [[534, "g-bitreverse"]], "G_BLOCK_ADDR": [[534, "g-block-addr"]], "G_BR": [[534, "g-br"]], "G_BRCOND": [[534, "g-brcond"]], "G_BRINDIRECT": [[534, "g-brindirect"]], "G_BRJT": [[534, "g-brjt"]], "G_BSWAP": [[534, "g-bswap"]], "G_BUILD_VECTOR, G_BUILD_VECTOR_TRUNC": [[534, "g-build-vector-g-build-vector-trunc"]], "G_CONCAT_VECTORS": [[534, "g-concat-vectors"]], "G_CONSTANT": [[534, "g-constant"]], "G_CTLZ, G_CTTZ, G_CTPOP": [[534, "g-ctlz-g-cttz-g-ctpop"]], "G_CTLZ_ZERO_UNDEF, G_CTTZ_ZERO_UNDEF": [[534, "g-ctlz-zero-undef-g-cttz-zero-undef"]], "G_DYN_STACKALLOC": [[534, "g-dyn-stackalloc"]], "G_EXTRACT": [[534, "g-extract"]], "G_EXTRACT_VECTOR_ELT": [[534, "g-extract-vector-elt"]], "G_FABS": [[534, "g-fabs"]], "G_FADD, G_FSUB, G_FMUL, G_FDIV, G_FREM": [[534, "g-fadd-g-fsub-g-fmul-g-fdiv-g-frem"]], "G_FCANONICALIZE": [[534, "g-fcanonicalize"]], "G_FCEIL, G_FCOS, G_FSIN, G_FSQRT, G_FFLOOR, G_FRINT, G_FNEARBYINT": [[534, "g-fceil-g-fcos-g-fsin-g-fsqrt-g-ffloor-g-frint-g-fnearbyint"]], "G_FCMP": [[534, "g-fcmp"]], "G_FCONSTANT": [[534, "g-fconstant"]], "G_FCOPYSIGN": [[534, "g-fcopysign"]], "G_FENCE": [[534, "g-fence"]], "G_FEXP, G_FEXP2": [[534, "g-fexp-g-fexp2"]], "G_FLOG, G_FLOG2, G_FLOG10": [[534, "g-flog-g-flog2-g-flog10"]], "G_FMA": [[534, "g-fma"]], "G_FMAD": [[534, "g-fmad"]], "G_FMAXIMUM": [[534, "g-fmaximum"]], "G_FMAXNUM": [[534, "g-fmaxnum"]], "G_FMAXNUM_IEEE": [[534, "g-fmaxnum-ieee"]], "G_FMINIMUM": [[534, "g-fminimum"]], "G_FMINNUM": [[534, "g-fminnum"]], "G_FMINNUM_IEEE": [[534, "g-fminnum-ieee"]], "G_FNEG": [[534, "g-fneg"]], "G_FPEXT": [[534, "g-fpext"]], "G_FPOW": [[534, "g-fpow"]], "G_FPTOSI, G_FPTOUI, G_SITOFP, G_UITOFP": [[534, "g-fptosi-g-fptoui-g-sitofp-g-uitofp"]], "G_FPTRUNC": [[534, "g-fptrunc"]], "G_FRAME_INDEX": [[534, "g-frame-index"]], "G_GLOBAL_VALUE": [[534, "g-global-value"]], "G_ICMP": [[534, "g-icmp"]], "G_IMPLICIT_DEF": [[534, "g-implicit-def"]], "G_INDEXED_LOAD": [[534, "g-indexed-load"]], "G_INDEXED_SEXTLOAD": [[534, "g-indexed-sextload"]], "G_INDEXED_STORE": [[534, "g-indexed-store"]], "G_INDEXED_ZEXTLOAD": [[534, "g-indexed-zextload"]], "G_INSERT": [[534, "g-insert"]], "G_INSERT_VECTOR_ELT": [[534, "g-insert-vector-elt"]], "G_INTRINSIC, G_INTRINSIC_W_SIDE_EFFECTS": [[534, "g-intrinsic-g-intrinsic-w-side-effects"]], "G_INTRINSIC_ROUND": [[534, "g-intrinsic-round"]], "G_INTRINSIC_TRUNC": [[534, "g-intrinsic-trunc"]], "G_INTTOPTR": [[534, "g-inttoptr"]], "G_JUMP_TABLE": [[534, "g-jump-table"]], "G_LOAD, G_SEXTLOAD, G_ZEXTLOAD": [[534, "g-load-g-sextload-g-zextload"]], "G_MERGE_VALUES": [[534, "g-merge-values"]], "G_PHI": [[534, "g-phi"]], "G_PTRMASK": [[534, "g-ptrmask"]], "G_PTRTOINT": [[534, "g-ptrtoint"]], "G_PTR_ADD": [[534, "g-ptr-add"]], "G_SADDSAT, G_UADDSAT, G_SSUBSAT, G_USUBSAT": [[534, "g-saddsat-g-uaddsat-g-ssubsat-g-usubsat"]], "G_SELECT": [[534, "g-select"]], "G_SEXT": [[534, "g-sext"]], "G_SEXT_INREG": [[534, "g-sext-inreg"]], "G_SHL, G_LSHR, G_ASHR": [[534, "g-shl-g-lshr-g-ashr"]], "G_SHUFFLE_VECTOR": [[534, "g-shuffle-vector"]], "G_SMIN, G_SMAX, G_UMIN, G_UMAX": [[534, "g-smin-g-smax-g-umin-g-umax"]], "G_STORE": [[534, "g-store"]], "G_TRUNC": [[534, "g-trunc"]], "G_UADDE, G_SADDE, G_USUBE, G_SSUBE": [[534, "g-uadde-g-sadde-g-usube-g-ssube"]], "G_UADDO, G_SADDO, G_USUBO, G_SSUBO, G_SMULO, G_UMULO": [[534, "g-uaddo-g-saddo-g-usubo-g-ssubo-g-smulo-g-umulo"]], "G_UMULH, G_SMULH": [[534, "g-umulh-g-smulh"]], "G_UNMERGE_VALUES": [[534, "g-unmerge-values"]], "G_VAARG": [[534, "g-vaarg"]], "G_VASTART": [[534, "g-vastart"]], "G_ZEXT": [[534, "g-zext"]], "Garbage Collected Stack Frames": [[657, "garbage-collected-stack-frames"], [666, "garbage-collected-stack-frames"]], "Garbage Collection": [[597, "garbage-collection"]], "Garbage Collection Safepoints in LLVM": [[610, null]], "Garbage Collection with LLVM": [[526, null]], "Garbage Collector Strategy Names": [[559, "garbage-collector-strategy-names"]], "General": [[452, "general"], [630, "general"]], "General Assembly Syntax": [[521, "general-assembly-syntax"]], "General BackEnds": [[613, "general-backends"]], "General Description": [[442, "general-description"]], "General Distribution Guidance": [[460, "general-distribution-guidance"]], "General Information": [[589, "general-information"]], "General Intrinsics": [[559, "general-intrinsics"]], "General Location Description Operations": [[442, "general-location-description-operations"]], "General Policies": [[466, "general-policies"]], "General suggestions": [[568, "general-suggestions"]], "Generating Test Output": [[620, "generating-test-output"]], "Generating safe points": [[526, "generating-safe-points"]], "Generic Algorithms": [[593, "generic-algorithms"]], "Generic Machine IR": [[533, null]], "Generic Machine Instructions": [[533, "generic-machine-instructions"]], "Generic Opcode Reference": [[533, "generic-opcode-reference"]], "Generic Opcodes": [[534, null]], "Generic Random Fuzzing": [[525, "generic-random-fuzzing"]], "Generic Virtual Registers": [[533, "generic-virtual-registers"]], "Getting Involved": [[528, null]], "Getting Started": [[531, "getting-started"], [561, "getting-started"], [574, "getting-started"]], "Getting Started with LLVM": [[529, "getting-started-with-llvm"]], "Getting Started with the LLVM System": [[529, null]], "Getting Started with the LLVM System using Microsoft Visual Studio": [[531, null]], "Getting Started/Tutorials": [[530, null]], "Getting Traces": [[629, "getting-traces"]], "Getting a Modern Host C++ Toolchain": [[529, "getting-a-modern-host-c-toolchain"]], "Getting the Source Code and Building LLVM": [[529, "getting-the-source-code-and-building-llvm"]], "Git pre-push hook": [[529, "git-pre-push-hook"]], "GitHub Repository Description": [[591, "github-repository-description"]], "Global Attributes": [[559, "global-attributes"]], "Global Instruction Selection": [[543, null]], "Global Internal Table": [[447, "global-internal-table"]], "Global Structures Alias Analysis": [[625, "global-structures-alias-analysis"]], "Global Symbols": [[575, "global-symbols"]], "Global Value Operands": [[565, "global-value-operands"]], "Global Value Summary Entry": [[559, "global-value-summary-entry"]], "Global Variable Summary": [[559, "global-variable-summary"]], "Global Variable and Function Addresses": [[559, "global-variable-and-function-addresses"]], "Global Variables": [[559, "global-variables"]], "GnuPG": [[593, "gnupg"]], "Goals and non-goals": [[526, "goals-and-non-goals"]], "Graph": [[593, "graph"]], "Graph Construction": [[516, "graph-construction"]], "Graph500 reference implementations": [[593, "graph500-reference-implementations"]], "Graphics User Data": [[447, "graphics-user-data"]], "Group Composition": [[603, "group-composition"]], "Grouping options into categories": [[509, "grouping-options-into-categories"]], "Guard widening:": [[559, "guard-widening"]], "Guarded Allocation Pool": [[545, "guarded-allocation-pool"]], "Guidelines": [[566, "guidelines"]], "Guidelines for Go code": [[467, "guidelines-for-go-code"]], "H": [[560, "h"]], "HCC": [[447, "hcc"]], "HOW LLVM-MCA WORKS": [[493, "how-llvm-mca-works"]], "HSA AQL Queue": [[447, "hsa-aql-queue"]], "HSA Signals": [[447, "hsa-signals"]], "Hacks": [[550, "hacks"]], "Half Precision Floating-Point Intrinsics": [[559, "half-precision-floating-point-intrinsics"]], "Handling two address instructions": [[464, "handling-two-address-instructions"]], "Hardening Loads": [[606, "hardening-loads"]], "Hardening loaded values": [[606, "hardening-loaded-values"]], "Hardening of loaded values deferred down the data-invariant expression graph": [[606, "hardening-of-loaded-values-deferred-down-the-data-invariant-expression-graph"]], "Hardening the address of the load": [[606, "hardening-the-address-of-the-load"]], "Hardware": [[511, "hardware"], [529, "hardware"], [531, "hardware"]], "Hardware-Loop Intrinsics": [[559, "hardware-loop-intrinsics"]], "HasGlobalAliases, removeUsers": [[571, "hasglobalaliases-removeusers"]], "Hash Tables": [[605, "hash-tables"]], "Header": [[447, "header"], [514, "header"]], "Header Layout": [[605, "header-layout"]], "Header Section": [[630, "header-section"]], "Heap Allocated Arrays": [[589, "heap-allocated-arrays"]], "Heap tagging": [[569, "heap-tagging"]], "Helpful Hints for Common Operations": [[589, "helpful-hints-for-common-operations"]], "Helpful Information About LLVM": [[512, "helpful-information-about-llvm"]], "Hex types": [[631, "hex-types"]], "Hexagon": [[511, "hexagon"]], "Hiding an option from -help output": [[509, "hiding-an-option-from-help-output"]], "High Level Interface": [[611, "high-level-interface"]], "High Level Mitigation Approach": [[606, "high-level-mitigation-approach"]], "High Level Overview": [[514, "high-level-overview"]], "High Level Structure": [[559, "high-level-structure"], [565, "high-level-structure"]], "High Performance Geometric Multigrid": [[593, "high-performance-geometric-multigrid"]], "High-Level Alternative Mitigation Strategies": [[606, "high-level-alternative-mitigation-strategies"]], "High-Level Design": [[516, "high-level-design"]], "High-level Design": [[596, "high-level-design"]], "Historical Note": [[533, null]], "Hopefully you won\u2019t need to be this deep": [[566, "hopefully-you-won-t-need-to-be-this-deep"]], "Host C++ Toolchain, both Compiler and Standard Library": [[529, "host-c-toolchain-both-compiler-and-standard-library"]], "How To Add A Constrained Floating-Point Intrinsic": [[448, null]], "How To Add Your Build Configuration To LLVM Buildbot Infrastructure": [[546, null]], "How To Build Clang and LLVM with Profile-Guided Optimizations": [[548, null]], "How To Build On ARM": [[547, null]], "How To Cross-Compile Clang/LLVM using Clang/LLVM": [[550, null]], "How To Release LLVM To The Public": [[551, null]], "How To Use Attributes": [[555, null]], "How To Use Instruction Mappings": [[556, null]], "How To Validate a New Release": [[599, null]], "How can I tell if my front-end is following the rules?": [[527, "how-can-i-tell-if-my-front-end-is-following-the-rules"]], "How does VLA addressing work with GEPs?": [[527, "how-does-vla-addressing-work-with-geps"]], "How good is my fuzzer?": [[561, "how-good-is-my-fuzzer"]], "How is GEP different from ptrtoint, arithmetic, and inttoptr?": [[527, "how-is-gep-different-from-ptrtoint-arithmetic-and-inttoptr"]], "How it works": [[609, "how-it-works"]], "How portable is the LLVM source code?": [[522, "how-portable-is-the-llvm-source-code"]], "How registers are represented in LLVM": [[464, "how-registers-are-represented-in-llvm"]], "How the packetization tables are generated and used": [[464, "how-the-packetization-tables-are-generated-and-used"]], "How to Add Process and Library Symbols to the JITDylibs": [[573, "how-to-add-process-and-library-symbols-to-the-jitdylibs"]], "How to Cross Compile Compiler-rt Builtins For Arm": [[549, null]], "How to Submit a Patch": [[512, "how-to-submit-a-patch"]], "How to Update Debug Info: A Guide for LLVM Pass Authors": [[554, null]], "How to automatically convert tests into debug info tests": [[554, "how-to-automatically-convert-tests-into-debug-info-tests"]], "How to build it": [[544, "how-to-build-it"]], "How to create JITDylibs and set up linkage relationships": [[573, "how-to-create-jitdylibs-and-set-up-linkage-relationships"]], "How to do it?": [[571, "how-to-do-it"]], "How to implement cmpValues?": [[571, "how-to-implement-cmpvalues"]], "How to manage symbol strings": [[573, "how-to-manage-symbol-strings"]], "How to pick the date?": [[568, "how-to-pick-the-date"]], "How to report a security issue?": [[603, "how-to-report-a-security-issue"]], "How to set up LLVM-style RTTI for your class hierarchy": [[552, null]], "How to start LLVM Social in your town": [[568, null]], "How to submit an LLVM bug report": [[553, null]], "How to use ThreadSafeModule and ThreadSafeContext": [[573, "how-to-use-threadsafemodule-and-threadsafecontext"]], "How to use this template": [[607, "how-to-use-this-template"]], "How to write a back-end": [[613, "how-to-write-a-back-end"]], "How variable location metadata is transformed during CodeGen": [[605, "how-variable-location-metadata-is-transformed-during-codegen"]], "How-tos": [[573, "how-tos"]], "HydroBench": [[593, "hydrobench"]], "I": [[560, "i"]], "I Still Can\u2019t Find What I\u2019m Looking For": [[524, "i-still-can-t-find-what-i-m-looking-for"]], "I don\u2019t understand the GetElementPtr instruction. Help!": [[522, "i-don-t-understand-the-getelementptr-instruction-help"]], "IBM - Official manuals and docs": [[511, "ibm-official-manuals-and-docs"]], "IFuncs": [[559, "ifuncs"]], "IR Backwards Compatibility": [[517, "ir-backwards-compatibility"]], "IR Best Practices": [[524, "ir-best-practices"]], "IRC": [[528, "irc"]], "IRTranslator": [[535, null]], "Identifiers": [[559, "identifiers"]], "Identifying GC roots on the stack": [[526, "gcroot"]], "If Conversion": [[625, "if-conversion"]], "If \u201cF\u201d could not be overridden, fix it!": [[571, "if-f-could-not-be-overridden-fix-it"]], "If \u201cF\u201d may be overridden": [[571, "if-f-may-be-overridden"]], "If, ElseIf, Else": [[463, "if-elseif-else"]], "If/Then/Else": [[652, "if-then-else"], [663, "if-then-else"]], "Image and Samplers": [[447, "image-and-samplers"]], "Image processing": [[593, "image-processing"]], "Immediate Operands": [[565, "immediate-operands"]], "Implement a subclass of TargetInstrInfo": [[626, "implement-a-subclass-of-targetinstrinfo"]], "Implement a subclass of TargetRegisterInfo": [[626, "implement-a-subclass-of-targetregisterinfo"]], "Implementation": [[453, "implementation"], [459, "implementation"], [569, "implementation"]], "Implementation Details": [[516, "implementation-details"], [604, "implementation-details"], [606, "implementation-details"]], "Implementation:": [[559, "implementation"], [559, "id41"]], "Implementation: Getting from mass and scale to frequency": [[455, "implementation-getting-from-mass-and-scale-to-frequency"]], "Implementation: a series of DAGs": [[455, "implementation-a-series-of-dags"]], "Implementing Analysis Groups": [[627, "implementing-analysis-groups"]], "Implementing a Native Assembler": [[464, "implementing-a-native-assembler"]], "Implementing a collector plugin": [[526, "implementing-a-collector-plugin"]], "Implementing portable offsetof/sizeof": [[657, "implementing-portable-offsetof-sizeof"], [666, "implementing-portable-offsetof-sizeof"]], "Implicit Location Description Operations": [[442, "implicit-location-description-operations"]], "Important Derived Types": [[589, "important-derived-types"]], "Important Public Members of the BasicBlock class": [[589, "important-public-members-of-the-basicblock-class"]], "Important Public Members of the Function": [[589, "important-public-members-of-the-function"]], "Important Public Members of the GlobalValue class": [[589, "important-public-members-of-the-globalvalue-class"]], "Important Public Members of the GlobalVariable class": [[589, "important-public-members-of-the-globalvariable-class"]], "Important Public Members of the Instruction class": [[589, "important-public-members-of-the-instruction-class"]], "Important Public Members of the Module class": [[589, "important-public-members-of-the-module-class"]], "Important Public Members of the User class": [[589, "important-public-members-of-the-user-class"]], "Important Public Members of the Value class": [[589, "important-public-members-of-the-value-class"]], "Important Public Methods": [[589, "important-public-methods"]], "Important Subclasses of Constant": [[589, "important-subclasses-of-constant"]], "Important Subclasses of the Instruction class": [[589, "important-subclasses-of-the-instruction-class"]], "Important and useful LLVM APIs": [[589, "important-and-useful-llvm-apis"]], "Importing local repositories": [[591, "importing-local-repositories"]], "In what language is LLVM written?": [[522, "in-what-language-is-llvm-written"]], "Incorrect code generation": [[553, "incorrect-code-generation"]], "Incremental Development": [[517, "incremental-development"]], "Incubating New Projects": [[517, "incubating-new-projects"]], "Indices and tables": [[632, "indices-and-tables"]], "Indirect Branches, Calls, and Returns": [[606, "indirect-branches-calls-and-returns"]], "Indirect Call, Branch, and Return Predicates": [[606, "indirect-call-branch-and-return-predicates"]], "Indirect inputs and outputs": [[559, "indirect-inputs-and-outputs"]], "IndirectBrInst": [[456, "indirectbrinst"]], "Inductions": [[625, "inductions"]], "Initial Kernel Execution State": [[447, "initial-kernel-execution-state"]], "Initial SelectionDAG Construction": [[464, "initial-selectiondag-construction"]], "Initializing roots to null": [[526, "initializing-roots-to-null"]], "Inline Asm": [[464, "inline-asm"]], "Inline Asm Constraint String": [[559, "inline-asm-constraint-string"]], "Inline Asm Metadata": [[559, "inline-asm-metadata"]], "Inline Assembler Expressions": [[559, "inline-assembler-expressions"]], "Input": [[631, "input"]], "Input constraints": [[559, "input-constraints"]], "Installing and Using": [[550, "installing-and-using"]], "InstrInfo": [[613, "instrinfo"]], "InstrMapping Class Overview": [[556, "instrmapping-class-overview"]], "Instruction Alias Processing": [[464, "instruction-alias-processing"]], "Instruction Aliases": [[464, "instruction-aliases"]], "Instruction Annotations": [[567, "instruction-annotations"]], "Instruction Dispatch": [[493, "instruction-dispatch"]], "Instruction Examples": [[447, "instruction-examples"]], "Instruction Flags": [[565, "instruction-flags"]], "Instruction Flow": [[493, "instruction-flow"]], "Instruction Issue": [[493, "instruction-issue"]], "Instruction Matching": [[464, "instruction-matching"]], "Instruction Operand Mapping": [[626, "instruction-operand-mapping"]], "Instruction Operand Name Mapping": [[626, "instruction-operand-name-mapping"]], "Instruction Operand Types": [[626, "instruction-operand-types"]], "Instruction Parsing": [[464, "instruction-parsing"]], "Instruction Reference": [[559, "instruction-reference"]], "Instruction Relation Mapping": [[626, "instruction-relation-mapping"]], "Instruction Scheduling": [[605, "instruction-scheduling"], [626, "instruction-scheduling"]], "Instruction Selection": [[464, "instruction-selection-section"]], "Instruction Selector": [[626, "instruction-selector"]], "Instruction Set": [[626, "instruction-set"]], "Instruction Threshold": [[629, "instruction-threshold"]], "Instruction encoding (arithmetic and jump)": [[464, "instruction-encoding-arithmetic-and-jump"]], "Instruction encoding (load, store)": [[464, "instruction-encoding-load-store"]], "Instruction folding": [[464, "instruction-folding"]], "Instruction naming": [[464, "instruction-naming"]], "InstructionSelect": [[536, null]], "Instructions": [[0, "instructions"], [1, "instructions"], [2, "instructions"], [3, "instructions"], [4, "instructions"], [5, "instructions"], [6, "instructions"], [7, "instructions"], [8, "instructions"], [443, "instructions"], [444, "instructions"], [447, "instructions"]], "Instrumentation Attributes": [[629, "instrumentation-attributes"]], "Instrumenting your C/C++/Objective-C Application": [[628, "instrumenting-your-c-c-objective-c-application"]], "Integer Extension and Truncation": [[534, "integer-extension-and-truncation"]], "Integer Numbers": [[446, "integer-numbers"]], "Integer Operations": [[534, "integer-operations"]], "Integer Type": [[559, "integer-type"]], "Intel IA-32-specific Options": [[473, "intel-ia-32-specific-options"]], "Intended Usage": [[557, "intended-usage"]], "Interaction and relationship between User and Use objects": [[589, "interaction-and-relationship-between-user-and-use-objects"]], "Interfaces which may be specified": [[450, "interfaces-which-may-be-specified"]], "Internal vs External Storage": [[509, "internal-vs-external-storage"]], "Interoperability with std::error_code and ErrorOr": [[589, "interoperability-with-std-error-code-and-erroror"]], "Interprocedural Checking": [[606, "interprocedural-checking"]], "Intrinsic": [[613, "intrinsic"]], "Intrinsic Functions": [[559, "intrinsic-functions"]], "Intrinsic Global Variables": [[559, "intrinsic-global-variables"]], "IntrinsicID Operands": [[565, "intrinsicid-operands"]], "Intrinsics": [[513, "intrinsics"], [608, "intrinsics"], [610, "intrinsics"]], "Introducing New Components into LLVM": [[517, "introducing-new-components-into-llvm"]], "Introduction": [[0, "introduction"], [1, "introduction"], [2, "introduction"], [3, "introduction"], [4, "introduction"], [5, "introduction"], [6, "introduction"], [7, "introduction"], [8, "introduction"], [442, "introduction"], [443, "introduction"], [447, "introduction"], [449, "introduction"], [450, "introduction"], [451, "introduction"], [452, "introduction"], [453, "introduction"], [455, "introduction"], [456, "introduction"], [459, "introduction"], [460, "introduction"], [462, "introduction"], [463, "introduction"], [464, "introduction"], [467, "introduction"], [509, "introduction"], [510, "introduction"], [513, "introduction"], [514, "introduction"], [516, "introduction"], [517, "introduction"], [518, "introduction"], [519, "introduction"], [521, "introduction"], [525, "introduction"], [526, "introduction"], [527, "introduction"], [532, "introduction"], [543, "introduction"], [544, "introduction"], [545, "introduction"], [546, "introduction"], [547, "introduction"], [548, "introduction"], [549, "introduction"], [550, "introduction"], [551, "introduction"], [554, "introduction"], [555, "introduction"], [556, "introduction"], [557, "introduction"], [558, "introduction"], [559, "introduction"], [561, "introduction"], [563, "introduction"], [564, "introduction"], [565, "introduction"], [567, "introduction"], [569, "introduction"], [570, "introduction"], [571, "introduction"], [572, "introduction"], [573, "introduction"], [574, "introduction"], [575, "introduction"], [576, "introduction"], [577, "introduction"], [579, "introduction"], [580, "introduction"], [584, "introduction"], [585, "introduction"], [587, "introduction"], [589, "introduction"], [591, "introduction"], [592, "introduction"], [594, "introduction"], [598, "introduction"], [599, "introduction"], [602, "introduction"], [604, "introduction"], [605, "introduction"], [605, "id5"], [605, "id6"], [609, "introduction"], [613, "introduction"], [614, "introduction"], [615, "introduction"], [616, "introduction"], [617, "introduction"], [626, "introduction"], [628, "introduction"], [630, "introduction"]], "Introduction - Achieving consistency in how we deal with bug reports": [[457, "introduction-achieving-consistency-in-how-we-deal-with-bug-reports"]], "Introduction - Got bugs?": [[553, "introduction-got-bugs"]], "Introduction and Quickstart": [[566, "introduction-and-quickstart"]], "Introduction and Warning": [[520, "introduction-and-warning"]], "Introduction to SelectionDAGs": [[464, "introduction-to-selectiondags"]], "Introduction to YAML": [[631, "introduction-to-yaml"]], "Introduction to YAML I/O": [[631, "introduction-to-yaml-i-o"]], "Introduction to the LLVM remark diagnostics": [[600, "introduction-to-the-llvm-remark-diagnostics"]], "Introduction \u2014 What is a pass?": [[627, "introduction-what-is-a-pass"]], "Invalidation and updating": [[570, "invalidation-and-updating"]], "InvokeInst": [[456, "invokeinst"]], "Invoking clang": [[510, "invoking-clang"]], "Is Generally Reliable": [[464, "is-generally-reliable"]], "Itanium (ia64)": [[511, "itanium-ia64"]], "Itanium ABI Zero-cost Exception Handling": [[519, "itanium-abi-zero-cost-exception-handling"]], "Iterating over def-use & use-def chains": [[589, "iterating-over-def-use-use-def-chains"]], "Iterating over predecessors & successors of blocks": [[589, "iterating-over-predecessors-successors-of-blocks"]], "Iterating over the BasicBlock in a Function": [[589, "iterating-over-the-basicblock-in-a-function"]], "Iterating over the Instruction in a BasicBlock": [[589, "iterating-over-the-instruction-in-a-basicblock"]], "Iterating over the Instruction in a Function": [[589, "iterating-over-the-instruction-in-a-function"]], "I\u2019d like to write a self-hosting LLVM compiler. How should I interface with the LLVM middle-end optimizers and back-end code generators?": [[522, "i-d-like-to-write-a-self-hosting-llvm-compiler-how-should-i-interface-with-the-llvm-middle-end-optimizers-and-back-end-code-generators"]], "I\u2019m writing a backend for a target which needs custom lowering for GEP. How do I do this?": [[527, "i-m-writing-a-backend-for-a-target-which-needs-custom-lowering-for-gep-how-do-i-do-this"]], "JIT": [[624, "jit"]], "JIT API Basics": [[633, "jit-api-basics"]], "JIT Support": [[464, "jit-support"], [626, "jit-support"]], "JSON": [[613, "json"]], "Jump-table Index Operands": [[565, "jump-table-index-operands"]], "Kaleidoscope Tutorial": [[638, null], [639, null], [640, null], [641, null], [642, null], [643, null], [644, null], [645, null], [646, null], [647, null]], "Kaleidoscope: Adding Debug Information": [[656, null]], "Kaleidoscope: Adding JIT and Optimizer Support": [[651, null], [662, null]], "Kaleidoscope: Code generation to LLVM IR": [[650, null], [661, null]], "Kaleidoscope: Compiling to Object Code": [[655, null]], "Kaleidoscope: Conclusion and other useful LLVM tidbits": [[657, null], [666, null]], "Kaleidoscope: Extending the Language: Control Flow": [[652, null], [663, null]], "Kaleidoscope: Extending the Language: Mutable Variables": [[654, null], [665, null]], "Kaleidoscope: Extending the Language: User-defined Operators": [[653, null], [664, null]], "Kaleidoscope: Implementing a Language with LLVM": [[667, "kaleidoscope-implementing-a-language-with-llvm"]], "Kaleidoscope: Implementing a Language with LLVM in Objective Caml": [[667, "kaleidoscope-implementing-a-language-with-llvm-in-objective-caml"]], "Kaleidoscope: Implementing a Parser and AST": [[649, null], [660, null]], "Kaleidoscope: Kaleidoscope Introduction and the Lexer": [[648, null]], "Kaleidoscope: Tutorial Introduction and the Lexer": [[659, null]], "KaleidoscopeJIT": [[633, "kaleidoscopejit"]], "Keep the current coding standard": [[594, "keep-the-current-coding-standard"]], "Keep \u201cInternal\u201d Headers Private": [[467, "keep-internal-headers-private"]], "Keeping LLVM Portable": [[611, "keeping-llvm-portable"]], "Keeping Membership Current": [[603, "keeping-membership-current"]], "Keeping git blame usable": [[594, "keeping-git-blame-usable"]], "Kernel Descriptor": [[447, "kernel-descriptor"]], "Kernel Descriptor for GFX6-GFX10": [[447, "kernel-descriptor-for-gfx6-gfx10"], [447, "amdgpu-amdhsa-kernel-descriptor-gfx6-gfx10-table"]], "Kernel Dispatch": [[447, "kernel-dispatch"]], "Kernel Functions": [[447, "kernel-functions"]], "Kernel Metadata": [[572, "kernel-metadata"]], "Kernel Prolog": [[447, "kernel-prolog"]], "Key Terminology": [[563, "key-terminology"]], "Kicking the Tires": [[653, "kicking-the-tires"], [664, "kicking-the-tires"]], "Known Bits Analysis": [[537, null]], "Known Problems": [[614, "known-problems"]], "Kokkos": [[593, "kokkos"]], "L": [[560, "l"]], "LDR and LD1": [[453, "ldr-and-ld1"]], "LEB128": [[514, "leb128"]], "LF_ARGLIST (0x1201)": [[576, "lf-arglist-0x1201"]], "LF_ARRAY (0x1503)": [[576, "lf-array-0x1503"]], "LF_BCLASS (0x1400)": [[576, "lf-bclass-0x1400"]], "LF_BINTERFACE (0x151a)": [[576, "lf-binterface-0x151a"]], "LF_BITFIELD (0x1205)": [[576, "lf-bitfield-0x1205"]], "LF_BUILDINFO (0x1603)": [[576, "lf-buildinfo-0x1603"]], "LF_CLASS (0x1504)": [[576, "lf-class-0x1504"]], "LF_ENDPRECOMP (0x0014)": [[576, "lf-endprecomp-0x0014"]], "LF_ENUM (0x1507)": [[576, "lf-enum-0x1507"]], "LF_ENUMERATE (0x1502)": [[576, "lf-enumerate-0x1502"]], "LF_FIELDLIST (0x1203)": [[576, "lf-fieldlist-0x1203"]], "LF_FUNC_ID (0x1601)": [[576, "lf-func-id-0x1601"]], "LF_INDEX (0x1404)": [[576, "lf-index-0x1404"]], "LF_INTERFACE (0x1519)": [[576, "lf-interface-0x1519"]], "LF_IVBCLASS (0x1402)": [[576, "lf-ivbclass-0x1402"]], "LF_LABEL (0x000e)": [[576, "lf-label-0x000e"]], "LF_MEMBER (0x150d)": [[576, "lf-member-0x150d"]], "LF_METHOD (0x150f)": [[576, "lf-method-0x150f"]], "LF_METHODLIST (0x1206)": [[576, "lf-methodlist-0x1206"]], "LF_MFUNCTION (0x1009)": [[576, "lf-mfunction-0x1009"]], "LF_MFUNC_ID (0x1602)": [[576, "lf-mfunc-id-0x1602"]], "LF_MODIFIER (0x1001)": [[576, "lf-modifier-0x1001"]], "LF_NESTTYPE (0x1510)": [[576, "lf-nesttype-0x1510"]], "LF_ONEMETHOD (0x1511)": [[576, "lf-onemethod-0x1511"]], "LF_PADn (0xf0 + n)": [[576, "lf-padn-0xf0-n"]], "LF_POINTER (0x1002)": [[576, "lf-pointer-0x1002"]], "LF_PRECOMP (0x1509)": [[576, "lf-precomp-0x1509"]], "LF_PROCEDURE (0x1008)": [[576, "lf-procedure-0x1008"]], "LF_STMEMBER (0x150e)": [[576, "lf-stmember-0x150e"]], "LF_STRING_ID (0x1605)": [[576, "lf-string-id-0x1605"]], "LF_STRUCTURE (0x1505)": [[576, "lf-structure-0x1505"]], "LF_SUBSTR_LIST (0x1604)": [[576, "lf-substr-list-0x1604"]], "LF_TYPESERVER2 (0x1515)": [[576, "lf-typeserver2-0x1515"]], "LF_UDT_MOD_SRC_LINE (0x1607)": [[576, "lf-udt-mod-src-line-0x1607"]], "LF_UDT_SRC_LINE (0x1606)": [[576, "lf-udt-src-line-0x1606"]], "LF_UNION (0x1506)": [[576, "lf-union-0x1506"]], "LF_VBCLASS (0x1401)": [[576, "lf-vbclass-0x1401"]], "LF_VFTABLE (0x151d)": [[576, "lf-vftable-0x151d"]], "LF_VFUNCTAB (0x1409)": [[576, "lf-vfunctab-0x1409"]], "LF_VTSHAPE (0x000a)": [[576, "lf-vtshape-0x000a"]], "LGTM - How a Patch Is Accepted": [[466, "lgtm-how-a-patch-is-accepted"]], "LIT EXAMPLE TESTS": [[472, "lit-example-tests"]], "LIT INFRASTRUCTURE": [[472, "lit-infrastructure"]], "LLJIT and LLLazyJIT": [[573, "lljit-and-lllazyjit"]], "LLVM": [[447, "llvm"]], "LLVM 11.0.0 Release Notes": [[598, null]], "LLVM Alias Analysis Infrastructure": [[450, null]], "LLVM Atomic Instructions and Concurrency Guide": [[451, null]], "LLVM BackEnds": [[613, "llvm-backends"]], "LLVM Bitcode File Format": [[454, null]], "LLVM Block Frequency Terminology": [[455, null]], "LLVM Branch Weight Metadata": [[456, null]], "LLVM Bug Life Cycle": [[457, null]], "LLVM Builds and Distributions": [[624, "llvm-builds-and-distributions"]], "LLVM Code Coverage Mapping Format": [[514, null]], "LLVM Code Generation": [[519, "llvm-code-generation"]], "LLVM Code-Review Policy and Practices": [[466, null]], "LLVM Coding Standards": [[467, null]], "LLVM Command Guide": [[471, null]], "LLVM Community Code of Conduct": [[465, null]], "LLVM Design & Overview": [[632, "llvm-design-overview"]], "LLVM Developer Policy": [[517, null]], "LLVM Extensions": [[521, null]], "LLVM Function Attribute": [[628, "llvm-function-attribute"]], "LLVM IR": [[597, "llvm-ir"]], "LLVM IR Attributes": [[447, "llvm-ir-attributes"]], "LLVM IR Blocks": [[454, "llvm-ir-blocks"]], "LLVM IR Encoding": [[454, "llvm-ir-encoding"]], "LLVM IR Features": [[526, "llvm-ir-features"]], "LLVM IR Intrinsics": [[447, "llvm-ir-intrinsics"]], "LLVM IR Lane ordering": [[453, "llvm-ir-lane-ordering"]], "LLVM IR Magic Number": [[454, "llvm-ir-magic-number"]], "LLVM IR Representation": [[514, "llvm-ir-representation"]], "LLVM IR for If/Then/Else": [[652, "llvm-ir-for-if-then-else"], [663, "llvm-ir-for-if-then-else"]], "LLVM IR for the \u2018for\u2019 Loop": [[652, "llvm-ir-for-the-for-loop"], [663, "llvm-ir-for-the-for-loop"]], "LLVM Language Reference Manual": [[559, null]], "LLVM Link Time Optimization: Design and Implementation": [[562, null]], "LLVM Loop Terminology (and Canonical Forms)": [[563, null]], "LLVM Optimization Passes": [[651, "llvm-optimization-passes"], [662, "llvm-optimization-passes"]], "LLVM PowerPC ABI": [[464, "llvm-powerpc-abi"]], "LLVM Programmer\u2019s Manual": [[589, null]], "LLVM Project Wrappers": [[463, "llvm-project-wrappers"]], "LLVM Reference": [[597, "llvm-reference"]], "LLVM Security Group": [[603, null]], "LLVM Testing Infrastructure Guide": [[621, null]], "LLVM Testing Infrastructure Organization": [[621, "llvm-testing-infrastructure-organization"]], "LLVM Tutorial: Table of Contents": [[667, null]], "LLVM bitstream remarks": [[600, "llvm-bitstream-remarks"]], "LLVM bugpoint tool: design and usage": [[458, null]], "LLVM-specific variables": [[462, "llvm-specific-variables"]], "LLVMBuild Format Reference": [[558, "llvmbuild-format-reference"]], "LLVMBuild Guide": [[558, null]], "LLVM\u2019s Analysis and Transform Passes": [[587, null]], "LLVM\u2019s Optional Rich Disassembly Output": [[567, null]], "LOCAL CONFIGURATION FILES": [[472, "local-configuration-files"]], "LTO Post-Link Module Flags Metadata": [[559, "lto-post-link-module-flags-metadata"]], "Label Type": [[559, "label-type"]], "Laissez faire": [[594, "laissez-faire"]], "Lanai": [[511, "lanai"]], "Lane identifier": [[447, "lane-identifier"]], "Language Extensions and File Format Changes": [[605, "language-extensions-and-file-format-changes"]], "Language Names": [[442, "amdgpu-dwarf-language-names-table"]], "Language and Compiler Issues": [[467, "language-and-compiler-issues"]], "Language encodings": [[442, "amdgpu-dwarf-language-encodings-table"]], "Language-Specific Optimizations": [[657, "language-specific-optimizations"], [666, "language-specific-optimizations"]], "Languages, Libraries, and Standards": [[467, "languages-libraries-and-standards"]], "Late Machine Code Optimizations": [[464, "late-machine-code-optimizations"]], "Layering Over Another libc": [[592, "layering-over-another-libc"]], "Laziness": [[573, "laziness"]], "Lazy Compilation": [[635, "lazy-compilation"]], "Lazy Initialization with ManagedStatic": [[589, "lazy-initialization-with-managedstatic"]], "Leaf Records": [[576, "leaf-records"]], "Leaks": [[561, "leaks"]], "Leftover Transformations": [[622, "leftover-transformations"]], "Legacy License Structure": [[517, "legacy-license-structure"]], "Legal": [[626, "legal"]], "Legalizer": [[538, null]], "Lexer Extensions for If/Then/Else": [[652, "lexer-extensions-for-if-then-else"], [663, "lexer-extensions-for-if-then-else"]], "Lexer Extensions for the \u2018for\u2019 Loop": [[652, "lexer-extensions-for-the-for-loop"], [663, "lexer-extensions-for-the-for-loop"]], "Lexical Analysis": [[616, "lexical-analysis"]], "LibFuzzer": [[597, "libfuzzer"]], "Libcalls: __atomic_*": [[451, "libcalls-atomic"]], "Libcalls: __sync_*": [[451, "libcalls-sync"]], "Library": [[602, "library"]], "Library Layering": [[467, "library-layering"]], "License": [[522, "license"]], "Licensing": [[544, "licensing"]], "Lifetime": [[557, "lifetime"]], "Limitation": [[623, null]], "Limitations": [[450, "limitations"], [565, "limitations"]], "Limitations and Half Baked Ideas": [[610, "limitations-and-half-baked-ideas"]], "Line Number Information": [[442, "line-number-information"], [442, "id2"], [447, "line-number-information"]], "Line number header entry format encodings": [[442, "amdgpu-dwarf-line-number-header-entry-format-encodings-table"]], "Linkage Types": [[559, "linkage-types"]], "Linking with Libdevice": [[572, "linking-with-libdevice"]], "Links": [[529, "links"], [531, "links"], [607, "links"]], "Linux": [[452, "linux"], [511, "linux"]], "Linux Intel": [[452, "linux-intel"]], "Lists": [[463, "lists"], [607, "lists"]], "Lists of Lists": [[463, "lists-of-lists"]], "Literal Operations": [[442, "literal-operations"]], "Live In Registers": [[565, "live-in-registers"]], "Live Intervals": [[464, "live-intervals"]], "Live Intervals Analysis": [[464, "live-intervals-analysis"]], "Live Variable Analysis": [[464, "live-variable-analysis"]], "LiveDebugValues expansion of variable locations": [[605, "livedebugvalues-expansion-of-variable-locations"]], "Load/Store Unit and Memory Consistency Model": [[493, "load-store-unit-and-memory-consistency-model"]], "Loaded Code Object Path Uniform Resource Identifier (URI)": [[447, "loaded-code-object-path-uniform-resource-identifier-uri"]], "Loads folded into data-invariant operations can be hardened after the operation": [[606, "loads-folded-into-data-invariant-operations-can-be-hardened-after-the-operation"]], "Local LLVM Configuration": [[529, "local-llvm-configuration"]], "Locating clobbers yourself": [[570, "locating-clobbers-yourself"]], "Location": [[461, "location"]], "Location Description Operations": [[442, "location-description-operations"]], "Location List Expressions": [[442, "location-list-expressions"]], "Logarithmical search": [[571, "logarithmical-search"]], "Lookup By Address Section Header": [[447, "lookup-by-address-section-header"]], "Lookup By Name": [[442, "lookup-by-name"]], "Lookup By Name Section Header": [[447, "lookup-by-name-section-header"]], "Loop Closed SSA (LCSSA)": [[563, "loop-closed-ssa-lcssa"]], "Loop Distribution": [[622, "loop-distribution"]], "Loop Interchange": [[622, "loop-interchange"]], "Loop Scale": [[455, "loop-scale"]], "Loop Simplify Form": [[563, "loop-simplify-form"]], "Loop Unrolling": [[622, "loop-unrolling"]], "Loop Vectorization and Interleaving": [[622, "loop-vectorization-and-interleaving"]], "LoopInfo": [[563, "loopinfo"]], "Looping": [[615, "looping"]], "Loops": [[463, "loops"]], "Loops with unknown trip count": [[625, "loops-with-unknown-trip-count"]], "Low Level Type": [[533, "low-level-type"]], "Lowering Quality and Representation Overhead": [[610, "lowering-quality-and-representation-overhead"]], "Lowering:": [[559, "lowering"], [559, "id1131"], [559, "id1152"], [559, "id1157"], [559, "id1162"], [559, "id1164"], [559, "id1166"], [559, "id1168"], [559, "id1170"], [559, "id1172"], [559, "id1174"], [559, "id1176"], [559, "id1178"], [559, "id1180"], [559, "id1182"], [559, "id1184"], [559, "id1186"], [559, "id1188"], [559, "id1190"], [559, "id1192"], [559, "id1194"], [559, "id1196"], [559, "id1198"]], "M": [[560, "m"]], "M0": [[447, "m0"]], "MACH-O ONLY OPTIONS AND COMMANDS": [[496, "mach-o-only-options-and-commands"]], "MACH-O SPECIFIC OPTIONS": [[494, "mach-o-specific-options"], [501, "mach-o-specific-options"], [506, "mach-o-specific-options"]], "MCJIT Design and Implementation": [[564, null]], "MCSymbol Operands": [[565, "mcsymbol-operands"]], "MERGE": [[498, "merge"]], "METADATA_ATTACHMENT Contents": [[454, "metadata-attachment-contents"]], "METADATA_BLOCK Contents": [[454, "metadata-block-contents"]], "META_BLOCK": [[600, "meta-block"]], "MIMG": [[0, "mimg"], [2, "mimg"], [3, "mimg"], [4, "mimg"]], "MIMG Modifiers": [[445, "mimg-modifiers"]], "MIPS": [[511, "mips"]], "MIR Testing Guide": [[565, "mir-testing-guide"]], "MODULE_BLOCK Contents": [[454, "module-block-contents"]], "MODULE_CODE_ALIAS Record": [[454, "module-code-alias-record"]], "MODULE_CODE_ASM Record": [[454, "module-code-asm-record"]], "MODULE_CODE_DATALAYOUT Record": [[454, "module-code-datalayout-record"]], "MODULE_CODE_DEPLIB Record": [[454, "module-code-deplib-record"]], "MODULE_CODE_FUNCTION Record": [[454, "module-code-function-record"]], "MODULE_CODE_GCNAME Record": [[454, "module-code-gcname-record"]], "MODULE_CODE_GLOBALVAR Record": [[454, "module-code-globalvar-record"]], "MODULE_CODE_SECTIONNAME Record": [[454, "module-code-sectionname-record"]], "MODULE_CODE_TRIPLE Record": [[454, "module-code-triple-record"]], "MODULE_CODE_VERSION Record": [[454, "module-code-version-record"]], "MRI SCRIPTS": [[476, "mri-scripts"]], "MRI Script Commands": [[476, "mri-script-commands"]], "MSF Container Options": [[497, "msf-container-options"]], "MSF File Options": [[497, "msf-file-options"]], "MUBUF": [[0, "mubuf"], [2, "mubuf"], [3, "mubuf"], [4, "mubuf"], [8, "mubuf"], [447, "mubuf"]], "MUBUF/MTBUF Modifiers": [[445, "mubuf-mtbuf-modifiers"]], "Mach-O Changes": [[605, "mach-o-changes"]], "MachSuite": [[593, "machsuite"]], "Machine Basic Blocks": [[565, "machine-basic-blocks"]], "Machine Code Emitter": [[626, "machine-code-emitter"]], "Machine Functions": [[565, "machine-functions"]], "Machine IR (MIR) Format Reference Manual": [[565, null]], "Machine Instructions": [[565, "machine-instructions"]], "Machine Instructions Format Reference": [[565, "machine-instructions-format-reference"]], "Machine Operands": [[565, "machine-operands"]], "Machine code description classes": [[464, "machine-code-description-classes"]], "Machine code in SSA form": [[464, "machine-code-in-ssa-form"]], "Machine-specific Assembly Syntax": [[521, "machine-specific-assembly-syntax"]], "MachineInstr Bundles": [[464, "machineinstr-bundles"]], "MachineVerifier": [[539, "machineverifier"]], "Magic Numbers": [[454, "magic-numbers"]], "Mailing Lists": [[528, "mailing-lists"]], "Maintenance of cc-by-default settings": [[457, "maintenance-of-cc-by-default-settings"]], "Maintenance of products/components metadata": [[457, "maintenance-of-products-components-metadata"]], "Making a Major Change": [[517, "making-a-major-change"]], "Making and Submitting a Patch": [[517, "making-and-submitting-a-patch"]], "Making simple changes": [[589, "making-simple-changes"]], "Map-Like Containers (std::map, DenseMap, etc)": [[589, "map-like-containers-std-map-densemap-etc"]], "Mapping Region": [[514, "mapping-region"], [514, "id6"]], "Mapping Regions": [[514, "mapping-regions"]], "Mapping from instructions to functional units": [[464, "mapping-from-instructions-to-functional-units"]], "Mapping virtual registers to physical registers": [[464, "mapping-virtual-registers-to-physical-registers"]], "Mappings": [[631, "mappings"]], "Markdown Quickstart Template": [[566, null]], "Marking Functions as Kernels": [[572, "marking-functions-as-kernels"]], "Masked Vector Expanding Load and Compressing Store Intrinsics": [[559, "masked-vector-expanding-load-and-compressing-store-intrinsics"]], "Masked Vector Gather and Scatter Intrinsics": [[559, "masked-vector-gather-and-scatter-intrinsics"]], "Masked Vector Load and Store Intrinsics": [[559, "masked-vector-load-and-store-intrinsics"]], "Matching Newline Characters": [[468, "matching-newline-characters"]], "Matching a PDB to its executable": [[582, "matching-a-pdb-to-its-executable"]], "Matrix Intrinsics": [[559, "matrix-intrinsics"]], "Mechanical Source Issues": [[467, "mechanical-source-issues"]], "Meetups and social events": [[528, "meetups-and-social-events"]], "MemTagSanitizer": [[569, null]], "Member Records": [[576, "member-records"]], "Members of the Code of Conduct Advisory Committee": [[601, "members-of-the-code-of-conduct-advisory-committee"]], "Memory Access and Addressing Operations": [[559, "memory-access-and-addressing-operations"]], "Memory Dependence Analysis": [[450, "memory-dependence-analysis"]], "Memory Location Description Operations": [[442, "memory-location-description-operations"]], "Memory Model": [[447, "memory-model"]], "Memory Model for Concurrent Operations": [[559, "memory-model-for-concurrent-operations"]], "Memory Operations": [[534, "memory-operations"]], "Memory Scopes": [[447, "memory-scopes"]], "Memory Use Markers": [[559, "memory-use-markers"]], "Memory in LLVM": [[654, "memory-in-llvm"], [665, "memory-in-llvm"]], "MemorySSA": [[570, null]], "MemorySSA Structure": [[570, "memoryssa-structure"]], "Merge Requests": [[551, "merge-requests"]], "MergeFunctions pass, how it works": [[571, null]], "MergeFunctions, main fields and runOnModule": [[571, "mergefunctions-main-fields-and-runonmodule"]], "Merging Patches": [[551, "merging-patches"]], "Merging process, mergeTwoFunctions": [[571, "merging-process-mergetwofunctions"]], "Metadata": [[559, "metadata"]], "Metadata Nodes and Metadata Strings": [[559, "metadata-nodes-and-metadata-strings"]], "Metadata Records": [[630, "metadata-records"]], "Metadata Type": [[559, "metadata-type"]], "Metadata on Loops": [[622, "metadata-on-loops"]], "Method information": [[467, "method-information"]], "Microscopic Details": [[467, "microscopic-details"]], "Microsoft Visual C++": [[462, "microsoft-visual-c"]], "Minimising cost of downstream merges": [[594, "minimising-cost-of-downstream-merges"]], "Minimize Soft Errors": [[611, "minimize-soft-errors"]], "Minimizing docker image size": [[518, "minimizing-docker-image-size"]], "Minimum Legality For Operations": [[538, "minimum-legality-for-operations"]], "Minimum Legality For Vectors": [[538, "minimum-legality-for-vectors"]], "Minimum Legality for Pointers": [[538, "minimum-legality-for-pointers"]], "Minimum Rule Set": [[538, "minimum-rule-set"]], "Minimum Rules For Scalars": [[538, "minimum-rules-for-scalars"]], "Miscellaneous Attributes": [[565, "miscellaneous-attributes"]], "Miscellaneous Modifiers": [[445, "miscellaneous-modifiers"]], "Miscellaneous Options": [[497, "miscellaneous-options"]], "Miscellaneous Problems": [[627, "miscellaneous-problems"]], "Miscellaneous Resources": [[511, "miscellaneous-resources"]], "Miscellaneous Variables": [[590, "miscellaneous-variables"]], "Miscellaneous option modifiers": [[509, "miscellaneous-option-modifiers"]], "Miscompilation debugger": [[458, "miscompilation-debugger"]], "Miscompilations": [[553, "miscompilations"]], "Mixing References and Raw Pointers": [[610, "mixing-references-and-raw-pointers"]], "Mnemonic Aliases": [[464, "mnemonic-aliases"]], "Modeling Memory Effects": [[524, "modeling-memory-effects"]], "Modifications for other Targets": [[549, "modifications-for-other-targets"]], "Modifiers": [[443, "modifiers"], [444, "modifiers"], [445, "modifiers"], [447, "modifiers"]], "Modifiers (generic)": [[476, "modifiers-generic"]], "Modifiers (operation specific)": [[476, "modifiers-operation-specific"]], "Module & File Options": [[497, "module-file-options"]], "Module Flags Metadata": [[559, "module-flags-metadata"]], "Module Info Substream": [[577, "module-info-substream"]], "Module Options": [[497, "module-options"]], "Module Path Summary Entry": [[559, "module-path-summary-entry"]], "Module Structure": [[559, "module-structure"]], "Module Symbols": [[575, "module-symbols"]], "Module-Level Inline Assembly": [[559, "module-level-inline-assembly"]], "Modules": [[463, "modules"]], "Modules, Functions and Macros": [[463, "modules-functions-and-macros"]], "Monorepo": [[591, "monorepo"]], "Monorepo Drawbacks": [[591, "monorepo-drawbacks"]], "Monorepo Variant": [[591, "monorepo-variant"], [591, "workflow-monocheckout-multicommit"], [591, "workflow-mono-branching"], [591, "workflow-mono-bisecting"]], "Monotonic": [[451, "monotonic"]], "More Platforms": [[628, "more-platforms"]], "More Resources": [[532, "more-resources"]], "More examples": [[561, "more-examples"]], "More information": [[569, "more-information"]], "Motivation": [[442, "motivation"], [523, "motivation"], [595, "motivation"], [608, "motivation"]], "Moved": [[612, "moved"], [618, "moved"]], "Moving LLVM Projects to GitHub": [[591, null]], "Moving Local Branches to the Monorepo": [[591, "moving-local-branches-to-the-monorepo"]], "Multi-phase communication between libLTO and linker": [[562, "multi-phase-communication-between-liblto-and-linker"]], "Multi-stage PGO": [[449, "multi-stage-pgo"]], "Multiclass definitions and instances": [[615, "multiclass-definitions-and-instances"]], "Multiple Suspend Points": [[513, "multiple-suspend-points"]], "Multithreaded LLVM": [[627, "multithreaded-llvm"]], "Must Code Be Reviewed Prior to Being Committed?": [[466, "must-code-be-reviewed-prior-to-being-committed"]], "Must, May, and No Alias Responses": [[450, "must-may-and-no-alias-responses"]], "Mutable Variables in Kaleidoscope": [[654, "mutable-variables-in-kaleidoscope"], [665, "mutable-variables-in-kaleidoscope"]], "Mutation testing for IR-level transformations": [[554, "mutation-testing-for-ir-level-transformations"]], "Mutation testing for MIR-level transformations": [[554, "mutation-testing-for-mir-level-transformations"]], "Mutators and Input Generators": [[525, "mutators-and-input-generators"]], "My First Language Frontend with LLVM Tutorial": [[658, null]], "N": [[560, "n"]], "NAS Parallel Benchmarks": [[593, "nas-parallel-benchmarks"]], "NVPTX": [[511, "nvptx"]], "NVPTX Intrinsics": [[572, "nvptx-intrinsics"]], "NWChem": [[593, "nwchem"]], "Name Accelerator Tables": [[605, "name-accelerator-tables"]], "Name Hash Tables": [[605, "name-hash-tables"]], "Name Types, Functions, Variables, and Enumerators Properly": [[467, "name-types-functions-variables-and-enumerators-properly"]], "Named Alternatives": [[509, "named-alternatives"]], "Named Metadata": [[559, "named-metadata"]], "Named Stream Map": [[582, "named-stream-map"]], "Namespace Indentation": [[467, "namespace-indentation"]], "Narrative structure": [[571, "narrative-structure"]], "Narrow focus: test-case reduction": [[459, "narrow-focus-test-case-reduction"]], "Native Object File Wrapper Format": [[454, "native-object-file-wrapper-format"]], "Nested Calls and Copy Elision": [[557, "nested-calls-and-copy-elision"]], "New Assignment Operator": [[654, "new-assignment-operator"], [665, "new-assignment-operator"]], "New Contributors": [[517, "new-contributors"]], "New DWARF Attributes": [[605, "new-dwarf-attributes"]], "New DWARF Constants": [[605, "new-dwarf-constants"]], "New DWARF Tags": [[605, "new-dwarf-tags"]], "New LLVM Project License Framework": [[517, "new-llvm-project-license-framework"]], "New exception handling instructions": [[519, "new-exception-handling-instructions"]], "NewBuffer Records": [[630, "newbuffer-records"]], "NewCpuId Records": [[630, "newcpuid-records"]], "Next Steps": [[629, "next-steps"]], "No Duplicate Implementations": [[611, "no-duplicate-implementations"]], "No Exposed Data": [[611, "no-exposed-data"]], "No Exposed Functions": [[611, "no-exposed-functions"]], "No Normalization": [[631, "no-normalization"]], "No Unused Functionality": [[611, "no-unused-functionality"]], "No Virtual Methods": [[611, "no-virtual-methods"]], "No global aliases, replaceDirectCallers": [[571, "no-global-aliases-replacedirectcallers"]], "No target passed to clang": [[549, "no-target-passed-to-clang"]], "No throw Specifications": [[611, "no-throw-specifications"]], "Nomination process": [[603, "nomination-process"]], "Non-Experts Should Review Code": [[466, "non-experts-should-review-code"]], "Non-Goals": [[570, "non-goals"]], "Non-Integral Pointer Type": [[559, "non-integral-pointer-type"]], "Non-Kernel Functions": [[447, "non-kernel-functions"]], "Non-comprehensive list of changes in this release": [[598, "non-comprehensive-list-of-changes-in-this-release"]], "Normalization": [[631, "normalization"]], "NotAtomic": [[451, "notatomic"]], "Notation": [[0, "notation"], [1, "notation"], [2, "notation"], [3, "notation"], [4, "notation"], [5, "notation"], [6, "notation"], [7, "notation"], [8, "notation"], [443, "notation"], [443, "id1"], [443, "amdgpu-syn-instruction-operand-notation"], [443, "amdgpu-syn-instruction-modifier-notation"], [616, "notation"]], "Note Records": [[447, "note-records"]], "Notes On Building LLVM/Clang on ARM": [[547, "notes-on-building-llvm-clang-on-arm"]], "Numbers": [[446, "numbers"]], "O": [[560, "o"]], "O(log(N))": [[571, "o-log-n"]], "OPTIONS": [[468, "options"], [469, "options"], [470, "options"], [473, "options"], [476, "options"], [477, "options"], [478, "options"], [479, "options"], [480, "options"], [481, "options"], [481, "id5"], [481, "id8"], [481, "id11"], [482, "options"], [483, "options"], [485, "options"], [486, "options"], [487, "options"], [488, "options"], [490, "options"], [492, "options"], [493, "options"], [494, "options"], [496, "options"], [498, "options"], [498, "id5"], [498, "id8"], [500, "options"], [502, "options"], [503, "options"], [504, "options"], [506, "options"], [507, "options"], [508, "options"]], "ORC Design and Implementation": [[573, null]], "OUTPUT OPTIONS": [[472, "output-options"]], "OVERLAP": [[498, "overlap"]], "Object Loading": [[564, "object-loading"]], "Object lifetime in optimized code": [[605, "object-lifetime-in-optimized-code"]], "Object lifetimes and scoping": [[605, "object-lifetimes-and-scoping"]], "Objective": [[461, "objective"]], "Objective-C ARC Runtime Intrinsics": [[559, "objective-c-arc-runtime-intrinsics"]], "Objective-C Extensions": [[605, "objective-c-extensions"]], "Objective-C Garbage Collection Module Flags Metadata": [[559, "objective-c-garbage-collection-module-flags-metadata"]], "Objects on the Stack": [[610, "objects-on-the-stack"]], "Obtaining Commit Access": [[517, "obtaining-commit-access"]], "Obtaining Help": [[510, "obtaining-help"]], "Official Testing": [[551, "official-testing"]], "On Managing Revision Numbers with Git": [[591, "on-managing-revision-numbers-with-git"]], "On-Disk Format": [[579, "on-disk-format"]], "Ongoing Development Directions": [[625, "ongoing-development-directions"]], "Opaque Structure Types": [[559, "opaque-structure-types"]], "Opcode": [[443, "opcode"]], "Opcode Mnemonic": [[444, "opcode-mnemonic"]], "OpenBenchmarking.org CPU / Processor Suite": [[593, "openbenchmarking-org-cpu-processor-suite"]], "OpenCL": [[447, "opencl"]], "OpenCL kernel implicit arguments appended for AMDHSA OS": [[447, "opencl-kernel-implicit-arguments-appended-for-amdhsa-os-table"]], "OpenCV": [[593, "opencv"]], "OpenMP 4.x SIMD Benchmarks": [[593, "openmp-4-x-simd-benchmarks"]], "Operand Bundles": [[559, "operand-bundles"]], "Operands": [[443, "operands"], [444, "operands"], [446, "operands"], [447, "operands"]], "Operands and Operations": [[446, "operands-and-operations"]], "Operands:": [[608, "operands"], [608, "id3"], [610, "operands"], [610, "id3"], [610, "id7"]], "Operation Expressions": [[442, "operation-expressions"], [447, "operation-expressions"]], "Operations": [[476, "operations"]], "OptParserDefs": [[613, "optparserdefs"]], "Optimization Hint": [[559, "optimization-hint"]], "Optimization outside atomic": [[451, "optimization-outside-atomic"]], "Optimizations": [[510, "optimizations"], [606, "optimizations"], [624, "optimizations"]], "Optimizations, Alternatives, and Tradeoffs": [[606, "optimizations-alternatives-and-tradeoffs"]], "Optimizing Modules using the IRTransformLayer": [[634, "optimizing-modules-using-the-irtransformlayer"]], "Option Attributes": [[509, "option-attributes"]], "Option Modifiers": [[509, "option-modifiers"]], "Optional Configuration Items": [[529, "optional-configuration-items"]], "Optional Debug Header Stream": [[577, "optional-debug-header-stream"]], "Options": [[497, "options"], [497, "id2"], [497, "id4"], [497, "id7"], [497, "id9"], [497, "id11"], [545, "options"], [561, "options"], [602, "options"], [621, "options"]], "Options and variables": [[462, "options-and-variables"]], "Options for Optimizing LLVM": [[460, "options-for-optimizing-llvm"]], "Options for Reducing Size": [[460, "options-for-reducing-size"]], "Order of Keys": [[631, "order-of-keys"]], "Other": [[456, "other"], [476, "other"]], "Other Debugger Information": [[442, "other-debugger-information"]], "Other Design Notes": [[461, "other-design-notes"]], "Other Features": [[621, "other-features"]], "Other Intrinsics": [[572, "other-intrinsics"]], "Other Map-Like Container Options": [[589, "other-map-like-container-options"]], "Other Operations": [[534, "other-operations"], [559, "other-operations"]], "Other Options": [[497, "other-options"]], "Other Sequential Container options": [[589, "other-sequential-container-options"]], "Other Set-Like Container Options": [[589, "other-set-like-container-options"]], "Other Things to Consider": [[524, "other-things-to-consider"]], "Other Types": [[463, "other-types"]], "Other Values": [[559, "other-values"]], "Other documents, collections, notes": [[511, "other-documents-collections-notes"]], "Other relevant lists": [[511, "other-relevant-lists"]], "Other useful AliasAnalysis methods": [[450, "other-useful-aliasanalysis-methods"]], "Other useful references": [[589, "other-useful-references"]], "Output": [[561, "output"], [631, "output"]], "Output constraints": [[559, "output-constraints"]], "Outstanding Questions": [[591, "outstanding-questions"]], "Overloading Based on __host__ and __device__ Attributes": [[510, "overloading-based-on-host-and-device-attributes"]], "Overview": [[0, "overview"], [1, "overview"], [2, "overview"], [3, "overview"], [4, "overview"], [5, "overview"], [6, "overview"], [7, "overview"], [8, "overview"], [454, "overview"], [518, "overview"], [519, "overview"], [529, "overview"], [531, "overview"], [559, "id632"], [559, "id637"], [559, "id642"], [559, "id647"], [559, "id652"], [559, "id657"], [559, "id662"], [559, "id667"], [559, "id672"], [559, "id677"], [559, "id682"], [559, "id687"], [565, "overview"], [586, "overview"], [590, "overview"], [607, "overview"], [620, "overview"], [621, "overview"], [622, "overview"]], "Overview & Core Concepts": [[610, "overview-core-concepts"]], "Overview of available features": [[526, "overview-of-available-features"]], "Overview of the Release Process": [[599, "overview-of-the-release-process"]], "Overview:": [[513, "overview"], [513, "id3"], [513, "id6"], [513, "id9"], [513, "id12"], [513, "id15"], [513, "id18"], [513, "id20"], [513, "id24"], [513, "id27"], [513, "id30"], [513, "id33"], [513, "id35"], [513, "id37"], [513, "id40"], [513, "id43"], [513, "id47"], [513, "id50"], [559, "overview"], [559, "id28"], [559, "id33"], [559, "id38"], [559, "id44"], [559, "id49"], [559, "id54"], [559, "id59"], [559, "id64"], [559, "id69"], [559, "id76"], [559, "id79"], [559, "id84"], [559, "id89"], [559, "id94"], [559, "id99"], [559, "id104"], [559, "id109"], [559, "id114"], [559, "id119"], [559, "id124"], [559, "id129"], [559, "id134"], [559, "id139"], [559, "id144"], [559, "id149"], [559, "id154"], [559, "id159"], [559, "id164"], [559, "id169"], [559, "id174"], [559, "id179"], [559, "id184"], [559, "id189"], [559, "id194"], [559, "id199"], [559, "id204"], [559, "id209"], [559, "id214"], [559, "id219"], [559, "id224"], [559, "id229"], [559, "id234"], [559, "id239"], [559, "id244"], [559, "id249"], [559, "id254"], [559, "id259"], [559, "id264"], [559, "id269"], [559, "id274"], [559, "id279"], [559, "id284"], [559, "id289"], [559, "id294"], [559, "id299"], [559, "id304"], [559, "id309"], [559, "id314"], [559, "id319"], [559, "id324"], [559, "id329"], [559, "id334"], [559, "id340"], [559, "id347"], [559, "id354"], [559, "id358"], [559, "id362"], [559, "id367"], [559, "id371"], [559, "id375"], [559, "id379"], [559, "id383"], [559, "id386"], [559, "id389"], [559, "id393"], [559, "id397"], [559, "id400"], [559, "id403"], [559, "id406"], [559, "id409"], [559, "id413"], [559, "id417"], [559, "id420"], [559, "id423"], [559, "id427"], [559, "id431"], [559, "id435"], [559, "id438"], [559, "id441"], [559, "id444"], [559, "id448"], [559, "id452"], [559, "id456"], [559, "id460"], [559, "id464"], [559, "id468"], [559, "id472"], [559, "id476"], [559, "id480"], [559, "id484"], [559, "id488"], [559, "id492"], [559, "id496"], [559, "id500"], [559, "id504"], [559, "id508"], [559, "id512"], [559, "id516"], [559, "id520"], [559, "id524"], [559, "id528"], [559, "id532"], [559, "id536"], [559, "id540"], [559, "id544"], [559, "id548"], [559, "id552"], [559, "id556"], [559, "id560"], [559, "id564"], [559, "id568"], [559, "id572"], [559, "id576"], [559, "id579"], [559, "id582"], [559, "id586"], [559, "id590"], [559, "id594"], [559, "id598"], [559, "id602"], [559, "id607"], [559, "id612"], [559, "id617"], [559, "id622"], [559, "id627"], [559, "id692"], [559, "id694"], [559, "id699"], [559, "id703"], [559, "id707"], [559, "id711"], [559, "id715"], [559, "id718"], [559, "id722"], [559, "id725"], [559, "id729"], [559, "id732"], [559, "id735"], [559, "id738"], [559, "id741"], [559, "id744"], [559, "id747"], [559, "id750"], [559, "id753"], [559, "id756"], [559, "id759"], [559, "id762"], [559, "id765"], [559, "id768"], [559, "id773"], [559, "id778"], [559, "id782"], [559, "id786"], [559, "id791"], [559, "id796"], [559, "id801"], [559, "id806"], [559, "id811"], [559, "id816"], [559, "id821"], [559, "id826"], [559, "id831"], [559, "id836"], [559, "id841"], [559, "id846"], [559, "id851"], [559, "id856"], [559, "id860"], [559, "id864"], [559, "id868"], [559, "id872"], [559, "id876"], [559, "id880"], [559, "id884"], [559, "id888"], [559, "id892"], [559, "id896"], [559, "id900"], [559, "id904"], [559, "id908"], [559, "id912"], [559, "id916"], [559, "id920"], [559, "id924"], [559, "id928"], [559, "id932"], [559, "id936"], [559, "id940"], [559, "id944"], [559, "id948"], [559, "id952"], [559, "id956"], [559, "id960"], [559, "id964"], [559, "id968"], [559, "id972"], [559, "id976"], [559, "id980"], [559, "id984"], [559, "id988"], [559, "id992"], [559, "id996"], [559, "id1000"], [559, "id1004"], [559, "id1008"], [559, "id1012"], [559, "id1016"], [559, "id1020"], [559, "id1024"], [559, "id1028"], [559, "id1032"], [559, "id1036"], [559, "id1040"], [559, "id1044"], [559, "id1048"], [559, "id1052"], [559, "id1056"], [559, "id1060"], [559, "id1063"], [559, "id1067"], [559, "id1071"], [559, "id1077"], [559, "id1081"], [559, "id1085"], [559, "id1089"], [559, "id1093"], [559, "id1097"], [559, "id1101"], [559, "id1105"], [559, "id1110"], [559, "id1113"], [559, "id1116"], [559, "id1118"], [559, "id1122"], [559, "id1126"], [559, "id1128"], [559, "id1133"], [559, "id1135"], [559, "id1139"], [559, "id1143"], [559, "id1146"], [559, "id1149"], [559, "id1154"], [559, "id1159"], [559, "id1200"], [559, "id1204"], [559, "id1208"], [572, "overview"], [572, "id4"], [572, "id7"], [572, "id9"], [608, "overview"], [608, "id2"], [610, "overview"], [610, "id2"], [610, "id6"]], "P": [[560, "p"]], "PAL Compute Shader User Data Registers": [[447, "pal-compute-user-data-registers"]], "PAL Global Internal Table": [[447, "pal-git-table"]], "PAL Graphics Shader User Data Registers": [[447, "pal-graphics-user-data-registers"]], "PARAMATTR_BLOCK Contents": [[454, "paramattr-block-contents"]], "PARAMATTR_CODE_ENTRY Record": [[454, "paramattr-code-entry-record"]], "PARAMATTR_CODE_ENTRY_OLD Record": [[454, "paramattr-code-entry-old-record"]], "PARAMATTR_GROUP_BLOCK Contents": [[454, "paramattr-group-block-contents"]], "PARAMATTR_GRP_CODE_ENTRY Record": [[454, "paramattr-grp-code-entry-record"]], "PARSEC": [[593, "parsec"]], "PDB Feature Codes": [[582, "pdb-feature-codes"]], "PDB Stream Options": [[497, "pdb-stream-options"]], "PE/COFF SPECIFIC OPTIONS": [[501, "pe-coff-specific-options"]], "PWM-benchmarking": [[593, "pwm-benchmarking"]], "Packet data access (BPF_ABS, BPF_IND)": [[464, "packet-data-access-bpf-abs-bpf-ind"]], "Padding Instruction": [[442, "padding-instruction"]], "Padding Records": [[576, "padding-records"]], "ParRes": [[593, "parres"]], "Parallel Fuzzing": [[561, "parallel-fuzzing"]], "Parameter Attributes": [[559, "parameter-attributes"]], "Params": [[559, "params"]], "Parboil Benchmarks": [[593, "parboil-benchmarks"]], "Parser Basics": [[649, "parser-basics"], [660, "parser-basics"]], "Parser Extensions for If/Then/Else": [[652, "parser-extensions-for-if-then-else"], [663, "parser-extensions-for-if-then-else"]], "Parser Extensions for the \u2018for\u2019 Loop": [[652, "parser-extensions-for-the-for-loop"], [663, "parser-extensions-for-the-for-loop"]], "Parsing a list of options": [[509, "parsing-a-list-of-options"]], "Parsing the Rest": [[649, "parsing-the-rest"], [660, "parsing-the-rest"]], "Partial unrolling during vectorization": [[625, "partial-unrolling-during-vectorization"]], "Pass Ordering": [[524, "pass-ordering"]], "Pass Skipping Implementation": [[574, "pass-skipping-implementation"]], "Pass Statistics": [[627, "pass-statistics"]], "Pass classes and requirements": [[627, "pass-classes-and-requirements"]], "Pass registration": [[627, "pass-registration"]], "Pass-Specific Transformation Metadata": [[622, "pass-specific-transformation-metadata"]], "Passing functions and other callable objects": [[589, "passing-functions-and-other-callable-objects"]], "Passing strings (the StringRef and Twine classes)": [[589, "passing-strings-the-stringref-and-twine-classes"]], "PatLeaf Predicates": [[536, "patleaf-predicates"]], "Patents": [[517, "patents"]], "Performance": [[625, "performance"]], "Performance Overhead": [[606, "performance-overhead"]], "Performance Tips for Frontend Authors": [[524, null]], "Personality Function": [[559, "personality-function"]], "Phase 1 : Read LLVM Bitcode Files": [[562, "phase-1-read-llvm-bitcode-files"]], "Phase 2 : Symbol Resolution": [[562, "phase-2-symbol-resolution"]], "Phase 3 : Optimize Bitcode Files": [[562, "phase-3-optimize-bitcode-files"]], "Phase 4 : Symbol Resolution after optimization": [[562, "phase-4-symbol-resolution-after-optimization"]], "Phi placement": [[570, "phi-placement"]], "Philosophy behind LLVM debugging information": [[605, "philosophy-behind-llvm-debugging-information"]], "Picking the Right Data Structure for a Task": [[589, "picking-the-right-data-structure-for-a-task"]], "PlaceSafepoints": [[610, "placesafepoints"]], "Placement of Object Code": [[590, "placement-of-object-code"]], "Platform Support": [[592, "platform-support"]], "Platform-Specific Tests": [[621, "platform-specific-tests"]], "Pointer Aliasing Rules": [[559, "pointer-aliasing-rules"]], "Pointer Induction Variables": [[625, "pointer-induction-variables"]], "Pointer Type": [[559, "pointer-type"]], "Poison Values": [[559, "poison-values"]], "PolyBench": [[593, "polybench"]], "PolyMage": [[593, "polymage"]], "Porting GlobalISel to A New Target": [[540, null]], "Positional Arguments": [[509, "positional-options"]], "Possible solutions": [[571, "possible-solutions"]], "PowerPC": [[511, "powerpc"]], "Pragma loop hint directives": [[625, "pragma-loop-hint-directives"]], "Pre-Release Process": [[599, "pre-release-process"]], "Preallocated Operand Bundles": [[559, "preallocated-operand-bundles"]], "Precision": [[570, "precision"]], "Predicate Operands": [[565, "predicate-operands"]], "Prefer Preincrement": [[467, "prefer-preincrement"]], "Prefer zext over sext when legal": [[524, "prefer-zext-over-sext-when-legal"]], "Prefix Data": [[559, "prefix-data"]], "Preliminaries": [[626, "preliminaries"]], "Preprocessing Support": [[616, "preprocessing-support"]], "Prerequisite Reading": [[626, "prerequisite-reading"]], "Prerequisites": [[510, "prerequisites"], [549, "prerequisites"]], "Present and Deleted Bit Vectors": [[579, "present-and-deleted-bit-vectors"]], "Present state": [[571, "present-state"]], "Preserving Debug Information Intrinsics": [[559, "preserving-debug-information-intrinsics"]], "Preserving the flags while hardening loaded values on Haswell, Zen, and newer processors": [[606, "preserving-the-flags-while-hardening-loaded-values-on-haswell-zen-and-newer-processors"]], "Primitives": [[454, "primitives"]], "Private Segment Buffer": [[447, "private-segment-buffer"]], "Privileges and Responsibilities of LLVM Security Group Members": [[603, "privileges-and-responsibilities-of-llvm-security-group-members"]], "Problem": [[453, "problem"]], "Problem Statement": [[606, "problem-statement"]], "Process": [[603, "process"]], "Processors": [[447, "processors"]], "Profile Guided Optimization": [[619, "profile-guided-optimization"]], "Program Dependence Graph": [[516, "program-dependence-graph"]], "Program Scope Entities": [[442, "program-scope-entities"]], "Program start": [[464, "program-start"]], "Programmatic Errors": [[589, "programmatic-errors"]], "Progress and Future Work": [[543, "progress-and-future-work"]], "Project Organization": [[558, "project-organization"]], "Prolog/Epilog": [[464, "prolog-epilog"]], "Prolog/Epilog Code Insertion": [[464, "prolog-epilog-code-insertion"]], "Prologue Data": [[559, "prologue-data"]], "Promote": [[626, "promote"]], "Propagating and consuming errors based on types": [[589, "propagating-and-consuming-errors-based-on-types"]], "Properties of the LLVM IR": [[657, "properties-of-the-llvm-ir"], [666, "properties-of-the-llvm-ir"]], "Proposal": [[605, "proposal"]], "Proposed Changes Relative to DWARF Version 5": [[442, "proposed-changes-relative-to-dwarf-version-5"]], "Proposed New Design": [[459, "proposed-new-design"]], "Protect large, load-heavy blocks with a single lfence": [[606, "protect-large-load-heavy-blocks-with-a-single-lfence"]], "Provide a Virtual Method Anchor for Classes in Headers": [[467, "provide-a-virtual-method-anchor-for-classes-in-headers"]], "Provisional Plan": [[594, "provisional-plan"]], "Pseudo-Counter:": [[514, "pseudo-counter"]], "PseudoLowering": [[613, "pseudolowering"]], "Public Symbols": [[575, "public-symbols"]], "Publication": [[510, "publication"]], "Putting It All Together": [[655, "putting-it-all-together"]], "Q. Does libFuzzer Support Windows?": [[561, "q-does-libfuzzer-support-windows"]], "Q. LibFuzzer crashes on my complicated fuzz target (but works fine for me on smaller targets).": [[561, "q-libfuzzer-crashes-on-my-complicated-fuzz-target-but-works-fine-for-me-on-smaller-targets"]], "Q. So, what exactly this Fuzzer is good for?": [[561, "q-so-what-exactly-this-fuzzer-is-good-for"]], "Q. When libFuzzer is not a good solution for a problem?": [[561, "q-when-libfuzzer-is-not-a-good-solution-for-a-problem"]], "Q. Why doesn\u2019t libFuzzer use any of the LLVM support?": [[561, "q-why-doesn-t-libfuzzer-use-any-of-the-llvm-support"]], "Quality": [[517, "quality"]], "Questions about code generated by the demo page": [[522, "questions-about-code-generated-by-the-demo-page"]], "Questions?": [[465, "questions"]], "Quick Start": [[526, "quick-start"]], "Quick Start Guide": [[509, "quick-start-guide"]], "Quick Start \u2014 Writing hello world": [[627, "quick-start-writing-hello-world"]], "Quick start": [[462, "quick-start"], [621, "quick-start"]], "Quickstart": [[619, "quickstart"]], "Quickstart for using LTO with autotooled projects": [[544, "quickstart-for-using-lto-with-autotooled-projects"]], "R": [[560, "r"]], "RAJA Performance Suite": [[593, "raja-performance-suite"]], "REMAPPING FILE": [[483, "remapping-file"]], "REMARK_BLOCK": [[600, "remark-block"]], "REPORT COMMAND": [[481, "report-command"]], "RIP-relative addressing is even easier to break": [[606, "rip-relative-addressing-is-even-easier-to-break"]], "RISC-V": [[511, "risc-v"]], "RTTI for Open Class Hierarchies": [[552, "rtti-for-open-class-hierarchies"]], "Random-access": [[571, "random-access"]], "Randomness": [[602, "randomness"]], "Rarely-used CMake variables": [[462, "rarely-used-cmake-variables"]], "Rationale": [[527, "rationale"], [559, null]], "Read barrier: llvm.gcread": [[526, "read-barrier-llvm-gcread"]], "Read-only sub-project mirrors": [[591, "read-only-sub-project-mirrors"]], "Read/write SVN bridge": [[591, "read-write-svn-bridge"]], "Reading PTX Special Registers": [[572, "reading-ptx-special-registers"]], "Reading and writing references in the heap": [[526, "reading-and-writing-references-in-the-heap"]], "Record Categories": [[575, "record-categories"], [576, "record-categories"]], "Recording On Stack Regions": [[610, "recording-on-stack-regions"]], "Recoverable Errors": [[589, "recoverable-errors"]], "Reducing the number of acronyms": [[594, "reducing-the-number-of-acronyms"]], "Reductions": [[625, "reductions"]], "Reference": [[597, null]], "Reference Guide": [[509, "reference-guide"]], "References": [[442, "references"], [516, "references"], [526, "references"], [591, "references"], [594, "references"], [595, "references"], [596, "references"]], "Reflection Parameters": [[572, "reflection-parameters"]], "Refs": [[559, "refs"]], "RegBankSelect": [[541, null]], "RegBankSelect Modes": [[541, "regbankselect-modes"]], "Register Allocation": [[464, "register-allocator"]], "Register Bank": [[533, "register-bank"]], "Register Flags": [[565, "register-flags"]], "Register Identifier": [[447, "register-identifier"]], "Register Location Description Operations": [[442, "register-location-description-operations"]], "Register Operands": [[565, "register-operands"]], "Register Rule Instructions": [[442, "register-rule-instructions"]], "Register Set and Register Classes": [[626, "register-set-and-register-classes"]], "RegisterInfo": [[613, "registerinfo"]], "Registering dynamically loaded passes": [[627, "registering-dynamically-loaded-passes"]], "Registers": [[565, "mir-registers"]], "Regression test structure": [[621, "regression-test-structure"]], "Regression tests": [[621, "regression-tests"]], "Related LLVM components": [[596, "related-llvm-components"]], "Release": [[451, "release"]], "Release Administrative Tasks": [[551, "release-administrative-tasks"]], "Release Final Tasks": [[551, "release-final-tasks"]], "Release Patch Rules": [[551, "release-patch-rules"]], "Release Process": [[551, "release-process"], [599, "release-process"]], "Release Qualification Criteria": [[551, "release-qualification-criteria"]], "Release Timeline": [[551, "release-timeline"]], "Relevant CMake Options": [[460, "relevant-cmake-options"]], "Relicensing": [[517, "relicensing"]], "Relocatable Expressions": [[446, "relocatable-expressions"]], "Relocation Records": [[447, "relocation-records"]], "Relocations": [[521, "relocations"], [521, "id1"], [521, "id3"]], "Relocations Along Exceptional Edges": [[610, "relocations-along-exceptional-edges"]], "Remark diagnostics": [[600, "remark-diagnostics"]], "Remark streamers": [[600, "remark-streamers"]], "Remarks": [[600, null]], "Replacing an Instruction with another Value": [[589, "replacing-an-instruction-with-another-value"]], "Replacing individual instructions": [[589, "replacing-individual-instructions"]], "Replacing multiple uses of Users and Values": [[589, "replacing-multiple-uses-of-users-and-values"]], "Reporting Guide": [[601, null]], "Reporting Regressions": [[551, "reporting-regressions"]], "Reporting a Security Issue": [[512, "reporting-a-security-issue"]], "Reporting bugs": [[457, "reporting-bugs"]], "Representation": [[559, "representation"]], "Representation of Pointers": [[450, "representation-of-pointers"]], "Representing Type Information using Type Metadata": [[623, "representing-type-information-using-type-metadata"]], "Representing X86 addressing modes in MachineInstrs": [[464, "representing-x86-addressing-modes-in-machineinstrs"]], "Requesting a review via the command line": [[588, "requesting-a-review-via-the-command-line"]], "Requesting a review via the web interface": [[588, "requesting-a-review-via-the-web-interface"]], "Required Variables": [[590, "required-variables"]], "Required components in the code generator": [[464, "required-components-in-the-code-generator"]], "Required initialization calls": [[450, "required-initialization-calls"]], "Required methods to override": [[450, "required-methods-to-override"]], "Requirements": [[529, "requirements"], [531, "requirements"], [621, "requirements"]], "Resampling": [[593, "resampling"]], "Resolving/Closing bugs": [[457, "resolving-closing-bugs"]], "Resources": [[542, null]], "Response files": [[509, "response-files"]], "Restricted Operation Semantics": [[524, "restricted-operation-semantics"]], "Restrictions": [[519, "restrictions"]], "Resuming merge": [[561, "resuming-merge"]], "Returned-Continuation Lowering": [[513, "returned-continuation-lowering"]], "Returning Errors from error handlers": [[589, "returning-errors-from-error-handlers"]], "Reverse Iterators": [[625, "reverse-iterators"]], "Reverting a change": [[529, "reverting-a-change"]], "Reviewing code with Phabricator": [[588, "reviewing-code-with-phabricator"]], "Rewrite API of internal functions to directly propagate predicate state": [[606, "rewrite-api-of-internal-functions-to-directly-propagate-predicate-state"]], "RewriteStatepointsForGC": [[610, "rewritestatepointsforgc"]], "Roadmap": [[595, "roadmap"]], "Rodinia": [[593, "rodinia"]], "Root Cause Analysis": [[459, "root-cause-analysis"]], "Rotated Loops": [[563, "rotated-loops"]], "Row Creation Instructions": [[442, "row-creation-instructions"]], "Row State Instructions": [[442, "row-state-instructions"]], "Rule Actions": [[538, "rule-actions"]], "Rule Predicates": [[538, "rule-predicates"]], "Rule Processing and Declaring Rules": [[538, "rule-processing-and-declaring-rules"]], "Rules": [[527, "rules"]], "Rules for updating debug locations": [[554, "rules-for-updating-debug-locations"]], "Rules for updating debug values": [[554, "rules-for-updating-debug-values"]], "Rules of Thumb": [[552, "rules-of-thumb"]], "Running": [[561, "running"], [619, "running"]], "Running CMake and Building": [[550, "running-cmake-and-building"]], "Running Different Tests": [[620, "running-different-tests"]], "Running TableGen": [[617, "running-tablegen"]], "Running a pass with opt": [[627, "running-a-pass-with-opt"]], "Running the Kernel": [[572, "running-the-kernel"]], "Running the test-suite via LNT": [[619, "running-the-test-suite-via-lnt"]], "Running the test-suite via Makefiles (deprecated)": [[619, "running-the-test-suite-via-makefiles-deprecated"]], "Runtime Checks of Pointers": [[625, "runtime-checks-of-pointers"]], "Runtime Preemption Specifiers": [[559, "runtime-preemption-specifiers"]], "S": [[560, "s"]], "SDWA": [[0, "sdwa"]], "SDWA Modifiers": [[445, "sdwa-modifiers"]], "SDWA Operand Modifiers": [[445, "sdwa-operand-modifiers"]], "SEE ALSO": [[469, "see-also"], [470, "see-also"], [472, "see-also"], [473, "see-also"], [474, "see-also"], [475, "see-also"], [477, "see-also"], [478, "see-also"], [482, "see-also"], [485, "see-also"], [486, "see-also"], [488, "see-also"], [492, "see-also"], [494, "see-also"], [495, "see-also"], [496, "see-also"], [499, "see-also"], [500, "see-also"], [501, "see-also"], [505, "see-also"], [506, "see-also"]], "SEH filter expressions": [[519, "seh-filter-expressions"]], "SELECTION OPTIONS": [[472, "selection-options"]], "SGPR Register Set Up Order": [[447, "amdgpu-amdhsa-sgpr-register-set-up-order-table"]], "SHOW": [[498, "show"]], "SHOW COMMAND": [[481, "show-command"]], "SHT_LLVM_ADDRSIG Section (address-significance table)": [[521, "sht-llvm-addrsig-section-address-significance-table"]], "SHT_LLVM_CALL_GRAPH_PROFILE Section (Call Graph Profile)": [[521, "sht-llvm-call-graph-profile-section-call-graph-profile"]], "SHT_LLVM_DEPENDENT_LIBRARIES Section (Dependent Libraries)": [[521, "sht-llvm-dependent-libraries-section-dependent-libraries"]], "SHT_LLVM_SYMPART Section (symbol partition specification)": [[521, "sht-llvm-sympart-section-symbol-partition-specification"]], "SJLJ Intrinsics": [[519, "sjlj-intrinsics"]], "SLAMBench": [[593, "slambench"]], "SMEM": [[0, "smem"], [3, "smem"], [4, "smem"]], "SMRD": [[2, "smrd"]], "SMRD/SMEM": [[447, "smrd-smem"]], "SMRD/SMEM Modifiers": [[445, "smrd-smem-modifiers"]], "SOP1": [[0, "sop1"], [2, "sop1"], [3, "sop1"], [4, "sop1"], [447, "sop1"]], "SOP2": [[0, "sop2"], [2, "sop2"], [3, "sop2"], [4, "sop2"], [447, "sop2"]], "SOPC": [[0, "sopc"], [2, "sopc"], [3, "sopc"], [4, "sopc"], [447, "sopc"]], "SOPK": [[0, "sopk"], [2, "sopk"], [3, "sopk"], [4, "sopk"]], "SOPP": [[0, "sopp"], [2, "sopp"], [3, "sopp"], [4, "sopp"], [447, "sopp"]], "SPARC": [[511, "sparc"]], "SPEC CPU 2017": [[593, "spec-cpu-2017"]], "SPEC OMP2012": [[593, "spec-omp2012"]], "SSA-based Machine Code Optimizations": [[464, "ssa-based-machine-code-optimizations"]], "STRTAB_BLOCK Contents": [[454, "strtab-block-contents"]], "SUBSTITUTIONS": [[472, "substitutions"]], "SUMMARY OUTPUT DEFINITIONS": [[478, "summary-output-definitions"]], "SUPPORTED FORMATS": [[495, "supported-formats"]], "SYNOPSIS": [[468, "synopsis"], [469, "synopsis"], [470, "synopsis"], [472, "synopsis"], [473, "synopsis"], [474, "synopsis"], [475, "synopsis"], [476, "synopsis"], [477, "synopsis"], [478, "synopsis"], [479, "synopsis"], [480, "synopsis"], [481, "synopsis"], [481, "id1"], [481, "id3"], [481, "id6"], [481, "id9"], [482, "synopsis"], [483, "synopsis"], [484, "synopsis"], [485, "synopsis"], [486, "synopsis"], [487, "synopsis"], [488, "synopsis"], [489, "synopsis"], [490, "synopsis"], [491, "synopsis"], [492, "synopsis"], [493, "synopsis"], [494, "synopsis"], [495, "synopsis"], [496, "synopsis"], [498, "synopsis"], [498, "id1"], [498, "id3"], [498, "id6"], [499, "synopsis"], [500, "synopsis"], [501, "synopsis"], [502, "synopsis"], [503, "synopsis"], [504, "synopsis"], [505, "synopsis"], [506, "synopsis"], [507, "synopsis"], [508, "synopsis"]], "S_BLOCK32 (0x1103)": [[575, "s-block32-0x1103"]], "S_BPREL32 (0x110b)": [[575, "s-bprel32-0x110b"]], "S_BUILDINFO (0x114c)": [[575, "s-buildinfo-0x114c"]], "S_CALLEES (0x115a)": [[575, "s-callees-0x115a"]], "S_CALLERS (0x115b)": [[575, "s-callers-0x115b"]], "S_CALLSITEINFO (0x1139)": [[575, "s-callsiteinfo-0x1139"]], "S_COFFGROUP (0x1137)": [[575, "s-coffgroup-0x1137"]], "S_COMPILE2 (0x1116)": [[575, "s-compile2-0x1116"]], "S_COMPILE3 (0x113c)": [[575, "s-compile3-0x113c"]], "S_CONSTANT (0x1107)": [[575, "s-constant-0x1107"]], "S_DEFRANGE (0x113f)": [[575, "s-defrange-0x113f"]], "S_DEFRANGE_FRAMEPOINTER_REL (0x1142)": [[575, "s-defrange-framepointer-rel-0x1142"]], "S_DEFRANGE_FRAMEPOINTER_REL_FULL_SCOPE (0x1144)": [[575, "s-defrange-framepointer-rel-full-scope-0x1144"]], "S_DEFRANGE_REGISTER (0x1141)": [[575, "s-defrange-register-0x1141"]], "S_DEFRANGE_REGISTER_REL (0x1145)": [[575, "s-defrange-register-rel-0x1145"]], "S_DEFRANGE_SUBFIELD (0x1140)": [[575, "s-defrange-subfield-0x1140"]], "S_DEFRANGE_SUBFIELD_REGISTER (0x1143)": [[575, "s-defrange-subfield-register-0x1143"]], "S_END (0x0006)": [[575, "s-end-0x0006"]], "S_ENVBLOCK (0x113d)": [[575, "s-envblock-0x113d"]], "S_EXPORT (0x1138)": [[575, "s-export-0x1138"]], "S_FASTLINK (0x1167)": [[575, "s-fastlink-0x1167"]], "S_FILESTATIC (0x1153)": [[575, "s-filestatic-0x1153"]], "S_FRAMECOOKIE (0x113a)": [[575, "s-framecookie-0x113a"]], "S_FRAMEPROC (0x1012)": [[575, "s-frameproc-0x1012"]], "S_GDATA32": [[575, "s-gdata32"]], "S_GMANDATA (0x111d)": [[575, "s-gmandata-0x111d"]], "S_GPROC32 (0x1110)": [[575, "s-gproc32-0x1110"]], "S_GPROC32_ID (0x1147)": [[575, "s-gproc32-id-0x1147"]], "S_GTHREAD32 (0x1113)": [[575, "s-gthread32-0x1113"]], "S_HEAPALLOCSITE (0x115e)": [[575, "s-heapallocsite-0x115e"]], "S_INLINEES (0x1168)": [[575, "s-inlinees-0x1168"]], "S_INLINESITE (0x114d)": [[575, "s-inlinesite-0x114d"]], "S_INLINESITE_END (0x114e)": [[575, "s-inlinesite-end-0x114e"]], "S_LABEL32 (0x1105)": [[575, "s-label32-0x1105"]], "S_LDATA32 (0x110c)": [[575, "s-ldata32-0x110c"]], "S_LMANDATA (0x111c)": [[575, "s-lmandata-0x111c"]], "S_LOCAL (0x113e)": [[575, "s-local-0x113e"]], "S_LPROC32 (0x110f)": [[575, "s-lproc32-0x110f"]], "S_LPROC32_DPC (0x1155)": [[575, "s-lproc32-dpc-0x1155"]], "S_LPROC32_DPC_ID (0x1156)": [[575, "s-lproc32-dpc-id-0x1156"]], "S_LPROC32_ID (0x1146)": [[575, "s-lproc32-id-0x1146"]], "S_LPROCREF (0x1127)": [[575, "s-lprocref-0x1127"]], "S_LTHREAD32 (0x1112)": [[575, "s-lthread32-0x1112"]], "S_MANCONSTANT (0x112d)": [[575, "s-manconstant-0x112d"]], "S_OBJNAME (0x1101)": [[575, "s-objname-0x1101"]], "S_PROCREF (0x1125)": [[575, "s-procref-0x1125"]], "S_PROC_ID_END (0x114f)": [[575, "s-proc-id-end-0x114f"]], "S_PUB32 (0x110e)": [[575, "s-pub32-0x110e"]], "S_REGISTER (0x1106)": [[575, "s-register-0x1106"]], "S_REGREL32 (0x1111)": [[575, "s-regrel32-0x1111"]], "S_SECTION (0x1136)": [[575, "s-section-0x1136"]], "S_THUNK32 (0x1102)": [[575, "s-thunk32-0x1102"]], "S_TRAMPOLINE (0x112c)": [[575, "s-trampoline-0x112c"]], "S_UDT (0x1108)": [[575, "s-udt-0x1108"]], "S_UNAMESPACE (0x1124)": [[575, "s-unamespace-0x1124"]], "Safepoint Semantics & Verification": [[610, "safepoint-semantics-verification"]], "Safety Guarantees": [[657, "safety-guarantees"], [666, "safety-guarantees"]], "Sample Example": [[556, "sample-example"]], "Saturation Arithmetic Intrinsics": [[559, "saturation-arithmetic-intrinsics"]], "Scalar Operations": [[534, "scalar-operations"]], "ScalarEnumerationTraits": [[631, "scalarenumerationtraits"]], "Scalars": [[631, "scalars"]], "Scatter / Gather": [[625, "scatter-gather"]], "Scope": [[463, "scope"]], "Scripting Overview": [[463, "scripting-overview"]], "Scripts": [[599, "scripts"]], "Scrubbing the Local Monorepo": [[591, "scrubbing-the-local-monorepo"]], "Scudo Hardened Allocator": [[602, null]], "Search Algorithms": [[593, "search-algorithms"]], "SearchableTables": [[613, "searchabletables"]], "Section Contribution Substream": [[577, "section-contribution-substream"]], "Section Header": [[442, "section-header"]], "Section Map Substream": [[577, "section-map-substream"]], "Sections": [[447, "sections"]], "Security Group Members": [[603, "security-group-members"]], "See Also": [[467, "see-also"]], "Segmented Addresses": [[442, "segmented-addresses"]], "Segmented Stacks": [[464, "segmented-stacks"]], "Segmented Stacks in LLVM": [[604, null]], "Selecting an alternative from a set of possibilities": [[509, "selecting-an-alternative-from-a-set-of-possibilities"]], "Selecting \u2018benchmarks\u2019": [[548, "selecting-benchmarks"]], "SelectionDAG Instruction Selection Process": [[464, "selectiondag-instruction-selection-process"]], "SelectionDAG Legalize Phase": [[464, "selectiondag-legalize-phase"]], "SelectionDAG LegalizeTypes Phase": [[464, "selectiondag-legalizetypes-phase"]], "SelectionDAG Optimization Phase: the DAG Combiner": [[464, "selectiondag-optimization-phase-the-dag-combiner"]], "SelectionDAG Rule Imports": [[536, "selectiondag-rule-imports"]], "SelectionDAG Scheduling and Formation Phase": [[464, "selectiondag-scheduling-and-formation-phase"]], "SelectionDAG Select Phase": [[464, "selectiondag-select-phase"]], "Self-contained Headers": [[467, "self-contained-headers"]], "Semantics": [[559, "semantics"]], "Semantics:": [[513, "semantics"], [513, "id5"], [513, "id8"], [513, "id11"], [513, "id14"], [513, "id17"], [513, "id22"], [513, "id26"], [513, "id29"], [513, "id32"], [513, "id39"], [513, "id42"], [513, "id45"], [513, "id49"], [513, "id52"], [559, "id26"], [559, "id30"], [559, "id35"], [559, "id40"], [559, "id46"], [559, "id51"], [559, "id56"], [559, "id61"], [559, "id66"], [559, "id73"], [559, "id77"], [559, "id81"], [559, "id86"], [559, "id91"], [559, "id96"], [559, "id101"], [559, "id106"], [559, "id111"], [559, "id116"], [559, "id121"], [559, "id126"], [559, "id131"], [559, "id136"], [559, "id141"], [559, "id146"], [559, "id151"], [559, "id156"], [559, "id161"], [559, "id166"], [559, "id171"], [559, "id176"], [559, "id181"], [559, "id186"], [559, "id191"], [559, "id196"], [559, "id201"], [559, "id206"], [559, "id211"], [559, "id216"], [559, "id221"], [559, "id226"], [559, "id231"], [559, "id236"], [559, "id241"], [559, "id246"], [559, "id251"], [559, "id256"], [559, "id261"], [559, "id266"], [559, "id271"], [559, "id276"], [559, "id281"], [559, "id286"], [559, "id291"], [559, "id296"], [559, "id301"], [559, "id306"], [559, "id311"], [559, "id316"], [559, "id321"], [559, "id326"], [559, "id331"], [559, "id337"], [559, "id343"], [559, "id350"], [559, "id356"], [559, "id360"], [559, "id364"], [559, "id369"], [559, "id373"], [559, "id377"], [559, "id381"], [559, "id384"], [559, "id387"], [559, "id391"], [559, "id395"], [559, "id398"], [559, "id401"], [559, "id404"], [559, "id407"], [559, "id411"], [559, "id415"], [559, "id418"], [559, "id421"], [559, "id425"], [559, "id429"], [559, "id433"], [559, "id436"], [559, "id439"], [559, "id442"], [559, "id445"], [559, "id450"], [559, "id454"], [559, "id458"], [559, "id462"], [559, "id466"], [559, "id470"], [559, "id474"], [559, "id478"], [559, "id482"], [559, "id486"], [559, "id490"], [559, "id494"], [559, "id498"], [559, "id502"], [559, "id506"], [559, "id510"], [559, "id514"], [559, "id518"], [559, "id522"], [559, "id526"], [559, "id530"], [559, "id534"], [559, "id538"], [559, "id542"], [559, "id546"], [559, "id550"], [559, "id554"], [559, "id558"], [559, "id562"], [559, "id566"], [559, "id570"], [559, "id574"], [559, "id577"], [559, "id580"], [559, "id584"], [559, "id588"], [559, "id592"], [559, "id604"], [559, "id609"], [559, "id614"], [559, "id619"], [559, "id624"], [559, "id629"], [559, "id634"], [559, "id639"], [559, "id644"], [559, "id649"], [559, "id654"], [559, "id659"], [559, "id664"], [559, "id669"], [559, "id674"], [559, "id679"], [559, "id684"], [559, "id689"], [559, "id696"], [559, "id701"], [559, "id705"], [559, "id709"], [559, "id713"], [559, "id770"], [559, "id775"], [559, "id780"], [559, "id784"], [559, "id788"], [559, "id793"], [559, "id798"], [559, "id803"], [559, "id808"], [559, "id813"], [559, "id818"], [559, "id823"], [559, "id828"], [559, "id833"], [559, "id838"], [559, "id843"], [559, "id848"], [559, "id853"], [559, "id858"], [559, "id862"], [559, "id866"], [559, "id870"], [559, "id874"], [559, "id878"], [559, "id882"], [559, "id886"], [559, "id890"], [559, "id894"], [559, "id898"], [559, "id902"], [559, "id906"], [559, "id910"], [559, "id914"], [559, "id918"], [559, "id922"], [559, "id926"], [559, "id930"], [559, "id934"], [559, "id938"], [559, "id942"], [559, "id946"], [559, "id950"], [559, "id954"], [559, "id958"], [559, "id962"], [559, "id966"], [559, "id970"], [559, "id974"], [559, "id978"], [559, "id982"], [559, "id986"], [559, "id990"], [559, "id994"], [559, "id998"], [559, "id1002"], [559, "id1006"], [559, "id1010"], [559, "id1014"], [559, "id1018"], [559, "id1022"], [559, "id1026"], [559, "id1030"], [559, "id1034"], [559, "id1038"], [559, "id1042"], [559, "id1046"], [559, "id1050"], [559, "id1054"], [559, "id1058"], [559, "id1061"], [559, "id1065"], [559, "id1069"], [559, "id1073"], [559, "id1079"], [559, "id1083"], [559, "id1087"], [559, "id1091"], [559, "id1095"], [559, "id1099"], [559, "id1103"], [559, "id1107"], [559, "id1120"], [559, "id1124"], [559, "id1130"], [559, "id1137"], [559, "id1140"], [559, "id1144"], [559, "id1147"], [559, "id1151"], [559, "id1156"], [559, "id1161"], [559, "id1202"], [559, "id1206"], [559, "id1210"], [572, "semantics"], [572, "id5"], [608, "semantics"], [608, "id4"], [610, "semantics"], [610, "id4"], [610, "id8"]], "Sending patches": [[529, "sending-patches"]], "Sentinels": [[589, "sentinels"]], "Sequence": [[631, "sequence"]], "Sequential Containers (std::vector, std::list, etc)": [[589, "sequential-containers-std-vector-std-list-etc"]], "SequentiallyConsistent": [[451, "sequentiallyconsistent"]], "Serialization modes": [[600, "serialization-modes"]], "Serialized remarks": [[600, "serialized-remarks"]], "Set-Like Containers (std::set, SmallSet, SetVector, etc)": [[589, "set-like-containers-std-set-smallset-setvector-etc"]], "Setjmp/Longjmp Exception Handling": [[519, "setjmp-longjmp-exception-handling"]], "Setting a breakpoint in your pass": [[627, "setting-a-breakpoint-in-your-pass"]], "Setting up the build environment": [[627, "setting-up-the-build-environment"]], "Shared Library": [[586, "shared-library"]], "Sibling call optimization": [[464, "sibling-call-optimization"]], "Sign up": [[588, "sign-up"]], "Signed VBRs": [[454, "signed-vbrs"]], "Simple Constants": [[559, "simple-constants"]], "Simple formatting": [[589, "simple-formatting"]], "Simplifications for Non-Relocating GCs": [[610, "simplifications-for-non-relocating-gcs"]], "Simplifying MIR files": [[565, "simplifying-mir-files"]], "Single Value Types": [[559, "single-value-types"]], "SmallBitVector": [[589, "smallbitvector"]], "Software": [[529, "software"], [531, "software"]], "Source Code": [[522, "source-code"]], "Source Code Formatting": [[467, "source-code-formatting"]], "Source Code Width": [[467, "source-code-width"]], "Source Filename": [[559, "source-filename"]], "Source Languages": [[442, "source-languages"], [447, "source-languages"], [522, "source-languages"]], "Source Level Debugging with LLVM": [[605, null]], "Source Locations": [[656, "source-locations"]], "Source Range": [[514, "id9"]], "Source Range:": [[514, "source-range"]], "Source Tree Layout": [[590, "source-tree-layout"]], "Spaces Before Parentheses": [[467, "spaces-before-parentheses"]], "Spanning Tree": [[593, "spanning-tree"]], "SparseBitVector": [[589, "sparsebitvector"]], "Special Case File": [[628, "special-case-file"]], "Special Notes for Library-only Distributions": [[460, "special-notes-for-library-only-distributions"]], "Special Value Operations": [[442, "special-value-operations"]], "Specialised Arithmetic Intrinsics": [[559, "specialised-arithmetic-intrinsics"]], "Specialized Metadata Nodes": [[559, "specialized-metadata-nodes"]], "Specifying GC code generation: gc \"...\"": [[526, "specifying-gc-code-generation-gc"]], "Specifying interactions between passes": [[627, "specifying-interactions-between-passes"]], "Specifying positional options with hyphens": [[509, "specifying-positional-options-with-hyphens"]], "Speculative Load Hardening": [[606, null]], "Sphinx Quickstart Template": [[607, null]], "Splitting Requests and Conditional Acceptance": [[466, "splitting-requests-and-conditional-acceptance"]], "Stable build": [[518, "stable-build"]], "Stack Map Format": [[608, "stack-map-format"], [610, "stack-map-format"]], "Stack Map Intrinsics": [[559, "stack-map-intrinsics"]], "Stack Map Section": [[608, "stack-map-section"]], "Stack Map Usage": [[608, "stack-map-usage"]], "Stack Operations": [[442, "stack-operations"]], "Stack Pointer": [[447, "stack-pointer"]], "Stack Probe Emission": [[521, "stack-probe-emission"], [521, "id4"]], "Stack Safety Analysis": [[609, null]], "Stack instrumentation": [[569, "stack-instrumentation"]], "Stack maps and patch points in LLVM": [[608, null]], "Standard Blocks": [[454, "standard-block"]], "Standard C Library Intrinsics": [[559, "standard-c-library-intrinsics"]], "Standard Content Descriptions": [[442, "standard-content-descriptions"]], "Standard Hash Tables": [[605, "standard-hash-tables"]], "Standard library support": [[510, "standard-library-support"]], "Startup initialization": [[561, "startup-initialization"]], "Status": [[588, "status"], [610, "status"]], "Stay Informed": [[517, "stay-informed"]], "Step #1 : Before The Move": [[591, "step-1-before-the-move"]], "Step #2 : Git Move": [[591, "step-2-git-move"]], "Step #3: Write Access Move": [[591, "step-3-write-access-move"]], "Step #4 : Post Move": [[591, "step-4-post-move"]], "Steps To Add Builder To LLVM Buildbot": [[546, "steps-to-add-builder-to-llvm-buildbot"]], "Straw Man Migration Plan": [[591, "straw-man-migration-plan"]], "Stream Header": [[577, "stream-header"], [582, "stream-header"], [584, "stream-header"]], "Stream Layout": [[580, "stream-layout"]], "Streams": [[585, "streams"]], "String-like containers": [[589, "string-like-containers"]], "StringError": [[589, "stringerror"]], "Strings": [[514, "strings"]], "Structure": [[619, "structure"]], "Structure Type": [[559, "structure-type"]], "Structure Types": [[559, "structure-types"]], "Structure of Call Frame Information": [[442, "structure-of-call-frame-information"]], "Structured Fuzzing of LLVM IR": [[525, "structured-fuzzing-of-llvm-ir"]], "Structured Fuzzing using libprotobuf-mutator": [[525, "structured-fuzzing-using-libprotobuf-mutator"]], "Style Issues": [[467, "style-issues"]], "Sub-Array of Regions": [[514, "sub-array-of-regions"]], "Subcommands": [[497, "subcommands"]], "Subregister Indices": [[565, "subregister-indices"]], "Substitutions": [[621, "substitutions"]], "Substreams": [[577, "substreams"]], "Subtarget": [[613, "subtarget"]], "Subtarget Support": [[626, "subtarget-support"]], "Successors": [[565, "successors"]], "Summary": [[453, "summary"], [497, "summary"], [497, "id1"], [497, "id3"], [497, "id6"], [497, "id8"], [497, "id10"], [527, "summary"]], "Support Library": [[611, null]], "Support for alternate stackmap formats": [[610, "support-for-alternate-stackmap-formats"]], "Supported Architectures": [[608, "supported-architectures"], [610, "supported-architectures"]], "Supported Constraint Code List": [[559, "supported-constraint-code-list"]], "Supported Instructions": [[456, "supported-instructions"]], "Supporting Custom Compilers": [[573, "supporting-custom-compilers"]], "SwitchInst": [[456, "switchinst"]], "Switched-Resume Lowering": [[513, "switched-resume-lowering"]], "Symbol Options": [[497, "symbol-options"]], "Symbol Type Options": [[497, "symbol-type-options"]], "Symbols": [[446, "symbols"], [447, "symbols"]], "Symbols which can go in either/both of the module info stream & global stream": [[575, "symbols-which-can-go-in-either-both-of-the-module-info-stream-global-stream"]], "Synopsis": [[497, "synopsis"]], "Syntax": [[444, "syntax"], [444, "id1"], [444, "id2"], [559, "id631"], [559, "id636"], [559, "id641"], [559, "id646"], [559, "id651"], [559, "id656"], [559, "id661"], [559, "id666"], [559, "id671"], [559, "id676"], [559, "id681"], [559, "id686"], [616, "syntax"], [617, "syntax"]], "Syntax of AMDGPU Instruction Modifiers": [[445, null]], "Syntax of AMDGPU Instruction Operands": [[446, null]], "Syntax of Core GFX10 Instructions": [[0, null]], "Syntax of Core GFX7 Instructions": [[2, null]], "Syntax of Core GFX8 Instructions": [[3, null]], "Syntax of Core GFX9 Instructions": [[4, null]], "Syntax of Expressions": [[446, "syntax-of-expressions"]], "Syntax of gfx1011 and gfx1012 Instructions": [[1, null]], "Syntax of gfx900, gfx902 and gfx909 Instructions": [[5, null]], "Syntax of gfx904 Instructions": [[6, null]], "Syntax of gfx906 Instructions": [[7, null]], "Syntax of gfx908 Instructions": [[8, null]], "Syntax:": [[513, "syntax"], [559, "syntax"], [559, "id27"], [559, "id32"], [559, "id37"], [559, "id43"], [559, "id48"], [559, "id53"], [559, "id58"], [559, "id63"], [559, "id68"], [559, "id75"], [559, "id78"], [559, "id83"], [559, "id88"], [559, "id93"], [559, "id98"], [559, "id103"], [559, "id108"], [559, "id113"], [559, "id118"], [559, "id123"], [559, "id128"], [559, "id133"], [559, "id138"], [559, "id143"], [559, "id148"], [559, "id153"], [559, "id158"], [559, "id163"], [559, "id168"], [559, "id173"], [559, "id178"], [559, "id183"], [559, "id188"], [559, "id193"], [559, "id198"], [559, "id203"], [559, "id208"], [559, "id213"], [559, "id218"], [559, "id223"], [559, "id228"], [559, "id233"], [559, "id238"], [559, "id243"], [559, "id248"], [559, "id253"], [559, "id258"], [559, "id263"], [559, "id268"], [559, "id273"], [559, "id278"], [559, "id283"], [559, "id288"], [559, "id293"], [559, "id298"], [559, "id303"], [559, "id308"], [559, "id313"], [559, "id318"], [559, "id323"], [559, "id328"], [559, "id333"], [559, "id339"], [559, "id346"], [559, "id353"], [559, "id357"], [559, "id361"], [559, "id366"], [559, "id370"], [559, "id374"], [559, "id378"], [559, "id382"], [559, "id385"], [559, "id388"], [559, "id392"], [559, "id396"], [559, "id399"], [559, "id402"], [559, "id405"], [559, "id408"], [559, "id412"], [559, "id416"], [559, "id419"], [559, "id422"], [559, "id426"], [559, "id430"], [559, "id434"], [559, "id437"], [559, "id440"], [559, "id443"], [559, "id447"], [559, "id451"], [559, "id455"], [559, "id459"], [559, "id463"], [559, "id467"], [559, "id471"], [559, "id475"], [559, "id479"], [559, "id483"], [559, "id487"], [559, "id491"], [559, "id495"], [559, "id499"], [559, "id503"], [559, "id507"], [559, "id511"], [559, "id515"], [559, "id519"], [559, "id523"], [559, "id527"], [559, "id531"], [559, "id535"], [559, "id539"], [559, "id543"], [559, "id547"], [559, "id551"], [559, "id555"], [559, "id559"], [559, "id563"], [559, "id567"], [559, "id571"], [559, "id575"], [559, "id578"], [559, "id581"], [559, "id585"], [559, "id589"], [559, "id593"], [559, "id597"], [559, "id601"], [559, "id606"], [559, "id611"], [559, "id616"], [559, "id621"], [559, "id626"], [559, "id691"], [559, "id693"], [559, "id698"], [559, "id702"], [559, "id706"], [559, "id710"], [559, "id714"], [559, "id717"], [559, "id721"], [559, "id724"], [559, "id728"], [559, "id731"], [559, "id734"], [559, "id737"], [559, "id740"], [559, "id743"], [559, "id746"], [559, "id749"], [559, "id752"], [559, "id755"], [559, "id758"], [559, "id761"], [559, "id764"], [559, "id767"], [559, "id772"], [559, "id777"], [559, "id781"], [559, "id785"], [559, "id790"], [559, "id795"], [559, "id800"], [559, "id805"], [559, "id810"], [559, "id815"], [559, "id820"], [559, "id825"], [559, "id830"], [559, "id835"], [559, "id840"], [559, "id845"], [559, "id850"], [559, "id855"], [559, "id859"], [559, "id863"], [559, "id867"], [559, "id871"], [559, "id875"], [559, "id879"], [559, "id883"], [559, "id887"], [559, "id891"], [559, "id895"], [559, "id899"], [559, "id903"], [559, "id907"], [559, "id911"], [559, "id915"], [559, "id919"], [559, "id923"], [559, "id927"], [559, "id931"], [559, "id935"], [559, "id939"], [559, "id943"], [559, "id947"], [559, "id951"], [559, "id955"], [559, "id959"], [559, "id963"], [559, "id967"], [559, "id971"], [559, "id975"], [559, "id979"], [559, "id983"], [559, "id987"], [559, "id991"], [559, "id995"], [559, "id999"], [559, "id1003"], [559, "id1007"], [559, "id1011"], [559, "id1015"], [559, "id1019"], [559, "id1023"], [559, "id1027"], [559, "id1031"], [559, "id1035"], [559, "id1039"], [559, "id1043"], [559, "id1047"], [559, "id1051"], [559, "id1055"], [559, "id1059"], [559, "id1062"], [559, "id1066"], [559, "id1070"], [559, "id1074"], [559, "id1076"], [559, "id1080"], [559, "id1084"], [559, "id1088"], [559, "id1092"], [559, "id1096"], [559, "id1100"], [559, "id1104"], [559, "id1108"], [559, "id1111"], [559, "id1114"], [559, "id1117"], [559, "id1121"], [559, "id1125"], [559, "id1127"], [559, "id1132"], [559, "id1134"], [559, "id1138"], [559, "id1141"], [559, "id1145"], [559, "id1148"], [559, "id1153"], [559, "id1158"], [559, "id1163"], [559, "id1165"], [559, "id1167"], [559, "id1169"], [559, "id1171"], [559, "id1173"], [559, "id1175"], [559, "id1177"], [559, "id1179"], [559, "id1181"], [559, "id1183"], [559, "id1185"], [559, "id1187"], [559, "id1189"], [559, "id1191"], [559, "id1193"], [559, "id1195"], [559, "id1197"], [559, "id1199"], [559, "id1203"], [559, "id1207"], [572, "syntax"], [572, "id3"], [572, "id6"], [572, "id8"], [608, "syntax"], [608, "id1"], [610, "syntax"], [610, "id1"], [610, "id5"]], "System Library": [[612, null]], "System VGPR Work-Item ID Enumeration Values": [[447, "amdgpu-amdhsa-system-vgpr-work-item-id-enumeration-values-table"]], "SystemZ": [[511, "systemz"]], "T": [[560, "t"]], "TARGET OPTIONS": [[474, "target-options"]], "TEST DISCOVERY": [[472, "test-discovery"], [472, "id7"]], "TEST RUN OUTPUT FORMAT": [[472, "test-run-output-format"]], "TEST STATUS RESULTS": [[472, "test-status-results"]], "TEST SUITES": [[472, "test-suites"]], "TPI vs IPI Stream": [[584, "tpi-vs-ipi-stream"]], "TSCWrap Records": [[630, "tscwrap-records"]], "TUTORIAL": [[468, "tutorial"]], "TVM": [[593, "tvm"]], "TYPE_BLOCK Contents": [[454, "type-block-contents"]], "TYPE_CODE_ARRAY Record": [[454, "type-code-array-record"]], "TYPE_CODE_BFLOAT Record": [[454, "type-code-bfloat-record"]], "TYPE_CODE_DOUBLE Record": [[454, "type-code-double-record"]], "TYPE_CODE_FLOAT Record": [[454, "type-code-float-record"]], "TYPE_CODE_FP128 Record": [[454, "type-code-fp128-record"]], "TYPE_CODE_FUNCTION Record": [[454, "type-code-function-record"]], "TYPE_CODE_FUNCTION_OLD Record": [[454, "type-code-function-old-record"]], "TYPE_CODE_HALF Record": [[454, "type-code-half-record"]], "TYPE_CODE_INTEGER Record": [[454, "type-code-integer-record"]], "TYPE_CODE_LABEL Record": [[454, "type-code-label-record"]], "TYPE_CODE_METADATA Record": [[454, "type-code-metadata-record"]], "TYPE_CODE_NUMENTRY Record": [[454, "type-code-numentry-record"]], "TYPE_CODE_OPAQUE Record": [[454, "type-code-opaque-record"]], "TYPE_CODE_POINTER Record": [[454, "type-code-pointer-record"]], "TYPE_CODE_PPC_FP128 Record": [[454, "type-code-ppc-fp128-record"]], "TYPE_CODE_STRUCT_ANON Record": [[454, "type-code-struct-anon-record"]], "TYPE_CODE_STRUCT_NAME Record": [[454, "type-code-struct-name-record"]], "TYPE_CODE_STRUCT_NAMED Record": [[454, "type-code-struct-named-record"]], "TYPE_CODE_VECTOR Record": [[454, "type-code-vector-record"]], "TYPE_CODE_VOID Record": [[454, "type-code-void-record"]], "TYPE_CODE_X86_FP80 Record": [[454, "type-code-x86-fp80-record"]], "TYPE_CODE_X86_MMX Record": [[454, "type-code-x86-mmx-record"]], "Table of Contents": [[592, "table-of-contents"], [595, "table-of-contents"]], "TableGen": [[617, null]], "TableGen BackEnds": [[613, null]], "TableGen Deficiencies": [[614, null], [617, "tablegen-deficiencies"]], "TableGen Fundamentals": [[618, null]], "TableGen Language Introduction": [[615, null]], "TableGen Language Reference": [[616, null]], "TableGen backends": [[617, "tablegen-backends"]], "TableGen comments": [[615, "tablegen-comments"]], "TableGen primitives": [[615, "tablegen-primitives"]], "TableGen syntax": [[615, "tablegen-syntax"]], "TableGen values and expressions": [[615, "tablegen-values-and-expressions"]], "Tag the LLVM Final Release": [[551, "tag-the-llvm-final-release"]], "Tag:": [[514, "tag"]], "Tagging the LLVM Release Candidates": [[551, "tagging-the-llvm-release-candidates"]], "Tags": [[631, "tags"]], "Tail Calls": [[464, "tail-calls"]], "Tail call optimization": [[464, "tail-call-optimization"]], "Target Feature Matrix": [[464, "target-feature-matrix"]], "Target Features": [[447, "target-features"]], "Target Independence": [[657, "target-independence"], [666, "target-independence"]], "Target Intrinsics": [[535, "target-intrinsics"], [572, "target-intrinsics"]], "Target JIT Info": [[626, "target-jit-info"]], "Target Machine": [[626, "target-machine"], [655, "target-machine"]], "Target Registration": [[626, "target-registration"]], "Target Specific Behaviour": [[521, "target-specific-behaviour"]], "Target Triple": [[559, "target-triple"]], "Target Triples": [[447, "target-triples"]], "Target description classes": [[464, "target-description-classes"]], "Target-dependent Index Operands": [[565, "target-dependent-index-operands"]], "Target-independent code generation algorithms": [[464, "target-independent-code-generation-algorithms"]], "Target-specific Implementation Notes": [[464, "target-specific-implementation-notes"]], "Tech talks": [[568, "tech-talks"]], "Tempting optimizations that break the security model": [[606, "tempting-optimizations-that-break-the-security-model"]], "Terminator Instructions": [[559, "terminator-instructions"]], "Terminology and Notation": [[529, "terminology-and-notation"]], "Test Cases": [[517, "test-cases"]], "Test Suite": [[599, "test-suite"]], "Test-Suite Extensions": [[593, null]], "Testing": [[539, "testing"], [609, "testing"]], "Testing Addresses For Type Membership": [[623, "testing-addresses-for-type-membership"]], "Testing Individual Code Generation Passes": [[565, "testing-individual-code-generation-passes"]], "Testing and Debugging": [[597, "testing-and-debugging"]], "Testing compiler-rt builtins using qemu-arm": [[549, "testing-compiler-rt-builtins-using-qemu-arm"]], "Text Formatting": [[607, "text-formatting"]], "The -aa-eval pass": [[450, "the-aa-eval-pass"]], "The -adce pass": [[450, "the-adce-pass"]], "The -argpromotion pass": [[450, "the-argpromotion-pass"]], "The -basic-aa pass": [[450, "the-basic-aa-pass"]], "The -ds-aa pass": [[450, "the-ds-aa-pass"]], "The -globalsmodref-aa pass": [[450, "the-globalsmodref-aa-pass"]], "The -gvn, -memcpyopt, and -dse passes": [[450, "the-gvn-memcpyopt-and-dse-passes"]], "The -licm pass": [[450, "the-licm-pass"]], "The -no-aa pass": [[450, "the-no-aa-pass"]], "The -print-alias-sets pass": [[450, "the-print-alias-sets-pass"]], "The -scev-aa pass": [[450, "the-scev-aa-pass"]], "The -steens-aa pass": [[450, "the-steens-aa-pass"]], "The AMDGPU backend": [[464, "the-amdgpu-backend"]], "The Abstract Syntax Tree (AST)": [[649, "the-abstract-syntax-tree-ast"], [660, "the-abstract-syntax-tree-ast"]], "The AliasSetTracker implementation": [[450, "the-aliassettracker-implementation"]], "The AnalysisUsage::addPreserved<> method": [[627, "the-analysisusage-addpreserved-method"]], "The AnalysisUsage::addRequired<> and AnalysisUsage::addRequiredTransitive<> methods": [[627, "the-analysisusage-addrequired-and-analysisusage-addrequiredtransitive-methods"]], "The Argument class": [[589, "the-argument-class"]], "The Basic Language": [[659, "the-basic-language"]], "The BasicBlock class": [[589, "the-basicblock-class"]], "The Basics": [[524, "the-basics"]], "The C++ Standard Template Library": [[589, "the-c-standard-template-library"]], "The CallGraphSCCPass class": [[627, "the-callgraphsccpass-class"]], "The CodeView Symbol Substream": [[580, "the-codeview-symbol-substream"]], "The Constant class and subclasses": [[589, "the-constant-class-and-subclasses"]], "The Contract of classof": [[552, "the-contract-of-classof"]], "The Core LLVM Class Hierarchy Reference": [[589, "the-core-llvm-class-hierarchy-reference"]], "The CoreCLR GC": [[526, "the-coreclr-gc"]], "The DataLayout class": [[464, "the-datalayout-class"]], "The Driver": [[649, "the-driver"], [660, "the-driver"]], "The Fault Map Section": [[523, "the-fault-map-section"]], "The FileCheck -check-prefix option": [[468, "the-filecheck-check-prefix-option"]], "The Free Block Map": [[581, "the-free-block-map"]], "The Function class": [[589, "the-function-class"]], "The FunctionPass class": [[627, "the-functionpass-class"]], "The GlobalValue class": [[589, "the-globalvalue-class"]], "The GlobalVariable class": [[589, "the-globalvariable-class"]], "The High-Level Issues": [[467, "the-high-level-issues"]], "The ImmutablePass class": [[627, "the-immutablepass-class"]], "The ImplicitNullChecks pass": [[523, "the-implicitnullchecks-pass"]], "The Instruction class": [[589, "the-instruction-class"]], "The Kaleidoscope Language": [[648, "the-kaleidoscope-language"]], "The Kernel": [[572, "the-kernel"]], "The LLVM Lexicon": [[560, null]], "The LLVM Target-Independent Code Generator": [[464, null]], "The LLVM gold plugin": [[544, null]], "The LLVM_DEBUG() macro and -debug option": [[589, "the-llvm-debug-macro-and-debug-option"]], "The Lexer": [[648, "the-lexer"], [659, "the-lexer"]], "The Line Number Program Header": [[442, "the-line-number-program-header"]], "The Location of LLVM Object Files": [[529, "the-location-of-llvm-object-files"]], "The Loop Vectorizer": [[625, "the-loop-vectorizer"]], "The LoopPass class": [[627, "the-looppass-class"]], "The Low-Level Issues": [[467, "the-low-level-issues"]], "The MCContext class": [[464, "the-mccontext-class"]], "The MCInst class": [[464, "the-mcinst-class"]], "The MCSection class": [[464, "the-mcsection-class"]], "The MCStreamer API": [[464, "the-mcstreamer-api"]], "The MCSymbol class": [[464, "the-mcsymbol-class"]], "The MSF Container": [[585, "the-msf-container"]], "The MSF File Format": [[581, null]], "The MachineBasicBlock class": [[464, "the-machinebasicblock-class"]], "The MachineFunction class": [[464, "the-machinefunction-class"]], "The MachineFunctionPass class": [[627, "the-machinefunctionpass-class"]], "The MachineInstr class": [[464, "the-machineinstr-class"]], "The Module Information Stream": [[580, null]], "The Module class": [[589, "the-module-class"]], "The ModulePass class": [[627, "the-modulepass-class"]], "The NVPTX backend": [[464, "the-nvptx-backend"]], "The Often Misunderstood GEP Instruction": [[527, null]], "The PDB DBI (Debug Info) Stream": [[577, null]], "The PDB File Format": [[585, null]], "The PDB Global Symbol Stream": [[578, null]], "The PDB Info Stream (aka the PDB Stream)": [[582, null]], "The PDB Public Symbol Stream": [[583, null]], "The PDB Serialized Hash Table Format": [[579, null]], "The PDB TPI and IPI Streams": [[584, null]], "The Planning Process and VPlan Roadmap": [[596, "the-planning-process-and-vplan-roadmap"]], "The PowerPC backend": [[464, "the-powerpc-backend"]], "The RegionPass class": [[627, "the-regionpass-class"]], "The SLP Vectorizer": [[625, "the-slp-vectorizer"]], "The SSA deconstruction phase": [[464, "the-ssa-deconstruction-phase"]], "The SelectionDAG Legalize Phase": [[626, "the-selectiondag-legalize-phase"]], "The Shadow Stack GC": [[526, "the-shadow-stack-gc"]], "The Statepoint Example GC": [[526, "the-statepoint-example-gc"]], "The Statistic class & -stats option": [[589, "the-statistic-class-stats-option"]], "The Stream Directory": [[581, "the-stream-directory"]], "The StringRef class": [[589, "the-stringref-class"]], "The Superblock": [[581, "the-superblock"]], "The TableGen program": [[617, "the-tablegen-program"]], "The TableGen type system": [[615, "the-tablegen-type-system"]], "The TargetFrameLowering class": [[464, "the-targetframelowering-class"]], "The TargetInstrInfo class": [[464, "the-targetinstrinfo-class"]], "The TargetJITInfo class": [[464, "the-targetjitinfo-class"]], "The TargetLowering class": [[464, "the-targetlowering-class"]], "The TargetMachine class": [[464, "the-targetmachine-class"]], "The TargetRegisterInfo class": [[464, "the-targetregisterinfo-class"]], "The TargetSubtarget class": [[464, "the-targetsubtarget-class"]], "The Twine class": [[589, "the-twine-class"]], "The Type class and Derived Types": [[589, "the-type-class-and-derived-types"]], "The User and owned Use classes\u2019 memory layout": [[589, "the-user-and-owned-use-classes-memory-layout"]], "The User class": [[589, "the-user-class"]], "The Value class": [[589, "the-value-class"]], "The ValueSymbolTable class": [[589, "the-valuesymboltable-class"]], "The X86 backend": [[464, "the-x86-backend"]], "The XRay stack tool": [[629, "the-xray-stack-tool"]], "The addEscapingUse method": [[450, "the-addescapinguse-method"]], "The alias method": [[450, "the-alias-method"]], "The cl::ConsumeAfter modifier": [[509, "the-cl-consumeafter-modifier"]], "The cl::OptionCategory class": [[509, "the-cl-optioncategory-class"]], "The cl::ParseCommandLineOptions function": [[509, "the-cl-parsecommandlineoptions-function"]], "The cl::ParseEnvironmentOptions function": [[509, "the-cl-parseenvironmentoptions-function"]], "The cl::SetVersionPrinter function": [[509, "the-cl-setversionprinter-function"]], "The cl::alias class": [[509, "the-cl-alias-class"]], "The cl::bits class": [[509, "the-cl-bits-class"]], "The cl::extrahelp class": [[509, "the-cl-extrahelp-class"]], "The cl::getRegisteredOptions function": [[509, "the-cl-getregisteredoptions-function"]], "The cl::list class": [[509, "the-cl-list-class"]], "The cl::opt class": [[509, "the-cl-opt-class"]], "The cmake try compile stage fails": [[549, "the-cmake-try-compile-stage-fails"]], "The copyValue method": [[450, "the-copyvalue-method"]], "The debugify utility": [[554, "the-debugify-utility"]], "The deleteValue method": [[450, "the-deletevalue-method"]], "The doFinalization() method": [[627, "the-dofinalization-method"], [627, "id2"]], "The doFinalization(CallGraph &) method": [[627, "the-dofinalization-callgraph-method"]], "The doFinalization(Module &) method": [[627, "the-dofinalization-module-method"]], "The doInitialization(CallGraph &) method": [[627, "the-doinitialization-callgraph-method"]], "The doInitialization(Loop *, LPPassManager &) method": [[627, "the-doinitialization-loop-lppassmanager-method"]], "The doInitialization(Module &) method": [[627, "the-doinitialization-module-method"]], "The doInitialization(Region *, RGPassManager &) method": [[627, "the-doinitialization-region-rgpassmanager-method"]], "The doesNotAccessMemory and  onlyReadsMemory methods": [[450, "the-doesnotaccessmemory-and-onlyreadsmemory-methods"]], "The extended Berkeley Packet Filter (eBPF) backend": [[464, "the-extended-berkeley-packet-filter-ebpf-backend"]], "The flag registers again make everything hard": [[606, "the-flag-registers-again-make-everything-hard"]], "The function_ref class template": [[589, "the-function-ref-class-template"]], "The getAnalysis<> and getAnalysisIfAvailable<> methods": [[627, "the-getanalysis-and-getanalysisifavailable-methods"]], "The getAnalysisUsage method": [[627, "the-getanalysisusage-method"]], "The getModRefInfo methods": [[450, "the-getmodrefinfo-methods"]], "The high-level design of the code generator": [[464, "the-high-level-design-of-the-code-generator"]], "The isa<>, cast<> and dyn_cast<> templates": [[589, "the-isa-cast-and-dyn-cast-templates"]], "The llvm-xray Tool": [[629, "the-llvm-xray-tool"]], "The pointsToConstantMemory method": [[450, "the-pointstoconstantmemory-method"]], "The print method": [[627, "the-print-method"]], "The releaseMemory method": [[627, "the-releasememory-method"]], "The remark container": [[600, "the-remark-container"]], "The replaceWithNewValue method": [[450, "the-replacewithnewvalue-method"]], "The runOnFunction method": [[627, "the-runonfunction-method"]], "The runOnLoop method": [[627, "the-runonloop-method"]], "The runOnMachineFunction(MachineFunction &MF) method": [[627, "the-runonmachinefunction-machinefunction-mf-method"]], "The runOnModule method": [[627, "the-runonmodule-method"]], "The runOnRegion method": [[627, "the-runonregion-method"]], "The runOnSCC method": [[627, "the-runonscc-method"]], "The walker": [[570, "the-walker"]], "The \u2018Erlang\u2019 and \u2018Ocaml\u2019 GCs": [[526, "the-erlang-and-ocaml-gcs"]], "The \u2018llvm.compiler.used\u2019 Global Variable": [[559, "the-llvm-compiler-used-global-variable"]], "The \u2018llvm.global_ctors\u2019 Global Variable": [[559, "the-llvm-global-ctors-global-variable"]], "The \u2018llvm.global_dtors\u2019 Global Variable": [[559, "the-llvm-global-dtors-global-variable"]], "The \u2018llvm.used\u2019 Global Variable": [[559, "the-llvm-used-global-variable"]], "The \u201cCHECK-COUNT:\u201d directive": [[468, "the-check-count-directive"]], "The \u201cCHECK-DAG:\u201d directive": [[468, "the-check-dag-directive"]], "The \u201cCHECK-EMPTY:\u201d directive": [[468, "the-check-empty-directive"]], "The \u201cCHECK-LABEL:\u201d directive": [[468, "the-check-label-directive"]], "The \u201cCHECK-NEXT:\u201d directive": [[468, "the-check-next-directive"]], "The \u201cCHECK-NOT:\u201d directive": [[468, "the-check-not-directive"]], "The \u201cCHECK-SAME:\u201d directive": [[468, "the-check-same-directive"]], "The \u201cCOM:\u201d directive": [[468, "the-com-directive"]], "The \u201cMC\u201d Layer": [[464, "the-mc-layer"]], "ThinLTO Summary": [[559, "thinlto-summary"]], "Thread Local Storage Models": [[559, "thread-local-storage-models"]], "Threads and LLVM": [[589, "threads-and-llvm"]], "Threads and the JIT": [[589, "threads-and-the-jit"]], "Throw": [[519, "throw"]], "Throw Filters": [[519, "throw-filters"]], "Timeline View": [[493, "timeline-view"]], "Tips and Tricks": [[657, "tips-and-tricks"], [666, "tips-and-tricks"]], "Todo": [[447, "id11"], [447, "id12"], [447, "id13"], [447, "id18"], [447, "id29"], [447, "id34"], [447, "id35"], [447, "id37"], [447, "id41"], [447, "id42"], [447, "id43"], [447, "id44"], [447, "id46"], [447, "id47"], [447, "id48"], [447, "id59"], [447, "id60"], [447, "id61"], [447, "id62"], [447, "id63"], [447, "id64"], [447, "id65"], [447, "id66"], [447, "id67"], [447, "id68"], [447, "id75"], [462, "id3"], [509, "id8"], [509, "id9"], [552, "id1"], [650, "id1"]], "Token Type": [[559, "token-type"]], "Too Long; Didn\u2019t Read": [[594, "too-long-didn-t-read"]], "Top Level APIs": [[573, "top-level-apis"]], "Top-Level Classes and Functions": [[509, "top-level-classes-and-functions"]], "Top-Level let": [[616, "top-level-let"]], "Toy example": [[561, "toy-example"]], "Trace Analysis Tools": [[628, "trace-analysis-tools"], [628, "id1"]], "Tracing CMP instructions": [[561, "tracing-cmp-instructions"]], "Trampoline Intrinsics": [[559, "trampoline-intrinsics"]], "Transform Passes": [[587, "transform-passes"]], "Transformation Metadata Structure": [[622, "transformation-metadata-structure"]], "Transition Options": [[594, "transition-options"]], "Transitioning from ORCv1 to ORCv2": [[573, "transitioning-from-orcv1-to-orcv2"]], "Translating Function Calls": [[535, "translating-function-calls"]], "Translation of Constants": [[535, "translation-of-constants"]], "Transparency Report": [[603, "transparency-report"]], "Trap Handler ABI": [[447, "trap-handler-abi"], [447, "id69"]], "Treat Compiler Warnings Like Errors": [[467, "treat-compiler-warnings-like-errors"]], "Triaging bugs": [[457, "triaging-bugs"]], "Triples": [[572, "triples"]], "Trivial Constant Folding": [[651, "trivial-constant-folding"], [662, "trivial-constant-folding"]], "Trophies": [[561, "trophies"]], "Troubleshooting": [[549, "troubleshooting"]], "Try/Catch": [[519, "try-catch"]], "Tuning/Configuration Options": [[473, "tuning-configuration-options"]], "Turn Predicate Loops into Predicate Functions": [[467, "turn-predicate-loops-into-predicate-functions"]], "Turning an iterator into a class pointer (and vice-versa)": [[589, "turning-an-iterator-into-a-class-pointer-and-vice-versa"]], "Tutorial Conclusion": [[657, "tutorial-conclusion"], [666, "tutorial-conclusion"]], "Tutorial Introduction": [[659, "tutorial-introduction"]], "Tutorial: A Simple Compute Kernel": [[572, "tutorial-a-simple-compute-kernel"]], "Tutorial: Linking with Libdevice": [[572, "tutorial-linking-with-libdevice"]], "Tutorials": [[540, "tutorials"]], "Type Conversion Operations": [[442, "type-conversion-operations"]], "Type Conversions": [[534, "type-conversions"]], "Type ID Summary Entry": [[559, "type-id-summary-entry"]], "Type Indices": [[584, "type-indices"]], "Type Metadata": [[623, null]], "Type Offsets for A, B, C, D": [[623, "id2"]], "Type Record Options": [[497, "type-record-options"], [497, "id5"]], "Type Server Map Substream": [[577, "type-server-map-substream"]], "Type System": [[559, "type-system"]], "Type and Size Conversion": [[446, "type-and-size-conversion"]], "Type and Size Suffices": [[444, "type-and-size-suffices"]], "Type deviation": [[11, null], [92, null], [180, null], [277, null], [310, null], [337, null], [424, null]], "TypeCheckedLoadConstVCalls": [[559, "typecheckedloadconstvcalls"]], "TypeCheckedLoadVCalls": [[559, "typecheckedloadvcalls"]], "TypeIdInfo": [[559, "typeidinfo"]], "TypeTestAssumeConstVCalls": [[559, "typetestassumeconstvcalls"]], "TypeTestAssumeVCalls": [[559, "typetestassumevcalls"]], "TypeTests": [[559, "typetests"]], "Types": [[514, "types"], [616, "types"]], "UNABBREV_RECORD Encoding": [[454, "unabbrev-record-encoding"]], "USING MARKERS TO ANALYZE SPECIFIC CODE BLOCKS": [[493, "using-markers-to-analyze-specific-code-blocks"]], "Unary Operations": [[559, "unary-operations"]], "Unary Operators": [[446, "unary-operators"]], "Undefined Location Description Operations": [[442, "undefined-location-description-operations"]], "Undefined Values": [[559, "undefined-values"]], "Unique types": [[631, "unique-types"]], "Unit Entities": [[442, "unit-entities"]], "Unit Headers": [[447, "unit-headers"]], "Unit and Regression tests": [[621, "unit-and-regression-tests"]], "Unit tests": [[621, "unit-tests"]], "Unordered": [[451, "unordered"]], "Unpacking the LLVM Archives": [[529, "unpacking-the-llvm-archives"]], "Unroll-And-Jam": [[622, "unroll-and-jam"]], "Unspecified OS": [[447, "unspecified-os"]], "Update Documentation": [[551, "update-documentation"]], "Update IR components": [[448, "update-ir-components"]], "Update LLVM Version": [[551, "update-llvm-version"]], "Update Selector components": [[448, "update-selector-components"]], "Update mappings": [[448, "update-mappings"]], "Update the LLVM Demo Page": [[551, "update-the-llvm-demo-page"]], "Update the LLVM Website": [[551, "update-the-llvm-website"]], "Updating Toolchain Requirements": [[517, "updating-toolchain-requirements"]], "Updating analysis results for transformations": [[450, "updating-analysis-results-for-transformations"]], "Usage": [[518, "usage"], [537, "usage"], [544, "usage"], [545, "usage"], [569, "usage"], [602, "usage"], [625, "usage"], [625, "id1"]], "Use Early Exits and continue to Simplify Code": [[467, "use-early-exits-and-continue-to-simplify-code"]], "Use Namespace Qualifiers to Implement Previously Declared Functions": [[467, "use-namespace-qualifiers-to-implement-previously-declared-functions"]], "Use Optimization": [[570, "use-optimization"]], "Use Standard C Headers": [[611, "use-standard-c-headers"]], "Use Standard C++ Headers": [[611, "id1"]], "Use after Free Detection": [[545, "use-after-free-detection"]], "Use an internal TLS location to pass predicate state": [[606, "use-an-internal-tls-location-to-pass-predicate-state"]], "Use auto Type Deduction to Make Code More Readable": [[467, "use-auto-type-deduction-to-make-code-more-readable"]], "Use lfence to guard function transitions": [[606, "use-lfence-to-guard-function-transitions"]], "Use of allocas": [[524, "use-of-allocas"]], "Use of class and struct Keywords": [[467, "use-of-class-and-struct-keywords"]], "Use range-based for loops wherever possible": [[467, "use-range-based-for-loops-wherever-possible"]], "Use raw_ostream": [[467, "use-raw-ostream"]], "Use-cases": [[573, "use-cases"]], "Use-list Order Directives": [[559, "use-list-order-directives"]], "Useful Built-in Commands": [[463, "useful-built-in-commands"]], "User Context Data": [[631, "user-context-data"]], "User Data": [[447, "user-data"]], "User Guide for AMDGPU Backend": [[447, null]], "User Guide for NVPTX Back-end": [[572, null]], "User Guides": [[624, null]], "User-defined Binary Operators": [[653, "user-defined-binary-operators"], [664, "user-defined-binary-operators"]], "User-defined Local Variables": [[654, "user-defined-local-variables"], [665, "user-defined-local-variables"]], "User-defined Operators: the Idea": [[653, "user-defined-operators-the-idea"], [664, "user-defined-operators-the-idea"]], "User-defined Unary Operators": [[653, "user-defined-unary-operators"], [664, "user-defined-unary-operators"]], "User-supplied mutators": [[561, "user-supplied-mutators"]], "Using -opt-bisect-limit to debug optimization errors": [[574, null]], "Using ARM NEON instructions in big endian mode": [[453, null]], "Using ExitOnError to simplify tool code": [[589, "using-exitonerror-to-simplify-tool-code"]], "Using GDB with dynamically loaded passes": [[627, "using-gdb-with-dynamically-loaded-passes"]], "Using LostDebugLocObserver": [[554, "using-lostdebuglocobserver"]], "Using RegisterAnalysisGroup": [[627, "using-registeranalysisgroup"]], "Using TableGen for target description": [[464, "using-tablegen-for-target-description"]], "Using XRay": [[628, "using-xray"]], "Using a Different Class on Host/Device": [[510, "using-a-different-class-on-host-device"]], "Using alias analysis results": [[450, "using-alias-analysis-results"]], "Using cantFail to simplify safe callsites": [[589, "using-cantfail-to-simplify-safe-callsites"]], "Using debugify": [[554, "using-debugify"]], "Using existing registries": [[627, "using-existing-registries"]], "Using gc.statepoint": [[526, "using-gc-statepoint"]], "Using llvm.gcwrite": [[526, "using-llvm-gcwrite"]], "Using the AliasAnalysis interface directly": [[450, "using-the-aliasanalysis-interface-directly"]], "Using the AliasSetTracker class": [[450, "using-the-aliassettracker-class"]], "Using the C and C++ Front Ends": [[522, "using-the-c-and-c-front-ends"]], "Using the MachineInstrBuilder.h functions": [[464, "using-the-machineinstrbuilder-h-functions"]], "Using the MemoryDependenceAnalysis Pass": [[450, "using-the-memorydependenceanalysis-pass"]], "Using the script": [[548, "using-the-script"]], "Utilities for Writing Fuzzers": [[525, "utilities-for-writing-fuzzers"]], "Utility Macros": [[631, "utility-macros"]], "Utility Passes": [[587, "utility-passes"]], "Utility Passes for Safepoint Insertion": [[610, "utility-passes-for-safepoint-insertion"]], "VALU": [[447, "valu"]], "VALUE_SYMTAB_BLOCK Contents": [[454, "value-symtab-block-contents"]], "VGPR Register Set Up Order": [[447, "amdgpu-amdhsa-vgpr-register-set-up-order-table"]], "VINTRP": [[0, "vintrp"], [2, "vintrp"], [3, "vintrp"], [4, "vintrp"]], "VINTRP Modifiers": [[445, "vintrp-modifiers"]], "VLIW Packetizer": [[464, "vliw-packetizer"]], "VOP1": [[0, "vop1"], [2, "vop1"], [3, "vop1"], [4, "vop1"]], "VOP2": [[0, "vop2"], [1, "vop2"], [2, "vop2"], [3, "vop2"], [4, "vop2"], [7, "vop2"], [8, "vop2"]], "VOP3": [[0, "vop3"], [2, "vop3"], [3, "vop3"], [4, "vop3"], [7, "vop3"], [8, "vop3"]], "VOP3 Modifiers": [[445, "vop3-modifiers"]], "VOP3 Operand Modifiers": [[445, "vop3-operand-modifiers"]], "VOP3P": [[0, "vop3p"], [1, "vop3p"], [4, "vop3p"], [5, "vop3p"], [6, "vop3p"], [7, "vop3p"], [8, "vop3p"]], "VOP3P MFMA Modifiers": [[445, "vop3p-mfma-modifiers"]], "VOP3P Modifiers": [[445, "vop3p-modifiers"]], "VOP3P V_MAD_MIX Modifiers": [[445, "vop3p-v-mad-mix-modifiers"]], "VOPC": [[0, "vopc"], [2, "vopc"], [3, "vopc"], [4, "vopc"]], "VP": [[559, "vp"]], "Validation": [[631, "validation"]], "Value Operations": [[442, "value-operations"]], "Value Profile": [[561, "value-profile"]], "Value definitions": [[615, "value-definitions"]], "Values": [[616, "values"]], "Variable Argument Handling Intrinsics": [[559, "variable-argument-handling-intrinsics"]], "Variable Length Arrays": [[521, "variable-length-arrays"]], "Variable Names Coding Standard Options": [[594, "variable-names-coding-standard-options"]], "Variable Names Plan": [[594, null]], "Variable Sized Allocas": [[604, "variable-sized-allocas"]], "Variable Width Integers": [[454, "variable-width-value"]], "Variable locations during Register Allocation": [[605, "variable-locations-during-register-allocation"]], "Variable locations in Instruction Selection and MIR": [[605, "variable-locations-in-instruction-selection-and-mir"]], "Variables": [[656, "variables"]], "Variables for Building Libraries": [[590, "variables-for-building-libraries"]], "Variables for Building Programs": [[590, "variables-for-building-programs"]], "Variables for Building Subdirectories": [[590, "variables-for-building-subdirectories"]], "Variables, Types, and Scope": [[463, "variables-types-and-scope"]], "Variadic Arguments": [[534, "variadic-arguments"]], "Variant #1.1 and #1.2 attacks: \u201cBounds Check Bypass Store\u201d": [[606, "variant-1-1-and-1-2-attacks-bounds-check-bypass-store"]], "Vector Operations": [[559, "vector-operations"]], "Vector Predication Intrinsics": [[559, "vector-predication-intrinsics"]], "Vector Predication Roadmap": [[595, null]], "Vector Specific Operations": [[534, "vector-specific-operations"]], "Vector Type": [[559, "vector-type"]], "Vector of pointers:": [[559, "vector-of-pointers"]], "Vectorization Plan": [[596, null]], "Vectorization Workflow": [[596, "vectorization-workflow"]], "Vectorization of Mixed Types": [[625, "vectorization-of-mixed-types"]], "Vectorization of function calls": [[625, "vectorization-of-function-calls"]], "Versioning LICM": [[622, "versioning-licm"]], "Versions": [[561, "versions"]], "Viewing graphs while debugging code": [[589, "viewing-graphs-while-debugging-code"]], "Virtual Table Layout for A, B, C, D": [[623, "id1"]], "Visibility Styles": [[559, "visibility-styles"]], "Void Type": [[559, "void-type"]], "Volatile Memory Accesses": [[559, "volatile-memory-accesses"]], "WallClockTime Records": [[630, "wallclocktime-records"]], "Ways to Contribute": [[512, "ways-to-contribute"]], "Weighted Input": [[498, "weighted-input"]], "Well-Formedness": [[559, "well-formedness"]], "What API do I use to store a value to one of the virtual registers in LLVM IR\u2019s SSA representation?": [[522, "what-api-do-i-use-to-store-a-value-to-one-of-the-virtual-registers-in-llvm-ir-s-ssa-representation"]], "What About Branches and Merges?": [[591, "what-about-branches-and-merges"]], "What About Commit Emails?": [[591, "what-about-commit-emails"]], "What Code Should Be Reviewed?": [[466, "what-code-should-be-reviewed"]], "What PassManager does": [[627, "what-passmanager-does"]], "What This Proposal is Not About": [[591, "what-this-proposal-is-not-about"]], "What Tools Are Used for Code Review?": [[466, "what-tools-are-used-for-code-review"]], "What effect do address spaces have on GEPs?": [[527, "what-effect-do-address-spaces-have-on-geps"]], "What happens after you file a report?": [[601, "what-happens-after-you-file-a-report"]], "What happens if a GEP computation overflows?": [[527, "what-happens-if-a-gep-computation-overflows"]], "What happens if an array index is out of bounds?": [[527, "what-happens-if-an-array-index-is-out-of-bounds"]], "What is Garbage Collection?": [[526, "what-is-garbage-collection"]], "What is considered a security issue?": [[603, "what-is-considered-a-security-issue"]], "What is dereferenced by GEP?": [[527, "what-is-dereferenced-by-gep"]], "What is the first index of the GEP instruction?": [[527, "what-is-the-first-index-of-the-gep-instruction"]], "What is this llvm.global_ctors and _GLOBAL__I_a... stuff that happens when I #include <iostream>?": [[522, "what-is-this-llvm-global-ctors-and-global-i-a-stuff-that-happens-when-i-include-iostream"]], "What is this \u201cundef\u201d thing that shows up in my code?": [[522, "what-is-this-undef-thing-that-shows-up-in-my-code"]], "What should I know to be able to follow along with this document?": [[571, "what-should-i-know-to-be-able-to-follow-along-with-this-document"]], "What source languages are supported?": [[522, "what-source-languages-are-supported"]], "What support is there for a higher level source language constructs for building a compiler?": [[522, "what-support-is-there-for-a-higher-level-source-language-constructs-for-building-a-compiler"]], "What to do when bugpoint isn\u2019t enough": [[458, "what-to-do-when-bugpoint-isn-t-enough"]], "What we associate in cmpValues?": [[571, "what-we-associate-in-cmpvalues"]], "What\u2019s an uglygep?": [[527, "what-s-an-uglygep"]], "When Is an RFC Required?": [[466, "when-is-an-rfc-required"]], "When to drop an instruction location": [[554, "when-to-drop-an-instruction-location"]], "When to merge instruction locations": [[554, "when-to-merge-instruction-locations"]], "When to preserve an instruction location": [[554, "when-to-preserve-an-instruction-location"]], "When to specify alignment": [[524, "when-to-specify-alignment"]], "Where did all of my code go??": [[522, "where-did-all-of-my-code-go"]], "Where to host the meetup?": [[568, "where-to-host-the-meetup"]], "Which image should I choose?": [[518, "which-image-should-i-choose"]], "Whitespace": [[467, "whitespace"]], "Who Can/Should Review Code?": [[466, "who-can-should-review-code"]], "Why Git, and Why GitHub?": [[591, "why-git-and-why-github"]], "Why Git?": [[591, "why-git"]], "Why GitHub?": [[591, "why-github"]], "Why Move At All?": [[591, "why-move-at-all"]], "Why a new C Standard Library?": [[592, "why-a-new-c-standard-library"]], "Why do GEP x,1,0,0 and GEP x,1 alias?": [[527, "why-do-gep-x-1-0-0-and-gep-x-1-alias"]], "Why do struct member indices always use i32?": [[527, "why-do-struct-member-indices-always-use-i32"]], "Why does instcombine + simplifycfg turn a call to a function with a mismatched calling convention into \u201cunreachable\u201d? Why not make the verifier reject it?": [[522, "why-does-instcombine-simplifycfg-turn-a-call-to-a-function-with-a-mismatched-calling-convention-into-unreachable-why-not-make-the-verifier-reject-it"]], "Why don\u2019t GEP x,0,0,1 and GEP x,1 alias?": [[527, "why-don-t-gep-x-0-0-1-and-gep-x-1-alias"]], "Why is GEP designed this way?": [[527, "why-is-gep-designed-this-way"]], "Why is the extra 0 index required?": [[527, "why-is-the-extra-0-index-required"]], "Why is this a hard problem?": [[654, "why-is-this-a-hard-problem"], [656, "why-is-this-a-hard-problem"], [665, "why-is-this-a-hard-problem"]], "Why?": [[518, "why"]], "Windows": [[511, "windows"]], "Windows Runtime Exception Handling": [[519, "windows-runtime-exception-handling"]], "Windows on ARM": [[521, "windows-on-arm"]], "Windows on ARM64": [[521, "windows-on-arm64"]], "Word Alignment": [[454, "word-alignment"]], "Work-item implicit argument layout": [[447, "amdgpu-amdhsa-workitem-implicit-argument-layout-table"]], "Workflow Before/After": [[591, "workflow-before-after"]], "Workflows": [[591, "workflows"]], "Working with CodeView": [[605, "working-with-codeview"]], "Write Portable Code": [[467, "write-portable-code"]], "Write barrier: llvm.gcwrite": [[526, "write-barrier-llvm-gcwrite"]], "Write-Back and Retire Stage": [[493, "write-back-and-retire-stage"]], "Writing Custom Tests for the test-suite": [[620, "writing-custom-tests-for-the-test-suite"]], "Writing LLVM Style Makefiles": [[590, "writing-llvm-style-makefiles"]], "Writing a custom parser": [[509, "writing-a-custom-parser"]], "Writing a new AliasAnalysis Implementation": [[450, "writing-a-new-aliasanalysis-implementation"]], "Writing an LLVM Backend": [[626, null]], "Writing an LLVM Pass": [[627, null]], "Writing new regression tests": [[621, "writing-new-regression-tests"]], "X86": [[511, "x86"], [521, "x86"]], "X86 Calling Conventions supported": [[464, "x86-calling-conventions-supported"]], "X86 Target Triples supported": [[464, "x86-target-triples-supported"]], "X86 address spaces supported": [[464, "x86-address-spaces-supported"]], "X86/COFF-Dependent": [[521, "x86-coff-dependent"]], "X86EVEX2VEX": [[613, "x86evex2vex"]], "X86_mmx Type": [[559, "x86-mmx-type"]], "XCOFF ONLY OPTIONS AND COMMANDS": [[496, "xcoff-only-options-and-commands"]], "XCore": [[511, "xcore"]], "XRay": [[597, "xray"]], "XRay Flight Data Recorder Trace Format": [[630, null]], "XRay Instrumentation": [[628, null]], "XRay Runtime Library": [[628, "xray-runtime-library"]], "XRay in LLVM": [[628, "xray-in-llvm"]], "YAML I/O": [[631, null]], "YAML metadata": [[600, "yaml-metadata"]], "YAML remarks": [[600, "yaml-remarks"]], "YAML with a string table": [[600, "yaml-with-a-string-table"]], "Zext GEP indices to machine register width": [[524, "zext-gep-indices-to-machine-register-width"]], "Zig Programming Language": [[598, "zig-programming-language"]], "Zipping local history": [[591, "zipping-local-history"]], "a": [[446, "a"]], "a16": [[445, "a16"]], "abid": [[445, "abid"]], "abs": [[445, "abs"], [445, "amdgpu-synid-abs"], [445, "id27"]], "addr64": [[445, "addr64"]], "adst": [[314, null], [315, null], [316, null], [317, null]], "asrc": [[318, null], [319, null], [320, null], [321, null]], "attr": [[18, null], [116, null], [200, null], [348, null]], "bank_mask": [[445, "bank-mask"]], "blgp": [[445, "blgp"]], "bound_ctrl": [[445, "bound-ctrl"]], "branch_weights": [[559, "branch-weights"]], "bugpoint - automatic test case reduction tool": [[469, null]], "bytes": [[497, "bytes"]], "cbsz": [[445, "cbsz"]], "clamp": [[445, "clamp"], [445, "amdgpu-synid-clamp"], [445, "id26"], [445, "id29"]], "clang-format-fuzzer": [[525, "clang-format-fuzzer"]], "clang-fuzzer": [[525, "clang-fuzzer"]], "clang-proto-fuzzer": [[525, "clang-proto-fuzzer"]], "classes": [[616, "classes"]], "cmpConstants": [[571, "cmpconstants"]], "cmpGEP": [[571, "cmpgep"]], "cmpOperation": [[571, "cmpoperation"]], "cmpValues(const Value*, const Value*)": [[571, "cmpvalues-const-value-const-value"]], "compare(const BasicBlock*, const BasicBlock*)": [[571, "compare-const-basicblock-const-basicblock"]], "compr": [[445, "compr"]], "compute_pgm_rsrc1 for GFX6-GFX10": [[447, "amdgpu-amdhsa-compute-pgm-rsrc1-gfx6-gfx10-table"]], "compute_pgm_rsrc2 for GFX6-GFX10": [[447, "amdgpu-amdhsa-compute-pgm-rsrc2-gfx6-gfx10-table"]], "compute_pgm_rsrc3 for GFX10": [[447, "amdgpu-amdhsa-compute-pgm-rsrc3-gfx10-table"]], "d16": [[445, "d16"]], "da": [[445, "da"]], "debugify in regression tests": [[554, "debugify-in-regression-tests"]], "def": [[616, "def"]], "defm": [[616, "defm"]], "defset": [[616, "defset"]], "defvar": [[616, "defvar"]], "dfmt": [[445, "dfmt"]], "dim": [[445, "dim"]], "dlc": [[445, "dlc"], [445, "id4"], [445, "amdgpu-synid-dlc"], [445, "id15"], [445, "id19"]], "dmask": [[445, "dmask"]], "done": [[445, "done"]], "dpp16_ctrl": [[445, "dpp16-ctrl"]], "dpp8_sel": [[445, "dpp8-sel"]], "dpp_ctrl": [[445, "dpp-ctrl"]], "dst": [[59, null], [144, null], [244, null], [330, null], [389, null]], "dst_sel": [[445, "dst-sel"]], "dst_unused": [[445, "dst-unused"]], "dsymutil - manipulate archived DWARF debug symbol files": [[470, null]], "dump": [[497, "dump"]], "eBPF maps": [[464, "ebpf-maps"]], "exec": [[446, "exec"]], "execz": [[446, "execz"]], "fconst": [[446, "fconst"]], "fi": [[445, "fi"], [445, "amdgpu-synid-fi16"]], "findRegressions-nightly.py": [[599, "findregressions-nightly-py"]], "flat_scratch": [[446, "flat-scratch"]], "foreach": [[616, "foreach"]], "formatv Examples": [[589, "formatv-examples"]], "function_entry_count": [[559, "function-entry-count"]], "fx": [[48, null], [293, null], [298, null], [303, null], [324, null]], "gds": [[445, "gds"]], "git bisect run": [[532, "git-bisect-run"]], "glc": [[445, "glc"], [445, "id1"], [445, "amdgpu-synid-glc"], [445, "id12"], [445, "id17"]], "high": [[445, "high"]], "hwreg": [[46, null], [136, null], [231, null], [376, null]], "iconst": [[446, "iconst"]], "idxen": [[445, "amdgpu-synid-idxen"]], "if": [[616, "if"]], "if statement": [[456, "if-statement"], [456, "id1"]], "ilist_traits": [[589, "ilist-traits"]], "imask": [[232, null], [377, null]], "imm16": [[22, null], [76, null], [93, null], [119, null], [156, null], [181, null], [203, null], [259, null], [278, null], [352, null], [406, null], [425, null]], "imm3": [[58, null], [243, null], [388, null]], "imm32": [[23, null], [44, null], [45, null], [120, null], [135, null], [204, null], [229, null], [230, null], [353, null], [374, null], [375, null]], "inline constant": [[446, "inline-constant"]], "iplist": [[589, "iplist"]], "ival": [[446, "ival"]], "label": [[47, null], [137, null], [233, null], [378, null]], "lds": [[445, "lds"], [445, "amdgpu-synid-lds"], [445, "id14"]], "lds_direct": [[446, "lds-direct"]], "libFuzzer \u2013 a library for coverage-guided fuzz testing.": [[561, null]], "libLTO": [[562, "liblto"]], "lit - LLVM Integrated Tester": [[472, null]], "literal": [[446, "literal"]], "llc - LLVM static compiler": [[473, null]], "lli - directly execute programs from LLVM bitcode": [[474, null]], "llvm-addr2line - a drop-in replacement for addr2line": [[475, null]], "llvm-ar - LLVM archiver": [[476, null]], "llvm-as - LLVM assembler": [[477, null]], "llvm-as-fuzzer": [[525, "llvm-as-fuzzer"]], "llvm-bcanalyzer - LLVM bitcode analyzer": [[478, null]], "llvm-build - LLVM Project Build Utility": [[479, null]], "llvm-config - Print LLVM compilation options": [[480, null]], "llvm-cov - emit coverage information": [[481, null]], "llvm-cxxfilt - LLVM symbol name demangler": [[482, null]], "llvm-cxxmap - Mangled name remapping tool": [[483, null]], "llvm-demangle-fuzzer": [[525, "llvm-demangle-fuzzer"]], "llvm-diff - LLVM structural \u2018diff\u2019": [[484, null]], "llvm-dis - LLVM disassembler": [[485, null]], "llvm-dwarfdump - dump and verify DWARF debug information": [[486, null]], "llvm-dwarfdump-fuzzer": [[525, "llvm-dwarfdump-fuzzer"]], "llvm-exegesis - LLVM Machine Instruction Benchmark": [[487, null]], "llvm-extract - extract a function from an LLVM module": [[488, null]], "llvm-isel-fuzzer": [[525, "llvm-isel-fuzzer"]], "llvm-lib - LLVM lib.exe compatible library tool": [[489, null]], "llvm-link - LLVM bitcode linker": [[490, null]], "llvm-lipo - LLVM tool for manipulating universal binaries": [[491, null]], "llvm-locstats - calculate statistics on DWARF debug location": [[492, null]], "llvm-mc-assemble-fuzzer": [[525, "llvm-mc-assemble-fuzzer"]], "llvm-mc-disassemble-fuzzer": [[525, "llvm-mc-disassemble-fuzzer"]], "llvm-mca - LLVM Machine Code Analyzer": [[493, null]], "llvm-nm - list LLVM bitcode and object file\u2019s symbol table": [[494, null]], "llvm-objcopy - object copying and editing tool": [[495, null]], "llvm-objdump - LLVM\u2019s object file dumper": [[496, null]], "llvm-opt-fuzzer": [[525, "llvm-opt-fuzzer"]], "llvm-pdbutil - PDB File forensics and diagnostics": [[497, null]], "llvm-profdata - Profile data tool": [[498, null]], "llvm-ranlib - generates an archive index": [[499, null]], "llvm-readelf - GNU-style LLVM Object Reader": [[500, null]], "llvm-readobj - LLVM Object Reader": [[501, null]], "llvm-size - print size information": [[502, null]], "llvm-stress - generate random .ll files": [[503, null]], "llvm-strings - print strings": [[504, null]], "llvm-strip - object stripping tool": [[505, null]], "llvm-symbolizer - convert addresses into source code locations": [[506, null]], "llvm.dbg.addr": [[605, "llvm-dbg-addr"]], "llvm.dbg.declare": [[605, "llvm-dbg-declare"]], "llvm.dbg.value": [[605, "llvm-dbg-value"]], "llvm.eh.begincatch": [[519, "llvm-eh-begincatch"]], "llvm.eh.endcatch": [[519, "llvm-eh-endcatch"]], "llvm.eh.exceptionpointer": [[519, "llvm-eh-exceptionpointer"]], "llvm.eh.sjlj.callsite": [[519, "llvm-eh-sjlj-callsite"]], "llvm.eh.sjlj.longjmp": [[519, "llvm-eh-sjlj-longjmp"]], "llvm.eh.sjlj.lsda": [[519, "llvm-eh-sjlj-lsda"]], "llvm.eh.sjlj.setjmp": [[519, "llvm-eh-sjlj-setjmp"]], "llvm.eh.typeid.for": [[519, "llvm-eh-typeid-for"]], "llvm/ADT/ArrayRef.h": [[589, "llvm-adt-arrayref-h"]], "llvm/ADT/DenseMap.h": [[589, "llvm-adt-densemap-h"]], "llvm/ADT/DenseSet.h": [[589, "llvm-adt-denseset-h"]], "llvm/ADT/FoldingSet.h": [[589, "llvm-adt-foldingset-h"]], "llvm/ADT/ImmutableMap.h": [[589, "llvm-adt-immutablemap-h"]], "llvm/ADT/ImmutableSet.h": [[589, "llvm-adt-immutableset-h"]], "llvm/ADT/IndexedMap.h": [[589, "llvm-adt-indexedmap-h"]], "llvm/ADT/IntEqClasses.h": [[589, "llvm-adt-inteqclasses-h"]], "llvm/ADT/IntervalMap.h": [[589, "llvm-adt-intervalmap-h"]], "llvm/ADT/MapVector.h": [[589, "llvm-adt-mapvector-h"]], "llvm/ADT/PackedVector.h": [[589, "llvm-adt-packedvector-h"]], "llvm/ADT/SetVector.h": [[589, "llvm-adt-setvector-h"]], "llvm/ADT/SmallPtrSet.h": [[589, "llvm-adt-smallptrset-h"]], "llvm/ADT/SmallSet.h": [[589, "llvm-adt-smallset-h"]], "llvm/ADT/SmallString.h": [[589, "llvm-adt-smallstring-h"]], "llvm/ADT/SmallVector.h": [[589, "llvm-adt-smallvector-h"]], "llvm/ADT/SparseMultiSet.h": [[589, "llvm-adt-sparsemultiset-h"]], "llvm/ADT/SparseSet.h": [[589, "llvm-adt-sparseset-h"]], "llvm/ADT/StringMap.h": [[589, "llvm-adt-stringmap-h"]], "llvm/ADT/StringRef.h": [[589, "llvm-adt-stringref-h"]], "llvm/ADT/StringSet.h": [[589, "llvm-adt-stringset-h"]], "llvm/ADT/TinyPtrVector.h": [[589, "llvm-adt-tinyptrvector-h"]], "llvm/ADT/Twine.h": [[589, "llvm-adt-twine-h"]], "llvm/ADT/UniqueVector.h": [[589, "llvm-adt-uniquevector-h"]], "llvm/ADT/ilist.h": [[589, "llvm-adt-ilist-h"]], "llvm/ADT/ilist_node.h": [[589, "llvm-adt-ilist-node-h"]], "llvm/IR/ValueMap.h": [[589, "llvm-ir-valuemap-h"]], "llvm/examples": [[529, "llvm-examples"]], "llvm/include": [[529, "llvm-include"]], "llvm/lib": [[529, "llvm-lib"]], "llvm/projects": [[529, "llvm-projects"]], "llvm/test": [[529, "llvm-test"]], "llvm/tools": [[529, "llvm-tools"]], "llvm/utils": [[529, "llvm-utils"]], "lto_code_gen_t": [[562, "lto-code-gen-t"]], "lto_module_t": [[562, "lto-module-t"]], "lwe": [[445, "lwe"]], "m": [[49, null], [50, null], [51, null], [138, null], [234, null], [235, null], [236, null], [294, null], [299, null], [304, null], [305, null], [306, null], [325, null], [326, null], [327, null], [379, null], [380, null], [381, null]], "m0": [[446, "m0"]], "m_op_sel": [[445, "m-op-sel"]], "m_op_sel_hi": [[445, "m-op-sel-hi"]], "macOS": [[511, "macos"]], "make.implicit metadata": [[523, "make-implicit-metadata"]], "merge": [[497, "merge"]], "msg": [[52, null], [139, null], [237, null], [382, null]], "multiclass": [[616, "multiclass"]], "neg": [[445, "neg"], [445, "amdgpu-synid-neg"], [445, "id28"]], "neg_hi": [[445, "neg-hi"]], "neg_lo": [[445, "neg-lo"]], "nfmt": [[445, "nfmt"]], "null": [[446, "null"]], "nv": [[445, "nv"], [445, "amdgpu-synid-nv"], [445, "id18"]], "off": [[446, "off"]], "offen": [[445, "offen"]], "offset11": [[445, "offset11"]], "offset12": [[445, "offset12"], [445, "amdgpu-synid-buf-offset12"]], "offset12s": [[445, "offset12s"]], "offset13s": [[445, "offset13s"]], "offset16": [[445, "offset16"]], "offset8": [[445, "offset8"]], "omod": [[445, "omod"], [445, "amdgpu-synid-omod"]], "op_sel": [[445, "op-sel"], [445, "amdgpu-synid-op-sel"]], "op_sel_hi": [[445, "op-sel-hi"]], "opt": [[56, null], [142, null], [241, null], [329, null], [386, null]], "opt - LLVM optimizer": [[507, null]], "opt-diff.py": [[600, "opt-diff-py"]], "opt-stats.py": [[600, "opt-stats-py"]], "opt-viewer": [[600, "opt-viewer"]], "opt-viewer.py": [[600, "opt-viewer-py"]], "param": [[57, null], [143, null], [242, null], [387, null]], "pdb2yaml": [[497, "pdb2yaml"]], "pretty": [[497, "pretty"]], "ptxas complains of undefined function: __nvvm_reflect": [[572, "ptxas-complains-of-undefined-function-nvvm-reflect"]], "r128": [[445, "r128"]], "rawspeed": [[593, "rawspeed"]], "row_mask": [[445, "row-mask"]], "runOnModule": [[571, "runonmodule"]], "s": [[446, "s"]], "saddr": [[62, null], [63, null], [332, null], [392, null], [393, null]], "sbase": [[19, null], [20, null], [21, null], [117, null], [118, null], [201, null], [202, null], [349, null], [350, null], [351, null]], "scc": [[446, "scc"]], "sdata": [[31, null], [32, null], [33, null], [65, null], [66, null], [67, null], [248, null], [249, null], [250, null], [361, null], [362, null], [363, null], [395, null], [396, null], [397, null]], "sdst": [[68, null], [69, null], [70, null], [71, null], [72, null], [73, null], [74, null], [75, null], [110, null], [148, null], [149, null], [150, null], [151, null], [152, null], [153, null], [154, null], [155, null], [251, null], [252, null], [253, null], [254, null], [255, null], [256, null], [257, null], [258, null], [398, null], [399, null], [400, null], [401, null], [402, null], [403, null], [404, null], [405, null]], "sext": [[445, "sext"]], "simm21": [[446, "simm21"]], "slc": [[445, "slc"], [445, "id2"], [445, "amdgpu-synid-slc"], [445, "id13"]], "soffset": [[53, null], [54, null], [55, null], [140, null], [141, null], [238, null], [239, null], [240, null], [328, null], [383, null], [384, null], [385, null]], "src": [[9, null], [10, null], [77, null], [78, null], [79, null], [80, null], [81, null], [157, null], [158, null], [159, null], [160, null], [161, null], [162, null], [163, null], [164, null], [165, null], [166, null], [260, null], [261, null], [262, null], [263, null], [264, null], [265, null], [295, null], [296, null], [300, null], [301, null], [307, null], [308, null], [309, null], [333, null], [334, null], [335, null], [336, null], [407, null], [408, null], [409, null], [410, null], [411, null], [412, null]], "src0_sel": [[445, "src0-sel"]], "src1_sel": [[445, "src1-sel"]], "srsrc": [[60, null], [61, null], [145, null], [146, null], [245, null], [246, null], [331, null], [390, null], [391, null]], "ssamp": [[64, null], [147, null], [247, null], [394, null]], "ssrc": [[83, null], [84, null], [85, null], [86, null], [87, null], [88, null], [89, null], [90, null], [111, null], [168, null], [169, null], [170, null], [171, null], [172, null], [173, null], [174, null], [175, null], [176, null], [177, null], [178, null], [267, null], [268, null], [269, null], [270, null], [271, null], [272, null], [273, null], [274, null], [275, null], [414, null], [415, null], [416, null], [417, null], [418, null], [419, null], [420, null], [421, null], [422, null]], "std::string": [[589, "std-string"]], "switch statement": [[456, "switch-statement"], [456, "id2"]], "swizzle pattern": [[445, "swizzle-pattern"]], "tba": [[446, "tba"]], "tblgen - Target Description To C++ Code Generator": [[508, null]], "test-release.sh": [[599, "test-release-sh"]], "test-suite": [[529, "test-suite"], [621, "test-suite"]], "test-suite Guide": [[619, null]], "test-suite Makefile Guide (deprecated)": [[620, null]], "tfe": [[445, "tfe"], [445, "id3"], [445, "amdgpu-synid-tfe"], [445, "id16"]], "tgt": [[91, null], [179, null], [276, null], [423, null]], "tma": [[446, "tma"]], "trap": [[446, "trap"]], "ttmp": [[446, "ttmp"]], "uimm20": [[446, "uimm20"]], "uimm21": [[446, "uimm21"]], "uimm32": [[446, "uimm32"]], "uimm8": [[446, "uimm8"]], "unorm": [[445, "unorm"]], "v": [[446, "v"]], "vaddr": [[14, null], [15, null], [16, null], [17, null], [94, null], [95, null], [112, null], [113, null], [114, null], [115, null], [196, null], [197, null], [198, null], [199, null], [313, null], [338, null], [344, null], [345, null], [346, null], [347, null], [426, null], [427, null]], "vasrc": [[339, null], [340, null]], "vcc": [[96, null], [182, null], [279, null], [428, null], [446, "vcc"]], "vccz": [[446, "vccz"]], "vdata": [[24, null], [25, null], [26, null], [27, null], [28, null], [29, null], [30, null], [97, null], [98, null], [99, null], [100, null], [121, null], [122, null], [123, null], [124, null], [125, null], [126, null], [183, null], [184, null], [185, null], [186, null], [205, null], [206, null], [207, null], [208, null], [209, null], [210, null], [211, null], [212, null], [213, null], [214, null], [215, null], [280, null], [281, null], [282, null], [283, null], [322, null], [341, null], [354, null], [355, null], [356, null], [357, null], [358, null], [359, null], [360, null], [429, null], [430, null], [431, null], [432, null]], "vdst": [[12, null], [34, null], [35, null], [36, null], [37, null], [38, null], [39, null], [40, null], [41, null], [42, null], [43, null], [101, null], [102, null], [103, null], [104, null], [127, null], [128, null], [129, null], [130, null], [131, null], [132, null], [133, null], [134, null], [187, null], [188, null], [189, null], [190, null], [216, null], [217, null], [218, null], [219, null], [220, null], [221, null], [222, null], [223, null], [224, null], [225, null], [226, null], [227, null], [228, null], [284, null], [285, null], [286, null], [287, null], [297, null], [302, null], [311, null], [323, null], [342, null], [364, null], [365, null], [366, null], [367, null], [368, null], [369, null], [370, null], [371, null], [372, null], [373, null], [433, null], [434, null], [435, null], [436, null]], "vecmathlib tests harness": [[593, "vecmathlib-tests-harness"]], "vm": [[445, "vm"]], "vsrc": [[13, null], [82, null], [105, null], [106, null], [107, null], [108, null], [167, null], [191, null], [192, null], [193, null], [194, null], [266, null], [288, null], [289, null], [290, null], [291, null], [312, null], [343, null], [413, null], [437, null], [438, null], [439, null], [440, null]], "waitcnt": [[109, null], [195, null], [292, null], [441, null]], "x86 Implementation Details": [[606, "x86-implementation-details"]], "xnack": [[446, "xnack"]], "yaml2obj": [[668, null]], "yaml2pdb": [[497, "yaml2pdb"]], "\u2018absolute_symbol\u2019 Metadata": [[559, "absolute-symbol-metadata"]], "\u2018addrspacecast .. to\u2019 Instruction": [[559, "addrspacecast-to-instruction"]], "\u2018add\u2019 Instruction": [[559, "add-instruction"]], "\u2018alloca\u2019 Instruction": [[559, "alloca-instruction"]], "\u2018and\u2019 Instruction": [[559, "and-instruction"]], "\u2018ashr\u2019 Instruction": [[559, "ashr-instruction"]], "\u2018associated\u2019 Metadata": [[559, "associated-metadata"]], "\u2018atomicrmw\u2019 Instruction": [[559, "atomicrmw-instruction"]], "\u2018bitcast .. to\u2019 Instruction": [[559, "bitcast-to-instruction"]], "\u2018br\u2019 Instruction": [[559, "br-instruction"]], "\u2018callback\u2019 Metadata": [[559, "callback-metadata"]], "\u2018callbr\u2019 Instruction": [[559, "callbr-instruction"]], "\u2018callees\u2019 Metadata": [[559, "callees-metadata"]], "\u2018call\u2019 Instruction": [[559, "call-instruction"]], "\u2018catchpad\u2019 Instruction": [[559, "catchpad-instruction"]], "\u2018catchret\u2019 Instruction": [[559, "catchret-instruction"]], "\u2018catchswitch\u2019 Instruction": [[559, "catchswitch-instruction"]], "\u2018cleanuppad\u2019 Instruction": [[559, "cleanuppad-instruction"]], "\u2018cleanupret\u2019 Instruction": [[559, "cleanupret-instruction"]], "\u2018cmpxchg\u2019 Instruction": [[559, "cmpxchg-instruction"]], "\u2018dereferenceable_or_null\u2019 Metadata": [[559, "dereferenceable-or-null-metadata"]], "\u2018dereferenceable\u2019 Metadata": [[559, "dereferenceable-metadata"]], "\u2018extractelement\u2019 Instruction": [[559, "extractelement-instruction"]], "\u2018extractvalue\u2019 Instruction": [[559, "extractvalue-instruction"]], "\u2018fadd\u2019 Instruction": [[559, "fadd-instruction"]], "\u2018fcmp\u2019 Instruction": [[559, "fcmp-instruction"]], "\u2018fdiv\u2019 Instruction": [[559, "fdiv-instruction"]], "\u2018fence\u2019 Instruction": [[559, "fence-instruction"]], "\u2018fmul\u2019 Instruction": [[559, "fmul-instruction"]], "\u2018fneg\u2019 Instruction": [[559, "fneg-instruction"]], "\u2018for\u2019 Loop Expression": [[652, "for-loop-expression"], [663, "for-loop-expression"]], "\u2018fpext .. to\u2019 Instruction": [[559, "fpext-to-instruction"]], "\u2018fpmath\u2019 Metadata": [[559, "fpmath-metadata"]], "\u2018fptosi .. to\u2019 Instruction": [[559, "fptosi-to-instruction"]], "\u2018fptoui .. to\u2019 Instruction": [[559, "fptoui-to-instruction"]], "\u2018fptrunc .. to\u2019 Instruction": [[559, "fptrunc-to-instruction"]], "\u2018freeze\u2019 Instruction": [[559, "freeze-instruction"]], "\u2018frem\u2019 Instruction": [[559, "frem-instruction"]], "\u2018fsub\u2019 Instruction": [[559, "fsub-instruction"]], "\u2018getelementptr\u2019 Instruction": [[559, "getelementptr-instruction"]], "\u2018icmp\u2019 Instruction": [[559, "icmp-instruction"]], "\u2018indirectbr\u2019 Instruction": [[559, "indirectbr-instruction"]], "\u2018insertelement\u2019 Instruction": [[559, "insertelement-instruction"]], "\u2018insertvalue\u2019 Instruction": [[559, "insertvalue-instruction"]], "\u2018inttoptr .. to\u2019 Instruction": [[559, "inttoptr-to-instruction"]], "\u2018invariant.group\u2019 Metadata": [[559, "invariant-group-metadata"]], "\u2018invoke\u2019 Instruction": [[559, "invoke-instruction"]], "\u2018irr_loop\u2019 Metadata": [[559, "irr-loop-metadata"]], "\u2018landingpad\u2019 Instruction": [[559, "landingpad-instruction"]], "\u2018let\u2019 expressions": [[615, "let-expressions-within-a-record"], [615, "id3"]], "\u2018llvm.access.group\u2019 Metadata": [[559, "llvm-access-group-metadata"]], "\u2018llvm.addressofreturnaddress\u2019 Intrinsic": [[559, "llvm-addressofreturnaddress-intrinsic"]], "\u2018llvm.adjust.trampoline\u2019 Intrinsic": [[559, "llvm-adjust-trampoline-intrinsic"]], "\u2018llvm.annotation.*\u2019 Intrinsic": [[559, "llvm-annotation-intrinsic"]], "\u2018llvm.assume\u2019 Intrinsic": [[559, "llvm-assume-intrinsic"]], "\u2018llvm.bitreverse.*\u2019 Intrinsics": [[559, "llvm-bitreverse-intrinsics"]], "\u2018llvm.bswap.*\u2019 Intrinsics": [[559, "llvm-bswap-intrinsics"]], "\u2018llvm.call.preallocated.arg\u2019 Intrinsic": [[559, "llvm-call-preallocated-arg-intrinsic"]], "\u2018llvm.call.preallocated.setup\u2019 Intrinsic": [[559, "llvm-call-preallocated-setup-intrinsic"]], "\u2018llvm.call.preallocated.teardown\u2019 Intrinsic": [[559, "llvm-call-preallocated-teardown-intrinsic"]], "\u2018llvm.canonicalize.*\u2019 Intrinsic": [[559, "llvm-canonicalize-intrinsic"]], "\u2018llvm.ceil.*\u2019 Intrinsic": [[559, "llvm-ceil-intrinsic"]], "\u2018llvm.clear_cache\u2019 Intrinsic": [[559, "llvm-clear-cache-intrinsic"]], "\u2018llvm.codeview.annotation\u2019 Intrinsic": [[559, "llvm-codeview-annotation-intrinsic"]], "\u2018llvm.convert.from.fp16\u2019 Intrinsic": [[559, "llvm-convert-from-fp16-intrinsic"]], "\u2018llvm.convert.to.fp16\u2019 Intrinsic": [[559, "llvm-convert-to-fp16-intrinsic"]], "\u2018llvm.copysign.*\u2019 Intrinsic": [[559, "llvm-copysign-intrinsic"]], "\u2018llvm.coro.alloc\u2019 Intrinsic": [[513, "llvm-coro-alloc-intrinsic"]], "\u2018llvm.coro.begin\u2019 Intrinsic": [[513, "llvm-coro-begin-intrinsic"]], "\u2018llvm.coro.destroy\u2019 Intrinsic": [[513, "llvm-coro-destroy-intrinsic"]], "\u2018llvm.coro.done\u2019 Intrinsic": [[513, "llvm-coro-done-intrinsic"]], "\u2018llvm.coro.end\u2019 Intrinsic": [[513, "llvm-coro-end-intrinsic"]], "\u2018llvm.coro.frame\u2019 Intrinsic": [[513, "llvm-coro-frame-intrinsic"]], "\u2018llvm.coro.free\u2019 Intrinsic": [[513, "llvm-coro-free-intrinsic"]], "\u2018llvm.coro.id.retcon.once\u2019 Intrinsic": [[513, "llvm-coro-id-retcon-once-intrinsic"]], "\u2018llvm.coro.id.retcon\u2019 Intrinsic": [[513, "llvm-coro-id-retcon-intrinsic"]], "\u2018llvm.coro.id\u2019 Intrinsic": [[513, "llvm-coro-id-intrinsic"]], "\u2018llvm.coro.noop\u2019 Intrinsic": [[513, "llvm-coro-noop-intrinsic"]], "\u2018llvm.coro.param\u2019 Intrinsic": [[513, "llvm-coro-param-intrinsic"]], "\u2018llvm.coro.promise\u2019 Intrinsic": [[513, "llvm-coro-promise-intrinsic"]], "\u2018llvm.coro.resume\u2019 Intrinsic": [[513, "llvm-coro-resume-intrinsic"]], "\u2018llvm.coro.save\u2019 Intrinsic": [[513, "llvm-coro-save-intrinsic"]], "\u2018llvm.coro.size\u2019 Intrinsic": [[513, "llvm-coro-size-intrinsic"]], "\u2018llvm.coro.suspend.retcon\u2019 Intrinsic": [[513, "llvm-coro-suspend-retcon-intrinsic"]], "\u2018llvm.coro.suspend\u2019 Intrinsic": [[513, "llvm-coro-suspend-intrinsic"]], "\u2018llvm.cos.*\u2019 Intrinsic": [[559, "llvm-cos-intrinsic"]], "\u2018llvm.ctlz.*\u2019 Intrinsic": [[559, "llvm-ctlz-intrinsic"]], "\u2018llvm.ctpop.*\u2019 Intrinsic": [[559, "llvm-ctpop-intrinsic"]], "\u2018llvm.cttz.*\u2019 Intrinsic": [[559, "llvm-cttz-intrinsic"]], "\u2018llvm.debugtrap\u2019 Intrinsic": [[559, "llvm-debugtrap-intrinsic"]], "\u2018llvm.donothing\u2019 Intrinsic": [[559, "llvm-donothing-intrinsic"]], "\u2018llvm.exp.*\u2019 Intrinsic": [[559, "llvm-exp-intrinsic"]], "\u2018llvm.exp2.*\u2019 Intrinsic": [[559, "llvm-exp2-intrinsic"]], "\u2018llvm.expect.with.probability\u2019 Intrinsic": [[559, "llvm-expect-with-probability-intrinsic"]], "\u2018llvm.expect\u2019 Intrinsic": [[559, "llvm-expect-intrinsic"]], "\u2018llvm.experimental.constrained.ceil\u2019 Intrinsic": [[559, "llvm-experimental-constrained-ceil-intrinsic"]], "\u2018llvm.experimental.constrained.cos\u2019 Intrinsic": [[559, "llvm-experimental-constrained-cos-intrinsic"]], "\u2018llvm.experimental.constrained.exp2\u2019 Intrinsic": [[559, "llvm-experimental-constrained-exp2-intrinsic"]], "\u2018llvm.experimental.constrained.exp\u2019 Intrinsic": [[559, "llvm-experimental-constrained-exp-intrinsic"]], "\u2018llvm.experimental.constrained.fadd\u2019 Intrinsic": [[559, "llvm-experimental-constrained-fadd-intrinsic"]], "\u2018llvm.experimental.constrained.fcmp\u2019 and \u2018llvm.experimental.constrained.fcmps\u2019 Intrinsics": [[559, "llvm-experimental-constrained-fcmp-and-llvm-experimental-constrained-fcmps-intrinsics"]], "\u2018llvm.experimental.constrained.fdiv\u2019 Intrinsic": [[559, "llvm-experimental-constrained-fdiv-intrinsic"]], "\u2018llvm.experimental.constrained.floor\u2019 Intrinsic": [[559, "llvm-experimental-constrained-floor-intrinsic"]], "\u2018llvm.experimental.constrained.fma\u2019 Intrinsic": [[559, "llvm-experimental-constrained-fma-intrinsic"]], "\u2018llvm.experimental.constrained.fmuladd\u2019 Intrinsic": [[559, "llvm-experimental-constrained-fmuladd-intrinsic"]], "\u2018llvm.experimental.constrained.fmul\u2019 Intrinsic": [[559, "llvm-experimental-constrained-fmul-intrinsic"]], "\u2018llvm.experimental.constrained.fpext\u2019 Intrinsic": [[559, "llvm-experimental-constrained-fpext-intrinsic"]], "\u2018llvm.experimental.constrained.fptosi\u2019 Intrinsic": [[559, "llvm-experimental-constrained-fptosi-intrinsic"]], "\u2018llvm.experimental.constrained.fptoui\u2019 Intrinsic": [[559, "llvm-experimental-constrained-fptoui-intrinsic"]], "\u2018llvm.experimental.constrained.fptrunc\u2019 Intrinsic": [[559, "llvm-experimental-constrained-fptrunc-intrinsic"]], "\u2018llvm.experimental.constrained.frem\u2019 Intrinsic": [[559, "llvm-experimental-constrained-frem-intrinsic"]], "\u2018llvm.experimental.constrained.fsub\u2019 Intrinsic": [[559, "llvm-experimental-constrained-fsub-intrinsic"]], "\u2018llvm.experimental.constrained.llrint\u2019 Intrinsic": [[559, "llvm-experimental-constrained-llrint-intrinsic"]], "\u2018llvm.experimental.constrained.llround\u2019 Intrinsic": [[559, "llvm-experimental-constrained-llround-intrinsic"]], "\u2018llvm.experimental.constrained.log10\u2019 Intrinsic": [[559, "llvm-experimental-constrained-log10-intrinsic"]], "\u2018llvm.experimental.constrained.log2\u2019 Intrinsic": [[559, "llvm-experimental-constrained-log2-intrinsic"]], "\u2018llvm.experimental.constrained.log\u2019 Intrinsic": [[559, "llvm-experimental-constrained-log-intrinsic"]], "\u2018llvm.experimental.constrained.lrint\u2019 Intrinsic": [[559, "llvm-experimental-constrained-lrint-intrinsic"]], "\u2018llvm.experimental.constrained.lround\u2019 Intrinsic": [[559, "llvm-experimental-constrained-lround-intrinsic"]], "\u2018llvm.experimental.constrained.maximum\u2019 Intrinsic": [[559, "llvm-experimental-constrained-maximum-intrinsic"]], "\u2018llvm.experimental.constrained.maxnum\u2019 Intrinsic": [[559, "llvm-experimental-constrained-maxnum-intrinsic"]], "\u2018llvm.experimental.constrained.minimum\u2019 Intrinsic": [[559, "llvm-experimental-constrained-minimum-intrinsic"]], "\u2018llvm.experimental.constrained.minnum\u2019 Intrinsic": [[559, "llvm-experimental-constrained-minnum-intrinsic"]], "\u2018llvm.experimental.constrained.nearbyint\u2019 Intrinsic": [[559, "llvm-experimental-constrained-nearbyint-intrinsic"]], "\u2018llvm.experimental.constrained.powi\u2019 Intrinsic": [[559, "llvm-experimental-constrained-powi-intrinsic"]], "\u2018llvm.experimental.constrained.pow\u2019 Intrinsic": [[559, "llvm-experimental-constrained-pow-intrinsic"]], "\u2018llvm.experimental.constrained.rint\u2019 Intrinsic": [[559, "llvm-experimental-constrained-rint-intrinsic"]], "\u2018llvm.experimental.constrained.roundeven\u2019 Intrinsic": [[559, "llvm-experimental-constrained-roundeven-intrinsic"]], "\u2018llvm.experimental.constrained.round\u2019 Intrinsic": [[559, "llvm-experimental-constrained-round-intrinsic"]], "\u2018llvm.experimental.constrained.sin\u2019 Intrinsic": [[559, "llvm-experimental-constrained-sin-intrinsic"]], "\u2018llvm.experimental.constrained.sitofp\u2019 Intrinsic": [[559, "llvm-experimental-constrained-sitofp-intrinsic"]], "\u2018llvm.experimental.constrained.sqrt\u2019 Intrinsic": [[559, "llvm-experimental-constrained-sqrt-intrinsic"]], "\u2018llvm.experimental.constrained.trunc\u2019 Intrinsic": [[559, "llvm-experimental-constrained-trunc-intrinsic"]], "\u2018llvm.experimental.constrained.uitofp\u2019 Intrinsic": [[559, "llvm-experimental-constrained-uitofp-intrinsic"]], "\u2018llvm.experimental.deoptimize\u2019 Intrinsic": [[559, "llvm-experimental-deoptimize-intrinsic"]], "\u2018llvm.experimental.gc.relocate\u2019 Intrinsic": [[610, "llvm-experimental-gc-relocate-intrinsic"]], "\u2018llvm.experimental.gc.result\u2019 Intrinsic": [[610, "llvm-experimental-gc-result-intrinsic"]], "\u2018llvm.experimental.gc.statepoint\u2019 Intrinsic": [[610, "llvm-experimental-gc-statepoint-intrinsic"]], "\u2018llvm.experimental.guard\u2019 Intrinsic": [[559, "llvm-experimental-guard-intrinsic"]], "\u2018llvm.experimental.patchpoint.*\u2019 Intrinsic": [[608, "llvm-experimental-patchpoint-intrinsic"]], "\u2018llvm.experimental.stackmap\u2019 Intrinsic": [[608, "llvm-experimental-stackmap-intrinsic"]], "\u2018llvm.experimental.vector.reduce.add.*\u2019 Intrinsic": [[559, "llvm-experimental-vector-reduce-add-intrinsic"]], "\u2018llvm.experimental.vector.reduce.and.*\u2019 Intrinsic": [[559, "llvm-experimental-vector-reduce-and-intrinsic"]], "\u2018llvm.experimental.vector.reduce.fmax.*\u2019 Intrinsic": [[559, "llvm-experimental-vector-reduce-fmax-intrinsic"]], "\u2018llvm.experimental.vector.reduce.fmin.*\u2019 Intrinsic": [[559, "llvm-experimental-vector-reduce-fmin-intrinsic"]], "\u2018llvm.experimental.vector.reduce.mul.*\u2019 Intrinsic": [[559, "llvm-experimental-vector-reduce-mul-intrinsic"]], "\u2018llvm.experimental.vector.reduce.or.*\u2019 Intrinsic": [[559, "llvm-experimental-vector-reduce-or-intrinsic"]], "\u2018llvm.experimental.vector.reduce.smax.*\u2019 Intrinsic": [[559, "llvm-experimental-vector-reduce-smax-intrinsic"]], "\u2018llvm.experimental.vector.reduce.smin.*\u2019 Intrinsic": [[559, "llvm-experimental-vector-reduce-smin-intrinsic"]], "\u2018llvm.experimental.vector.reduce.umax.*\u2019 Intrinsic": [[559, "llvm-experimental-vector-reduce-umax-intrinsic"]], "\u2018llvm.experimental.vector.reduce.umin.*\u2019 Intrinsic": [[559, "llvm-experimental-vector-reduce-umin-intrinsic"]], "\u2018llvm.experimental.vector.reduce.v2.fadd.*\u2019 Intrinsic": [[559, "llvm-experimental-vector-reduce-v2-fadd-intrinsic"]], "\u2018llvm.experimental.vector.reduce.v2.fmul.*\u2019 Intrinsic": [[559, "llvm-experimental-vector-reduce-v2-fmul-intrinsic"]], "\u2018llvm.experimental.vector.reduce.xor.*\u2019 Intrinsic": [[559, "llvm-experimental-vector-reduce-xor-intrinsic"]], "\u2018llvm.experimental.widenable.condition\u2019 Intrinsic": [[559, "llvm-experimental-widenable-condition-intrinsic"]], "\u2018llvm.fabs.*\u2019 Intrinsic": [[559, "llvm-fabs-intrinsic"]], "\u2018llvm.floor.*\u2019 Intrinsic": [[559, "llvm-floor-intrinsic"]], "\u2018llvm.flt.rounds\u2019 Intrinsic": [[559, "llvm-flt-rounds-intrinsic"]], "\u2018llvm.fma.*\u2019 Intrinsic": [[559, "llvm-fma-intrinsic"]], "\u2018llvm.fmuladd.*\u2019 Intrinsic": [[559, "llvm-fmuladd-intrinsic"]], "\u2018llvm.frameaddress\u2019 Intrinsic": [[559, "llvm-frameaddress-intrinsic"]], "\u2018llvm.fshl.*\u2019 Intrinsic": [[559, "llvm-fshl-intrinsic"]], "\u2018llvm.fshr.*\u2019 Intrinsic": [[559, "llvm-fshr-intrinsic"]], "\u2018llvm.gcread\u2019 Intrinsic": [[559, "llvm-gcread-intrinsic"]], "\u2018llvm.gcroot\u2019 Intrinsic": [[559, "llvm-gcroot-intrinsic"]], "\u2018llvm.gcwrite\u2019 Intrinsic": [[559, "llvm-gcwrite-intrinsic"]], "\u2018llvm.get.active.lane.mask.*\u2019 Intrinsics": [[559, "llvm-get-active-lane-mask-intrinsics"]], "\u2018llvm.get.dynamic.area.offset\u2019 Intrinsic": [[559, "llvm-get-dynamic-area-offset-intrinsic"]], "\u2018llvm.init.trampoline\u2019 Intrinsic": [[559, "llvm-init-trampoline-intrinsic"]], "\u2018llvm.instrprof.increment.step\u2019 Intrinsic": [[559, "llvm-instrprof-increment-step-intrinsic"]], "\u2018llvm.instrprof.increment\u2019 Intrinsic": [[559, "llvm-instrprof-increment-intrinsic"]], "\u2018llvm.instrprof.value.profile\u2019 Intrinsic": [[559, "llvm-instrprof-value-profile-intrinsic"]], "\u2018llvm.invariant.end\u2019 Intrinsic": [[559, "llvm-invariant-end-intrinsic"]], "\u2018llvm.invariant.start\u2019 Intrinsic": [[559, "llvm-invariant-start-intrinsic"]], "\u2018llvm.is.constant.*\u2019 Intrinsic": [[559, "llvm-is-constant-intrinsic"]], "\u2018llvm.launder.invariant.group\u2019 Intrinsic": [[559, "llvm-launder-invariant-group-intrinsic"]], "\u2018llvm.licm.disable\u2019 Metadata": [[559, "llvm-licm-disable-metadata"]], "\u2018llvm.lifetime.end\u2019 Intrinsic": [[559, "llvm-lifetime-end-intrinsic"]], "\u2018llvm.lifetime.start\u2019 Intrinsic": [[559, "llvm-lifetime-start-intrinsic"]], "\u2018llvm.llrint.*\u2019 Intrinsic": [[559, "llvm-llrint-intrinsic"]], "\u2018llvm.llround.*\u2019 Intrinsic": [[559, "llvm-llround-intrinsic"]], "\u2018llvm.load.relative\u2019 Intrinsic": [[559, "llvm-load-relative-intrinsic"]], "\u2018llvm.localescape\u2019 and \u2018llvm.localrecover\u2019 Intrinsics": [[559, "llvm-localescape-and-llvm-localrecover-intrinsics"]], "\u2018llvm.log.*\u2019 Intrinsic": [[559, "llvm-log-intrinsic"]], "\u2018llvm.log10.*\u2019 Intrinsic": [[559, "llvm-log10-intrinsic"]], "\u2018llvm.log2.*\u2019 Intrinsic": [[559, "llvm-log2-intrinsic"]], "\u2018llvm.loop.decrement.*\u2019 Intrinsic": [[559, "llvm-loop-decrement-intrinsic"]], "\u2018llvm.loop.decrement.reg.*\u2019 Intrinsic": [[559, "llvm-loop-decrement-reg-intrinsic"]], "\u2018llvm.loop.disable_nonforced\u2019": [[559, "llvm-loop-disable-nonforced"]], "\u2018llvm.loop.distribute.enable\u2019 Metadata": [[559, "llvm-loop-distribute-enable-metadata"]], "\u2018llvm.loop.distribute.followup_all\u2019 Metadata": [[559, "llvm-loop-distribute-followup-all-metadata"]], "\u2018llvm.loop.distribute.followup_coincident\u2019 Metadata": [[559, "llvm-loop-distribute-followup-coincident-metadata"]], "\u2018llvm.loop.distribute.followup_fallback\u2019 Metadata": [[559, "llvm-loop-distribute-followup-fallback-metadata"]], "\u2018llvm.loop.distribute.followup_sequential\u2019 Metadata": [[559, "llvm-loop-distribute-followup-sequential-metadata"]], "\u2018llvm.loop.interleave.count\u2019 Metadata": [[559, "llvm-loop-interleave-count-metadata"]], "\u2018llvm.loop.licm_versioning.disable\u2019 Metadata": [[559, "llvm-loop-licm-versioning-disable-metadata"]], "\u2018llvm.loop.parallel_accesses\u2019 Metadata": [[559, "llvm-loop-parallel-accesses-metadata"]], "\u2018llvm.loop.unroll.count\u2019 Metadata": [[559, "llvm-loop-unroll-count-metadata"]], "\u2018llvm.loop.unroll.disable\u2019 Metadata": [[559, "llvm-loop-unroll-disable-metadata"]], "\u2018llvm.loop.unroll.enable\u2019 Metadata": [[559, "llvm-loop-unroll-enable-metadata"]], "\u2018llvm.loop.unroll.followup_remainder\u2019 Metadata": [[559, "llvm-loop-unroll-followup-remainder-metadata"]], "\u2018llvm.loop.unroll.followup\u2019 Metadata": [[559, "llvm-loop-unroll-followup-metadata"]], "\u2018llvm.loop.unroll.full\u2019 Metadata": [[559, "llvm-loop-unroll-full-metadata"]], "\u2018llvm.loop.unroll.runtime.disable\u2019 Metadata": [[559, "llvm-loop-unroll-runtime-disable-metadata"]], "\u2018llvm.loop.unroll_and_jam.count\u2019 Metadata": [[559, "llvm-loop-unroll-and-jam-count-metadata"]], "\u2018llvm.loop.unroll_and_jam.disable\u2019 Metadata": [[559, "llvm-loop-unroll-and-jam-disable-metadata"]], "\u2018llvm.loop.unroll_and_jam.enable\u2019 Metadata": [[559, "llvm-loop-unroll-and-jam-enable-metadata"]], "\u2018llvm.loop.unroll_and_jam.followup_all\u2019 Metadata": [[559, "llvm-loop-unroll-and-jam-followup-all-metadata"]], "\u2018llvm.loop.unroll_and_jam.followup_inner\u2019 Metadata": [[559, "llvm-loop-unroll-and-jam-followup-inner-metadata"]], "\u2018llvm.loop.unroll_and_jam.followup_outer\u2019 Metadata": [[559, "llvm-loop-unroll-and-jam-followup-outer-metadata"]], "\u2018llvm.loop.unroll_and_jam.followup_remainder_inner\u2019 Metadata": [[559, "llvm-loop-unroll-and-jam-followup-remainder-inner-metadata"]], "\u2018llvm.loop.unroll_and_jam.followup_remainder_outer\u2019 Metadata": [[559, "llvm-loop-unroll-and-jam-followup-remainder-outer-metadata"]], "\u2018llvm.loop.unroll_and_jam\u2019": [[559, "llvm-loop-unroll-and-jam"]], "\u2018llvm.loop.unroll\u2019": [[559, "llvm-loop-unroll"]], "\u2018llvm.loop.vectorize.enable\u2019 Metadata": [[559, "llvm-loop-vectorize-enable-metadata"]], "\u2018llvm.loop.vectorize.followup_all\u2019 Metadata": [[559, "llvm-loop-vectorize-followup-all-metadata"]], "\u2018llvm.loop.vectorize.followup_epilogue\u2019 Metadata": [[559, "llvm-loop-vectorize-followup-epilogue-metadata"]], "\u2018llvm.loop.vectorize.followup_vectorized\u2019 Metadata": [[559, "llvm-loop-vectorize-followup-vectorized-metadata"]], "\u2018llvm.loop.vectorize.predicate.enable\u2019 Metadata": [[559, "llvm-loop-vectorize-predicate-enable-metadata"]], "\u2018llvm.loop.vectorize.width\u2019 Metadata": [[559, "llvm-loop-vectorize-width-metadata"]], "\u2018llvm.loop.vectorize\u2019 and \u2018llvm.loop.interleave\u2019": [[559, "llvm-loop-vectorize-and-llvm-loop-interleave"]], "\u2018llvm.loop\u2019": [[559, "llvm-loop"]], "\u2018llvm.lrint.*\u2019 Intrinsic": [[559, "llvm-lrint-intrinsic"]], "\u2018llvm.lround.*\u2019 Intrinsic": [[559, "llvm-lround-intrinsic"]], "\u2018llvm.masked.compressstore.*\u2019 Intrinsics": [[559, "llvm-masked-compressstore-intrinsics"]], "\u2018llvm.masked.expandload.*\u2019 Intrinsics": [[559, "llvm-masked-expandload-intrinsics"]], "\u2018llvm.masked.gather.*\u2019 Intrinsics": [[559, "llvm-masked-gather-intrinsics"]], "\u2018llvm.masked.load.*\u2019 Intrinsics": [[559, "llvm-masked-load-intrinsics"]], "\u2018llvm.masked.scatter.*\u2019 Intrinsics": [[559, "llvm-masked-scatter-intrinsics"]], "\u2018llvm.masked.store.*\u2019 Intrinsics": [[559, "llvm-masked-store-intrinsics"]], "\u2018llvm.matrix.column.major.load.*\u2019 Intrinsic": [[559, "llvm-matrix-column-major-load-intrinsic"]], "\u2018llvm.matrix.column.major.store.*\u2019 Intrinsic": [[559, "llvm-matrix-column-major-store-intrinsic"]], "\u2018llvm.matrix.multiply.*\u2019 Intrinsic": [[559, "llvm-matrix-multiply-intrinsic"]], "\u2018llvm.matrix.transpose.*\u2019 Intrinsic": [[559, "llvm-matrix-transpose-intrinsic"]], "\u2018llvm.maximum.*\u2019 Intrinsic": [[559, "llvm-maximum-intrinsic"]], "\u2018llvm.maxnum.*\u2019 Intrinsic": [[559, "llvm-maxnum-intrinsic"]], "\u2018llvm.memcpy.element.unordered.atomic\u2019 Intrinsic": [[559, "llvm-memcpy-element-unordered-atomic-intrinsic"]], "\u2018llvm.memcpy.inline\u2019 Intrinsic": [[559, "llvm-memcpy-inline-intrinsic"]], "\u2018llvm.memcpy\u2019 Intrinsic": [[559, "llvm-memcpy-intrinsic"]], "\u2018llvm.memmove.element.unordered.atomic\u2019 Intrinsic": [[559, "llvm-memmove-element-unordered-atomic-intrinsic"]], "\u2018llvm.memmove\u2019 Intrinsic": [[559, "llvm-memmove-intrinsic"]], "\u2018llvm.memset.*\u2019 Intrinsics": [[559, "llvm-memset-intrinsics"]], "\u2018llvm.memset.element.unordered.atomic\u2019 Intrinsic": [[559, "llvm-memset-element-unordered-atomic-intrinsic"]], "\u2018llvm.minimum.*\u2019 Intrinsic": [[559, "llvm-minimum-intrinsic"]], "\u2018llvm.minnum.*\u2019 Intrinsic": [[559, "llvm-minnum-intrinsic"]], "\u2018llvm.nearbyint.*\u2019 Intrinsic": [[559, "llvm-nearbyint-intrinsic"]], "\u2018llvm.nvvm.barrier0\u2019": [[572, "llvm-nvvm-barrier0"]], "\u2018llvm.nvvm.ptr.*.to.gen\u2019 Intrinsics": [[572, "llvm-nvvm-ptr-to-gen-intrinsics"]], "\u2018llvm.nvvm.ptr.gen.to.*\u2019 Intrinsics": [[572, "llvm-nvvm-ptr-gen-to-intrinsics"]], "\u2018llvm.nvvm.read.ptx.sreg.*\u2019": [[572, "llvm-nvvm-read-ptx-sreg"]], "\u2018llvm.objc.autoreleasePoolPop\u2019 Intrinsic": [[559, "llvm-objc-autoreleasepoolpop-intrinsic"]], "\u2018llvm.objc.autoreleasePoolPush\u2019 Intrinsic": [[559, "llvm-objc-autoreleasepoolpush-intrinsic"]], "\u2018llvm.objc.autoreleaseReturnValue\u2019 Intrinsic": [[559, "llvm-objc-autoreleasereturnvalue-intrinsic"]], "\u2018llvm.objc.autorelease\u2019 Intrinsic": [[559, "llvm-objc-autorelease-intrinsic"]], "\u2018llvm.objc.copyWeak\u2019 Intrinsic": [[559, "llvm-objc-copyweak-intrinsic"]], "\u2018llvm.objc.destroyWeak\u2019 Intrinsic": [[559, "llvm-objc-destroyweak-intrinsic"]], "\u2018llvm.objc.initWeak\u2019 Intrinsic": [[559, "llvm-objc-initweak-intrinsic"]], "\u2018llvm.objc.loadWeakRetained\u2019 Intrinsic": [[559, "llvm-objc-loadweakretained-intrinsic"]], "\u2018llvm.objc.loadWeak\u2019 Intrinsic": [[559, "llvm-objc-loadweak-intrinsic"]], "\u2018llvm.objc.moveWeak\u2019 Intrinsic": [[559, "llvm-objc-moveweak-intrinsic"]], "\u2018llvm.objc.release\u2019 Intrinsic": [[559, "llvm-objc-release-intrinsic"]], "\u2018llvm.objc.retainAutoreleaseReturnValue\u2019 Intrinsic": [[559, "llvm-objc-retainautoreleasereturnvalue-intrinsic"]], "\u2018llvm.objc.retainAutoreleasedReturnValue\u2019 Intrinsic": [[559, "llvm-objc-retainautoreleasedreturnvalue-intrinsic"]], "\u2018llvm.objc.retainAutorelease\u2019 Intrinsic": [[559, "llvm-objc-retainautorelease-intrinsic"]], "\u2018llvm.objc.retainBlock\u2019 Intrinsic": [[559, "llvm-objc-retainblock-intrinsic"]], "\u2018llvm.objc.retain\u2019 Intrinsic": [[559, "llvm-objc-retain-intrinsic"]], "\u2018llvm.objc.storeStrong\u2019 Intrinsic": [[559, "llvm-objc-storestrong-intrinsic"]], "\u2018llvm.objc.storeWeak\u2019 Intrinsic": [[559, "llvm-objc-storeweak-intrinsic"]], "\u2018llvm.objectsize\u2019 Intrinsic": [[559, "llvm-objectsize-intrinsic"]], "\u2018llvm.pcmarker\u2019 Intrinsic": [[559, "llvm-pcmarker-intrinsic"]], "\u2018llvm.pow.*\u2019 Intrinsic": [[559, "llvm-pow-intrinsic"]], "\u2018llvm.powi.*\u2019 Intrinsic": [[559, "llvm-powi-intrinsic"]], "\u2018llvm.prefetch\u2019 Intrinsic": [[559, "llvm-prefetch-intrinsic"]], "\u2018llvm.preserve.array.access.index\u2019 Intrinsic": [[559, "llvm-preserve-array-access-index-intrinsic"]], "\u2018llvm.preserve.struct.access.index\u2019 Intrinsic": [[559, "llvm-preserve-struct-access-index-intrinsic"]], "\u2018llvm.preserve.union.access.index\u2019 Intrinsic": [[559, "llvm-preserve-union-access-index-intrinsic"]], "\u2018llvm.ptr.annotation.*\u2019 Intrinsic": [[559, "llvm-ptr-annotation-intrinsic"]], "\u2018llvm.ptrmask\u2019 Intrinsic": [[559, "llvm-ptrmask-intrinsic"]], "\u2018llvm.readcyclecounter\u2019 Intrinsic": [[559, "llvm-readcyclecounter-intrinsic"]], "\u2018llvm.returnaddress\u2019 Intrinsic": [[559, "llvm-returnaddress-intrinsic"]], "\u2018llvm.rint.*\u2019 Intrinsic": [[559, "llvm-rint-intrinsic"]], "\u2018llvm.round.*\u2019 Intrinsic": [[559, "llvm-round-intrinsic"]], "\u2018llvm.roundeven.*\u2019 Intrinsic": [[559, "llvm-roundeven-intrinsic"]], "\u2018llvm.sadd.sat.*\u2019 Intrinsics": [[559, "llvm-sadd-sat-intrinsics"]], "\u2018llvm.sadd.with.overflow.*\u2019 Intrinsics": [[559, "llvm-sadd-with-overflow-intrinsics"]], "\u2018llvm.sdiv.fix.*\u2019 Intrinsics": [[559, "llvm-sdiv-fix-intrinsics"]], "\u2018llvm.sdiv.fix.sat.*\u2019 Intrinsics": [[559, "llvm-sdiv-fix-sat-intrinsics"]], "\u2018llvm.set.loop.iterations.*\u2019 Intrinsic": [[559, "llvm-set-loop-iterations-intrinsic"]], "\u2018llvm.sideeffect\u2019 Intrinsic": [[559, "llvm-sideeffect-intrinsic"]], "\u2018llvm.sin.*\u2019 Intrinsic": [[559, "llvm-sin-intrinsic"]], "\u2018llvm.smul.fix.*\u2019 Intrinsics": [[559, "llvm-smul-fix-intrinsics"]], "\u2018llvm.smul.fix.sat.*\u2019 Intrinsics": [[559, "llvm-smul-fix-sat-intrinsics"]], "\u2018llvm.smul.with.overflow.*\u2019 Intrinsics": [[559, "llvm-smul-with-overflow-intrinsics"]], "\u2018llvm.sponentry\u2019 Intrinsic": [[559, "llvm-sponentry-intrinsic"]], "\u2018llvm.sqrt.*\u2019 Intrinsic": [[559, "llvm-sqrt-intrinsic"]], "\u2018llvm.ssa_copy\u2019 Intrinsic": [[559, "llvm-ssa-copy-intrinsic"]], "\u2018llvm.ssub.sat.*\u2019 Intrinsics": [[559, "llvm-ssub-sat-intrinsics"]], "\u2018llvm.ssub.with.overflow.*\u2019 Intrinsics": [[559, "llvm-ssub-with-overflow-intrinsics"]], "\u2018llvm.stackguard\u2019 Intrinsic": [[559, "llvm-stackguard-intrinsic"]], "\u2018llvm.stackprotector\u2019 Intrinsic": [[559, "llvm-stackprotector-intrinsic"]], "\u2018llvm.stackrestore\u2019 Intrinsic": [[559, "llvm-stackrestore-intrinsic"]], "\u2018llvm.stacksave\u2019 Intrinsic": [[559, "llvm-stacksave-intrinsic"]], "\u2018llvm.strip.invariant.group\u2019 Intrinsic": [[559, "llvm-strip-invariant-group-intrinsic"]], "\u2018llvm.test.set.loop.iterations.*\u2019 Intrinsic": [[559, "llvm-test-set-loop-iterations-intrinsic"]], "\u2018llvm.thread.pointer\u2019 Intrinsic": [[559, "llvm-thread-pointer-intrinsic"]], "\u2018llvm.trap\u2019 Intrinsic": [[559, "llvm-trap-intrinsic"]], "\u2018llvm.trunc.*\u2019 Intrinsic": [[559, "llvm-trunc-intrinsic"]], "\u2018llvm.type.checked.load\u2019 Intrinsic": [[559, "llvm-type-checked-load-intrinsic"]], "\u2018llvm.type.test\u2019 Intrinsic": [[559, "llvm-type-test-intrinsic"]], "\u2018llvm.uadd.sat.*\u2019 Intrinsics": [[559, "llvm-uadd-sat-intrinsics"]], "\u2018llvm.uadd.with.overflow.*\u2019 Intrinsics": [[559, "llvm-uadd-with-overflow-intrinsics"]], "\u2018llvm.udiv.fix.*\u2019 Intrinsics": [[559, "llvm-udiv-fix-intrinsics"]], "\u2018llvm.udiv.fix.sat.*\u2019 Intrinsics": [[559, "llvm-udiv-fix-sat-intrinsics"]], "\u2018llvm.umul.fix.*\u2019 Intrinsics": [[559, "llvm-umul-fix-intrinsics"]], "\u2018llvm.umul.fix.sat.*\u2019 Intrinsics": [[559, "llvm-umul-fix-sat-intrinsics"]], "\u2018llvm.umul.with.overflow.*\u2019 Intrinsics": [[559, "llvm-umul-with-overflow-intrinsics"]], "\u2018llvm.usub.sat.*\u2019 Intrinsics": [[559, "llvm-usub-sat-intrinsics"]], "\u2018llvm.usub.with.overflow.*\u2019 Intrinsics": [[559, "llvm-usub-with-overflow-intrinsics"]], "\u2018llvm.va_copy\u2019 Intrinsic": [[559, "llvm-va-copy-intrinsic"]], "\u2018llvm.va_end\u2019 Intrinsic": [[559, "llvm-va-end-intrinsic"]], "\u2018llvm.va_start\u2019 Intrinsic": [[559, "llvm-va-start-intrinsic"]], "\u2018llvm.var.annotation\u2019 Intrinsic": [[559, "llvm-var-annotation-intrinsic"]], "\u2018llvm.vp.add.*\u2019 Intrinsics": [[559, "llvm-vp-add-intrinsics"]], "\u2018llvm.vp.and.*\u2019 Intrinsics": [[559, "llvm-vp-and-intrinsics"]], "\u2018llvm.vp.ashr.*\u2019 Intrinsics": [[559, "llvm-vp-ashr-intrinsics"]], "\u2018llvm.vp.lshr.*\u2019 Intrinsics": [[559, "llvm-vp-lshr-intrinsics"]], "\u2018llvm.vp.mul.*\u2019 Intrinsics": [[559, "llvm-vp-mul-intrinsics"]], "\u2018llvm.vp.or.*\u2019 Intrinsics": [[559, "llvm-vp-or-intrinsics"]], "\u2018llvm.vp.sdiv.*\u2019 Intrinsics": [[559, "llvm-vp-sdiv-intrinsics"]], "\u2018llvm.vp.shl.*\u2019 Intrinsics": [[559, "llvm-vp-shl-intrinsics"]], "\u2018llvm.vp.srem.*\u2019 Intrinsics": [[559, "llvm-vp-srem-intrinsics"]], "\u2018llvm.vp.sub.*\u2019 Intrinsics": [[559, "llvm-vp-sub-intrinsics"]], "\u2018llvm.vp.udiv.*\u2019 Intrinsics": [[559, "llvm-vp-udiv-intrinsics"]], "\u2018llvm.vp.urem.*\u2019 Intrinsics": [[559, "llvm-vp-urem-intrinsics"]], "\u2018llvm.vp.xor.*\u2019 Intrinsics": [[559, "llvm-vp-xor-intrinsics"]], "\u2018llvm.vscale\u2019 Intrinsic": [[559, "llvm-vscale-intrinsic"]], "\u2018load\u2019 Instruction": [[559, "load-instruction"]], "\u2018lshr\u2019 Instruction": [[559, "lshr-instruction"]], "\u2018mul\u2019 Instruction": [[559, "mul-instruction"]], "\u2018noalias\u2019 and \u2018alias.scope\u2019 Metadata": [[559, "noalias-and-alias-scope-metadata"]], "\u2018or\u2019 Instruction": [[559, "or-instruction"]], "\u2018phi\u2019 Instruction": [[559, "phi-instruction"]], "\u2018prof\u2019 Metadata": [[559, "prof-metadata"]], "\u2018ptrtoint .. to\u2019 Instruction": [[559, "ptrtoint-to-instruction"]], "\u2018range\u2019 Metadata": [[559, "range-metadata"]], "\u2018resume\u2019 Instruction": [[559, "resume-instruction"]], "\u2018ret\u2019 Instruction": [[559, "ret-instruction"]], "\u2018sdiv\u2019 Instruction": [[559, "sdiv-instruction"]], "\u2018select\u2019 Instruction": [[559, "select-instruction"]], "\u2018sext .. to\u2019 Instruction": [[559, "sext-to-instruction"]], "\u2018shl\u2019 Instruction": [[559, "shl-instruction"]], "\u2018shufflevector\u2019 Instruction": [[559, "shufflevector-instruction"]], "\u2018sitofp .. to\u2019 Instruction": [[559, "sitofp-to-instruction"]], "\u2018srem\u2019 Instruction": [[559, "srem-instruction"]], "\u2018store\u2019 Instruction": [[559, "store-instruction"]], "\u2018sub\u2019 Instruction": [[559, "sub-instruction"]], "\u2018switch\u2019 Instruction": [[559, "switch-instruction"]], "\u2018tbaa.struct\u2019 Metadata": [[559, "tbaa-struct-metadata"]], "\u2018tbaa\u2019 Metadata": [[559, "tbaa-metadata"]], "\u2018trunc .. to\u2019 Instruction": [[559, "trunc-to-instruction"]], "\u2018type\u2019 Metadata": [[559, "type-metadata"]], "\u2018udiv\u2019 Instruction": [[559, "udiv-instruction"]], "\u2018uitofp .. to\u2019 Instruction": [[559, "uitofp-to-instruction"]], "\u2018unpredictable\u2019 Metadata": [[559, "unpredictable-metadata"]], "\u2018unreachable\u2019 Instruction": [[559, "unreachable-instruction"]], "\u2018urem\u2019 Instruction": [[559, "urem-instruction"]], "\u2018va_arg\u2019 Instruction": [[559, "va-arg-instruction"]], "\u2018xor\u2019 Instruction": [[559, "xor-instruction"]], "\u2018zext .. to\u2019 Instruction": [[559, "zext-to-instruction"]], "\u201cMore Canonical\u201d Loops": [[563, "more-canonical-loops"]], "\u201cQuirky\u201d Interface": [[459, "quirky-interface"]], "\u201cllvm-libc\u201d C Standard Library": [[592, null]]}, "docnames": ["AMDGPU/AMDGPUAsmGFX10", "AMDGPU/AMDGPUAsmGFX1011", "AMDGPU/AMDGPUAsmGFX7", "AMDGPU/AMDGPUAsmGFX8", "AMDGPU/AMDGPUAsmGFX9", "AMDGPU/AMDGPUAsmGFX900", "AMDGPU/AMDGPUAsmGFX904", "AMDGPU/AMDGPUAsmGFX906", "AMDGPU/AMDGPUAsmGFX908", "AMDGPU/gfx1011_src32_0", "AMDGPU/gfx1011_src32_1", "AMDGPU/gfx1011_type_dev", "AMDGPU/gfx1011_vdst32_0", "AMDGPU/gfx1011_vsrc32_0", "AMDGPU/gfx10_addr_buf", "AMDGPU/gfx10_addr_ds", "AMDGPU/gfx10_addr_flat", "AMDGPU/gfx10_addr_mimg", "AMDGPU/gfx10_attr", "AMDGPU/gfx10_base_smem_addr", "AMDGPU/gfx10_base_smem_buf", "AMDGPU/gfx10_base_smem_scratch", "AMDGPU/gfx10_bimm16", "AMDGPU/gfx10_bimm32", "AMDGPU/gfx10_data_buf_atomic128", "AMDGPU/gfx10_data_buf_atomic32", "AMDGPU/gfx10_data_buf_atomic64", "AMDGPU/gfx10_data_mimg_atomic_cmp", "AMDGPU/gfx10_data_mimg_atomic_reg", "AMDGPU/gfx10_data_mimg_store", "AMDGPU/gfx10_data_mimg_store_d16", "AMDGPU/gfx10_data_smem_atomic128", "AMDGPU/gfx10_data_smem_atomic32", "AMDGPU/gfx10_data_smem_atomic64", "AMDGPU/gfx10_dst_buf_128", "AMDGPU/gfx10_dst_buf_32", "AMDGPU/gfx10_dst_buf_64", "AMDGPU/gfx10_dst_buf_96", "AMDGPU/gfx10_dst_buf_lds", "AMDGPU/gfx10_dst_flat_atomic32", "AMDGPU/gfx10_dst_flat_atomic64", "AMDGPU/gfx10_dst_mimg_gather4", "AMDGPU/gfx10_dst_mimg_regular", "AMDGPU/gfx10_dst_mimg_regular_d16", "AMDGPU/gfx10_fimm16", "AMDGPU/gfx10_fimm32", "AMDGPU/gfx10_hwreg", "AMDGPU/gfx10_label", "AMDGPU/gfx10_mad_type_dev", "AMDGPU/gfx10_mod_dpp_sdwa_abs_neg", "AMDGPU/gfx10_mod_sdwa_sext", "AMDGPU/gfx10_mod_vop3_abs_neg", "AMDGPU/gfx10_msg", "AMDGPU/gfx10_offset_buf", "AMDGPU/gfx10_offset_smem_buf", "AMDGPU/gfx10_offset_smem_plain", "AMDGPU/gfx10_opt", "AMDGPU/gfx10_param", "AMDGPU/gfx10_perm_smem", "AMDGPU/gfx10_ret", "AMDGPU/gfx10_rsrc_buf", "AMDGPU/gfx10_rsrc_mimg", "AMDGPU/gfx10_saddr_flat_global", "AMDGPU/gfx10_saddr_flat_scratch", "AMDGPU/gfx10_samp_mimg", "AMDGPU/gfx10_sdata128_0", "AMDGPU/gfx10_sdata32_0", "AMDGPU/gfx10_sdata64_0", "AMDGPU/gfx10_sdst128_0", "AMDGPU/gfx10_sdst256_0", "AMDGPU/gfx10_sdst32_0", "AMDGPU/gfx10_sdst32_1", "AMDGPU/gfx10_sdst32_2", "AMDGPU/gfx10_sdst512_0", "AMDGPU/gfx10_sdst64_0", "AMDGPU/gfx10_sdst64_1", "AMDGPU/gfx10_simm16", "AMDGPU/gfx10_src32_0", "AMDGPU/gfx10_src32_1", "AMDGPU/gfx10_src32_2", "AMDGPU/gfx10_src32_3", "AMDGPU/gfx10_src64_0", "AMDGPU/gfx10_src_exp", "AMDGPU/gfx10_ssrc32_0", "AMDGPU/gfx10_ssrc32_1", "AMDGPU/gfx10_ssrc32_2", "AMDGPU/gfx10_ssrc32_3", "AMDGPU/gfx10_ssrc32_4", "AMDGPU/gfx10_ssrc32_5", "AMDGPU/gfx10_ssrc64_0", "AMDGPU/gfx10_ssrc64_1", "AMDGPU/gfx10_tgt", "AMDGPU/gfx10_type_dev", "AMDGPU/gfx10_uimm16", "AMDGPU/gfx10_vaddr_flat_global", "AMDGPU/gfx10_vaddr_flat_scratch", "AMDGPU/gfx10_vcc_32", "AMDGPU/gfx10_vdata128_0", "AMDGPU/gfx10_vdata32_0", "AMDGPU/gfx10_vdata64_0", "AMDGPU/gfx10_vdata96_0", "AMDGPU/gfx10_vdst128_0", "AMDGPU/gfx10_vdst32_0", "AMDGPU/gfx10_vdst64_0", "AMDGPU/gfx10_vdst96_0", "AMDGPU/gfx10_vsrc128_0", "AMDGPU/gfx10_vsrc32_0", "AMDGPU/gfx10_vsrc32_1", "AMDGPU/gfx10_vsrc64_0", "AMDGPU/gfx10_waitcnt", "AMDGPU/gfx10_wsdst", "AMDGPU/gfx10_wssrc", "AMDGPU/gfx7_addr_buf", "AMDGPU/gfx7_addr_ds", "AMDGPU/gfx7_addr_flat", "AMDGPU/gfx7_addr_mimg", "AMDGPU/gfx7_attr", "AMDGPU/gfx7_base_smem_addr", "AMDGPU/gfx7_base_smem_buf", "AMDGPU/gfx7_bimm16", "AMDGPU/gfx7_bimm32", "AMDGPU/gfx7_data_buf_atomic128", "AMDGPU/gfx7_data_buf_atomic32", "AMDGPU/gfx7_data_buf_atomic64", "AMDGPU/gfx7_data_mimg_atomic_cmp", "AMDGPU/gfx7_data_mimg_atomic_reg", "AMDGPU/gfx7_data_mimg_store", "AMDGPU/gfx7_dst_buf_128", "AMDGPU/gfx7_dst_buf_64", "AMDGPU/gfx7_dst_buf_96", "AMDGPU/gfx7_dst_buf_lds", "AMDGPU/gfx7_dst_flat_atomic32", "AMDGPU/gfx7_dst_flat_atomic64", "AMDGPU/gfx7_dst_mimg_gather4", "AMDGPU/gfx7_dst_mimg_regular", "AMDGPU/gfx7_fimm32", "AMDGPU/gfx7_hwreg", "AMDGPU/gfx7_label", "AMDGPU/gfx7_mod", "AMDGPU/gfx7_msg", "AMDGPU/gfx7_offset_buf", "AMDGPU/gfx7_offset_smem", "AMDGPU/gfx7_opt", "AMDGPU/gfx7_param", "AMDGPU/gfx7_ret", "AMDGPU/gfx7_rsrc_buf", "AMDGPU/gfx7_rsrc_mimg", "AMDGPU/gfx7_samp_mimg", "AMDGPU/gfx7_sdst128_0", "AMDGPU/gfx7_sdst256_0", "AMDGPU/gfx7_sdst32_0", "AMDGPU/gfx7_sdst32_1", "AMDGPU/gfx7_sdst32_2", "AMDGPU/gfx7_sdst512_0", "AMDGPU/gfx7_sdst64_0", "AMDGPU/gfx7_sdst64_1", "AMDGPU/gfx7_simm16", "AMDGPU/gfx7_src32_0", "AMDGPU/gfx7_src32_1", "AMDGPU/gfx7_src32_2", "AMDGPU/gfx7_src32_3", "AMDGPU/gfx7_src32_4", "AMDGPU/gfx7_src32_5", "AMDGPU/gfx7_src32_6", "AMDGPU/gfx7_src64_0", "AMDGPU/gfx7_src64_1", "AMDGPU/gfx7_src64_2", "AMDGPU/gfx7_src_exp", "AMDGPU/gfx7_ssrc32_0", "AMDGPU/gfx7_ssrc32_1", "AMDGPU/gfx7_ssrc32_2", "AMDGPU/gfx7_ssrc32_3", "AMDGPU/gfx7_ssrc32_4", "AMDGPU/gfx7_ssrc32_5", "AMDGPU/gfx7_ssrc32_6", "AMDGPU/gfx7_ssrc64_0", "AMDGPU/gfx7_ssrc64_1", "AMDGPU/gfx7_ssrc64_2", "AMDGPU/gfx7_ssrc64_3", "AMDGPU/gfx7_tgt", "AMDGPU/gfx7_type_dev", "AMDGPU/gfx7_uimm16", "AMDGPU/gfx7_vcc_64", "AMDGPU/gfx7_vdata128_0", "AMDGPU/gfx7_vdata32_0", "AMDGPU/gfx7_vdata64_0", "AMDGPU/gfx7_vdata96_0", "AMDGPU/gfx7_vdst128_0", "AMDGPU/gfx7_vdst32_0", "AMDGPU/gfx7_vdst64_0", "AMDGPU/gfx7_vdst96_0", "AMDGPU/gfx7_vsrc128_0", "AMDGPU/gfx7_vsrc32_0", "AMDGPU/gfx7_vsrc32_1", "AMDGPU/gfx7_vsrc64_0", "AMDGPU/gfx7_waitcnt", "AMDGPU/gfx8_addr_buf", "AMDGPU/gfx8_addr_ds", "AMDGPU/gfx8_addr_flat", "AMDGPU/gfx8_addr_mimg", "AMDGPU/gfx8_attr", "AMDGPU/gfx8_base_smem_addr", "AMDGPU/gfx8_base_smem_buf", "AMDGPU/gfx8_bimm16", "AMDGPU/gfx8_bimm32", "AMDGPU/gfx8_data_buf_atomic128", "AMDGPU/gfx8_data_buf_atomic32", "AMDGPU/gfx8_data_buf_atomic64", "AMDGPU/gfx8_data_buf_d16_128", "AMDGPU/gfx8_data_buf_d16_32", "AMDGPU/gfx8_data_buf_d16_64", "AMDGPU/gfx8_data_buf_d16_96", "AMDGPU/gfx8_data_mimg_atomic_cmp", "AMDGPU/gfx8_data_mimg_atomic_reg", "AMDGPU/gfx8_data_mimg_store", "AMDGPU/gfx8_data_mimg_store_d16", "AMDGPU/gfx8_dst_buf_128", "AMDGPU/gfx8_dst_buf_64", "AMDGPU/gfx8_dst_buf_96", "AMDGPU/gfx8_dst_buf_d16_128", "AMDGPU/gfx8_dst_buf_d16_32", "AMDGPU/gfx8_dst_buf_d16_64", "AMDGPU/gfx8_dst_buf_d16_96", "AMDGPU/gfx8_dst_buf_lds", "AMDGPU/gfx8_dst_flat_atomic32", "AMDGPU/gfx8_dst_flat_atomic64", "AMDGPU/gfx8_dst_mimg_gather4", "AMDGPU/gfx8_dst_mimg_regular", "AMDGPU/gfx8_dst_mimg_regular_d16", "AMDGPU/gfx8_fimm16", "AMDGPU/gfx8_fimm32", "AMDGPU/gfx8_hwreg", "AMDGPU/gfx8_imask", "AMDGPU/gfx8_label", "AMDGPU/gfx8_mod_dpp_sdwa_abs_neg", "AMDGPU/gfx8_mod_sdwa_sext", "AMDGPU/gfx8_mod_vop3_abs_neg", "AMDGPU/gfx8_msg", "AMDGPU/gfx8_offset_buf", "AMDGPU/gfx8_offset_smem_load", "AMDGPU/gfx8_offset_smem_store", "AMDGPU/gfx8_opt", "AMDGPU/gfx8_param", "AMDGPU/gfx8_perm_smem", "AMDGPU/gfx8_ret", "AMDGPU/gfx8_rsrc_buf", "AMDGPU/gfx8_rsrc_mimg", "AMDGPU/gfx8_samp_mimg", "AMDGPU/gfx8_sdata128_0", "AMDGPU/gfx8_sdata32_0", "AMDGPU/gfx8_sdata64_0", "AMDGPU/gfx8_sdst128_0", "AMDGPU/gfx8_sdst256_0", "AMDGPU/gfx8_sdst32_0", "AMDGPU/gfx8_sdst32_1", "AMDGPU/gfx8_sdst32_2", "AMDGPU/gfx8_sdst512_0", "AMDGPU/gfx8_sdst64_0", "AMDGPU/gfx8_sdst64_1", "AMDGPU/gfx8_simm16", "AMDGPU/gfx8_src32_0", "AMDGPU/gfx8_src32_1", "AMDGPU/gfx8_src32_2", "AMDGPU/gfx8_src32_3", "AMDGPU/gfx8_src64_0", "AMDGPU/gfx8_src64_1", "AMDGPU/gfx8_src_exp", "AMDGPU/gfx8_ssrc32_0", "AMDGPU/gfx8_ssrc32_1", "AMDGPU/gfx8_ssrc32_2", "AMDGPU/gfx8_ssrc32_3", "AMDGPU/gfx8_ssrc32_4", "AMDGPU/gfx8_ssrc64_0", "AMDGPU/gfx8_ssrc64_1", "AMDGPU/gfx8_ssrc64_2", "AMDGPU/gfx8_ssrc64_3", "AMDGPU/gfx8_tgt", "AMDGPU/gfx8_type_dev", "AMDGPU/gfx8_uimm16", "AMDGPU/gfx8_vcc_64", "AMDGPU/gfx8_vdata128_0", "AMDGPU/gfx8_vdata32_0", "AMDGPU/gfx8_vdata64_0", "AMDGPU/gfx8_vdata96_0", "AMDGPU/gfx8_vdst128_0", "AMDGPU/gfx8_vdst32_0", "AMDGPU/gfx8_vdst64_0", "AMDGPU/gfx8_vdst96_0", "AMDGPU/gfx8_vsrc128_0", "AMDGPU/gfx8_vsrc32_0", "AMDGPU/gfx8_vsrc32_1", "AMDGPU/gfx8_vsrc64_0", "AMDGPU/gfx8_waitcnt", "AMDGPU/gfx900_mad_type_dev", "AMDGPU/gfx900_mod_vop3_abs_neg", "AMDGPU/gfx900_src32_0", "AMDGPU/gfx900_src32_1", "AMDGPU/gfx900_vdst32_0", "AMDGPU/gfx904_mad_type_dev", "AMDGPU/gfx904_mod_vop3_abs_neg", "AMDGPU/gfx904_src32_0", "AMDGPU/gfx904_src32_1", "AMDGPU/gfx904_vdst32_0", "AMDGPU/gfx906_mad_type_dev", "AMDGPU/gfx906_mod_dpp_sdwa_abs_neg", "AMDGPU/gfx906_mod_sdwa_sext", "AMDGPU/gfx906_mod_vop3_abs_neg", "AMDGPU/gfx906_src32_0", "AMDGPU/gfx906_src32_1", "AMDGPU/gfx906_src32_2", "AMDGPU/gfx906_type_dev", "AMDGPU/gfx906_vdst32_0", "AMDGPU/gfx906_vsrc32_0", "AMDGPU/gfx908_addr_buf", "AMDGPU/gfx908_adst1024_0", "AMDGPU/gfx908_adst128_0", "AMDGPU/gfx908_adst32_0", "AMDGPU/gfx908_adst512_0", "AMDGPU/gfx908_asrc1024_0", "AMDGPU/gfx908_asrc128_0", "AMDGPU/gfx908_asrc32_0", "AMDGPU/gfx908_asrc512_0", "AMDGPU/gfx908_data_buf_atomic32", "AMDGPU/gfx908_dst_flat_atomic32", "AMDGPU/gfx908_mad_type_dev", "AMDGPU/gfx908_mod_dpp_sdwa_abs_neg", "AMDGPU/gfx908_mod_sdwa_sext", "AMDGPU/gfx908_mod_vop3_abs_neg", "AMDGPU/gfx908_offset_buf", "AMDGPU/gfx908_opt", "AMDGPU/gfx908_ret", "AMDGPU/gfx908_rsrc_buf", "AMDGPU/gfx908_saddr_flat_global", "AMDGPU/gfx908_src32_0", "AMDGPU/gfx908_src32_1", "AMDGPU/gfx908_src32_2", "AMDGPU/gfx908_src32_3", "AMDGPU/gfx908_type_dev", "AMDGPU/gfx908_vaddr_flat_global", "AMDGPU/gfx908_vasrc32_0", "AMDGPU/gfx908_vasrc64_0", "AMDGPU/gfx908_vdata32_0", "AMDGPU/gfx908_vdst32_0", "AMDGPU/gfx908_vsrc32_0", "AMDGPU/gfx9_addr_buf", "AMDGPU/gfx9_addr_ds", "AMDGPU/gfx9_addr_flat", "AMDGPU/gfx9_addr_mimg", "AMDGPU/gfx9_attr", "AMDGPU/gfx9_base_smem_addr", "AMDGPU/gfx9_base_smem_buf", "AMDGPU/gfx9_base_smem_scratch", "AMDGPU/gfx9_bimm16", "AMDGPU/gfx9_bimm32", "AMDGPU/gfx9_data_buf_atomic128", "AMDGPU/gfx9_data_buf_atomic32", "AMDGPU/gfx9_data_buf_atomic64", "AMDGPU/gfx9_data_mimg_atomic_cmp", "AMDGPU/gfx9_data_mimg_atomic_reg", "AMDGPU/gfx9_data_mimg_store", "AMDGPU/gfx9_data_mimg_store_d16", "AMDGPU/gfx9_data_smem_atomic128", "AMDGPU/gfx9_data_smem_atomic32", "AMDGPU/gfx9_data_smem_atomic64", "AMDGPU/gfx9_dst_buf_128", "AMDGPU/gfx9_dst_buf_32", "AMDGPU/gfx9_dst_buf_64", "AMDGPU/gfx9_dst_buf_96", "AMDGPU/gfx9_dst_buf_lds", "AMDGPU/gfx9_dst_flat_atomic32", "AMDGPU/gfx9_dst_flat_atomic64", "AMDGPU/gfx9_dst_mimg_gather4", "AMDGPU/gfx9_dst_mimg_regular", "AMDGPU/gfx9_dst_mimg_regular_d16", "AMDGPU/gfx9_fimm16", "AMDGPU/gfx9_fimm32", "AMDGPU/gfx9_hwreg", "AMDGPU/gfx9_imask", "AMDGPU/gfx9_label", "AMDGPU/gfx9_mod_dpp_sdwa_abs_neg", "AMDGPU/gfx9_mod_sdwa_sext", "AMDGPU/gfx9_mod_vop3_abs_neg", "AMDGPU/gfx9_msg", "AMDGPU/gfx9_offset_buf", "AMDGPU/gfx9_offset_smem_buf", "AMDGPU/gfx9_offset_smem_plain", "AMDGPU/gfx9_opt", "AMDGPU/gfx9_param", "AMDGPU/gfx9_perm_smem", "AMDGPU/gfx9_ret", "AMDGPU/gfx9_rsrc_buf", "AMDGPU/gfx9_rsrc_mimg", "AMDGPU/gfx9_saddr_flat_global", "AMDGPU/gfx9_saddr_flat_scratch", "AMDGPU/gfx9_samp_mimg", "AMDGPU/gfx9_sdata128_0", "AMDGPU/gfx9_sdata32_0", "AMDGPU/gfx9_sdata64_0", "AMDGPU/gfx9_sdst128_0", "AMDGPU/gfx9_sdst256_0", "AMDGPU/gfx9_sdst32_0", "AMDGPU/gfx9_sdst32_1", "AMDGPU/gfx9_sdst32_2", "AMDGPU/gfx9_sdst512_0", "AMDGPU/gfx9_sdst64_0", "AMDGPU/gfx9_sdst64_1", "AMDGPU/gfx9_simm16", "AMDGPU/gfx9_src32_0", "AMDGPU/gfx9_src32_1", "AMDGPU/gfx9_src32_2", "AMDGPU/gfx9_src32_3", "AMDGPU/gfx9_src64_0", "AMDGPU/gfx9_src64_1", "AMDGPU/gfx9_src_exp", "AMDGPU/gfx9_ssrc32_0", "AMDGPU/gfx9_ssrc32_1", "AMDGPU/gfx9_ssrc32_2", "AMDGPU/gfx9_ssrc32_3", "AMDGPU/gfx9_ssrc32_4", "AMDGPU/gfx9_ssrc64_0", "AMDGPU/gfx9_ssrc64_1", "AMDGPU/gfx9_ssrc64_2", "AMDGPU/gfx9_ssrc64_3", "AMDGPU/gfx9_tgt", "AMDGPU/gfx9_type_dev", "AMDGPU/gfx9_uimm16", "AMDGPU/gfx9_vaddr_flat_global", "AMDGPU/gfx9_vaddr_flat_scratch", "AMDGPU/gfx9_vcc_64", "AMDGPU/gfx9_vdata128_0", "AMDGPU/gfx9_vdata32_0", "AMDGPU/gfx9_vdata64_0", "AMDGPU/gfx9_vdata96_0", "AMDGPU/gfx9_vdst128_0", "AMDGPU/gfx9_vdst32_0", "AMDGPU/gfx9_vdst64_0", "AMDGPU/gfx9_vdst96_0", "AMDGPU/gfx9_vsrc128_0", "AMDGPU/gfx9_vsrc32_0", "AMDGPU/gfx9_vsrc32_1", "AMDGPU/gfx9_vsrc64_0", "AMDGPU/gfx9_waitcnt", "AMDGPUDwarfProposalForHeterogeneousDebugging", "AMDGPUInstructionNotation", "AMDGPUInstructionSyntax", "AMDGPUModifierSyntax", "AMDGPUOperandSyntax", "AMDGPUUsage", "AddingConstrainedIntrinsics", "AdvancedBuilds", "AliasAnalysis", "Atomics", "Benchmarking", "BigEndianNEON", "BitCodeFormat", "BlockFrequencyTerminology", "BranchWeightMetadata", "BugLifeCycle", "Bugpoint", "BugpointRedesign", "BuildingADistribution", "CFIVerify", "CMake", "CMakePrimer", "CodeGenerator", "CodeOfConduct", "CodeReview", "CodingStandards", "CommandGuide/FileCheck", "CommandGuide/bugpoint", "CommandGuide/dsymutil", "CommandGuide/index", "CommandGuide/lit", "CommandGuide/llc", "CommandGuide/lli", "CommandGuide/llvm-addr2line", "CommandGuide/llvm-ar", "CommandGuide/llvm-as", "CommandGuide/llvm-bcanalyzer", "CommandGuide/llvm-build", "CommandGuide/llvm-config", "CommandGuide/llvm-cov", "CommandGuide/llvm-cxxfilt", "CommandGuide/llvm-cxxmap", "CommandGuide/llvm-diff", "CommandGuide/llvm-dis", "CommandGuide/llvm-dwarfdump", "CommandGuide/llvm-exegesis", "CommandGuide/llvm-extract", "CommandGuide/llvm-lib", "CommandGuide/llvm-link", "CommandGuide/llvm-lipo", "CommandGuide/llvm-locstats", "CommandGuide/llvm-mca", "CommandGuide/llvm-nm", "CommandGuide/llvm-objcopy", "CommandGuide/llvm-objdump", "CommandGuide/llvm-pdbutil", "CommandGuide/llvm-profdata", "CommandGuide/llvm-ranlib", "CommandGuide/llvm-readelf", "CommandGuide/llvm-readobj", "CommandGuide/llvm-size", "CommandGuide/llvm-stress", "CommandGuide/llvm-strings", "CommandGuide/llvm-strip", "CommandGuide/llvm-symbolizer", "CommandGuide/opt", "CommandGuide/tblgen", "CommandLine", "CompileCudaWithLLVM", "CompilerWriterInfo", "Contributing", "Coroutines", "CoverageMappingFormat", "DebuggingJITedCode", "DependenceGraphs/index", "DeveloperPolicy", "Docker", "ExceptionHandling", "ExtendingLLVM", "Extensions", "FAQ", "FaultMaps", "Frontend/PerformanceTips", "FuzzingLLVM", "GarbageCollection", "GetElementPtr", "GettingInvolved", "GettingStarted", "GettingStartedTutorials", "GettingStartedVS", "GitBisecting", "GlobalISel/GMIR", "GlobalISel/GenericOpcode", "GlobalISel/IRTranslator", "GlobalISel/InstructionSelect", "GlobalISel/KnownBits", "GlobalISel/Legalizer", "GlobalISel/Pipeline", "GlobalISel/Porting", "GlobalISel/RegBankSelect", "GlobalISel/Resources", "GlobalISel/index", "GoldPlugin", "GwpAsan", "HowToAddABuilder", "HowToBuildOnARM", "HowToBuildWithPGO", "HowToCrossCompileBuiltinsOnArm", "HowToCrossCompileLLVM", "HowToReleaseLLVM", "HowToSetUpLLVMStyleRTTI", "HowToSubmitABug", "HowToUpdateDebugInfo", "HowToUseAttributes", "HowToUseInstrMappings", "InAlloca", "LLVMBuild", "LangRef", "Lexicon", "LibFuzzer", "LinkTimeOptimization", "LoopTerminology", "MCJITDesignAndImplementation", "MIRLangRef", "MarkdownQuickstartTemplate", "MarkedUpDisassembly", "MeetupGuidelines", "MemTagSanitizer", "MemorySSA", "MergeFunctions", "NVPTXUsage", "ORCv2", "OptBisect", "PDB/CodeViewSymbols", "PDB/CodeViewTypes", "PDB/DbiStream", "PDB/GlobalStream", "PDB/HashTable", "PDB/ModiStream", "PDB/MsfFile", "PDB/PdbStream", "PDB/PublicStream", "PDB/TpiStream", "PDB/index", "Packaging", "Passes", "Phabricator", "ProgrammersManual", "Projects", "Proposals/GitHubMove", "Proposals/LLVMLibC", "Proposals/TestSuite", "Proposals/VariableNames", "Proposals/VectorPredication", "Proposals/VectorizationPlan", "Reference", "ReleaseNotes", "ReleaseProcess", "Remarks", "ReportingGuide", "ScudoHardenedAllocator", "Security", "SegmentedStacks", "SourceLevelDebugging", "SpeculativeLoadHardening", "SphinxQuickstartTemplate", "StackMaps", "StackSafetyAnalysis", "Statepoints", "SupportLibrary", "SystemLibrary", "TableGen/BackEnds", "TableGen/Deficiencies", "TableGen/LangIntro", "TableGen/LangRef", "TableGen/index", "TableGenFundamentals", "TestSuiteGuide", "TestSuiteMakefileGuide", "TestingGuide", "TransformMetadata", "TypeMetadata", "UserGuides", "Vectorizers", "WritingAnLLVMBackend", "WritingAnLLVMPass", "XRay", "XRayExample", "XRayFDRFormat", "YamlIO", "index", "tutorial/BuildingAJIT1", "tutorial/BuildingAJIT2", "tutorial/BuildingAJIT3", "tutorial/BuildingAJIT4", "tutorial/BuildingAJIT5", "tutorial/LangImpl01", "tutorial/LangImpl02", "tutorial/LangImpl03", "tutorial/LangImpl04", "tutorial/LangImpl05", "tutorial/LangImpl06", "tutorial/LangImpl07", "tutorial/LangImpl08", "tutorial/LangImpl09", "tutorial/LangImpl10", "tutorial/MyFirstLanguageFrontend/LangImpl01", "tutorial/MyFirstLanguageFrontend/LangImpl02", "tutorial/MyFirstLanguageFrontend/LangImpl03", "tutorial/MyFirstLanguageFrontend/LangImpl04", "tutorial/MyFirstLanguageFrontend/LangImpl05", "tutorial/MyFirstLanguageFrontend/LangImpl06", "tutorial/MyFirstLanguageFrontend/LangImpl07", "tutorial/MyFirstLanguageFrontend/LangImpl08", "tutorial/MyFirstLanguageFrontend/LangImpl09", "tutorial/MyFirstLanguageFrontend/LangImpl10", "tutorial/MyFirstLanguageFrontend/index", "tutorial/OCamlLangImpl1", "tutorial/OCamlLangImpl2", "tutorial/OCamlLangImpl3", "tutorial/OCamlLangImpl4", "tutorial/OCamlLangImpl5", "tutorial/OCamlLangImpl6", "tutorial/OCamlLangImpl7", "tutorial/OCamlLangImpl8", "tutorial/index", "yaml2obj"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2}, "filenames": ["AMDGPU/AMDGPUAsmGFX10.rst", "AMDGPU/AMDGPUAsmGFX1011.rst", "AMDGPU/AMDGPUAsmGFX7.rst", "AMDGPU/AMDGPUAsmGFX8.rst", "AMDGPU/AMDGPUAsmGFX9.rst", "AMDGPU/AMDGPUAsmGFX900.rst", "AMDGPU/AMDGPUAsmGFX904.rst", "AMDGPU/AMDGPUAsmGFX906.rst", "AMDGPU/AMDGPUAsmGFX908.rst", "AMDGPU/gfx1011_src32_0.rst", "AMDGPU/gfx1011_src32_1.rst", "AMDGPU/gfx1011_type_dev.rst", "AMDGPU/gfx1011_vdst32_0.rst", "AMDGPU/gfx1011_vsrc32_0.rst", "AMDGPU/gfx10_addr_buf.rst", "AMDGPU/gfx10_addr_ds.rst", "AMDGPU/gfx10_addr_flat.rst", "AMDGPU/gfx10_addr_mimg.rst", "AMDGPU/gfx10_attr.rst", "AMDGPU/gfx10_base_smem_addr.rst", "AMDGPU/gfx10_base_smem_buf.rst", "AMDGPU/gfx10_base_smem_scratch.rst", "AMDGPU/gfx10_bimm16.rst", "AMDGPU/gfx10_bimm32.rst", "AMDGPU/gfx10_data_buf_atomic128.rst", "AMDGPU/gfx10_data_buf_atomic32.rst", "AMDGPU/gfx10_data_buf_atomic64.rst", "AMDGPU/gfx10_data_mimg_atomic_cmp.rst", "AMDGPU/gfx10_data_mimg_atomic_reg.rst", "AMDGPU/gfx10_data_mimg_store.rst", "AMDGPU/gfx10_data_mimg_store_d16.rst", "AMDGPU/gfx10_data_smem_atomic128.rst", "AMDGPU/gfx10_data_smem_atomic32.rst", "AMDGPU/gfx10_data_smem_atomic64.rst", "AMDGPU/gfx10_dst_buf_128.rst", "AMDGPU/gfx10_dst_buf_32.rst", "AMDGPU/gfx10_dst_buf_64.rst", "AMDGPU/gfx10_dst_buf_96.rst", "AMDGPU/gfx10_dst_buf_lds.rst", "AMDGPU/gfx10_dst_flat_atomic32.rst", "AMDGPU/gfx10_dst_flat_atomic64.rst", "AMDGPU/gfx10_dst_mimg_gather4.rst", "AMDGPU/gfx10_dst_mimg_regular.rst", "AMDGPU/gfx10_dst_mimg_regular_d16.rst", "AMDGPU/gfx10_fimm16.rst", "AMDGPU/gfx10_fimm32.rst", "AMDGPU/gfx10_hwreg.rst", "AMDGPU/gfx10_label.rst", "AMDGPU/gfx10_mad_type_dev.rst", "AMDGPU/gfx10_mod_dpp_sdwa_abs_neg.rst", "AMDGPU/gfx10_mod_sdwa_sext.rst", "AMDGPU/gfx10_mod_vop3_abs_neg.rst", "AMDGPU/gfx10_msg.rst", "AMDGPU/gfx10_offset_buf.rst", "AMDGPU/gfx10_offset_smem_buf.rst", "AMDGPU/gfx10_offset_smem_plain.rst", "AMDGPU/gfx10_opt.rst", "AMDGPU/gfx10_param.rst", "AMDGPU/gfx10_perm_smem.rst", "AMDGPU/gfx10_ret.rst", "AMDGPU/gfx10_rsrc_buf.rst", "AMDGPU/gfx10_rsrc_mimg.rst", "AMDGPU/gfx10_saddr_flat_global.rst", "AMDGPU/gfx10_saddr_flat_scratch.rst", "AMDGPU/gfx10_samp_mimg.rst", "AMDGPU/gfx10_sdata128_0.rst", "AMDGPU/gfx10_sdata32_0.rst", "AMDGPU/gfx10_sdata64_0.rst", "AMDGPU/gfx10_sdst128_0.rst", "AMDGPU/gfx10_sdst256_0.rst", "AMDGPU/gfx10_sdst32_0.rst", "AMDGPU/gfx10_sdst32_1.rst", "AMDGPU/gfx10_sdst32_2.rst", "AMDGPU/gfx10_sdst512_0.rst", "AMDGPU/gfx10_sdst64_0.rst", "AMDGPU/gfx10_sdst64_1.rst", "AMDGPU/gfx10_simm16.rst", "AMDGPU/gfx10_src32_0.rst", "AMDGPU/gfx10_src32_1.rst", "AMDGPU/gfx10_src32_2.rst", "AMDGPU/gfx10_src32_3.rst", "AMDGPU/gfx10_src64_0.rst", "AMDGPU/gfx10_src_exp.rst", "AMDGPU/gfx10_ssrc32_0.rst", "AMDGPU/gfx10_ssrc32_1.rst", "AMDGPU/gfx10_ssrc32_2.rst", "AMDGPU/gfx10_ssrc32_3.rst", "AMDGPU/gfx10_ssrc32_4.rst", "AMDGPU/gfx10_ssrc32_5.rst", "AMDGPU/gfx10_ssrc64_0.rst", "AMDGPU/gfx10_ssrc64_1.rst", "AMDGPU/gfx10_tgt.rst", "AMDGPU/gfx10_type_dev.rst", "AMDGPU/gfx10_uimm16.rst", "AMDGPU/gfx10_vaddr_flat_global.rst", "AMDGPU/gfx10_vaddr_flat_scratch.rst", "AMDGPU/gfx10_vcc_32.rst", "AMDGPU/gfx10_vdata128_0.rst", "AMDGPU/gfx10_vdata32_0.rst", "AMDGPU/gfx10_vdata64_0.rst", "AMDGPU/gfx10_vdata96_0.rst", "AMDGPU/gfx10_vdst128_0.rst", "AMDGPU/gfx10_vdst32_0.rst", "AMDGPU/gfx10_vdst64_0.rst", "AMDGPU/gfx10_vdst96_0.rst", "AMDGPU/gfx10_vsrc128_0.rst", "AMDGPU/gfx10_vsrc32_0.rst", "AMDGPU/gfx10_vsrc32_1.rst", "AMDGPU/gfx10_vsrc64_0.rst", "AMDGPU/gfx10_waitcnt.rst", "AMDGPU/gfx10_wsdst.rst", "AMDGPU/gfx10_wssrc.rst", "AMDGPU/gfx7_addr_buf.rst", "AMDGPU/gfx7_addr_ds.rst", "AMDGPU/gfx7_addr_flat.rst", "AMDGPU/gfx7_addr_mimg.rst", "AMDGPU/gfx7_attr.rst", "AMDGPU/gfx7_base_smem_addr.rst", "AMDGPU/gfx7_base_smem_buf.rst", "AMDGPU/gfx7_bimm16.rst", "AMDGPU/gfx7_bimm32.rst", "AMDGPU/gfx7_data_buf_atomic128.rst", "AMDGPU/gfx7_data_buf_atomic32.rst", "AMDGPU/gfx7_data_buf_atomic64.rst", "AMDGPU/gfx7_data_mimg_atomic_cmp.rst", "AMDGPU/gfx7_data_mimg_atomic_reg.rst", "AMDGPU/gfx7_data_mimg_store.rst", "AMDGPU/gfx7_dst_buf_128.rst", "AMDGPU/gfx7_dst_buf_64.rst", "AMDGPU/gfx7_dst_buf_96.rst", "AMDGPU/gfx7_dst_buf_lds.rst", "AMDGPU/gfx7_dst_flat_atomic32.rst", "AMDGPU/gfx7_dst_flat_atomic64.rst", "AMDGPU/gfx7_dst_mimg_gather4.rst", "AMDGPU/gfx7_dst_mimg_regular.rst", "AMDGPU/gfx7_fimm32.rst", "AMDGPU/gfx7_hwreg.rst", "AMDGPU/gfx7_label.rst", "AMDGPU/gfx7_mod.rst", "AMDGPU/gfx7_msg.rst", "AMDGPU/gfx7_offset_buf.rst", "AMDGPU/gfx7_offset_smem.rst", "AMDGPU/gfx7_opt.rst", "AMDGPU/gfx7_param.rst", "AMDGPU/gfx7_ret.rst", "AMDGPU/gfx7_rsrc_buf.rst", "AMDGPU/gfx7_rsrc_mimg.rst", "AMDGPU/gfx7_samp_mimg.rst", "AMDGPU/gfx7_sdst128_0.rst", "AMDGPU/gfx7_sdst256_0.rst", "AMDGPU/gfx7_sdst32_0.rst", "AMDGPU/gfx7_sdst32_1.rst", "AMDGPU/gfx7_sdst32_2.rst", "AMDGPU/gfx7_sdst512_0.rst", "AMDGPU/gfx7_sdst64_0.rst", "AMDGPU/gfx7_sdst64_1.rst", "AMDGPU/gfx7_simm16.rst", "AMDGPU/gfx7_src32_0.rst", "AMDGPU/gfx7_src32_1.rst", "AMDGPU/gfx7_src32_2.rst", "AMDGPU/gfx7_src32_3.rst", "AMDGPU/gfx7_src32_4.rst", "AMDGPU/gfx7_src32_5.rst", "AMDGPU/gfx7_src32_6.rst", "AMDGPU/gfx7_src64_0.rst", "AMDGPU/gfx7_src64_1.rst", "AMDGPU/gfx7_src64_2.rst", "AMDGPU/gfx7_src_exp.rst", "AMDGPU/gfx7_ssrc32_0.rst", "AMDGPU/gfx7_ssrc32_1.rst", "AMDGPU/gfx7_ssrc32_2.rst", "AMDGPU/gfx7_ssrc32_3.rst", "AMDGPU/gfx7_ssrc32_4.rst", "AMDGPU/gfx7_ssrc32_5.rst", "AMDGPU/gfx7_ssrc32_6.rst", "AMDGPU/gfx7_ssrc64_0.rst", "AMDGPU/gfx7_ssrc64_1.rst", "AMDGPU/gfx7_ssrc64_2.rst", "AMDGPU/gfx7_ssrc64_3.rst", "AMDGPU/gfx7_tgt.rst", "AMDGPU/gfx7_type_dev.rst", "AMDGPU/gfx7_uimm16.rst", "AMDGPU/gfx7_vcc_64.rst", "AMDGPU/gfx7_vdata128_0.rst", "AMDGPU/gfx7_vdata32_0.rst", "AMDGPU/gfx7_vdata64_0.rst", "AMDGPU/gfx7_vdata96_0.rst", "AMDGPU/gfx7_vdst128_0.rst", "AMDGPU/gfx7_vdst32_0.rst", "AMDGPU/gfx7_vdst64_0.rst", "AMDGPU/gfx7_vdst96_0.rst", "AMDGPU/gfx7_vsrc128_0.rst", "AMDGPU/gfx7_vsrc32_0.rst", "AMDGPU/gfx7_vsrc32_1.rst", "AMDGPU/gfx7_vsrc64_0.rst", "AMDGPU/gfx7_waitcnt.rst", "AMDGPU/gfx8_addr_buf.rst", "AMDGPU/gfx8_addr_ds.rst", "AMDGPU/gfx8_addr_flat.rst", "AMDGPU/gfx8_addr_mimg.rst", "AMDGPU/gfx8_attr.rst", "AMDGPU/gfx8_base_smem_addr.rst", "AMDGPU/gfx8_base_smem_buf.rst", "AMDGPU/gfx8_bimm16.rst", "AMDGPU/gfx8_bimm32.rst", "AMDGPU/gfx8_data_buf_atomic128.rst", "AMDGPU/gfx8_data_buf_atomic32.rst", "AMDGPU/gfx8_data_buf_atomic64.rst", "AMDGPU/gfx8_data_buf_d16_128.rst", "AMDGPU/gfx8_data_buf_d16_32.rst", "AMDGPU/gfx8_data_buf_d16_64.rst", "AMDGPU/gfx8_data_buf_d16_96.rst", "AMDGPU/gfx8_data_mimg_atomic_cmp.rst", "AMDGPU/gfx8_data_mimg_atomic_reg.rst", "AMDGPU/gfx8_data_mimg_store.rst", "AMDGPU/gfx8_data_mimg_store_d16.rst", "AMDGPU/gfx8_dst_buf_128.rst", "AMDGPU/gfx8_dst_buf_64.rst", "AMDGPU/gfx8_dst_buf_96.rst", "AMDGPU/gfx8_dst_buf_d16_128.rst", "AMDGPU/gfx8_dst_buf_d16_32.rst", "AMDGPU/gfx8_dst_buf_d16_64.rst", "AMDGPU/gfx8_dst_buf_d16_96.rst", "AMDGPU/gfx8_dst_buf_lds.rst", "AMDGPU/gfx8_dst_flat_atomic32.rst", "AMDGPU/gfx8_dst_flat_atomic64.rst", "AMDGPU/gfx8_dst_mimg_gather4.rst", "AMDGPU/gfx8_dst_mimg_regular.rst", "AMDGPU/gfx8_dst_mimg_regular_d16.rst", "AMDGPU/gfx8_fimm16.rst", "AMDGPU/gfx8_fimm32.rst", "AMDGPU/gfx8_hwreg.rst", "AMDGPU/gfx8_imask.rst", "AMDGPU/gfx8_label.rst", "AMDGPU/gfx8_mod_dpp_sdwa_abs_neg.rst", "AMDGPU/gfx8_mod_sdwa_sext.rst", "AMDGPU/gfx8_mod_vop3_abs_neg.rst", "AMDGPU/gfx8_msg.rst", "AMDGPU/gfx8_offset_buf.rst", "AMDGPU/gfx8_offset_smem_load.rst", "AMDGPU/gfx8_offset_smem_store.rst", "AMDGPU/gfx8_opt.rst", "AMDGPU/gfx8_param.rst", "AMDGPU/gfx8_perm_smem.rst", "AMDGPU/gfx8_ret.rst", "AMDGPU/gfx8_rsrc_buf.rst", "AMDGPU/gfx8_rsrc_mimg.rst", "AMDGPU/gfx8_samp_mimg.rst", "AMDGPU/gfx8_sdata128_0.rst", "AMDGPU/gfx8_sdata32_0.rst", "AMDGPU/gfx8_sdata64_0.rst", "AMDGPU/gfx8_sdst128_0.rst", "AMDGPU/gfx8_sdst256_0.rst", "AMDGPU/gfx8_sdst32_0.rst", "AMDGPU/gfx8_sdst32_1.rst", "AMDGPU/gfx8_sdst32_2.rst", "AMDGPU/gfx8_sdst512_0.rst", "AMDGPU/gfx8_sdst64_0.rst", "AMDGPU/gfx8_sdst64_1.rst", "AMDGPU/gfx8_simm16.rst", "AMDGPU/gfx8_src32_0.rst", "AMDGPU/gfx8_src32_1.rst", "AMDGPU/gfx8_src32_2.rst", "AMDGPU/gfx8_src32_3.rst", "AMDGPU/gfx8_src64_0.rst", "AMDGPU/gfx8_src64_1.rst", "AMDGPU/gfx8_src_exp.rst", "AMDGPU/gfx8_ssrc32_0.rst", "AMDGPU/gfx8_ssrc32_1.rst", "AMDGPU/gfx8_ssrc32_2.rst", "AMDGPU/gfx8_ssrc32_3.rst", "AMDGPU/gfx8_ssrc32_4.rst", "AMDGPU/gfx8_ssrc64_0.rst", "AMDGPU/gfx8_ssrc64_1.rst", "AMDGPU/gfx8_ssrc64_2.rst", "AMDGPU/gfx8_ssrc64_3.rst", "AMDGPU/gfx8_tgt.rst", "AMDGPU/gfx8_type_dev.rst", "AMDGPU/gfx8_uimm16.rst", "AMDGPU/gfx8_vcc_64.rst", "AMDGPU/gfx8_vdata128_0.rst", "AMDGPU/gfx8_vdata32_0.rst", "AMDGPU/gfx8_vdata64_0.rst", "AMDGPU/gfx8_vdata96_0.rst", "AMDGPU/gfx8_vdst128_0.rst", "AMDGPU/gfx8_vdst32_0.rst", "AMDGPU/gfx8_vdst64_0.rst", "AMDGPU/gfx8_vdst96_0.rst", "AMDGPU/gfx8_vsrc128_0.rst", "AMDGPU/gfx8_vsrc32_0.rst", "AMDGPU/gfx8_vsrc32_1.rst", "AMDGPU/gfx8_vsrc64_0.rst", "AMDGPU/gfx8_waitcnt.rst", "AMDGPU/gfx900_mad_type_dev.rst", "AMDGPU/gfx900_mod_vop3_abs_neg.rst", "AMDGPU/gfx900_src32_0.rst", "AMDGPU/gfx900_src32_1.rst", "AMDGPU/gfx900_vdst32_0.rst", "AMDGPU/gfx904_mad_type_dev.rst", "AMDGPU/gfx904_mod_vop3_abs_neg.rst", "AMDGPU/gfx904_src32_0.rst", "AMDGPU/gfx904_src32_1.rst", "AMDGPU/gfx904_vdst32_0.rst", "AMDGPU/gfx906_mad_type_dev.rst", "AMDGPU/gfx906_mod_dpp_sdwa_abs_neg.rst", "AMDGPU/gfx906_mod_sdwa_sext.rst", "AMDGPU/gfx906_mod_vop3_abs_neg.rst", "AMDGPU/gfx906_src32_0.rst", "AMDGPU/gfx906_src32_1.rst", "AMDGPU/gfx906_src32_2.rst", "AMDGPU/gfx906_type_dev.rst", "AMDGPU/gfx906_vdst32_0.rst", "AMDGPU/gfx906_vsrc32_0.rst", "AMDGPU/gfx908_addr_buf.rst", "AMDGPU/gfx908_adst1024_0.rst", "AMDGPU/gfx908_adst128_0.rst", "AMDGPU/gfx908_adst32_0.rst", "AMDGPU/gfx908_adst512_0.rst", "AMDGPU/gfx908_asrc1024_0.rst", "AMDGPU/gfx908_asrc128_0.rst", "AMDGPU/gfx908_asrc32_0.rst", "AMDGPU/gfx908_asrc512_0.rst", "AMDGPU/gfx908_data_buf_atomic32.rst", "AMDGPU/gfx908_dst_flat_atomic32.rst", "AMDGPU/gfx908_mad_type_dev.rst", "AMDGPU/gfx908_mod_dpp_sdwa_abs_neg.rst", "AMDGPU/gfx908_mod_sdwa_sext.rst", "AMDGPU/gfx908_mod_vop3_abs_neg.rst", "AMDGPU/gfx908_offset_buf.rst", "AMDGPU/gfx908_opt.rst", "AMDGPU/gfx908_ret.rst", "AMDGPU/gfx908_rsrc_buf.rst", "AMDGPU/gfx908_saddr_flat_global.rst", "AMDGPU/gfx908_src32_0.rst", "AMDGPU/gfx908_src32_1.rst", "AMDGPU/gfx908_src32_2.rst", "AMDGPU/gfx908_src32_3.rst", "AMDGPU/gfx908_type_dev.rst", "AMDGPU/gfx908_vaddr_flat_global.rst", "AMDGPU/gfx908_vasrc32_0.rst", "AMDGPU/gfx908_vasrc64_0.rst", "AMDGPU/gfx908_vdata32_0.rst", "AMDGPU/gfx908_vdst32_0.rst", "AMDGPU/gfx908_vsrc32_0.rst", "AMDGPU/gfx9_addr_buf.rst", "AMDGPU/gfx9_addr_ds.rst", "AMDGPU/gfx9_addr_flat.rst", "AMDGPU/gfx9_addr_mimg.rst", "AMDGPU/gfx9_attr.rst", "AMDGPU/gfx9_base_smem_addr.rst", "AMDGPU/gfx9_base_smem_buf.rst", "AMDGPU/gfx9_base_smem_scratch.rst", "AMDGPU/gfx9_bimm16.rst", "AMDGPU/gfx9_bimm32.rst", "AMDGPU/gfx9_data_buf_atomic128.rst", "AMDGPU/gfx9_data_buf_atomic32.rst", "AMDGPU/gfx9_data_buf_atomic64.rst", "AMDGPU/gfx9_data_mimg_atomic_cmp.rst", "AMDGPU/gfx9_data_mimg_atomic_reg.rst", "AMDGPU/gfx9_data_mimg_store.rst", "AMDGPU/gfx9_data_mimg_store_d16.rst", "AMDGPU/gfx9_data_smem_atomic128.rst", "AMDGPU/gfx9_data_smem_atomic32.rst", "AMDGPU/gfx9_data_smem_atomic64.rst", "AMDGPU/gfx9_dst_buf_128.rst", "AMDGPU/gfx9_dst_buf_32.rst", "AMDGPU/gfx9_dst_buf_64.rst", "AMDGPU/gfx9_dst_buf_96.rst", "AMDGPU/gfx9_dst_buf_lds.rst", "AMDGPU/gfx9_dst_flat_atomic32.rst", "AMDGPU/gfx9_dst_flat_atomic64.rst", "AMDGPU/gfx9_dst_mimg_gather4.rst", "AMDGPU/gfx9_dst_mimg_regular.rst", "AMDGPU/gfx9_dst_mimg_regular_d16.rst", "AMDGPU/gfx9_fimm16.rst", "AMDGPU/gfx9_fimm32.rst", "AMDGPU/gfx9_hwreg.rst", "AMDGPU/gfx9_imask.rst", "AMDGPU/gfx9_label.rst", "AMDGPU/gfx9_mod_dpp_sdwa_abs_neg.rst", "AMDGPU/gfx9_mod_sdwa_sext.rst", "AMDGPU/gfx9_mod_vop3_abs_neg.rst", "AMDGPU/gfx9_msg.rst", "AMDGPU/gfx9_offset_buf.rst", "AMDGPU/gfx9_offset_smem_buf.rst", "AMDGPU/gfx9_offset_smem_plain.rst", "AMDGPU/gfx9_opt.rst", "AMDGPU/gfx9_param.rst", "AMDGPU/gfx9_perm_smem.rst", "AMDGPU/gfx9_ret.rst", "AMDGPU/gfx9_rsrc_buf.rst", "AMDGPU/gfx9_rsrc_mimg.rst", "AMDGPU/gfx9_saddr_flat_global.rst", "AMDGPU/gfx9_saddr_flat_scratch.rst", "AMDGPU/gfx9_samp_mimg.rst", "AMDGPU/gfx9_sdata128_0.rst", "AMDGPU/gfx9_sdata32_0.rst", "AMDGPU/gfx9_sdata64_0.rst", "AMDGPU/gfx9_sdst128_0.rst", "AMDGPU/gfx9_sdst256_0.rst", "AMDGPU/gfx9_sdst32_0.rst", "AMDGPU/gfx9_sdst32_1.rst", "AMDGPU/gfx9_sdst32_2.rst", "AMDGPU/gfx9_sdst512_0.rst", "AMDGPU/gfx9_sdst64_0.rst", "AMDGPU/gfx9_sdst64_1.rst", "AMDGPU/gfx9_simm16.rst", "AMDGPU/gfx9_src32_0.rst", "AMDGPU/gfx9_src32_1.rst", "AMDGPU/gfx9_src32_2.rst", "AMDGPU/gfx9_src32_3.rst", "AMDGPU/gfx9_src64_0.rst", "AMDGPU/gfx9_src64_1.rst", "AMDGPU/gfx9_src_exp.rst", "AMDGPU/gfx9_ssrc32_0.rst", "AMDGPU/gfx9_ssrc32_1.rst", "AMDGPU/gfx9_ssrc32_2.rst", "AMDGPU/gfx9_ssrc32_3.rst", "AMDGPU/gfx9_ssrc32_4.rst", "AMDGPU/gfx9_ssrc64_0.rst", "AMDGPU/gfx9_ssrc64_1.rst", "AMDGPU/gfx9_ssrc64_2.rst", "AMDGPU/gfx9_ssrc64_3.rst", "AMDGPU/gfx9_tgt.rst", "AMDGPU/gfx9_type_dev.rst", "AMDGPU/gfx9_uimm16.rst", "AMDGPU/gfx9_vaddr_flat_global.rst", "AMDGPU/gfx9_vaddr_flat_scratch.rst", "AMDGPU/gfx9_vcc_64.rst", "AMDGPU/gfx9_vdata128_0.rst", "AMDGPU/gfx9_vdata32_0.rst", "AMDGPU/gfx9_vdata64_0.rst", "AMDGPU/gfx9_vdata96_0.rst", "AMDGPU/gfx9_vdst128_0.rst", "AMDGPU/gfx9_vdst32_0.rst", "AMDGPU/gfx9_vdst64_0.rst", "AMDGPU/gfx9_vdst96_0.rst", "AMDGPU/gfx9_vsrc128_0.rst", "AMDGPU/gfx9_vsrc32_0.rst", "AMDGPU/gfx9_vsrc32_1.rst", "AMDGPU/gfx9_vsrc64_0.rst", "AMDGPU/gfx9_waitcnt.rst", "AMDGPUDwarfProposalForHeterogeneousDebugging.rst", "AMDGPUInstructionNotation.rst", "AMDGPUInstructionSyntax.rst", "AMDGPUModifierSyntax.rst", "AMDGPUOperandSyntax.rst", "AMDGPUUsage.rst", "AddingConstrainedIntrinsics.rst", "AdvancedBuilds.rst", "AliasAnalysis.rst", "Atomics.rst", "Benchmarking.rst", "BigEndianNEON.rst", "BitCodeFormat.rst", "BlockFrequencyTerminology.rst", "BranchWeightMetadata.rst", "BugLifeCycle.rst", "Bugpoint.rst", "BugpointRedesign.md", "BuildingADistribution.rst", "CFIVerify.rst", "CMake.rst", "CMakePrimer.rst", "CodeGenerator.rst", "CodeOfConduct.rst", "CodeReview.rst", "CodingStandards.rst", "CommandGuide/FileCheck.rst", "CommandGuide/bugpoint.rst", "CommandGuide/dsymutil.rst", "CommandGuide/index.rst", "CommandGuide/lit.rst", "CommandGuide/llc.rst", "CommandGuide/lli.rst", "CommandGuide/llvm-addr2line.rst", "CommandGuide/llvm-ar.rst", "CommandGuide/llvm-as.rst", "CommandGuide/llvm-bcanalyzer.rst", "CommandGuide/llvm-build.rst", "CommandGuide/llvm-config.rst", "CommandGuide/llvm-cov.rst", "CommandGuide/llvm-cxxfilt.rst", "CommandGuide/llvm-cxxmap.rst", "CommandGuide/llvm-diff.rst", "CommandGuide/llvm-dis.rst", "CommandGuide/llvm-dwarfdump.rst", "CommandGuide/llvm-exegesis.rst", "CommandGuide/llvm-extract.rst", "CommandGuide/llvm-lib.rst", "CommandGuide/llvm-link.rst", "CommandGuide/llvm-lipo.rst", "CommandGuide/llvm-locstats.rst", "CommandGuide/llvm-mca.rst", "CommandGuide/llvm-nm.rst", "CommandGuide/llvm-objcopy.rst", "CommandGuide/llvm-objdump.rst", "CommandGuide/llvm-pdbutil.rst", "CommandGuide/llvm-profdata.rst", "CommandGuide/llvm-ranlib.rst", "CommandGuide/llvm-readelf.rst", "CommandGuide/llvm-readobj.rst", "CommandGuide/llvm-size.rst", "CommandGuide/llvm-stress.rst", "CommandGuide/llvm-strings.rst", "CommandGuide/llvm-strip.rst", "CommandGuide/llvm-symbolizer.rst", "CommandGuide/opt.rst", "CommandGuide/tblgen.rst", "CommandLine.rst", "CompileCudaWithLLVM.rst", "CompilerWriterInfo.rst", "Contributing.rst", "Coroutines.rst", "CoverageMappingFormat.rst", "DebuggingJITedCode.rst", "DependenceGraphs/index.rst", "DeveloperPolicy.rst", "Docker.rst", "ExceptionHandling.rst", "ExtendingLLVM.rst", "Extensions.rst", "FAQ.rst", "FaultMaps.rst", "Frontend/PerformanceTips.rst", "FuzzingLLVM.rst", "GarbageCollection.rst", "GetElementPtr.rst", "GettingInvolved.rst", "GettingStarted.rst", "GettingStartedTutorials.rst", "GettingStartedVS.rst", "GitBisecting.rst", "GlobalISel/GMIR.rst", "GlobalISel/GenericOpcode.rst", "GlobalISel/IRTranslator.rst", "GlobalISel/InstructionSelect.rst", "GlobalISel/KnownBits.rst", "GlobalISel/Legalizer.rst", "GlobalISel/Pipeline.rst", "GlobalISel/Porting.rst", "GlobalISel/RegBankSelect.rst", "GlobalISel/Resources.rst", "GlobalISel/index.rst", "GoldPlugin.rst", "GwpAsan.rst", "HowToAddABuilder.rst", "HowToBuildOnARM.rst", "HowToBuildWithPGO.rst", "HowToCrossCompileBuiltinsOnArm.rst", "HowToCrossCompileLLVM.rst", "HowToReleaseLLVM.rst", "HowToSetUpLLVMStyleRTTI.rst", "HowToSubmitABug.rst", "HowToUpdateDebugInfo.rst", "HowToUseAttributes.rst", "HowToUseInstrMappings.rst", "InAlloca.rst", "LLVMBuild.rst", "LangRef.rst", "Lexicon.rst", "LibFuzzer.rst", "LinkTimeOptimization.rst", "LoopTerminology.rst", "MCJITDesignAndImplementation.rst", "MIRLangRef.rst", "MarkdownQuickstartTemplate.md", "MarkedUpDisassembly.rst", "MeetupGuidelines.rst", "MemTagSanitizer.rst", "MemorySSA.rst", "MergeFunctions.rst", "NVPTXUsage.rst", "ORCv2.rst", "OptBisect.rst", "PDB/CodeViewSymbols.rst", "PDB/CodeViewTypes.rst", "PDB/DbiStream.rst", "PDB/GlobalStream.rst", "PDB/HashTable.rst", "PDB/ModiStream.rst", "PDB/MsfFile.rst", "PDB/PdbStream.rst", "PDB/PublicStream.rst", "PDB/TpiStream.rst", "PDB/index.rst", "Packaging.rst", "Passes.rst", "Phabricator.rst", "ProgrammersManual.rst", "Projects.rst", "Proposals/GitHubMove.rst", "Proposals/LLVMLibC.rst", "Proposals/TestSuite.rst", "Proposals/VariableNames.rst", "Proposals/VectorPredication.rst", "Proposals/VectorizationPlan.rst", "Reference.rst", "ReleaseNotes.rst", "ReleaseProcess.rst", "Remarks.rst", "ReportingGuide.rst", "ScudoHardenedAllocator.rst", "Security.rst", "SegmentedStacks.rst", "SourceLevelDebugging.rst", "SpeculativeLoadHardening.md", "SphinxQuickstartTemplate.rst", "StackMaps.rst", "StackSafetyAnalysis.rst", "Statepoints.rst", "SupportLibrary.rst", "SystemLibrary.rst", "TableGen/BackEnds.rst", "TableGen/Deficiencies.rst", "TableGen/LangIntro.rst", "TableGen/LangRef.rst", "TableGen/index.rst", "TableGenFundamentals.rst", "TestSuiteGuide.md", "TestSuiteMakefileGuide.rst", "TestingGuide.rst", "TransformMetadata.rst", "TypeMetadata.rst", "UserGuides.rst", "Vectorizers.rst", "WritingAnLLVMBackend.rst", "WritingAnLLVMPass.rst", "XRay.rst", "XRayExample.rst", "XRayFDRFormat.rst", "YamlIO.rst", "index.rst", "tutorial/BuildingAJIT1.rst", "tutorial/BuildingAJIT2.rst", "tutorial/BuildingAJIT3.rst", "tutorial/BuildingAJIT4.rst", "tutorial/BuildingAJIT5.rst", "tutorial/LangImpl01.rst", "tutorial/LangImpl02.rst", "tutorial/LangImpl03.rst", "tutorial/LangImpl04.rst", "tutorial/LangImpl05.rst", "tutorial/LangImpl06.rst", "tutorial/LangImpl07.rst", "tutorial/LangImpl08.rst", "tutorial/LangImpl09.rst", "tutorial/LangImpl10.rst", "tutorial/MyFirstLanguageFrontend/LangImpl01.rst", "tutorial/MyFirstLanguageFrontend/LangImpl02.rst", "tutorial/MyFirstLanguageFrontend/LangImpl03.rst", "tutorial/MyFirstLanguageFrontend/LangImpl04.rst", "tutorial/MyFirstLanguageFrontend/LangImpl05.rst", "tutorial/MyFirstLanguageFrontend/LangImpl06.rst", "tutorial/MyFirstLanguageFrontend/LangImpl07.rst", "tutorial/MyFirstLanguageFrontend/LangImpl08.rst", "tutorial/MyFirstLanguageFrontend/LangImpl09.rst", "tutorial/MyFirstLanguageFrontend/LangImpl10.rst", "tutorial/MyFirstLanguageFrontend/index.rst", "tutorial/OCamlLangImpl1.rst", "tutorial/OCamlLangImpl2.rst", "tutorial/OCamlLangImpl3.rst", "tutorial/OCamlLangImpl4.rst", "tutorial/OCamlLangImpl5.rst", "tutorial/OCamlLangImpl6.rst", "tutorial/OCamlLangImpl7.rst", "tutorial/OCamlLangImpl8.rst", "tutorial/index.rst", "yaml2obj.rst"], "indexentries": {"--accelerator": [[470, "cmdoption-dsymutil-accelerator", false]], "--add-dyldinfo": [[494, "cmdoption-llvm-nm-add-dyldinfo", false]], "--add-gnu-debuglink": [[495, "cmdoption-llvm-objcopy-add-gnu-debuglink", false]], "--add-inlinedinfo": [[494, "cmdoption-llvm-nm-add-inlinedinfo", false]], "--add-section": [[495, "cmdoption-llvm-objcopy-add-section", false]], "--add-symbol": [[495, "cmdoption-llvm-objcopy-add-symbol", false]], "--addresses": [[506, "cmdoption-llvm-symbolizer-print-address", false]], "--addrsig": [[500, "cmdoption-llvm-readelf-addrsig", false], [501, "cmdoption-llvm-readobj-addrsig", false]], "--adjust-start": [[495, "cmdoption-llvm-objcopy-change-start", false]], "--adjust-vma": [[496, "cmdoption-llvm-objdump-adjust-vma", false], [506, "cmdoption-llvm-symbolizer-adjust-vma", false]], "--all": [[486, "cmdoption-llvm-dwarfdump-a", false], [500, "cmdoption-llvm-readelf-all", false], [501, "cmdoption-llvm-readobj-all", false], [504, "cmdoption-llvm-strings-all", false]], "--all-blocks": [[481, "cmdoption-llvm-cov-gcov-a", false]], "--all-headers": [[496, "cmdoption-llvm-objdump-x", false]], "--allow-broken-links": [[495, "cmdoption-llvm-objcopy-allow-broken-links", false], [505, "cmdoption-llvm-strip-allow-broken-links", false]], "--allow-deprecated-dag-overlap": [[468, "cmdoption-FileCheck-allow-deprecated-dag-overlap", false]], "--apple-names": [[486, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--apple-namespaces": [[486, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--apple-objc": [[486, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--apple-types": [[486, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--arch": [[470, "cmdoption-dsymutil-arch", false], [486, "cmdoption-llvm-dwarfdump-arch", false], [494, "cmdoption-llvm-nm-arch", false], [496, "cmdoption-llvm-objdump-arch", false], [502, "cmdoption-llvm-size-arch", false]], "--arch-name": [[496, "cmdoption-llvm-objdump-arch-name", false]], "--arch-specific": [[500, "cmdoption-llvm-readelf-arch-specific", false], [501, "cmdoption-llvm-readobj-arch-specific", false]], "--archive-headers": [[496, "cmdoption-llvm-objdump-a", false]], "--archive-member-offsets": [[496, "cmdoption-llvm-objdump-archive-member-offsets", false]], "--basenames": [[506, "cmdoption-llvm-symbolizer-basenames", false]], "--binary-architecture": [[495, "cmdoption-llvm-objcopy-binary-architecture", false]], "--bind": [[496, "cmdoption-llvm-objdump-bind", false]], "--branch-counts": [[481, "cmdoption-llvm-cov-gcov-c", false]], "--branch-probabilities": [[481, "cmdoption-llvm-cov-gcov-b", false]], "--build-id-link-dir": [[495, "cmdoption-llvm-objcopy-build-id-link-dir", false]], "--build-id-link-input": [[495, "cmdoption-llvm-objcopy-build-id-link-input", false]], "--build-id-link-output": [[495, "cmdoption-llvm-objcopy-build-id-link-output", false]], "--bytes": [[504, "cmdoption-llvm-strings-bytes", false]], "--cfg": [[496, "cmdoption-llvm-objdump-cfg", false]], "--cg-profile": [[500, "cmdoption-llvm-readelf-cg-profile", false], [501, "cmdoption-llvm-readobj-cg-profile", false]], "--change-start": [[495, "cmdoption-llvm-objcopy-change-start", false]], "--check-prefix": [[468, "cmdoption-FileCheck-check-prefix", false]], "--check-prefixes": [[468, "cmdoption-FileCheck-check-prefixes", false]], "--codeview": [[501, "cmdoption-llvm-readobj-codeview", false]], "--codeview-ghash": [[501, "cmdoption-llvm-readobj-codeview-ghash", false]], "--codeview-merged-types": [[501, "cmdoption-llvm-readobj-codeview-merged-types", false]], "--codeview-subsection-bytes": [[501, "cmdoption-llvm-readobj-codeview-subsection-bytes", false]], "--coff-basereloc": [[501, "cmdoption-llvm-readobj-coff-basereloc", false]], "--coff-debug-directory": [[501, "cmdoption-llvm-readobj-coff-debug-directory", false]], "--coff-directives": [[501, "cmdoption-llvm-readobj-coff-directives", false]], "--coff-exports": [[501, "cmdoption-llvm-readobj-coff-exports", false]], "--coff-imports": [[501, "cmdoption-llvm-readobj-coff-imports", false]], "--coff-load-config": [[501, "cmdoption-llvm-readobj-coff-load-config", false]], "--coff-resources": [[501, "cmdoption-llvm-readobj-coff-resources", false]], "--color": [[468, "cmdoption-FileCheck-color", false], [486, "cmdoption-llvm-dwarfdump-color", false], [500, "cmdoption-llvm-readelf-color", false], [501, "cmdoption-llvm-readobj-color", false]], "--comment-prefixes": [[468, "cmdoption-FileCheck-comment-prefixes", false]], "--common": [[502, "cmdoption-llvm-size-common", false]], "--compare": [[492, "cmdoption-llvm-locstats-compare", false]], "--compress-debug-sections": [[495, "cmdoption-llvm-objcopy-compress-debug-sections", false]], "--config-prefix": [[472, "cmdoption-lit-config-prefix", false]], "--data-in-code": [[496, "cmdoption-llvm-objdump-data-in-code", false]], "--debug": [[472, "cmdoption-lit-debug", false]], "--debug-abbrev": [[486, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--debug-addr": [[486, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--debug-aranges": [[486, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--debug-cu-index": [[486, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--debug-frame": [[486, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--debug-gnu-pubnames": [[486, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--debug-gnu-pubtypes": [[486, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--debug-info": [[486, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--debug-line": [[486, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--debug-line-str": [[486, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--debug-loc": [[486, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--debug-loclists": [[486, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--debug-macro": [[486, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--debug-names": [[486, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--debug-pubnames": [[486, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--debug-pubtypes": [[486, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--debug-ranges": [[486, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--debug-rnglists": [[486, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--debug-str": [[486, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--debug-str-offsets": [[486, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--debug-syms": [[494, "cmdoption-llvm-nm-debug-syms", false]], "--debug-tu-index": [[486, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--debug-types": [[486, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--debug-vars": [[496, "cmdoption-llvm-objdump-debug-vars", false]], "--debug-vars-indent": [[496, "cmdoption-llvm-objdump-debug-vars-indent", false]], "--decompress-debug-sections": [[495, "cmdoption-llvm-objcopy-decompress-debug-sections", false]], "--default-arch": [[506, "cmdoption-llvm-symbolizer-default-arch", false]], "--defined-only": [[494, "cmdoption-llvm-nm-defined-only", false]], "--demangle": [[494, "cmdoption-llvm-nm-demangle", false], [496, "cmdoption-llvm-objdump-C", false], [500, "cmdoption-llvm-readelf-demangle", false], [501, "cmdoption-llvm-readobj-demangle", false], [506, "cmdoption-llvm-symbolizer-demangle", false]], "--dependent-libraries": [[501, "cmdoption-llvm-readobj-dependent-libraries", false]], "--diff": [[486, "cmdoption-llvm-dwarfdump-diff", false]], "--dis-symname": [[496, "cmdoption-llvm-objdump-dis-symname", false]], "--disable-deterministic-archives": [[495, "cmdoption-llvm-objcopy-disable-deterministic-archives", false], [505, "cmdoption-llvm-strip-disable-deterministic-archives", false]], "--disable-excess-fp-precision": [[473, "cmdoption-llc-disable-excess-fp-precision", false]], "--disassemble": [[496, "cmdoption-llvm-objdump-d", false]], "--disassemble-all": [[496, "cmdoption-llvm-objdump-D", false]], "--disassemble-symbols": [[496, "cmdoption-llvm-objdump-disassemble-symbols", false]], "--disassemble-zeroes": [[496, "cmdoption-llvm-objdump-z", false]], "--disassembler-options": [[496, "cmdoption-llvm-objdump-M", false]], "--discard-all": [[495, "cmdoption-llvm-objcopy-discard-all", false], [505, "cmdoption-llvm-strip-discard-all", false]], "--discard-locals": [[495, "cmdoption-llvm-objcopy-discard-locals", false], [505, "cmdoption-llvm-strip-discard-locals", false]], "--draw-plot": [[492, "cmdoption-llvm-locstats-draw-plot", false]], "--dsym": [[496, "cmdoption-llvm-objdump-dsym", false]], "--dsym-hint": [[506, "cmdoption-llvm-symbolizer-dsym-hint", false]], "--dt": [[501, "cmdoption-llvm-readobj-dyn-symbols", false]], "--dump-debug-map": [[470, "cmdoption-dsymutil-dump-debug-map", false]], "--dump-input": [[468, "cmdoption-FileCheck-dump-input", false]], "--dump-input-context": [[468, "cmdoption-FileCheck-dump-input-context", false]], "--dump-input-filter": [[468, "cmdoption-FileCheck-dump-input-filter", false]], "--dump-object-to-disk": [[487, "cmdoption-llvm-exegesis-dump-object-to-disk", false]], "--dump-section": [[495, "cmdoption-llvm-objcopy-dump-section", false]], "--dwarf": [[496, "cmdoption-llvm-objdump-dwarf", false]], "--dwp": [[506, "cmdoption-llvm-symbolizer-dwp", false]], "--dyldinfo-only": [[494, "cmdoption-llvm-nm-dyldinfo-only", false]], "--dylib-id": [[496, "cmdoption-llvm-objdump-dylib-id", false]], "--dylibs-used": [[496, "cmdoption-llvm-objdump-dylibs-used", false]], "--dyn-relocations": [[500, "cmdoption-llvm-readelf-dyn-relocations", false], [501, "cmdoption-llvm-readobj-dyn-relocations", false]], "--dyn-symbols": [[500, "cmdoption-llvm-readelf-dyn-symbols", false], [501, "cmdoption-llvm-readobj-dyn-symbols", false]], "--dyn-syms": [[500, "cmdoption-llvm-readelf-dyn-symbols", false], [501, "cmdoption-llvm-readobj-dyn-symbols", false]], "--dynamic": [[494, "cmdoption-llvm-nm-dynamic", false], [500, "cmdoption-llvm-readelf-dynamic-table", false], [501, "cmdoption-llvm-readobj-dynamic-table", false]], "--dynamic-reloc": [[496, "cmdoption-llvm-objdump-R", false]], "--dynamic-syms": [[496, "cmdoption-llvm-objdump-T", false]], "--dynamic-table": [[500, "cmdoption-llvm-readelf-dynamic-table", false], [501, "cmdoption-llvm-readobj-dynamic-table", false]], "--echo-all-commands": [[472, "cmdoption-lit-vv", false]], "--eh-frame": [[486, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--elf-hash-histogram": [[500, "cmdoption-llvm-readelf-elf-hash-histogram", false], [501, "cmdoption-llvm-readobj-elf-hash-histogram", false]], "--elf-linker-options": [[500, "cmdoption-llvm-readelf-elf-linker-options", false], [501, "cmdoption-llvm-readobj-elf-linker-options", false]], "--elf-output-style": [[500, "cmdoption-llvm-readelf-elf-output-style", false], [501, "cmdoption-llvm-readobj-elf-output-style", false]], "--elf-section-groups": [[500, "cmdoption-llvm-readelf-elf-section-groups", false], [501, "cmdoption-llvm-readobj-elf-section-groups", false]], "--enable-deterministic-archives": [[495, "cmdoption-llvm-objcopy-enable-deterministic-archives", false], [505, "cmdoption-llvm-strip-enable-deterministic-archives", false]], "--enable-no-infs-fp-math": [[473, "cmdoption-llc-enable-no-infs-fp-math", false]], "--enable-no-nans-fp-math": [[473, "cmdoption-llc-enable-no-nans-fp-math", false]], "--enable-no-signed-zeros-fp-math": [[473, "cmdoption-llc-enable-no-signed-zeros-fp-math", false]], "--enable-no-trapping-fp-math": [[473, "cmdoption-llc-enable-no-trapping-fp-math", false]], "--enable-unsafe-fp-math": [[473, "cmdoption-llc-enable-unsafe-fp-math", false]], "--enable-var-scope": [[468, "cmdoption-FileCheck-enable-var-scope", false]], "--exe": [[506, "cmdoption-llvm-symbolizer-obj", false]], "--expand-relocs": [[500, "cmdoption-llvm-readelf-expand-relocs", false], [501, "cmdoption-llvm-readobj-expand-relocs", false]], "--exports-trie": [[496, "cmdoption-llvm-objdump-exports-trie", false]], "--extern-only": [[494, "cmdoption-llvm-nm-extern-only", false]], "--extract-dwo": [[495, "cmdoption-llvm-objcopy-extract-dwo", false]], "--extract-main-partition": [[495, "cmdoption-llvm-objcopy-extract-main-partition", false]], "--extract-partition": [[495, "cmdoption-llvm-objcopy-extract-partition", false]], "--fallback-debug-path": [[506, "cmdoption-llvm-symbolizer-fallback-debug-path", false]], "--fault-map-section": [[496, "cmdoption-llvm-objdump-fault-map-section", false]], "--file-headers": [[496, "cmdoption-llvm-objdump-f", false], [500, "cmdoption-llvm-readelf-file-headers", false], [501, "cmdoption-llvm-readobj-file-headers", false]], "--filter": [[472, "cmdoption-lit-filter", false]], "--find": [[486, "cmdoption-llvm-dwarfdump-f", false]], "--flat": [[470, "cmdoption-dsymutil-flat", false]], "--format": [[476, "cmdoption-llvm-ar-format", false], [482, "cmdoption-llvm-cxxfilt-format", false], [494, "cmdoption-llvm-nm-format", false], [502, "cmdoption-llvm-size-format", false]], "--frame-pointer": [[473, "cmdoption-llc-frame-pointer", false]], "--full-contents": [[496, "cmdoption-llvm-objdump-s", false]], "--full-leading-addr": [[496, "cmdoption-llvm-objdump-full-leading-addr", false]], "--function-summaries": [[481, "cmdoption-llvm-cov-gcov-f", false]], "--functions": [[506, "cmdoption-llvm-symbolizer-functions", false]], "--gdb-index": [[486, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--gen-reproducer": [[470, "cmdoption-dsymutil-gen-reproducer", false]], "--globalize-symbol": [[495, "cmdoption-llvm-objcopy-globalize-symbol", false]], "--globalize-symbols": [[495, "cmdoption-llvm-objcopy-globalize-symbols", false]], "--gnu-hash-table": [[500, "cmdoption-llvm-readelf-gnu-hash-table", false], [501, "cmdoption-llvm-readobj-gnu-hash-table", false]], "--hash-filenames": [[481, "cmdoption-llvm-cov-gcov-x", false]], "--hash-symbols": [[500, "cmdoption-llvm-readelf-hash-symbols", false], [501, "cmdoption-llvm-readobj-hash-symbols", false]], "--hash-table": [[500, "cmdoption-llvm-readelf-hash-table", false], [501, "cmdoption-llvm-readobj-hash-table", false]], "--headers": [[496, "cmdoption-llvm-objdump-h", false], [500, "cmdoption-llvm-readelf-headers", false], [501, "cmdoption-llvm-readobj-headers", false]], "--help": [[470, "cmdoption-dsymutil-help", false], [472, "cmdoption-lit-h", false], [476, "cmdoption-llvm-ar-h", false], [481, "cmdoption-llvm-cov-gcov-help", false], [482, "cmdoption-llvm-cxxfilt-help", false], [486, "cmdoption-llvm-dwarfdump-h", false], [494, "cmdoption-llvm-nm-help", false], [495, "cmdoption-llvm-objcopy-help", false], [496, "cmdoption-llvm-objdump-help", false], [500, "cmdoption-llvm-readelf-help", false], [501, "cmdoption-llvm-readobj-help", false], [502, "cmdoption-llvm-size-help", false], [504, "cmdoption-llvm-strings-help", false], [505, "cmdoption-llvm-strip-help", false], [506, "cmdoption-llvm-symbolizer-help", false]], "--help-list": [[482, "cmdoption-llvm-cxxfilt-help-list", false], [486, "cmdoption-llvm-dwarfdump-help-list", false], [494, "cmdoption-llvm-nm-help-list", false], [500, "cmdoption-llvm-readelf-help-list", false], [501, "cmdoption-llvm-readobj-help-list", false], [502, "cmdoption-llvm-size-help-list", false], [504, "cmdoption-llvm-strings-help-list", false], [506, "cmdoption-llvm-symbolizer-help-list", false]], "--hex-dump": [[500, "cmdoption-llvm-readelf-hex-dump", false], [501, "cmdoption-llvm-readobj-hex-dump", false]], "--histogram": [[500, "cmdoption-llvm-readelf-elf-hash-histogram", false], [501, "cmdoption-llvm-readobj-elf-hash-histogram", false]], "--ignore-case": [[468, "cmdoption-FileCheck-ignore-case", false], [486, "cmdoption-llvm-dwarfdump-i", false]], "--ignore-debug-entry-values": [[492, "cmdoption-llvm-locstats-ignore-debug-entry-values", false]], "--implicit-check-not": [[468, "cmdoption-FileCheck-implicit-check-not", false]], "--indirect-symbols": [[496, "cmdoption-llvm-objdump-indirect-symbols", false]], "--info-plist": [[496, "cmdoption-llvm-objdump-info-plist", false]], "--inlines": [[506, "cmdoption-llvm-symbolizer-inlining", false]], "--inlining": [[506, "cmdoption-llvm-symbolizer-inlining", false]], "--input-file": [[468, "cmdoption-FileCheck-input-file", false]], "--input-target": [[495, "cmdoption-llvm-objcopy-input-target", false]], "--just-symbol-name": [[494, "cmdoption-llvm-nm-just-symbol-name", false]], "--keep-file-symbols": [[495, "cmdoption-llvm-objcopy-keep-file-symbols", false], [505, "cmdoption-llvm-strip-keep-file-symbols", false]], "--keep-global-symbol": [[495, "cmdoption-llvm-objcopy-keep-global-symbol", false]], "--keep-global-symbols": [[495, "cmdoption-llvm-objcopy-keep-global-symbols", false]], "--keep-section": [[495, "cmdoption-llvm-objcopy-keep-section", false], [505, "cmdoption-llvm-strip-keep-section", false]], "--keep-symbol": [[495, "cmdoption-llvm-objcopy-keep-symbol", false], [505, "cmdoption-llvm-strip-keep-symbol", false]], "--keep-symbols": [[495, "cmdoption-llvm-objcopy-keep-symbols", false]], "--lazy-bind": [[496, "cmdoption-llvm-objdump-lazy-bind", false]], "--line-numbers": [[496, "cmdoption-llvm-objdump-l", false]], "--link-opt-hints": [[496, "cmdoption-llvm-objdump-link-opt-hints", false]], "--load": [[473, "cmdoption-llc-load", false]], "--localize-hidden": [[495, "cmdoption-llvm-objcopy-localize-hidden", false]], "--localize-symbol": [[495, "cmdoption-llvm-objcopy-localize-symbol", false]], "--localize-symbols": [[495, "cmdoption-llvm-objcopy-localize-symbols", false]], "--long-file-names": [[481, "cmdoption-llvm-cov-gcov-l", false]], "--lookup": [[486, "cmdoption-llvm-dwarfdump-lookup", false]], "--macho": [[496, "cmdoption-llvm-objdump-m", false]], "--macho-data-in-code": [[501, "cmdoption-llvm-readobj-macho-data-in-code", false]], "--macho-dsymtab": [[501, "cmdoption-llvm-readobj-macho-dsymtab", false]], "--macho-indirect-symbols": [[501, "cmdoption-llvm-readobj-macho-indirect-symbols", false]], "--macho-linker-options": [[501, "cmdoption-llvm-readobj-macho-linker-options", false]], "--macho-segment": [[501, "cmdoption-llvm-readobj-macho-segment", false]], "--macho-version-min": [[501, "cmdoption-llvm-readobj-macho-version-min", false]], "--match-full-lines": [[468, "cmdoption-FileCheck-match-full-lines", false]], "--mattr": [[496, "cmdoption-llvm-objdump-mattr", false]], "--max-failures": [[472, "cmdoption-lit-max-failures", false]], "--max-tests": [[472, "cmdoption-lit-max-tests", false]], "--max-time": [[472, "cmdoption-lit-max-time", false]], "--mcpu": [[496, "cmdoption-llvm-objdump-mcpu", false]], "--minimize": [[470, "cmdoption-dsymutil-minimize", false]], "--name": [[486, "cmdoption-llvm-dwarfdump-n", false]], "--needed-libs": [[500, "cmdoption-llvm-readelf-needed-libs", false], [501, "cmdoption-llvm-readobj-needed-libs", false]], "--new-symbol-visibility": [[495, "cmdoption-llvm-objcopy-new-symbol-visibility", false]], "--no-demangle": [[494, "cmdoption-llvm-nm-no-demangle", false], [506, "cmdoption-llvm-symbolizer-no-demangle", false]], "--no-dyldinfo": [[494, "cmdoption-llvm-nm-no-dyldinfo", false]], "--no-leading-addr": [[496, "cmdoption-llvm-objdump-no-leading-addr", false]], "--no-leading-headers": [[496, "cmdoption-llvm-objdump-no-leading-headers", false]], "--no-llvm-bc": [[494, "cmdoption-llvm-nm-no-llvm-bc", false]], "--no-odr": [[470, "cmdoption-dsymutil-no-odr", false]], "--no-output": [[470, "cmdoption-dsymutil-no-output", false], [481, "cmdoption-llvm-cov-gcov-n", false]], "--no-progress-bar": [[472, "cmdoption-lit-no-progress-bar", false]], "--no-show-raw-insn": [[496, "cmdoption-llvm-objdump-no-show-raw-insn", false]], "--no-sort": [[494, "cmdoption-llvm-nm-no-sort", false]], "--no-strip-all": [[505, "cmdoption-llvm-strip-no-strip-all", false]], "--no-strip-underscore": [[482, "cmdoption-llvm-cxxfilt-no-strip-underscore", false]], "--no-swiftmodule-timestamp": [[470, "cmdoption-dsymutil-no-swiftmodule-timestamp", false]], "--no-symbolic-operands": [[496, "cmdoption-llvm-objdump-no-symbolic-operands", false]], "--no-weak": [[494, "cmdoption-llvm-nm-no-weak", false]], "--non-verbose": [[496, "cmdoption-llvm-objdump-non-verbose", false]], "--notes": [[500, "cmdoption-llvm-readelf-notes", false], [501, "cmdoption-llvm-readobj-notes", false]], "--num-shards": [[472, "cmdoption-lit-num-shards", false]], "--num-threads": [[470, "cmdoption-dsymutil-num-threads", false]], "--numeric-sort": [[494, "cmdoption-llvm-nm-numeric-sort", false]], "--obj": [[506, "cmdoption-llvm-symbolizer-obj", false]], "--objc-meta-data": [[496, "cmdoption-llvm-objdump-objc-meta-data", false]], "--object-directory": [[481, "cmdoption-llvm-cov-gcov-o", false]], "--object-file": [[481, "cmdoption-llvm-cov-gcov-o", false]], "--object-prefix-map": [[470, "cmdoption-dsymutil-object-prefix-map", false]], "--only-formal-parameters": [[492, "cmdoption-llvm-locstats-only-formal-parameters", false]], "--only-keep-debug": [[495, "cmdoption-llvm-objcopy-only-keep-debug", false], [505, "cmdoption-llvm-strip-only-keep-debug", false]], "--only-section": [[495, "cmdoption-llvm-objcopy-only-section", false]], "--only-variables": [[492, "cmdoption-llvm-locstats-only-variables", false]], "--oso-prepend-path": [[470, "cmdoption-dsymutil-oso-prepend-path", false]], "--out": [[470, "cmdoption-dsymutil-out", false]], "--output-style": [[506, "cmdoption-llvm-symbolizer-output-style", false]], "--output-target": [[495, "cmdoption-llvm-objcopy-output-target", false]], "--papertrail": [[470, "cmdoption-dsymutil-papertrail", false]], "--param": [[472, "cmdoption-lit-D", false]], "--parent-recurse-depth": [[486, "cmdoption-llvm-dwarfdump-parent-recurse-depth", false]], "--path": [[472, "cmdoption-lit-path", false]], "--portability": [[494, "cmdoption-llvm-nm-portability", false]], "--prefix-alloc-sections": [[495, "cmdoption-llvm-objcopy-prefix-alloc-sections", false]], "--prefix-symbols": [[495, "cmdoption-llvm-objcopy-prefix-symbols", false]], "--preserve-dates": [[495, "cmdoption-llvm-objcopy-preserve-dates", false], [505, "cmdoption-llvm-strip-preserve-dates", false]], "--preserve-paths": [[481, "cmdoption-llvm-cov-gcov-p", false]], "--pretty-print": [[506, "cmdoption-llvm-symbolizer-pretty-print", false]], "--print-address": [[506, "cmdoption-llvm-symbolizer-print-address", false]], "--print-armap": [[494, "cmdoption-llvm-nm-print-armap", false]], "--print-file-name": [[494, "cmdoption-llvm-nm-print-file-name", false], [504, "cmdoption-llvm-strings-print-file-name", false]], "--print-imm-hex": [[496, "cmdoption-llvm-objdump-print-imm-hex", false]], "--print-machineinstrs": [[473, "cmdoption-llc-print-machineinstrs", false]], "--print-size": [[494, "cmdoption-llvm-nm-print-size", false]], "--print-source-context-lines": [[506, "cmdoption-llvm-symbolizer-print-source-context-lines", false]], "--private-header": [[496, "cmdoption-llvm-objdump-private-header", false]], "--private-headers": [[496, "cmdoption-llvm-objdump-p", false]], "--program-headers": [[500, "cmdoption-llvm-readelf-program-headers", false], [501, "cmdoption-llvm-readobj-program-headers", false]], "--quiet": [[472, "cmdoption-lit-q", false], [486, "cmdoption-llvm-dwarfdump-quiet", false]], "--radix": [[494, "cmdoption-llvm-nm-radix", false], [502, "cmdoption-llvm-size-radix", false], [504, "cmdoption-llvm-strings-radix", false]], "--raw-clang-ast": [[496, "cmdoption-llvm-objdump-raw-clang-ast", false]], "--raw-relr": [[500, "cmdoption-llvm-readelf-raw-relr", false], [501, "cmdoption-llvm-readobj-raw-relr", false]], "--rebase": [[496, "cmdoption-llvm-objdump-rebase", false]], "--recurse-depth": [[486, "cmdoption-llvm-dwarfdump-r", false]], "--redefine-sym": [[495, "cmdoption-llvm-objcopy-redefine-sym", false]], "--redefine-syms": [[495, "cmdoption-llvm-objcopy-redefine-syms", false]], "--regalloc": [[473, "cmdoption-llc-regalloc", false]], "--regex": [[486, "cmdoption-llvm-dwarfdump-x", false], [495, "cmdoption-llvm-objcopy-regex", false], [505, "cmdoption-llvm-strip-regex", false]], "--relativenames": [[506, "cmdoption-llvm-symbolizer-relativenames", false]], "--reloc": [[496, "cmdoption-llvm-objdump-r", false]], "--relocations": [[500, "cmdoption-llvm-readelf-relocations", false], [501, "cmdoption-llvm-readobj-relocations", false]], "--relocs": [[500, "cmdoption-llvm-readelf-relocations", false], [501, "cmdoption-llvm-readobj-relocations", false]], "--remarks-output-format": [[470, "cmdoption-dsymutil-remarks-output-format", false]], "--remarks-prepend-path": [[470, "cmdoption-dsymutil-remarks-prepend-path", false]], "--remove-section": [[495, "cmdoption-llvm-objcopy-remove-section", false], [505, "cmdoption-llvm-strip-remove-section", false]], "--rename-section": [[495, "cmdoption-llvm-objcopy-rename-section", false]], "--reverse-sort": [[494, "cmdoption-llvm-nm-reverse-sort", false]], "--run-shard": [[472, "cmdoption-lit-run-shard", false]], "--sd": [[501, "cmdoption-llvm-readobj-section-data", false]], "--section": [[496, "cmdoption-llvm-objdump-j", false]], "--section-data": [[500, "cmdoption-llvm-readelf-section-data", false], [501, "cmdoption-llvm-readobj-section-data", false]], "--section-groups": [[500, "cmdoption-llvm-readelf-elf-section-groups", false], [501, "cmdoption-llvm-readobj-elf-section-groups", false]], "--section-headers": [[496, "cmdoption-llvm-objdump-h", false], [500, "cmdoption-llvm-readelf-sections", false], [501, "cmdoption-llvm-readobj-sections", false]], "--section-mapping": [[500, "cmdoption-llvm-readelf-section-mapping", false], [501, "cmdoption-llvm-readobj-section-mapping", false]], "--section-relocations": [[500, "cmdoption-llvm-readelf-section-relocations", false], [501, "cmdoption-llvm-readobj-section-relocations", false]], "--section-symbols": [[500, "cmdoption-llvm-readelf-section-symbols", false], [501, "cmdoption-llvm-readobj-section-symbols", false]], "--sections": [[500, "cmdoption-llvm-readelf-sections", false], [501, "cmdoption-llvm-readobj-sections", false]], "--segments": [[500, "cmdoption-llvm-readelf-program-headers", false], [501, "cmdoption-llvm-readobj-program-headers", false]], "--set-section-alignment": [[495, "cmdoption-llvm-objcopy-set-section-alignment", false]], "--set-section-flags": [[495, "cmdoption-llvm-objcopy-set-section-flags", false]], "--set-start-addr": [[495, "cmdoption-llvm-objcopy-set-start-addr", false]], "--show-all": [[472, "cmdoption-lit-a", false]], "--show-children": [[486, "cmdoption-llvm-dwarfdump-c", false]], "--show-form": [[486, "cmdoption-llvm-dwarfdump-F", false]], "--show-lma": [[496, "cmdoption-llvm-objdump-show-lma", false]], "--show-parents": [[486, "cmdoption-llvm-dwarfdump-p", false]], "--show-section-sizes": [[486, "cmdoption-llvm-dwarfdump-show-section-sizes", false]], "--show-suites": [[472, "cmdoption-lit-show-suites", false]], "--show-tests": [[472, "cmdoption-lit-show-tests", false]], "--show-unsupported": [[472, "cmdoption-lit-show-unsupported", false]], "--show-xfail": [[472, "cmdoption-lit-show-xfail", false]], "--shuffle": [[472, "cmdoption-lit-shuffle", false]], "--size-sort": [[494, "cmdoption-llvm-nm-size-sort", false]], "--source": [[496, "cmdoption-llvm-objdump-S", false]], "--special-syms": [[494, "cmdoption-llvm-nm-special-syms", false]], "--spiller": [[473, "cmdoption-llc-spiller", false]], "--split-dwo": [[495, "cmdoption-llvm-objcopy-split-dwo", false]], "--sr": [[501, "cmdoption-llvm-readobj-section-relocations", false]], "--st": [[501, "cmdoption-llvm-readobj-section-symbols", false]], "--stack-sizes": [[500, "cmdoption-llvm-readelf-stack-sizes", false], [501, "cmdoption-llvm-readobj-stack-sizes", false]], "--stackmap": [[500, "cmdoption-llvm-readelf-stackmap", false], [501, "cmdoption-llvm-readobj-stackmap", false]], "--start-address": [[496, "cmdoption-llvm-objdump-start-address", false]], "--statistics": [[470, "cmdoption-dsymutil-statistics", false], [486, "cmdoption-llvm-dwarfdump-statistics", false]], "--stats": [[473, "cmdoption-llc-stats", false]], "--stop-address": [[496, "cmdoption-llvm-objdump-stop-address", false]], "--strict-whitespace": [[468, "cmdoption-FileCheck-strict-whitespace", false]], "--string-dump": [[500, "cmdoption-llvm-readelf-string-dump", false], [501, "cmdoption-llvm-readobj-string-dump", false]], "--strip-all": [[495, "cmdoption-llvm-objcopy-strip-all", false], [505, "cmdoption-llvm-strip-strip-all", false]], "--strip-all-gnu": [[495, "cmdoption-llvm-objcopy-strip-all-gnu", false], [505, "cmdoption-llvm-strip-strip-all-gnu", false]], "--strip-debug": [[495, "cmdoption-llvm-objcopy-strip-debug", false], [505, "cmdoption-llvm-strip-strip-debug", false]], "--strip-dwo": [[495, "cmdoption-llvm-objcopy-strip-dwo", false]], "--strip-non-alloc": [[495, "cmdoption-llvm-objcopy-strip-non-alloc", false]], "--strip-sections": [[495, "cmdoption-llvm-objcopy-strip-sections", false], [505, "cmdoption-llvm-strip-strip-sections", false]], "--strip-symbol": [[495, "cmdoption-llvm-objcopy-strip-symbol", false], [505, "cmdoption-llvm-strip-strip-symbol", false]], "--strip-symbols": [[495, "cmdoption-llvm-objcopy-strip-symbols", false]], "--strip-underscore": [[482, "cmdoption-llvm-cxxfilt-strip-underscore", false]], "--strip-unneeded": [[495, "cmdoption-llvm-objcopy-strip-unneeded", false], [505, "cmdoption-llvm-strip-strip-unneeded", false]], "--strip-unneeded-symbol": [[495, "cmdoption-llvm-objcopy-strip-unneeded-symbol", false]], "--strip-unneeded-symbols": [[495, "cmdoption-llvm-objcopy-strip-unneeded-symbols", false]], "--succinct": [[472, "cmdoption-lit-s", false]], "--summarize-types": [[486, "cmdoption-llvm-dwarfdump-summarize-types", false]], "--symbol-description": [[496, "cmdoption-llvm-objdump-symbol-description", false]], "--symbol-map": [[470, "cmdoption-dsymutil-symbol-map", false]], "--symbols": [[500, "cmdoption-llvm-readelf-symbols", false], [501, "cmdoption-llvm-readobj-symbols", false]], "--syms": [[496, "cmdoption-llvm-objdump-t", false], [500, "cmdoption-llvm-readelf-symbols", false], [501, "cmdoption-llvm-readobj-symbols", false]], "--symtab": [[470, "cmdoption-dsymutil-s", false]], "--target": [[495, "cmdoption-llvm-objcopy-target", false]], "--time-passes": [[473, "cmdoption-llc-time-passes", false]], "--time-tests": [[472, "cmdoption-lit-time-tests", false]], "--timeout": [[472, "cmdoption-lit-timeout", false]], "--toolchain": [[470, "cmdoption-dsymutil-toolchain", false]], "--totals": [[502, "cmdoption-llvm-size-totals", false]], "--triple": [[496, "cmdoption-llvm-objdump-triple", false]], "--types": [[482, "cmdoption-llvm-cxxfilt-types", false]], "--unconditional-branches": [[481, "cmdoption-llvm-cov-gcov-u", false]], "--undefined-only": [[494, "cmdoption-llvm-nm-undefined-only", false]], "--universal-headers": [[496, "cmdoption-llvm-objdump-universal-headers", false]], "--unwind": [[500, "cmdoption-llvm-readelf-unwind", false], [501, "cmdoption-llvm-readobj-unwind", false]], "--unwind-info": [[496, "cmdoption-llvm-objdump-u", false]], "--update": [[470, "cmdoption-dsymutil-u", false]], "--use-reproducer": [[470, "cmdoption-dsymutil-use-reproducer", false]], "--use-symbol-table": [[506, "cmdoption-llvm-symbolizer-use-symbol-table", false]], "--uuid": [[486, "cmdoption-llvm-dwarfdump-u", false]], "--verbose": [[470, "cmdoption-dsymutil-verbose", false], [472, "cmdoption-lit-v", false], [486, "cmdoption-llvm-dwarfdump-v", false], [506, "cmdoption-llvm-symbolizer-verbose", false]], "--verify": [[470, "cmdoption-dsymutil-verify", false], [486, "cmdoption-llvm-dwarfdump-verify", false]], "--version": [[470, "cmdoption-dsymutil-v", false], [476, "cmdoption-llvm-ar-version", false], [482, "cmdoption-llvm-cxxfilt-version", false], [486, "cmdoption-llvm-dwarfdump-version", false], [494, "cmdoption-llvm-nm-version", false], [495, "cmdoption-llvm-objcopy-version", false], [496, "cmdoption-llvm-objdump-version", false], [500, "cmdoption-llvm-readelf-version", false], [501, "cmdoption-llvm-readobj-version", false], [502, "cmdoption-llvm-size-version", false], [504, "cmdoption-llvm-strings-version", false], [505, "cmdoption-llvm-strip-version", false], [506, "cmdoption-llvm-symbolizer-version", false]], "--version-info": [[500, "cmdoption-llvm-readelf-version-info", false], [501, "cmdoption-llvm-readobj-version-info", false]], "--vg": [[472, "cmdoption-lit-vg", false]], "--vg-arg": [[472, "cmdoption-lit-vg-arg", false]], "--vg-leak": [[472, "cmdoption-lit-vg-leak", false]], "--weak-bind": [[496, "cmdoption-llvm-objdump-weak-bind", false]], "--weaken": [[495, "cmdoption-llvm-objcopy-weaken", false]], "--weaken-symbol": [[495, "cmdoption-llvm-objcopy-weaken-symbol", false]], "--weaken-symbols": [[495, "cmdoption-llvm-objcopy-weaken-symbols", false]], "--wide": [[496, "cmdoption-llvm-objdump-w", false]], "--wildcard": [[495, "cmdoption-llvm-objcopy-wildcard", false], [505, "cmdoption-llvm-strip-wildcard", false]], "--without-aliases": [[494, "cmdoption-llvm-nm-without-aliases", false]], "--workers": [[472, "cmdoption-lit-j", false]], "--x86-asm-syntax": [[473, "cmdoption-llc-x86-asm-syntax", false], [496, "cmdoption-llvm-objdump-x86-asm-syntax", false]], "-_": [[482, "cmdoption-llvm-cxxfilt-strip-underscore", false]], "-a": [[472, "cmdoption-lit-a", false], [481, "cmdoption-llvm-cov-gcov-a", false], [486, "cmdoption-llvm-dwarfdump-a", false], [494, "cmdoption-llvm-nm-print-file-name", false], [494, "cmdoption-llvm-nm-debug-syms", false], [496, "cmdoption-llvm-objdump-a", false], [500, "cmdoption-llvm-readelf-arch-specific", false], [501, "cmdoption-llvm-readobj-arch-specific", false], [502, "cmdoption-llvm-size-A", false], [504, "cmdoption-llvm-strings-all", false], [506, "cmdoption-llvm-symbolizer-print-address", false]], "-all": [[497, "cmdoption-llvm-pdbutil-dump-all", false], [497, "cmdoption-llvm-pdbutil-pretty-all", false]], "-all-functions": [[498, "cmdoption-llvm-profdata-show-all-functions", false]], "-all-stats": [[493, "cmdoption-llvm-mca-all-stats", false]], "-all-views": [[493, "cmdoption-llvm-mca-all-views", false]], "-analysis-clustering": [[487, "cmdoption-llvm-exegesis-analysis-clustering", false]], "-analysis-clustering-epsilon": [[487, "cmdoption-llvm-exegesis-analysis-clustering-epsilon", false]], "-analysis-clusters-output-file": [[487, "cmdoption-llvm-exegesis-analysis-clusters-output-file", false]], "-analysis-display-unstable-clusters": [[487, "cmdoption-llvm-exegesis-analysis-display-unstable-clusters", false]], "-analysis-inconsistencies-output-file": [[487, "cmdoption-llvm-exegesis-analysis-inconsistencies-output-file", false]], "-analysis-inconsistency-epsilon": [[487, "cmdoption-llvm-exegesis-analysis-inconsistency-epsilon", false]], "-analysis-numpoints": [[487, "cmdoption-llvm-exegesis-analysis-numpoints", false]], "-arch": [[481, "cmdoption-llvm-cov-export-arch", false], [481, "cmdoption-llvm-cov-report-arch", false], [481, "cmdoption-llvm-cov-show-arch", false]], "-archs": [[491, "cmdoption-llvm-lipo-archs", false]], "-asmparsernum": [[508, "cmdoption-tblgen-asmparsernum", false]], "-asmwriternum": [[508, "cmdoption-tblgen-asmwriternum", false]], "-b": [[481, "cmdoption-llvm-cov-gcov-b", false], [494, "cmdoption-llvm-nm-B", false], [495, "cmdoption-llvm-objcopy-binary-architecture", false], [502, "cmdoption-llvm-size-B", false]], "-benchmarks-file": [[487, "cmdoption-llvm-exegesis-benchmarks-file", false]], "-binary": [[498, "cmdoption-llvm-profdata-merge-binary", false]], "-block-range": [[497, "cmdoption-llvm-pdbutil-bytes-block-range", false]], "-bottleneck-analysis": [[493, "cmdoption-llvm-mca-bottleneck-analysis", false]], "-byte-range": [[497, "cmdoption-llvm-pdbutil-bytes-byte-range", false]], "-c": [[481, "cmdoption-llvm-cov-gcov-c", false], [486, "cmdoption-llvm-dwarfdump-c", false], [494, "cmdoption-llvm-nm-demangle", false], [496, "cmdoption-llvm-objdump-C", false], [500, "cmdoption-llvm-readelf-demangle", false], [501, "cmdoption-llvm-readobj-demangle", false], [506, "cmdoption-llvm-symbolizer-demangle", false]], "-chunks": [[497, "cmdoption-llvm-pdbutil-bytes-chunks", false]], "-class": [[508, "cmdoption-tblgen-class", false]], "-class-definitions": [[497, "cmdoption-llvm-pdbutil-pretty-class-definitions", false]], "-class-order": [[497, "cmdoption-llvm-pdbutil-pretty-class-order", false]], "-class-recurse-depth": [[497, "cmdoption-llvm-pdbutil-pretty-class-recurse-depth", false]], "-classes": [[497, "cmdoption-llvm-pdbutil-pretty-classes", false]], "-code-model": [[474, "cmdoption-lli-code-model", false]], "-color-output": [[497, "cmdoption-llvm-pdbutil-pretty-color-output", false]], "-compilands": [[497, "cmdoption-llvm-pdbutil-pretty-compilands", false]], "-compress-all-sections": [[498, "cmdoption-llvm-profdata-merge-compress-all-sections", false]], "-counts": [[498, "cmdoption-llvm-profdata-show-counts", false]], "-create": [[491, "cmdoption-llvm-lipo-create", false]], "-cs": [[498, "cmdoption-llvm-profdata-overlap-cs", false]], "-d": [[472, "cmdoption-lit-D", false], [490, "cmdoption-llvm-link-d", false], [494, "cmdoption-llvm-nm-dynamic", false], [495, "cmdoption-llvm-objcopy-enable-deterministic-archives", false], [496, "cmdoption-llvm-objdump-D", false], [496, "cmdoption-llvm-objdump-d", false], [500, "cmdoption-llvm-readelf-dynamic-table", false], [501, "cmdoption-llvm-readobj-dynamic-table", false], [502, "cmdoption-llvm-size-d", false], [505, "cmdoption-llvm-strip-enable-deterministic-archives", false]], "-d#<fmt>,<numvar>": [[468, "cmdoption-FileCheck-D-FMT-NUMVAR", false]], "-d<var": [[468, "cmdoption-FileCheck-D-VAR", false]], "-debug": [[507, "cmdoption-opt-debug", false]], "-dependents": [[497, "cmdoption-llvm-pdbutil-dump-dependents", false]], "-disable-excess-fp-precision": [[474, "cmdoption-lli-disable-excess-fp-precision", false]], "-disable-inlining": [[507, "cmdoption-opt-disable-inlining", false]], "-disable-opt": [[507, "cmdoption-opt-disable-opt", false]], "-disable-post-ra-scheduler": [[474, "cmdoption-lli-disable-post-RA-scheduler", false]], "-disable-spill-fusing": [[474, "cmdoption-lli-disable-spill-fusing", false]], "-dispatch": [[493, "cmdoption-llvm-mca-dispatch", false]], "-dispatch-stats": [[493, "cmdoption-llvm-mca-dispatch-stats", false]], "-dump": [[478, "cmdoption-llvm-bcanalyzer-dump", false]], "-dump-json": [[508, "cmdoption-tblgen-dump-json", false]], "-e": [[500, "cmdoption-llvm-readelf-headers", false], [501, "cmdoption-llvm-readobj-headers", false], [506, "cmdoption-llvm-symbolizer-obj", false]], "-ec": [[497, "cmdoption-llvm-pdbutil-bytes-ec", false]], "-enable-no-infs-fp-math": [[474, "cmdoption-lli-enable-no-infs-fp-math", false]], "-enable-no-nans-fp-math": [[474, "cmdoption-lli-enable-no-nans-fp-math", false]], "-enable-unsafe-fp-math": [[474, "cmdoption-lli-enable-unsafe-fp-math", false]], "-enums": [[497, "cmdoption-llvm-pdbutil-pretty-enums", false]], "-exclude-compilands": [[497, "cmdoption-llvm-pdbutil-pretty-exclude-compilands", false]], "-exclude-symbols": [[497, "cmdoption-llvm-pdbutil-pretty-exclude-symbols", false]], "-exclude-types": [[497, "cmdoption-llvm-pdbutil-pretty-exclude-types", false]], "-extbinary": [[498, "cmdoption-llvm-profdata-merge-extbinary", false]], "-externals": [[497, "cmdoption-llvm-pdbutil-pretty-externals", false]], "-f": [[470, "cmdoption-dsymutil-flat", false], [481, "cmdoption-llvm-cov-gcov-f", false], [486, "cmdoption-llvm-dwarfdump-F", false], [486, "cmdoption-llvm-dwarfdump-f", false], [490, "cmdoption-llvm-link-f", false], [494, "cmdoption-llvm-nm-format", false], [495, "cmdoption-llvm-objcopy-target", false], [496, "cmdoption-llvm-objdump-f", false], [498, "cmdoption-llvm-profdata-merge-input-files", false], [504, "cmdoption-llvm-strings-print-file-name", false], [506, "cmdoption-llvm-symbolizer-functions", false], [507, "cmdoption-opt-f", false]], "-failure-mode": [[498, "cmdoption-llvm-profdata-merge-failure-mode", false]], "-fake-argv0": [[474, "cmdoption-lli-fake-argv0", false]], "-files": [[497, "cmdoption-llvm-pdbutil-bytes-files", false], [497, "cmdoption-llvm-pdbutil-dump-files", false]], "-filetype": [[473, "cmdoption-llc-filetype", false]], "-force-interpreter": [[474, "cmdoption-lli-force-interpreter", false]], "-format": [[481, "cmdoption-llvm-cov-export-format", false], [481, "cmdoption-llvm-cov-show-format", false]], "-fpm": [[497, "cmdoption-llvm-pdbutil-bytes-fpm", false]], "-function": [[498, "cmdoption-llvm-profdata-overlap-function", false], [498, "cmdoption-llvm-profdata-show-function", false]], "-g": [[494, "cmdoption-llvm-nm-extern-only", false], [495, "cmdoption-llvm-objcopy-strip-debug", false], [496, "cmdoption-llvm-objdump-g", false], [500, "cmdoption-llvm-readelf-elf-section-groups", false], [501, "cmdoption-llvm-readobj-elf-section-groups", false], [505, "cmdoption-llvm-strip-strip-debug", false]], "-gcc": [[498, "cmdoption-llvm-profdata-merge-gcc", false]], "-gen-asm-matcher": [[508, "cmdoption-tblgen-gen-asm-matcher", false]], "-gen-asm-writer": [[508, "cmdoption-tblgen-gen-asm-writer", false]], "-gen-dag-isel": [[508, "cmdoption-tblgen-gen-dag-isel", false]], "-gen-dfa-packetizer": [[508, "cmdoption-tblgen-gen-dfa-packetizer", false]], "-gen-disassembler": [[508, "cmdoption-tblgen-gen-disassembler", false]], "-gen-emitter": [[508, "cmdoption-tblgen-gen-emitter", false]], "-gen-enhanced-disassembly-info": [[508, "cmdoption-tblgen-gen-enhanced-disassembly-info", false]], "-gen-exegesis": [[508, "cmdoption-tblgen-gen-exegesis", false]], "-gen-fast-isel": [[508, "cmdoption-tblgen-gen-fast-isel", false]], "-gen-instr-info": [[508, "cmdoption-tblgen-gen-instr-info", false]], "-gen-intrinsic-enums": [[508, "cmdoption-tblgen-gen-intrinsic-enums", false]], "-gen-intrinsic-impl": [[508, "cmdoption-tblgen-gen-intrinsic-impl", false]], "-gen-partial-profile": [[498, "cmdoption-llvm-profdata-merge-gen-partial-profile", false]], "-gen-pseudo-lowering": [[508, "cmdoption-tblgen-gen-pseudo-lowering", false]], "-gen-register-info": [[508, "cmdoption-tblgen-gen-register-info", false]], "-gen-subtarget": [[508, "cmdoption-tblgen-gen-subtarget", false]], "-gen-tgt-intrinsic": [[508, "cmdoption-tblgen-gen-tgt-intrinsic", false]], "-global-extras": [[497, "cmdoption-llvm-pdbutil-dump-global-extras", false]], "-globals": [[497, "cmdoption-llvm-pdbutil-dump-globals", false], [497, "cmdoption-llvm-pdbutil-pretty-globals", false]], "-h": [[470, "cmdoption-dsymutil-help", false], [472, "cmdoption-lit-h", false], [476, "cmdoption-llvm-ar-h", false], [482, "cmdoption-llvm-cxxfilt-help", false], [486, "cmdoption-llvm-dwarfdump-h", false], [491, "cmdoption-llvm-lipo-help", false], [494, "cmdoption-llvm-nm-help", false], [495, "cmdoption-llvm-objcopy-help", false], [496, "cmdoption-llvm-objdump-h", false], [500, "cmdoption-llvm-readelf-file-headers", false], [501, "cmdoption-llvm-readobj-file-headers", false], [502, "cmdoption-llvm-size-help", false], [504, "cmdoption-llvm-strings-help", false], [505, "cmdoption-llvm-strip-help", false], [506, "cmdoption-llvm-symbolizer-help", false]], "-help": [[468, "cmdoption-FileCheck-help", false], [473, "cmdoption-llc-help", false], [474, "cmdoption-lli-help", false], [478, "cmdoption-llvm-bcanalyzer-help", false], [487, "cmdoption-llvm-exegesis-help", false], [490, "cmdoption-llvm-link-help", false], [491, "cmdoption-llvm-lipo-help", false], [493, "cmdoption-llvm-mca-help", false], [498, "cmdoption-llvm-profdata-merge-help", false], [498, "cmdoption-llvm-profdata-overlap-help", false], [498, "cmdoption-llvm-profdata-show-help", false], [507, "cmdoption-opt-help", false], [508, "cmdoption-tblgen-help", false]], "-i": [[486, "cmdoption-llvm-dwarfdump-i", false], [495, "cmdoption-llvm-objcopy-input-target", false], [500, "cmdoption-llvm-readelf-elf-hash-histogram", false], [501, "cmdoption-llvm-readobj-elf-hash-histogram", false], [506, "cmdoption-llvm-symbolizer-inlining", false], [508, "cmdoption-tblgen-I", false]], "-id": [[497, "cmdoption-llvm-pdbutil-bytes-id", false]], "-id-data": [[497, "cmdoption-llvm-pdbutil-dump-id-data", false]], "-id-extras": [[497, "cmdoption-llvm-pdbutil-dump-id-extras", false]], "-id-index": [[497, "cmdoption-llvm-pdbutil-dump-id-index", false]], "-ids": [[497, "cmdoption-llvm-pdbutil-dump-ids", false]], "-ignore-filename-regex": [[481, "cmdoption-llvm-cov-export-ignore-filename-regex", false], [481, "cmdoption-llvm-cov-report-ignore-filename-regex", false], [481, "cmdoption-llvm-cov-show-ignore-filename-regex", false]], "-ignore-invalid-sched-class": [[487, "cmdoption-llvm-exegesis-ignore-invalid-sched-class", false]], "-il": [[497, "cmdoption-llvm-pdbutil-dump-il", false]], "-include-compilands": [[497, "cmdoption-llvm-pdbutil-pretty-include-compilands", false]], "-include-symbols": [[497, "cmdoption-llvm-pdbutil-pretty-include-symbols", false]], "-include-types": [[497, "cmdoption-llvm-pdbutil-pretty-include-types", false]], "-info": [[491, "cmdoption-llvm-lipo-info", false]], "-input-files": [[498, "cmdoption-llvm-profdata-merge-input-files", false]], "-instr": [[498, "cmdoption-llvm-profdata-merge-instr", false], [498, "cmdoption-llvm-profdata-show-instr", false]], "-instruction-info": [[493, "cmdoption-llvm-mca-instruction-info", false]], "-instruction-tables": [[493, "cmdoption-llvm-mca-instruction-tables", false]], "-iterations": [[493, "cmdoption-llvm-mca-iterations", false]], "-j": [[470, "cmdoption-dsymutil-num-threads", false], [472, "cmdoption-lit-j", false], [481, "cmdoption-llvm-cov-export-num-threads", false], [481, "cmdoption-llvm-cov-show-num-threads", false], [494, "cmdoption-llvm-nm-just-symbol-name", false], [495, "cmdoption-llvm-objcopy-only-section", false], [496, "cmdoption-llvm-objdump-j", false], [498, "cmdoption-llvm-profdata-merge-num-threads", false]], "-jit-enable-eh": [[474, "cmdoption-lli-jit-enable-eh", false]], "-join-liveintervals": [[474, "cmdoption-lli-join-liveintervals", false]], "-k": [[495, "cmdoption-llvm-objcopy-keep-symbol", false], [505, "cmdoption-llvm-strip-keep-symbol", false]], "-l": [[481, "cmdoption-llvm-cov-gcov-l", false], [495, "cmdoption-llvm-objcopy-localize-symbol", false], [496, "cmdoption-llvm-objdump-l", false], [497, "cmdoption-llvm-pdbutil-dump-l", false], [500, "cmdoption-llvm-readelf-program-headers", false], [501, "cmdoption-llvm-readobj-program-headers", false], [502, "cmdoption-llvm-size-l", false]], "-line-coverage-gt": [[481, "cmdoption-llvm-cov-show-line-coverage-gt", false]], "-line-coverage-lt": [[481, "cmdoption-llvm-cov-show-line-coverage-lt", false]], "-lines": [[497, "cmdoption-llvm-pdbutil-pretty-lines", false]], "-list-below-cutoff": [[498, "cmdoption-llvm-profdata-show-list-below-cutoff", false]], "-load": [[474, "cmdoption-lli-load", false], [507, "cmdoption-opt-load", false]], "-load-address": [[497, "cmdoption-llvm-pdbutil-pretty-load-address", false]], "-lqueue": [[493, "cmdoption-llvm-mca-lqueue", false]], "-lto-pass-remarks-filter": [[600, "cmdoption-lto-pass-remarks-filter", false]], "-lto-pass-remarks-format": [[600, "cmdoption-lto-pass-remarks-format", false]], "-lto-pass-remarks-hotness-threshold": [[600, "cmdoption-lto-pass-remarks-hotness-threshold", false]], "-lto-pass-remarks-output": [[600, "cmdoption-lto-pass-remarks-output", false]], "-lto-pass-remarks-with-hotness": [[600, "cmdoption-lto-pass-remarks-with-hotness", false]], "-m": [[476, "cmdoption-llvm-ar-M", false], [494, "cmdoption-llvm-nm-print-armap", false], [494, "cmdoption-llvm-nm-m", false], [496, "cmdoption-llvm-objdump-M", false], [496, "cmdoption-llvm-objdump-m", false], [502, "cmdoption-llvm-size-m", false]], "-march": [[473, "cmdoption-llc-march", false], [474, "cmdoption-lli-march", false], [493, "cmdoption-llvm-mca-march", false]], "-mattr": [[473, "cmdoption-llc-mattr", false], [474, "cmdoption-lli-mattr", false]], "-max-configs-per-opcode": [[487, "cmdoption-llvm-exegesis-max-configs-per-opcode", false]], "-mcpu": [[473, "cmdoption-llc-mcpu", false], [474, "cmdoption-lli-mcpu", false], [487, "cmdoption-llvm-exegesis-mcpu", false], [493, "cmdoption-llvm-mca-mcpu", false]], "-meabi": [[473, "cmdoption-llc-meabi", false]], "-memop-sizes": [[498, "cmdoption-llvm-profdata-show-memop-sizes", false]], "-min-class-padding": [[497, "cmdoption-llvm-pdbutil-pretty-min-class-padding", false]], "-min-class-padding-imm": [[497, "cmdoption-llvm-pdbutil-pretty-min-class-padding-imm", false]], "-min-type-size": [[497, "cmdoption-llvm-pdbutil-pretty-min-type-size", false]], "-mod": [[497, "cmdoption-llvm-pdbutil-bytes-mod", false]], "-mode": [[487, "cmdoption-llvm-exegesis-mode", false]], "-modi": [[497, "cmdoption-llvm-pdbutil-bytes-modi", false], [497, "cmdoption-llvm-pdbutil-dump-modi", false]], "-module-syms": [[497, "cmdoption-llvm-pdbutil-pretty-module-syms", false]], "-modules": [[497, "cmdoption-llvm-pdbutil-dump-modules", false]], "-mtriple": [[473, "cmdoption-llc-mtriple", false], [474, "cmdoption-lli-mtriple", false], [493, "cmdoption-llvm-mca-mtriple", false]], "-n": [[481, "cmdoption-llvm-cov-gcov-n", false], [482, "cmdoption-llvm-cxxfilt-no-strip-underscore", false], [486, "cmdoption-llvm-dwarfdump-n", false], [494, "cmdoption-llvm-nm-numeric-sort", false], [495, "cmdoption-llvm-objcopy-strip-symbol", false], [500, "cmdoption-llvm-readelf-notes", false], [501, "cmdoption-llvm-readobj-notes", false], [504, "cmdoption-llvm-strings-bytes", false], [505, "cmdoption-llvm-strip-strip-symbol", false]], "-name": [[481, "cmdoption-llvm-cov-show-name", false]], "-name-map": [[497, "cmdoption-llvm-pdbutil-bytes-name-map", false]], "-name-regex": [[481, "cmdoption-llvm-cov-show-name-regex", false]], "-name-whitelist": [[481, "cmdoption-llvm-cov-show-name-whitelist", false]], "-no-compiler-generated": [[497, "cmdoption-llvm-pdbutil-pretty-no-compiler-generated", false]], "-no-enum-definitions": [[497, "cmdoption-llvm-pdbutil-pretty-no-enum-definitions", false]], "-no-system-libs": [[497, "cmdoption-llvm-pdbutil-pretty-no-system-libs", false]], "-noalias": [[493, "cmdoption-llvm-mca-noalias", false]], "-nodetails": [[478, "cmdoption-llvm-bcanalyzer-nodetails", false]], "-nozero-initialized-in-bss": [[474, "cmdoption-lli-nozero-initialized-in-bss", false]], "-num-repetitions": [[487, "cmdoption-llvm-exegesis-num-repetitions", false]], "-num-threads": [[481, "cmdoption-llvm-cov-export-num-threads", false], [481, "cmdoption-llvm-cov-show-num-threads", false], [498, "cmdoption-llvm-profdata-merge-num-threads", false]], "-o": [[470, "cmdoption-dsymutil-out", false], [473, "cmdoption-llc-O", false], [473, "cmdoption-llc-o", false], [481, "cmdoption-llvm-cov-gcov-o", false], [483, "cmdoption-llvm-cxxmap-output", false], [486, "cmdoption-llvm-dwarfdump-o", false], [490, "cmdoption-llvm-link-o", false], [493, "cmdoption-llvm-mca-o", false], [494, "cmdoption-llvm-nm-print-file-name", false], [495, "cmdoption-llvm-objcopy-output-target", false], [498, "cmdoption-llvm-profdata-merge-output", false], [498, "cmdoption-llvm-profdata-overlap-o", false], [498, "cmdoption-llvm-profdata-show-output", false], [502, "cmdoption-llvm-size-o", false], [503, "cmdoption-llvm-stress-o", false], [505, "cmdoption-llvm-strip-o", false], [507, "cmdoption-opt-o", false], [508, "cmdoption-tblgen-o", false]], "-opcode-index": [[487, "cmdoption-llvm-exegesis-opcode-index", false]], "-opcode-name": [[487, "cmdoption-llvm-exegesis-opcode-name", false]], "-opt-remarks-filename": [[600, "cmdoption-opt-remarks-filename", false]], "-opt-remarks-filter": [[600, "cmdoption-opt-remarks-filter", false]], "-opt-remarks-format": [[600, "cmdoption-opt-remarks-format", false]], "-opt-remarks-with-hotness": [[600, "cmdoption-opt-remarks-with-hotness", false]], "-output": [[483, "cmdoption-llvm-cxxmap-output", false], [498, "cmdoption-llvm-profdata-merge-output", false], [498, "cmdoption-llvm-profdata-show-output", false]], "-output-asm-variant": [[493, "cmdoption-llvm-mca-output-asm-variant", false]], "-output-dir": [[481, "cmdoption-llvm-cov-show-output-dir", false]], "-p": [[481, "cmdoption-llvm-cov-gcov-p", false], [486, "cmdoption-llvm-dwarfdump-p", false], [494, "cmdoption-llvm-nm-portability", false], [494, "cmdoption-llvm-nm-no-sort", false], [495, "cmdoption-llvm-objcopy-preserve-dates", false], [496, "cmdoption-llvm-objdump-p", false], [500, "cmdoption-llvm-readelf-string-dump", false], [501, "cmdoption-llvm-readobj-string-dump", false], [505, "cmdoption-llvm-strip-preserve-dates", false], [506, "cmdoption-llvm-symbolizer-pretty-print", false], [507, "cmdoption-opt-p", false]], "-pass-remarks": [[600, "cmdoption-pass-remarks", false]], "-pass-remarks-analysis": [[600, "cmdoption-pass-remarks-analysis", false]], "-pass-remarks-filter": [[600, "cmdoption-pass-remarks-filter", false]], "-pass-remarks-format": [[600, "cmdoption-pass-remarks-format", false]], "-pass-remarks-hotness-threshold": [[600, "cmdoption-pass-remarks-hotness-threshold", false]], "-pass-remarks-missed": [[600, "cmdoption-pass-remarks-missed", false]], "-pass-remarks-output": [[600, "cmdoption-pass-remarks-output", false]], "-pass-remarks-with-hotness": [[600, "cmdoption-pass-remarks-with-hotness", false]], "-path-equivalence": [[481, "cmdoption-llvm-cov-show-path-equivalence", false]], "-pdb": [[497, "cmdoption-llvm-pdbutil-merge-pdb", false], [497, "cmdoption-llvm-pdbutil-yaml2pdb-pdb", false]], "-pre-ra-sched": [[474, "cmdoption-lli-pre-RA-sched", false]], "-print-enums": [[508, "cmdoption-tblgen-print-enums", false]], "-print-imm-hex": [[493, "cmdoption-llvm-mca-print-imm-hex", false]], "-print-records": [[508, "cmdoption-tblgen-print-records", false]], "-print-sets": [[508, "cmdoption-tblgen-print-sets", false]], "-prof-sym-list": [[498, "cmdoption-llvm-profdata-merge-prof-sym-list", false]], "-public-extras": [[497, "cmdoption-llvm-pdbutil-dump-public-extras", false]], "-publics": [[497, "cmdoption-llvm-pdbutil-dump-publics", false]], "-q": [[472, "cmdoption-lit-q", false]], "-r": [[483, "cmdoption-llvm-cxxmap-remapping-file", false], [486, "cmdoption-llvm-dwarfdump-r", false], [494, "cmdoption-llvm-nm-reverse-sort", false], [495, "cmdoption-llvm-objcopy-remove-section", false], [496, "cmdoption-llvm-objdump-R", false], [496, "cmdoption-llvm-objdump-r", false], [498, "cmdoption-llvm-profdata-merge-remapping-file", false], [500, "cmdoption-llvm-readelf-relocations", false], [501, "cmdoption-llvm-readobj-relocations", false], [505, "cmdoption-llvm-strip-remove-section", false]], "-regalloc": [[474, "cmdoption-lli-regalloc", false]], "-region-coverage-gt": [[481, "cmdoption-llvm-cov-show-region-coverage-gt", false]], "-region-coverage-lt": [[481, "cmdoption-llvm-cov-show-region-coverage-lt", false]], "-register-file-size": [[493, "cmdoption-llvm-mca-register-file-size", false]], "-register-file-stats": [[493, "cmdoption-llvm-mca-register-file-stats", false]], "-relocation-model": [[474, "cmdoption-lli-relocation-model", false]], "-remapping-file": [[483, "cmdoption-llvm-cxxmap-remapping-file", false], [498, "cmdoption-llvm-profdata-merge-remapping-file", false]], "-remarks-section": [[473, "cmdoption-llc-remarks-section", false]], "-repetition-mode": [[487, "cmdoption-llvm-exegesis-repetition-mode", false]], "-replace": [[491, "cmdoption-llvm-lipo-replace", false]], "-resource-pressure": [[493, "cmdoption-llvm-mca-resource-pressure", false]], "-retire-stats": [[493, "cmdoption-llvm-mca-retire-stats", false]], "-s": [[470, "cmdoption-dsymutil-S", false], [470, "cmdoption-dsymutil-s", false], [472, "cmdoption-lit-s", false], [482, "cmdoption-llvm-cxxfilt-format", false], [490, "cmdoption-llvm-link-S", false], [494, "cmdoption-llvm-nm-print-size", false], [494, "cmdoption-llvm-nm-s", false], [495, "cmdoption-llvm-objcopy-strip-all", false], [496, "cmdoption-llvm-objdump-S", false], [496, "cmdoption-llvm-objdump-s", false], [500, "cmdoption-llvm-readelf-sections", false], [500, "cmdoption-llvm-readelf-symbols", false], [501, "cmdoption-llvm-readobj-sections", false], [501, "cmdoption-llvm-readobj-sections", false], [505, "cmdoption-llvm-strip-strip-all", false], [506, "cmdoption-llvm-symbolizer-basenames", false], [507, "cmdoption-opt-S", false]], "-sample": [[498, "cmdoption-llvm-profdata-merge-sample", false], [498, "cmdoption-llvm-profdata-show-sample", false]], "-sc": [[497, "cmdoption-llvm-pdbutil-bytes-sc", false]], "-scheduler-stats": [[493, "cmdoption-llvm-mca-scheduler-stats", false]], "-section-contribs": [[497, "cmdoption-llvm-pdbutil-dump-section-contribs", false]], "-section-headers": [[497, "cmdoption-llvm-pdbutil-dump-section-headers", false]], "-section-map": [[497, "cmdoption-llvm-pdbutil-dump-section-map", false]], "-seed": [[503, "cmdoption-llvm-stress-seed", false]], "-segalign": [[491, "cmdoption-llvm-lipo-segalign", false]], "-show-encoding": [[493, "cmdoption-llvm-mca-show-encoding", false]], "-show-expansions": [[481, "cmdoption-llvm-cov-show-show-expansions", false]], "-show-functions": [[481, "cmdoption-llvm-cov-report-show-functions", false]], "-show-instantiation-summary": [[481, "cmdoption-llvm-cov-report-show-instantiation-summary", false]], "-show-instantiations": [[481, "cmdoption-llvm-cov-show-show-instantiations", false]], "-show-line-counts": [[481, "cmdoption-llvm-cov-show-show-line-counts", false]], "-show-line-counts-or-regions": [[481, "cmdoption-llvm-cov-show-show-line-counts-or-regions", false]], "-show-prof-sym-list": [[498, "cmdoption-llvm-profdata-show-show-prof-sym-list", false]], "-show-regions": [[481, "cmdoption-llvm-cov-show-show-regions", false]], "-show-sec-info-only": [[498, "cmdoption-llvm-profdata-show-show-sec-info-only", false]], "-showcs": [[498, "cmdoption-llvm-profdata-show-showcs", false]], "-size": [[503, "cmdoption-llvm-stress-size", false]], "-skip-expansions": [[481, "cmdoption-llvm-cov-export-skip-expansions", false]], "-skip-functions": [[481, "cmdoption-llvm-cov-export-skip-functions", false]], "-sm": [[497, "cmdoption-llvm-pdbutil-bytes-sm", false]], "-snippets-file": [[487, "cmdoption-llvm-exegesis-snippets-file", false]], "-soft-float": [[474, "cmdoption-lli-soft-float", false]], "-sparse": [[498, "cmdoption-llvm-profdata-merge-sparse", false]], "-spiller": [[474, "cmdoption-lli-spiller", false]], "-split-chunks": [[497, "cmdoption-llvm-pdbutil-bytes-split-chunks", false]], "-squeue": [[493, "cmdoption-llvm-mca-squeue", false]], "-stack-size-section": [[473, "cmdoption-llc-stack-size-section", false]], "-stats": [[474, "cmdoption-lli-stats", false], [507, "cmdoption-opt-stats", false]], "-stream-blocks": [[497, "cmdoption-llvm-pdbutil-dump-stream-blocks", false]], "-stream-data": [[497, "cmdoption-llvm-pdbutil-bytes-stream-data", false]], "-streams": [[497, "cmdoption-llvm-pdbutil-dump-streams", false]], "-string-table": [[497, "cmdoption-llvm-pdbutil-dump-string-table", false]], "-strip-debug": [[507, "cmdoption-opt-strip-debug", false]], "-summary": [[497, "cmdoption-llvm-pdbutil-dump-summary", false]], "-summary-only": [[481, "cmdoption-llvm-cov-export-summary-only", false]], "-sym-data": [[497, "cmdoption-llvm-pdbutil-dump-sym-data", false]], "-sym-types": [[497, "cmdoption-llvm-pdbutil-pretty-sym-types", false]], "-symbol-order": [[497, "cmdoption-llvm-pdbutil-pretty-symbol-order", false]], "-symbols": [[497, "cmdoption-llvm-pdbutil-dump-symbols", false]], "-syms": [[497, "cmdoption-llvm-pdbutil-bytes-syms", false]], "-t": [[482, "cmdoption-llvm-cxxfilt-types", false], [494, "cmdoption-llvm-nm-radix", false], [496, "cmdoption-llvm-objdump-T", false], [496, "cmdoption-llvm-objdump-t", false], [501, "cmdoption-llvm-readobj-symbols", false], [502, "cmdoption-llvm-size-totals", false], [504, "cmdoption-llvm-strings-radix", false], [505, "cmdoption-llvm-strip-T", false]], "-tab-size": [[481, "cmdoption-llvm-cov-show-tab-size", false]], "-text": [[498, "cmdoption-llvm-profdata-merge-text", false], [498, "cmdoption-llvm-profdata-show-text", false]], "-thin": [[491, "cmdoption-llvm-lipo-thin", false]], "-time-passes": [[474, "cmdoption-lli-time-passes", false], [507, "cmdoption-opt-time-passes", false]], "-timeline": [[493, "cmdoption-llvm-mca-timeline", false]], "-timeline-max-cycles": [[493, "cmdoption-llvm-mca-timeline-max-cycles", false]], "-timeline-max-iterations": [[493, "cmdoption-llvm-mca-timeline-max-iterations", false]], "-topn": [[498, "cmdoption-llvm-profdata-show-topn", false]], "-type": [[497, "cmdoption-llvm-pdbutil-bytes-type", false]], "-type-data": [[497, "cmdoption-llvm-pdbutil-dump-type-data", false]], "-type-extras": [[497, "cmdoption-llvm-pdbutil-dump-type-extras", false]], "-type-index": [[497, "cmdoption-llvm-pdbutil-dump-type-index", false]], "-type-server": [[497, "cmdoption-llvm-pdbutil-bytes-type-server", false]], "-typedefs": [[497, "cmdoption-llvm-pdbutil-pretty-typedefs", false]], "-types": [[497, "cmdoption-llvm-pdbutil-dump-types", false], [497, "cmdoption-llvm-pdbutil-pretty-types", false]], "-u": [[470, "cmdoption-dsymutil-u", false], [481, "cmdoption-llvm-cov-gcov-u", false], [486, "cmdoption-llvm-dwarfdump-u", false], [494, "cmdoption-llvm-nm-defined-only", false], [494, "cmdoption-llvm-nm-undefined-only", false], [495, "cmdoption-llvm-objcopy-disable-deterministic-archives", false], [496, "cmdoption-llvm-objdump-u", false], [500, "cmdoption-llvm-readelf-unwind", false], [501, "cmdoption-llvm-readobj-unwind", false], [505, "cmdoption-llvm-strip-disable-deterministic-archives", false]], "-use-color": [[481, "cmdoption-llvm-cov-report-use-color", false], [481, "cmdoption-llvm-cov-show-use-color", false]], "-use-md5": [[498, "cmdoption-llvm-profdata-merge-use-md5", false]], "-v": [[468, "cmdoption-FileCheck-v", false], [470, "cmdoption-dsymutil-v", false], [472, "cmdoption-lit-v", false], [486, "cmdoption-llvm-dwarfdump-v", false], [490, "cmdoption-llvm-link-v", false], [494, "cmdoption-llvm-nm-numeric-sort", false], [495, "cmdoption-llvm-objcopy-version", false], [500, "cmdoption-llvm-readelf-version-info", false], [501, "cmdoption-llvm-readobj-version-info", false], [505, "cmdoption-llvm-strip-version", false]], "-value-cutoff": [[498, "cmdoption-llvm-profdata-overlap-value-cutoff", false], [498, "cmdoption-llvm-profdata-show-value-cutoff", false]], "-verify": [[478, "cmdoption-llvm-bcanalyzer-verify", false]], "-verify-each": [[507, "cmdoption-opt-verify-each", false]], "-verify_arch": [[491, "cmdoption-llvm-lipo-verify_arch", false]], "-version": [[468, "cmdoption-FileCheck-version", false], [474, "cmdoption-lli-version", false], [481, "cmdoption-llvm-cov-gcov-version", false], [491, "cmdoption-llvm-lipo-version", false], [508, "cmdoption-tblgen-version", false]], "-vv": [[468, "cmdoption-FileCheck-vv", false], [472, "cmdoption-lit-vv", false]], "-w": [[494, "cmdoption-llvm-nm-no-weak", false], [495, "cmdoption-llvm-objcopy-weaken-symbol", false], [495, "cmdoption-llvm-objcopy-wildcard", false], [496, "cmdoption-llvm-objdump-w", false], [505, "cmdoption-llvm-strip-wildcard", false]], "-wambiguous": [[483, "cmdoption-llvm-cxxmap-Wambiguous", false]], "-weighted-input": [[498, "cmdoption-llvm-profdata-merge-weighted-input", false]], "-wincomplete": [[483, "cmdoption-llvm-cxxmap-Wincomplete", false]], "-x": [[481, "cmdoption-llvm-cov-gcov-x", false], [486, "cmdoption-llvm-dwarfdump-x", false], [494, "cmdoption-llvm-nm-x", false], [495, "cmdoption-llvm-objcopy-discard-locals", false], [495, "cmdoption-llvm-objcopy-discard-all", false], [496, "cmdoption-llvm-objdump-x", false], [500, "cmdoption-llvm-readelf-hex-dump", false], [501, "cmdoption-llvm-readobj-hex-dump", false], [502, "cmdoption-llvm-size-x", false], [505, "cmdoption-llvm-strip-discard-locals", false], [505, "cmdoption-llvm-strip-discard-all", false]], "-x86-asm-syntax": [[474, "cmdoption-lli-x86-asm-syntax", false]], "-xdemangler": [[481, "cmdoption-llvm-cov-show-Xdemangler", false]], "-xme": [[497, "cmdoption-llvm-pdbutil-dump-xme", false]], "-xmi": [[497, "cmdoption-llvm-pdbutil-dump-xmi", false]], "-y": [[470, "cmdoption-dsymutil-y", false]], "-z": [[470, "cmdoption-dsymutil-minimize", false], [496, "cmdoption-llvm-objdump-z", false]], "-{passname}": [[507, "cmdoption-opt-passname", false]], "@<file>": [[476, "cmdoption-llvm-ar-arg-FILE", false], [482, "cmdoption-llvm-cxxfilt-arg-FILE", false], [486, "cmdoption-llvm-dwarfdump-arg-FILE", false], [494, "cmdoption-llvm-nm-arg-FILE", false], [495, "cmdoption-llvm-objcopy-arg-FILE", false], [496, "cmdoption-llvm-objdump-arg-FILE", false], [500, "cmdoption-llvm-readelf-arg-FILE", false], [501, "cmdoption-llvm-readobj-arg-FILE", false], [502, "cmdoption-llvm-size-arg-FILE", false], [504, "cmdoption-llvm-strings-arg-FILE", false], [505, "cmdoption-llvm-strip-arg-FILE", false], [506, "cmdoption-llvm-symbolizer-arg-FILE", false]], "a": [[476, "cmdoption-llvm-ar-arg-a", false]], "addlib": [[476, "cmdoption-llvm-ar-arg-ADDLIB", false]], "addmod": [[476, "cmdoption-llvm-ar-arg-ADDMOD", false]], "att": [[496, "cmdoption-llvm-objdump-arg-att", false]], "b": [[476, "cmdoption-llvm-ar-arg-b", false]], "c": [[476, "cmdoption-llvm-ar-arg-c", false]], "command line option": [[600, "cmdoption-lto-pass-remarks-filter", false], [600, "cmdoption-lto-pass-remarks-format", false], [600, "cmdoption-lto-pass-remarks-hotness-threshold", false], [600, "cmdoption-lto-pass-remarks-output", false], [600, "cmdoption-lto-pass-remarks-with-hotness", false], [600, "cmdoption-opt-remarks-filename", false], [600, "cmdoption-opt-remarks-filter", false], [600, "cmdoption-opt-remarks-format", false], [600, "cmdoption-opt-remarks-with-hotness", false], [600, "cmdoption-pass-remarks", false], [600, "cmdoption-pass-remarks-analysis", false], [600, "cmdoption-pass-remarks-filter", false], [600, "cmdoption-pass-remarks-format", false], [600, "cmdoption-pass-remarks-hotness-threshold", false], [600, "cmdoption-pass-remarks-missed", false], [600, "cmdoption-pass-remarks-output", false], [600, "cmdoption-pass-remarks-with-hotness", false]], "create": [[476, "cmdoption-llvm-ar-arg-CREATE", false]], "createthin": [[476, "cmdoption-llvm-ar-arg-CREATETHIN", false]], "d": [[476, "cmdoption-llvm-ar-arg-D", false], [476, "cmdoption-llvm-ar-arg-d", false]], "delete": [[476, "cmdoption-llvm-ar-arg-DELETE", false]], "dsymutil command line option": [[470, "cmdoption-dsymutil-S", false], [470, "cmdoption-dsymutil-accelerator", false], [470, "cmdoption-dsymutil-arch", false], [470, "cmdoption-dsymutil-dump-debug-map", false], [470, "cmdoption-dsymutil-flat", false], [470, "cmdoption-dsymutil-gen-reproducer", false], [470, "cmdoption-dsymutil-help", false], [470, "cmdoption-dsymutil-minimize", false], [470, "cmdoption-dsymutil-no-odr", false], [470, "cmdoption-dsymutil-no-output", false], [470, "cmdoption-dsymutil-no-swiftmodule-timestamp", false], [470, "cmdoption-dsymutil-num-threads", false], [470, "cmdoption-dsymutil-object-prefix-map", false], [470, "cmdoption-dsymutil-oso-prepend-path", false], [470, "cmdoption-dsymutil-out", false], [470, "cmdoption-dsymutil-papertrail", false], [470, "cmdoption-dsymutil-remarks-output-format", false], [470, "cmdoption-dsymutil-remarks-prepend-path", false], [470, "cmdoption-dsymutil-s", false], [470, "cmdoption-dsymutil-statistics", false], [470, "cmdoption-dsymutil-symbol-map", false], [470, "cmdoption-dsymutil-toolchain", false], [470, "cmdoption-dsymutil-u", false], [470, "cmdoption-dsymutil-use-reproducer", false], [470, "cmdoption-dsymutil-v", false], [470, "cmdoption-dsymutil-verbose", false], [470, "cmdoption-dsymutil-verify", false], [470, "cmdoption-dsymutil-y", false]], "end": [[476, "cmdoption-llvm-ar-arg-END", false]], "filecheck command line option": [[468, "cmdoption-FileCheck-D-FMT-NUMVAR", false], [468, "cmdoption-FileCheck-D-VAR", false], [468, "cmdoption-FileCheck-allow-deprecated-dag-overlap", false], [468, "cmdoption-FileCheck-check-prefix", false], [468, "cmdoption-FileCheck-check-prefixes", false], [468, "cmdoption-FileCheck-color", false], [468, "cmdoption-FileCheck-comment-prefixes", false], [468, "cmdoption-FileCheck-dump-input", false], [468, "cmdoption-FileCheck-dump-input-context", false], [468, "cmdoption-FileCheck-dump-input-filter", false], [468, "cmdoption-FileCheck-enable-var-scope", false], [468, "cmdoption-FileCheck-help", false], [468, "cmdoption-FileCheck-ignore-case", false], [468, "cmdoption-FileCheck-implicit-check-not", false], [468, "cmdoption-FileCheck-input-file", false], [468, "cmdoption-FileCheck-match-full-lines", false], [468, "cmdoption-FileCheck-strict-whitespace", false], [468, "cmdoption-FileCheck-v", false], [468, "cmdoption-FileCheck-version", false], [468, "cmdoption-FileCheck-vv", false]], "i": [[476, "cmdoption-llvm-ar-arg-i", false]], "intel": [[496, "cmdoption-llvm-objdump-arg-intel", false]], "l": [[476, "cmdoption-llvm-ar-arg-L", false]], "lit command line option": [[472, "cmdoption-lit-D", false], [472, "cmdoption-lit-a", false], [472, "cmdoption-lit-config-prefix", false], [472, "cmdoption-lit-debug", false], [472, "cmdoption-lit-filter", false], [472, "cmdoption-lit-h", false], [472, "cmdoption-lit-j", false], [472, "cmdoption-lit-max-failures", false], [472, "cmdoption-lit-max-tests", false], [472, "cmdoption-lit-max-time", false], [472, "cmdoption-lit-no-progress-bar", false], [472, "cmdoption-lit-num-shards", false], [472, "cmdoption-lit-path", false], [472, "cmdoption-lit-q", false], [472, "cmdoption-lit-run-shard", false], [472, "cmdoption-lit-s", false], [472, "cmdoption-lit-show-suites", false], [472, "cmdoption-lit-show-tests", false], [472, "cmdoption-lit-show-unsupported", false], [472, "cmdoption-lit-show-xfail", false], [472, "cmdoption-lit-shuffle", false], [472, "cmdoption-lit-time-tests", false], [472, "cmdoption-lit-timeout", false], [472, "cmdoption-lit-v", false], [472, "cmdoption-lit-vg", false], [472, "cmdoption-lit-vg-arg", false], [472, "cmdoption-lit-vg-leak", false], [472, "cmdoption-lit-vv", false]], "llc command line option": [[473, "cmdoption-llc-O", false], [473, "cmdoption-llc-disable-excess-fp-precision", false], [473, "cmdoption-llc-enable-no-infs-fp-math", false], [473, "cmdoption-llc-enable-no-nans-fp-math", false], [473, "cmdoption-llc-enable-no-signed-zeros-fp-math", false], [473, "cmdoption-llc-enable-no-trapping-fp-math", false], [473, "cmdoption-llc-enable-unsafe-fp-math", false], [473, "cmdoption-llc-filetype", false], [473, "cmdoption-llc-frame-pointer", false], [473, "cmdoption-llc-help", false], [473, "cmdoption-llc-load", false], [473, "cmdoption-llc-march", false], [473, "cmdoption-llc-mattr", false], [473, "cmdoption-llc-mcpu", false], [473, "cmdoption-llc-meabi", false], [473, "cmdoption-llc-mtriple", false], [473, "cmdoption-llc-o", false], [473, "cmdoption-llc-print-machineinstrs", false], [473, "cmdoption-llc-regalloc", false], [473, "cmdoption-llc-remarks-section", false], [473, "cmdoption-llc-spiller", false], [473, "cmdoption-llc-stack-size-section", false], [473, "cmdoption-llc-stats", false], [473, "cmdoption-llc-time-passes", false], [473, "cmdoption-llc-x86-asm-syntax", false]], "lli command line option": [[474, "cmdoption-lli-code-model", false], [474, "cmdoption-lli-disable-excess-fp-precision", false], [474, "cmdoption-lli-disable-post-RA-scheduler", false], [474, "cmdoption-lli-disable-spill-fusing", false], [474, "cmdoption-lli-enable-no-infs-fp-math", false], [474, "cmdoption-lli-enable-no-nans-fp-math", false], [474, "cmdoption-lli-enable-unsafe-fp-math", false], [474, "cmdoption-lli-fake-argv0", false], [474, "cmdoption-lli-force-interpreter", false], [474, "cmdoption-lli-help", false], [474, "cmdoption-lli-jit-enable-eh", false], [474, "cmdoption-lli-join-liveintervals", false], [474, "cmdoption-lli-load", false], [474, "cmdoption-lli-march", false], [474, "cmdoption-lli-mattr", false], [474, "cmdoption-lli-mcpu", false], [474, "cmdoption-lli-mtriple", false], [474, "cmdoption-lli-nozero-initialized-in-bss", false], [474, "cmdoption-lli-pre-RA-sched", false], [474, "cmdoption-lli-regalloc", false], [474, "cmdoption-lli-relocation-model", false], [474, "cmdoption-lli-soft-float", false], [474, "cmdoption-lli-spiller", false], [474, "cmdoption-lli-stats", false], [474, "cmdoption-lli-time-passes", false], [474, "cmdoption-lli-version", false], [474, "cmdoption-lli-x86-asm-syntax", false]], "llvm-ar command line option": [[476, "cmdoption-llvm-ar-M", false], [476, "cmdoption-llvm-ar-arg-ADDLIB", false], [476, "cmdoption-llvm-ar-arg-ADDMOD", false], [476, "cmdoption-llvm-ar-arg-CREATE", false], [476, "cmdoption-llvm-ar-arg-CREATETHIN", false], [476, "cmdoption-llvm-ar-arg-D", false], [476, "cmdoption-llvm-ar-arg-DELETE", false], [476, "cmdoption-llvm-ar-arg-END", false], [476, "cmdoption-llvm-ar-arg-FILE", false], [476, "cmdoption-llvm-ar-arg-L", false], [476, "cmdoption-llvm-ar-arg-N", false], [476, "cmdoption-llvm-ar-arg-O", false], [476, "cmdoption-llvm-ar-arg-P", false], [476, "cmdoption-llvm-ar-arg-S", false], [476, "cmdoption-llvm-ar-arg-SAVE", false], [476, "cmdoption-llvm-ar-arg-T", false], [476, "cmdoption-llvm-ar-arg-U", false], [476, "cmdoption-llvm-ar-arg-V", false], [476, "cmdoption-llvm-ar-arg-a", false], [476, "cmdoption-llvm-ar-arg-b", false], [476, "cmdoption-llvm-ar-arg-c", false], [476, "cmdoption-llvm-ar-arg-d", false], [476, "cmdoption-llvm-ar-arg-i", false], [476, "cmdoption-llvm-ar-arg-m", false], [476, "cmdoption-llvm-ar-arg-o", false], [476, "cmdoption-llvm-ar-arg-p", false], [476, "cmdoption-llvm-ar-arg-q", false], [476, "cmdoption-llvm-ar-arg-r", false], [476, "cmdoption-llvm-ar-arg-s", false], [476, "cmdoption-llvm-ar-arg-u", false], [476, "cmdoption-llvm-ar-arg-v", false], [476, "cmdoption-llvm-ar-arg-x", false], [476, "cmdoption-llvm-ar-format", false], [476, "cmdoption-llvm-ar-h", false], [476, "cmdoption-llvm-ar-version", false]], "llvm-bcanalyzer command line option": [[478, "cmdoption-llvm-bcanalyzer-dump", false], [478, "cmdoption-llvm-bcanalyzer-help", false], [478, "cmdoption-llvm-bcanalyzer-nodetails", false], [478, "cmdoption-llvm-bcanalyzer-verify", false]], "llvm-cov-export command line option": [[481, "cmdoption-llvm-cov-export-arch", false], [481, "cmdoption-llvm-cov-export-format", false], [481, "cmdoption-llvm-cov-export-ignore-filename-regex", false], [481, "cmdoption-llvm-cov-export-num-threads", false], [481, "cmdoption-llvm-cov-export-skip-expansions", false], [481, "cmdoption-llvm-cov-export-skip-functions", false], [481, "cmdoption-llvm-cov-export-summary-only", false]], "llvm-cov-gcov command line option": [[481, "cmdoption-llvm-cov-gcov-a", false], [481, "cmdoption-llvm-cov-gcov-b", false], [481, "cmdoption-llvm-cov-gcov-c", false], [481, "cmdoption-llvm-cov-gcov-f", false], [481, "cmdoption-llvm-cov-gcov-help", false], [481, "cmdoption-llvm-cov-gcov-l", false], [481, "cmdoption-llvm-cov-gcov-n", false], [481, "cmdoption-llvm-cov-gcov-o", false], [481, "cmdoption-llvm-cov-gcov-p", false], [481, "cmdoption-llvm-cov-gcov-u", false], [481, "cmdoption-llvm-cov-gcov-version", false], [481, "cmdoption-llvm-cov-gcov-x", false]], "llvm-cov-report command line option": [[481, "cmdoption-llvm-cov-report-arch", false], [481, "cmdoption-llvm-cov-report-ignore-filename-regex", false], [481, "cmdoption-llvm-cov-report-show-functions", false], [481, "cmdoption-llvm-cov-report-show-instantiation-summary", false], [481, "cmdoption-llvm-cov-report-use-color", false]], "llvm-cov-show command line option": [[481, "cmdoption-llvm-cov-show-Xdemangler", false], [481, "cmdoption-llvm-cov-show-arch", false], [481, "cmdoption-llvm-cov-show-format", false], [481, "cmdoption-llvm-cov-show-ignore-filename-regex", false], [481, "cmdoption-llvm-cov-show-line-coverage-gt", false], [481, "cmdoption-llvm-cov-show-line-coverage-lt", false], [481, "cmdoption-llvm-cov-show-name", false], [481, "cmdoption-llvm-cov-show-name-regex", false], [481, "cmdoption-llvm-cov-show-name-whitelist", false], [481, "cmdoption-llvm-cov-show-num-threads", false], [481, "cmdoption-llvm-cov-show-output-dir", false], [481, "cmdoption-llvm-cov-show-path-equivalence", false], [481, "cmdoption-llvm-cov-show-region-coverage-gt", false], [481, "cmdoption-llvm-cov-show-region-coverage-lt", false], [481, "cmdoption-llvm-cov-show-show-expansions", false], [481, "cmdoption-llvm-cov-show-show-instantiations", false], [481, "cmdoption-llvm-cov-show-show-line-counts", false], [481, "cmdoption-llvm-cov-show-show-line-counts-or-regions", false], [481, "cmdoption-llvm-cov-show-show-regions", false], [481, "cmdoption-llvm-cov-show-tab-size", false], [481, "cmdoption-llvm-cov-show-use-color", false]], "llvm-cxxfilt command line option": [[482, "cmdoption-llvm-cxxfilt-arg-FILE", false], [482, "cmdoption-llvm-cxxfilt-format", false], [482, "cmdoption-llvm-cxxfilt-help", false], [482, "cmdoption-llvm-cxxfilt-help-list", false], [482, "cmdoption-llvm-cxxfilt-no-strip-underscore", false], [482, "cmdoption-llvm-cxxfilt-strip-underscore", false], [482, "cmdoption-llvm-cxxfilt-types", false], [482, "cmdoption-llvm-cxxfilt-version", false]], "llvm-cxxmap command line option": [[483, "cmdoption-llvm-cxxmap-Wambiguous", false], [483, "cmdoption-llvm-cxxmap-Wincomplete", false], [483, "cmdoption-llvm-cxxmap-output", false], [483, "cmdoption-llvm-cxxmap-remapping-file", false]], "llvm-dwarfdump command line option": [[486, "cmdoption-llvm-dwarfdump-F", false], [486, "cmdoption-llvm-dwarfdump-a", false], [486, "cmdoption-llvm-dwarfdump-arch", false], [486, "cmdoption-llvm-dwarfdump-arg-FILE", false], [486, "cmdoption-llvm-dwarfdump-c", false], [486, "cmdoption-llvm-dwarfdump-color", false], [486, "cmdoption-llvm-dwarfdump-debug-abbrev", false], [486, "cmdoption-llvm-dwarfdump-diff", false], [486, "cmdoption-llvm-dwarfdump-f", false], [486, "cmdoption-llvm-dwarfdump-h", false], [486, "cmdoption-llvm-dwarfdump-help-list", false], [486, "cmdoption-llvm-dwarfdump-i", false], [486, "cmdoption-llvm-dwarfdump-lookup", false], [486, "cmdoption-llvm-dwarfdump-n", false], [486, "cmdoption-llvm-dwarfdump-o", false], [486, "cmdoption-llvm-dwarfdump-p", false], [486, "cmdoption-llvm-dwarfdump-parent-recurse-depth", false], [486, "cmdoption-llvm-dwarfdump-quiet", false], [486, "cmdoption-llvm-dwarfdump-r", false], [486, "cmdoption-llvm-dwarfdump-show-section-sizes", false], [486, "cmdoption-llvm-dwarfdump-statistics", false], [486, "cmdoption-llvm-dwarfdump-summarize-types", false], [486, "cmdoption-llvm-dwarfdump-u", false], [486, "cmdoption-llvm-dwarfdump-v", false], [486, "cmdoption-llvm-dwarfdump-verify", false], [486, "cmdoption-llvm-dwarfdump-version", false], [486, "cmdoption-llvm-dwarfdump-x", false]], "llvm-exegesis command line option": [[487, "cmdoption-llvm-exegesis-analysis-clustering", false], [487, "cmdoption-llvm-exegesis-analysis-clustering-epsilon", false], [487, "cmdoption-llvm-exegesis-analysis-clusters-output-file", false], [487, "cmdoption-llvm-exegesis-analysis-display-unstable-clusters", false], [487, "cmdoption-llvm-exegesis-analysis-inconsistencies-output-file", false], [487, "cmdoption-llvm-exegesis-analysis-inconsistency-epsilon", false], [487, "cmdoption-llvm-exegesis-analysis-numpoints", false], [487, "cmdoption-llvm-exegesis-benchmarks-file", false], [487, "cmdoption-llvm-exegesis-dump-object-to-disk", false], [487, "cmdoption-llvm-exegesis-help", false], [487, "cmdoption-llvm-exegesis-ignore-invalid-sched-class", false], [487, "cmdoption-llvm-exegesis-max-configs-per-opcode", false], [487, "cmdoption-llvm-exegesis-mcpu", false], [487, "cmdoption-llvm-exegesis-mode", false], [487, "cmdoption-llvm-exegesis-num-repetitions", false], [487, "cmdoption-llvm-exegesis-opcode-index", false], [487, "cmdoption-llvm-exegesis-opcode-name", false], [487, "cmdoption-llvm-exegesis-repetition-mode", false], [487, "cmdoption-llvm-exegesis-snippets-file", false]], "llvm-link command line option": [[490, "cmdoption-llvm-link-S", false], [490, "cmdoption-llvm-link-d", false], [490, "cmdoption-llvm-link-f", false], [490, "cmdoption-llvm-link-help", false], [490, "cmdoption-llvm-link-o", false], [490, "cmdoption-llvm-link-v", false]], "llvm-lipo command line option": [[491, "cmdoption-llvm-lipo-archs", false], [491, "cmdoption-llvm-lipo-create", false], [491, "cmdoption-llvm-lipo-help", false], [491, "cmdoption-llvm-lipo-info", false], [491, "cmdoption-llvm-lipo-replace", false], [491, "cmdoption-llvm-lipo-segalign", false], [491, "cmdoption-llvm-lipo-thin", false], [491, "cmdoption-llvm-lipo-verify_arch", false], [491, "cmdoption-llvm-lipo-version", false]], "llvm-locstats command line option": [[492, "cmdoption-llvm-locstats-compare", false], [492, "cmdoption-llvm-locstats-draw-plot", false], [492, "cmdoption-llvm-locstats-ignore-debug-entry-values", false], [492, "cmdoption-llvm-locstats-only-formal-parameters", false], [492, "cmdoption-llvm-locstats-only-variables", false]], "llvm-mca command line option": [[493, "cmdoption-llvm-mca-all-stats", false], [493, "cmdoption-llvm-mca-all-views", false], [493, "cmdoption-llvm-mca-bottleneck-analysis", false], [493, "cmdoption-llvm-mca-dispatch", false], [493, "cmdoption-llvm-mca-dispatch-stats", false], [493, "cmdoption-llvm-mca-help", false], [493, "cmdoption-llvm-mca-instruction-info", false], [493, "cmdoption-llvm-mca-instruction-tables", false], [493, "cmdoption-llvm-mca-iterations", false], [493, "cmdoption-llvm-mca-lqueue", false], [493, "cmdoption-llvm-mca-march", false], [493, "cmdoption-llvm-mca-mcpu", false], [493, "cmdoption-llvm-mca-mtriple", false], [493, "cmdoption-llvm-mca-noalias", false], [493, "cmdoption-llvm-mca-o", false], [493, "cmdoption-llvm-mca-output-asm-variant", false], [493, "cmdoption-llvm-mca-print-imm-hex", false], [493, "cmdoption-llvm-mca-register-file-size", false], [493, "cmdoption-llvm-mca-register-file-stats", false], [493, "cmdoption-llvm-mca-resource-pressure", false], [493, "cmdoption-llvm-mca-retire-stats", false], [493, "cmdoption-llvm-mca-scheduler-stats", false], [493, "cmdoption-llvm-mca-show-encoding", false], [493, "cmdoption-llvm-mca-squeue", false], [493, "cmdoption-llvm-mca-timeline", false], [493, "cmdoption-llvm-mca-timeline-max-cycles", false], [493, "cmdoption-llvm-mca-timeline-max-iterations", false]], "llvm-nm command line option": [[494, "cmdoption-llvm-nm-B", false], [494, "cmdoption-llvm-nm-add-dyldinfo", false], [494, "cmdoption-llvm-nm-add-inlinedinfo", false], [494, "cmdoption-llvm-nm-arch", false], [494, "cmdoption-llvm-nm-arg-FILE", false], [494, "cmdoption-llvm-nm-debug-syms", false], [494, "cmdoption-llvm-nm-defined-only", false], [494, "cmdoption-llvm-nm-demangle", false], [494, "cmdoption-llvm-nm-dyldinfo-only", false], [494, "cmdoption-llvm-nm-dynamic", false], [494, "cmdoption-llvm-nm-extern-only", false], [494, "cmdoption-llvm-nm-format", false], [494, "cmdoption-llvm-nm-help", false], [494, "cmdoption-llvm-nm-help-list", false], [494, "cmdoption-llvm-nm-just-symbol-name", false], [494, "cmdoption-llvm-nm-m", false], [494, "cmdoption-llvm-nm-no-demangle", false], [494, "cmdoption-llvm-nm-no-dyldinfo", false], [494, "cmdoption-llvm-nm-no-llvm-bc", false], [494, "cmdoption-llvm-nm-no-sort", false], [494, "cmdoption-llvm-nm-no-weak", false], [494, "cmdoption-llvm-nm-numeric-sort", false], [494, "cmdoption-llvm-nm-portability", false], [494, "cmdoption-llvm-nm-print-armap", false], [494, "cmdoption-llvm-nm-print-file-name", false], [494, "cmdoption-llvm-nm-print-size", false], [494, "cmdoption-llvm-nm-radix", false], [494, "cmdoption-llvm-nm-reverse-sort", false], [494, "cmdoption-llvm-nm-s", false], [494, "cmdoption-llvm-nm-size-sort", false], [494, "cmdoption-llvm-nm-special-syms", false], [494, "cmdoption-llvm-nm-undefined-only", false], [494, "cmdoption-llvm-nm-version", false], [494, "cmdoption-llvm-nm-without-aliases", false], [494, "cmdoption-llvm-nm-x", false]], "llvm-objcopy command line option": [[495, "cmdoption-llvm-objcopy-add-gnu-debuglink", false], [495, "cmdoption-llvm-objcopy-add-section", false], [495, "cmdoption-llvm-objcopy-add-symbol", false], [495, "cmdoption-llvm-objcopy-allow-broken-links", false], [495, "cmdoption-llvm-objcopy-arg-FILE", false], [495, "cmdoption-llvm-objcopy-binary-architecture", false], [495, "cmdoption-llvm-objcopy-build-id-link-dir", false], [495, "cmdoption-llvm-objcopy-build-id-link-input", false], [495, "cmdoption-llvm-objcopy-build-id-link-output", false], [495, "cmdoption-llvm-objcopy-change-start", false], [495, "cmdoption-llvm-objcopy-compress-debug-sections", false], [495, "cmdoption-llvm-objcopy-decompress-debug-sections", false], [495, "cmdoption-llvm-objcopy-disable-deterministic-archives", false], [495, "cmdoption-llvm-objcopy-discard-all", false], [495, "cmdoption-llvm-objcopy-discard-locals", false], [495, "cmdoption-llvm-objcopy-dump-section", false], [495, "cmdoption-llvm-objcopy-enable-deterministic-archives", false], [495, "cmdoption-llvm-objcopy-extract-dwo", false], [495, "cmdoption-llvm-objcopy-extract-main-partition", false], [495, "cmdoption-llvm-objcopy-extract-partition", false], [495, "cmdoption-llvm-objcopy-globalize-symbol", false], [495, "cmdoption-llvm-objcopy-globalize-symbols", false], [495, "cmdoption-llvm-objcopy-help", false], [495, "cmdoption-llvm-objcopy-input-target", false], [495, "cmdoption-llvm-objcopy-keep-file-symbols", false], [495, "cmdoption-llvm-objcopy-keep-global-symbol", false], [495, "cmdoption-llvm-objcopy-keep-global-symbols", false], [495, "cmdoption-llvm-objcopy-keep-section", false], [495, "cmdoption-llvm-objcopy-keep-symbol", false], [495, "cmdoption-llvm-objcopy-keep-symbols", false], [495, "cmdoption-llvm-objcopy-localize-hidden", false], [495, "cmdoption-llvm-objcopy-localize-symbol", false], [495, "cmdoption-llvm-objcopy-localize-symbols", false], [495, "cmdoption-llvm-objcopy-new-symbol-visibility", false], [495, "cmdoption-llvm-objcopy-only-keep-debug", false], [495, "cmdoption-llvm-objcopy-only-section", false], [495, "cmdoption-llvm-objcopy-output-target", false], [495, "cmdoption-llvm-objcopy-prefix-alloc-sections", false], [495, "cmdoption-llvm-objcopy-prefix-symbols", false], [495, "cmdoption-llvm-objcopy-preserve-dates", false], [495, "cmdoption-llvm-objcopy-redefine-sym", false], [495, "cmdoption-llvm-objcopy-redefine-syms", false], [495, "cmdoption-llvm-objcopy-regex", false], [495, "cmdoption-llvm-objcopy-remove-section", false], [495, "cmdoption-llvm-objcopy-rename-section", false], [495, "cmdoption-llvm-objcopy-set-section-alignment", false], [495, "cmdoption-llvm-objcopy-set-section-flags", false], [495, "cmdoption-llvm-objcopy-set-start-addr", false], [495, "cmdoption-llvm-objcopy-split-dwo", false], [495, "cmdoption-llvm-objcopy-strip-all", false], [495, "cmdoption-llvm-objcopy-strip-all-gnu", false], [495, "cmdoption-llvm-objcopy-strip-debug", false], [495, "cmdoption-llvm-objcopy-strip-dwo", false], [495, "cmdoption-llvm-objcopy-strip-non-alloc", false], [495, "cmdoption-llvm-objcopy-strip-sections", false], [495, "cmdoption-llvm-objcopy-strip-symbol", false], [495, "cmdoption-llvm-objcopy-strip-symbols", false], [495, "cmdoption-llvm-objcopy-strip-unneeded", false], [495, "cmdoption-llvm-objcopy-strip-unneeded-symbol", false], [495, "cmdoption-llvm-objcopy-strip-unneeded-symbols", false], [495, "cmdoption-llvm-objcopy-target", false], [495, "cmdoption-llvm-objcopy-version", false], [495, "cmdoption-llvm-objcopy-weaken", false], [495, "cmdoption-llvm-objcopy-weaken-symbol", false], [495, "cmdoption-llvm-objcopy-weaken-symbols", false], [495, "cmdoption-llvm-objcopy-wildcard", false]], "llvm-objdump command line option": [[496, "cmdoption-llvm-objdump-C", false], [496, "cmdoption-llvm-objdump-D", false], [496, "cmdoption-llvm-objdump-M", false], [496, "cmdoption-llvm-objdump-R", false], [496, "cmdoption-llvm-objdump-S", false], [496, "cmdoption-llvm-objdump-T", false], [496, "cmdoption-llvm-objdump-a", false], [496, "cmdoption-llvm-objdump-adjust-vma", false], [496, "cmdoption-llvm-objdump-arch", false], [496, "cmdoption-llvm-objdump-arch-name", false], [496, "cmdoption-llvm-objdump-archive-member-offsets", false], [496, "cmdoption-llvm-objdump-arg-FILE", false], [496, "cmdoption-llvm-objdump-arg-att", false], [496, "cmdoption-llvm-objdump-arg-intel", false], [496, "cmdoption-llvm-objdump-bind", false], [496, "cmdoption-llvm-objdump-cfg", false], [496, "cmdoption-llvm-objdump-d", false], [496, "cmdoption-llvm-objdump-data-in-code", false], [496, "cmdoption-llvm-objdump-debug-vars", false], [496, "cmdoption-llvm-objdump-debug-vars-indent", false], [496, "cmdoption-llvm-objdump-dis-symname", false], [496, "cmdoption-llvm-objdump-disassemble-symbols", false], [496, "cmdoption-llvm-objdump-dsym", false], [496, "cmdoption-llvm-objdump-dwarf", false], [496, "cmdoption-llvm-objdump-dylib-id", false], [496, "cmdoption-llvm-objdump-dylibs-used", false], [496, "cmdoption-llvm-objdump-exports-trie", false], [496, "cmdoption-llvm-objdump-f", false], [496, "cmdoption-llvm-objdump-fault-map-section", false], [496, "cmdoption-llvm-objdump-full-leading-addr", false], [496, "cmdoption-llvm-objdump-g", false], [496, "cmdoption-llvm-objdump-h", false], [496, "cmdoption-llvm-objdump-help", false], [496, "cmdoption-llvm-objdump-indirect-symbols", false], [496, "cmdoption-llvm-objdump-info-plist", false], [496, "cmdoption-llvm-objdump-j", false], [496, "cmdoption-llvm-objdump-l", false], [496, "cmdoption-llvm-objdump-lazy-bind", false], [496, "cmdoption-llvm-objdump-link-opt-hints", false], [496, "cmdoption-llvm-objdump-m", false], [496, "cmdoption-llvm-objdump-mattr", false], [496, "cmdoption-llvm-objdump-mcpu", false], [496, "cmdoption-llvm-objdump-no-leading-addr", false], [496, "cmdoption-llvm-objdump-no-leading-headers", false], [496, "cmdoption-llvm-objdump-no-show-raw-insn", false], [496, "cmdoption-llvm-objdump-no-symbolic-operands", false], [496, "cmdoption-llvm-objdump-non-verbose", false], [496, "cmdoption-llvm-objdump-objc-meta-data", false], [496, "cmdoption-llvm-objdump-p", false], [496, "cmdoption-llvm-objdump-print-imm-hex", false], [496, "cmdoption-llvm-objdump-private-header", false], [496, "cmdoption-llvm-objdump-r", false], [496, "cmdoption-llvm-objdump-raw-clang-ast", false], [496, "cmdoption-llvm-objdump-rebase", false], [496, "cmdoption-llvm-objdump-s", false], [496, "cmdoption-llvm-objdump-show-lma", false], [496, "cmdoption-llvm-objdump-start-address", false], [496, "cmdoption-llvm-objdump-stop-address", false], [496, "cmdoption-llvm-objdump-symbol-description", false], [496, "cmdoption-llvm-objdump-t", false], [496, "cmdoption-llvm-objdump-triple", false], [496, "cmdoption-llvm-objdump-u", false], [496, "cmdoption-llvm-objdump-universal-headers", false], [496, "cmdoption-llvm-objdump-version", false], [496, "cmdoption-llvm-objdump-w", false], [496, "cmdoption-llvm-objdump-weak-bind", false], [496, "cmdoption-llvm-objdump-x", false], [496, "cmdoption-llvm-objdump-x86-asm-syntax", false], [496, "cmdoption-llvm-objdump-z", false]], "llvm-pdbutil-bytes command line option": [[497, "cmdoption-llvm-pdbutil-bytes-block-range", false], [497, "cmdoption-llvm-pdbutil-bytes-byte-range", false], [497, "cmdoption-llvm-pdbutil-bytes-chunks", false], [497, "cmdoption-llvm-pdbutil-bytes-ec", false], [497, "cmdoption-llvm-pdbutil-bytes-files", false], [497, "cmdoption-llvm-pdbutil-bytes-fpm", false], [497, "cmdoption-llvm-pdbutil-bytes-id", false], [497, "cmdoption-llvm-pdbutil-bytes-mod", false], [497, "cmdoption-llvm-pdbutil-bytes-modi", false], [497, "cmdoption-llvm-pdbutil-bytes-name-map", false], [497, "cmdoption-llvm-pdbutil-bytes-sc", false], [497, "cmdoption-llvm-pdbutil-bytes-sm", false], [497, "cmdoption-llvm-pdbutil-bytes-split-chunks", false], [497, "cmdoption-llvm-pdbutil-bytes-stream-data", false], [497, "cmdoption-llvm-pdbutil-bytes-syms", false], [497, "cmdoption-llvm-pdbutil-bytes-type", false], [497, "cmdoption-llvm-pdbutil-bytes-type-server", false]], "llvm-pdbutil-dump command line option": [[497, "cmdoption-llvm-pdbutil-dump-all", false], [497, "cmdoption-llvm-pdbutil-dump-dependents", false], [497, "cmdoption-llvm-pdbutil-dump-files", false], [497, "cmdoption-llvm-pdbutil-dump-global-extras", false], [497, "cmdoption-llvm-pdbutil-dump-globals", false], [497, "cmdoption-llvm-pdbutil-dump-id-data", false], [497, "cmdoption-llvm-pdbutil-dump-id-extras", false], [497, "cmdoption-llvm-pdbutil-dump-id-index", false], [497, "cmdoption-llvm-pdbutil-dump-ids", false], [497, "cmdoption-llvm-pdbutil-dump-il", false], [497, "cmdoption-llvm-pdbutil-dump-l", false], [497, "cmdoption-llvm-pdbutil-dump-modi", false], [497, "cmdoption-llvm-pdbutil-dump-modules", false], [497, "cmdoption-llvm-pdbutil-dump-public-extras", false], [497, "cmdoption-llvm-pdbutil-dump-publics", false], [497, "cmdoption-llvm-pdbutil-dump-section-contribs", false], [497, "cmdoption-llvm-pdbutil-dump-section-headers", false], [497, "cmdoption-llvm-pdbutil-dump-section-map", false], [497, "cmdoption-llvm-pdbutil-dump-stream-blocks", false], [497, "cmdoption-llvm-pdbutil-dump-streams", false], [497, "cmdoption-llvm-pdbutil-dump-string-table", false], [497, "cmdoption-llvm-pdbutil-dump-summary", false], [497, "cmdoption-llvm-pdbutil-dump-sym-data", false], [497, "cmdoption-llvm-pdbutil-dump-symbols", false], [497, "cmdoption-llvm-pdbutil-dump-type-data", false], [497, "cmdoption-llvm-pdbutil-dump-type-extras", false], [497, "cmdoption-llvm-pdbutil-dump-type-index", false], [497, "cmdoption-llvm-pdbutil-dump-types", false], [497, "cmdoption-llvm-pdbutil-dump-xme", false], [497, "cmdoption-llvm-pdbutil-dump-xmi", false]], "llvm-pdbutil-merge command line option": [[497, "cmdoption-llvm-pdbutil-merge-pdb", false]], "llvm-pdbutil-pretty command line option": [[497, "cmdoption-llvm-pdbutil-pretty-all", false], [497, "cmdoption-llvm-pdbutil-pretty-class-definitions", false], [497, "cmdoption-llvm-pdbutil-pretty-class-order", false], [497, "cmdoption-llvm-pdbutil-pretty-class-recurse-depth", false], [497, "cmdoption-llvm-pdbutil-pretty-classes", false], [497, "cmdoption-llvm-pdbutil-pretty-color-output", false], [497, "cmdoption-llvm-pdbutil-pretty-compilands", false], [497, "cmdoption-llvm-pdbutil-pretty-enums", false], [497, "cmdoption-llvm-pdbutil-pretty-exclude-compilands", false], [497, "cmdoption-llvm-pdbutil-pretty-exclude-symbols", false], [497, "cmdoption-llvm-pdbutil-pretty-exclude-types", false], [497, "cmdoption-llvm-pdbutil-pretty-externals", false], [497, "cmdoption-llvm-pdbutil-pretty-globals", false], [497, "cmdoption-llvm-pdbutil-pretty-include-compilands", false], [497, "cmdoption-llvm-pdbutil-pretty-include-symbols", false], [497, "cmdoption-llvm-pdbutil-pretty-include-types", false], [497, "cmdoption-llvm-pdbutil-pretty-lines", false], [497, "cmdoption-llvm-pdbutil-pretty-load-address", false], [497, "cmdoption-llvm-pdbutil-pretty-min-class-padding", false], [497, "cmdoption-llvm-pdbutil-pretty-min-class-padding-imm", false], [497, "cmdoption-llvm-pdbutil-pretty-min-type-size", false], [497, "cmdoption-llvm-pdbutil-pretty-module-syms", false], [497, "cmdoption-llvm-pdbutil-pretty-no-compiler-generated", false], [497, "cmdoption-llvm-pdbutil-pretty-no-enum-definitions", false], [497, "cmdoption-llvm-pdbutil-pretty-no-system-libs", false], [497, "cmdoption-llvm-pdbutil-pretty-sym-types", false], [497, "cmdoption-llvm-pdbutil-pretty-symbol-order", false], [497, "cmdoption-llvm-pdbutil-pretty-typedefs", false], [497, "cmdoption-llvm-pdbutil-pretty-types", false]], "llvm-pdbutil-yaml2pdb command line option": [[497, "cmdoption-llvm-pdbutil-yaml2pdb-pdb", false]], "llvm-profdata-merge command line option": [[498, "cmdoption-llvm-profdata-merge-binary", false], [498, "cmdoption-llvm-profdata-merge-compress-all-sections", false], [498, "cmdoption-llvm-profdata-merge-extbinary", false], [498, "cmdoption-llvm-profdata-merge-failure-mode", false], [498, "cmdoption-llvm-profdata-merge-gcc", false], [498, "cmdoption-llvm-profdata-merge-gen-partial-profile", false], [498, "cmdoption-llvm-profdata-merge-help", false], [498, "cmdoption-llvm-profdata-merge-input-files", false], [498, "cmdoption-llvm-profdata-merge-instr", false], [498, "cmdoption-llvm-profdata-merge-num-threads", false], [498, "cmdoption-llvm-profdata-merge-output", false], [498, "cmdoption-llvm-profdata-merge-prof-sym-list", false], [498, "cmdoption-llvm-profdata-merge-remapping-file", false], [498, "cmdoption-llvm-profdata-merge-sample", false], [498, "cmdoption-llvm-profdata-merge-sparse", false], [498, "cmdoption-llvm-profdata-merge-text", false], [498, "cmdoption-llvm-profdata-merge-use-md5", false], [498, "cmdoption-llvm-profdata-merge-weighted-input", false]], "llvm-profdata-overlap command line option": [[498, "cmdoption-llvm-profdata-overlap-cs", false], [498, "cmdoption-llvm-profdata-overlap-function", false], [498, "cmdoption-llvm-profdata-overlap-help", false], [498, "cmdoption-llvm-profdata-overlap-o", false], [498, "cmdoption-llvm-profdata-overlap-value-cutoff", false]], "llvm-profdata-show command line option": [[498, "cmdoption-llvm-profdata-show-all-functions", false], [498, "cmdoption-llvm-profdata-show-counts", false], [498, "cmdoption-llvm-profdata-show-function", false], [498, "cmdoption-llvm-profdata-show-help", false], [498, "cmdoption-llvm-profdata-show-instr", false], [498, "cmdoption-llvm-profdata-show-list-below-cutoff", false], [498, "cmdoption-llvm-profdata-show-memop-sizes", false], [498, "cmdoption-llvm-profdata-show-output", false], [498, "cmdoption-llvm-profdata-show-sample", false], [498, "cmdoption-llvm-profdata-show-show-prof-sym-list", false], [498, "cmdoption-llvm-profdata-show-show-sec-info-only", false], [498, "cmdoption-llvm-profdata-show-showcs", false], [498, "cmdoption-llvm-profdata-show-text", false], [498, "cmdoption-llvm-profdata-show-topn", false], [498, "cmdoption-llvm-profdata-show-value-cutoff", false]], "llvm-readelf command line option": [[500, "cmdoption-llvm-readelf-addrsig", false], [500, "cmdoption-llvm-readelf-all", false], [500, "cmdoption-llvm-readelf-arch-specific", false], [500, "cmdoption-llvm-readelf-arg-FILE", false], [500, "cmdoption-llvm-readelf-cg-profile", false], [500, "cmdoption-llvm-readelf-color", false], [500, "cmdoption-llvm-readelf-demangle", false], [500, "cmdoption-llvm-readelf-dyn-relocations", false], [500, "cmdoption-llvm-readelf-dyn-symbols", false], [500, "cmdoption-llvm-readelf-dynamic-table", false], [500, "cmdoption-llvm-readelf-elf-hash-histogram", false], [500, "cmdoption-llvm-readelf-elf-linker-options", false], [500, "cmdoption-llvm-readelf-elf-output-style", false], [500, "cmdoption-llvm-readelf-elf-section-groups", false], [500, "cmdoption-llvm-readelf-expand-relocs", false], [500, "cmdoption-llvm-readelf-file-headers", false], [500, "cmdoption-llvm-readelf-gnu-hash-table", false], [500, "cmdoption-llvm-readelf-hash-symbols", false], [500, "cmdoption-llvm-readelf-hash-table", false], [500, "cmdoption-llvm-readelf-headers", false], [500, "cmdoption-llvm-readelf-help", false], [500, "cmdoption-llvm-readelf-help-list", false], [500, "cmdoption-llvm-readelf-hex-dump", false], [500, "cmdoption-llvm-readelf-needed-libs", false], [500, "cmdoption-llvm-readelf-notes", false], [500, "cmdoption-llvm-readelf-program-headers", false], [500, "cmdoption-llvm-readelf-raw-relr", false], [500, "cmdoption-llvm-readelf-relocations", false], [500, "cmdoption-llvm-readelf-section-data", false], [500, "cmdoption-llvm-readelf-section-mapping", false], [500, "cmdoption-llvm-readelf-section-relocations", false], [500, "cmdoption-llvm-readelf-section-symbols", false], [500, "cmdoption-llvm-readelf-sections", false], [500, "cmdoption-llvm-readelf-stack-sizes", false], [500, "cmdoption-llvm-readelf-stackmap", false], [500, "cmdoption-llvm-readelf-string-dump", false], [500, "cmdoption-llvm-readelf-symbols", false], [500, "cmdoption-llvm-readelf-unwind", false], [500, "cmdoption-llvm-readelf-version", false], [500, "cmdoption-llvm-readelf-version-info", false]], "llvm-readobj command line option": [[501, "cmdoption-llvm-readobj-addrsig", false], [501, "cmdoption-llvm-readobj-all", false], [501, "cmdoption-llvm-readobj-arch-specific", false], [501, "cmdoption-llvm-readobj-arg-FILE", false], [501, "cmdoption-llvm-readobj-cg-profile", false], [501, "cmdoption-llvm-readobj-codeview", false], [501, "cmdoption-llvm-readobj-codeview-ghash", false], [501, "cmdoption-llvm-readobj-codeview-merged-types", false], [501, "cmdoption-llvm-readobj-codeview-subsection-bytes", false], [501, "cmdoption-llvm-readobj-coff-basereloc", false], [501, "cmdoption-llvm-readobj-coff-debug-directory", false], [501, "cmdoption-llvm-readobj-coff-directives", false], [501, "cmdoption-llvm-readobj-coff-exports", false], [501, "cmdoption-llvm-readobj-coff-imports", false], [501, "cmdoption-llvm-readobj-coff-load-config", false], [501, "cmdoption-llvm-readobj-coff-resources", false], [501, "cmdoption-llvm-readobj-color", false], [501, "cmdoption-llvm-readobj-demangle", false], [501, "cmdoption-llvm-readobj-dependent-libraries", false], [501, "cmdoption-llvm-readobj-dyn-relocations", false], [501, "cmdoption-llvm-readobj-dyn-symbols", false], [501, "cmdoption-llvm-readobj-dynamic-table", false], [501, "cmdoption-llvm-readobj-elf-hash-histogram", false], [501, "cmdoption-llvm-readobj-elf-linker-options", false], [501, "cmdoption-llvm-readobj-elf-output-style", false], [501, "cmdoption-llvm-readobj-elf-section-groups", false], [501, "cmdoption-llvm-readobj-expand-relocs", false], [501, "cmdoption-llvm-readobj-file-headers", false], [501, "cmdoption-llvm-readobj-gnu-hash-table", false], [501, "cmdoption-llvm-readobj-hash-symbols", false], [501, "cmdoption-llvm-readobj-hash-table", false], [501, "cmdoption-llvm-readobj-headers", false], [501, "cmdoption-llvm-readobj-help", false], [501, "cmdoption-llvm-readobj-help-list", false], [501, "cmdoption-llvm-readobj-hex-dump", false], [501, "cmdoption-llvm-readobj-macho-data-in-code", false], [501, "cmdoption-llvm-readobj-macho-dsymtab", false], [501, "cmdoption-llvm-readobj-macho-indirect-symbols", false], [501, "cmdoption-llvm-readobj-macho-linker-options", false], [501, "cmdoption-llvm-readobj-macho-segment", false], [501, "cmdoption-llvm-readobj-macho-version-min", false], [501, "cmdoption-llvm-readobj-needed-libs", false], [501, "cmdoption-llvm-readobj-notes", false], [501, "cmdoption-llvm-readobj-program-headers", false], [501, "cmdoption-llvm-readobj-raw-relr", false], [501, "cmdoption-llvm-readobj-relocations", false], [501, "cmdoption-llvm-readobj-section-data", false], [501, "cmdoption-llvm-readobj-section-mapping", false], [501, "cmdoption-llvm-readobj-section-relocations", false], [501, "cmdoption-llvm-readobj-section-symbols", false], [501, "cmdoption-llvm-readobj-sections", false], [501, "cmdoption-llvm-readobj-stack-sizes", false], [501, "cmdoption-llvm-readobj-stackmap", false], [501, "cmdoption-llvm-readobj-string-dump", false], [501, "cmdoption-llvm-readobj-symbols", false], [501, "cmdoption-llvm-readobj-unwind", false], [501, "cmdoption-llvm-readobj-version", false], [501, "cmdoption-llvm-readobj-version-info", false]], "llvm-size command line option": [[502, "cmdoption-llvm-size-A", false], [502, "cmdoption-llvm-size-B", false], [502, "cmdoption-llvm-size-arch", false], [502, "cmdoption-llvm-size-arg-FILE", false], [502, "cmdoption-llvm-size-common", false], [502, "cmdoption-llvm-size-d", false], [502, "cmdoption-llvm-size-format", false], [502, "cmdoption-llvm-size-help", false], [502, "cmdoption-llvm-size-help-list", false], [502, "cmdoption-llvm-size-l", false], [502, "cmdoption-llvm-size-m", false], [502, "cmdoption-llvm-size-o", false], [502, "cmdoption-llvm-size-radix", false], [502, "cmdoption-llvm-size-totals", false], [502, "cmdoption-llvm-size-version", false], [502, "cmdoption-llvm-size-x", false]], "llvm-stress command line option": [[503, "cmdoption-llvm-stress-o", false], [503, "cmdoption-llvm-stress-seed", false], [503, "cmdoption-llvm-stress-size", false]], "llvm-strings command line option": [[504, "cmdoption-llvm-strings-all", false], [504, "cmdoption-llvm-strings-arg-FILE", false], [504, "cmdoption-llvm-strings-bytes", false], [504, "cmdoption-llvm-strings-help", false], [504, "cmdoption-llvm-strings-help-list", false], [504, "cmdoption-llvm-strings-print-file-name", false], [504, "cmdoption-llvm-strings-radix", false], [504, "cmdoption-llvm-strings-version", false]], "llvm-strip command line option": [[505, "cmdoption-llvm-strip-T", false], [505, "cmdoption-llvm-strip-allow-broken-links", false], [505, "cmdoption-llvm-strip-arg-FILE", false], [505, "cmdoption-llvm-strip-disable-deterministic-archives", false], [505, "cmdoption-llvm-strip-discard-all", false], [505, "cmdoption-llvm-strip-discard-locals", false], [505, "cmdoption-llvm-strip-enable-deterministic-archives", false], [505, "cmdoption-llvm-strip-help", false], [505, "cmdoption-llvm-strip-keep-file-symbols", false], [505, "cmdoption-llvm-strip-keep-section", false], [505, "cmdoption-llvm-strip-keep-symbol", false], [505, "cmdoption-llvm-strip-no-strip-all", false], [505, "cmdoption-llvm-strip-o", false], [505, "cmdoption-llvm-strip-only-keep-debug", false], [505, "cmdoption-llvm-strip-preserve-dates", false], [505, "cmdoption-llvm-strip-regex", false], [505, "cmdoption-llvm-strip-remove-section", false], [505, "cmdoption-llvm-strip-strip-all", false], [505, "cmdoption-llvm-strip-strip-all-gnu", false], [505, "cmdoption-llvm-strip-strip-debug", false], [505, "cmdoption-llvm-strip-strip-sections", false], [505, "cmdoption-llvm-strip-strip-symbol", false], [505, "cmdoption-llvm-strip-strip-unneeded", false], [505, "cmdoption-llvm-strip-version", false], [505, "cmdoption-llvm-strip-wildcard", false]], "llvm-symbolizer command line option": [[506, "cmdoption-llvm-symbolizer-adjust-vma", false], [506, "cmdoption-llvm-symbolizer-arg-FILE", false], [506, "cmdoption-llvm-symbolizer-basenames", false], [506, "cmdoption-llvm-symbolizer-default-arch", false], [506, "cmdoption-llvm-symbolizer-demangle", false], [506, "cmdoption-llvm-symbolizer-dsym-hint", false], [506, "cmdoption-llvm-symbolizer-dwp", false], [506, "cmdoption-llvm-symbolizer-fallback-debug-path", false], [506, "cmdoption-llvm-symbolizer-functions", false], [506, "cmdoption-llvm-symbolizer-help", false], [506, "cmdoption-llvm-symbolizer-help-list", false], [506, "cmdoption-llvm-symbolizer-inlining", false], [506, "cmdoption-llvm-symbolizer-no-demangle", false], [506, "cmdoption-llvm-symbolizer-obj", false], [506, "cmdoption-llvm-symbolizer-output-style", false], [506, "cmdoption-llvm-symbolizer-pretty-print", false], [506, "cmdoption-llvm-symbolizer-print-address", false], [506, "cmdoption-llvm-symbolizer-print-source-context-lines", false], [506, "cmdoption-llvm-symbolizer-relativenames", false], [506, "cmdoption-llvm-symbolizer-use-symbol-table", false], [506, "cmdoption-llvm-symbolizer-verbose", false], [506, "cmdoption-llvm-symbolizer-version", false]], "m": [[476, "cmdoption-llvm-ar-arg-m", false]], "n": [[476, "cmdoption-llvm-ar-arg-N", false]], "o": [[476, "cmdoption-llvm-ar-arg-O", false], [476, "cmdoption-llvm-ar-arg-o", false]], "opt command line option": [[507, "cmdoption-opt-S", false], [507, "cmdoption-opt-debug", false], [507, "cmdoption-opt-disable-inlining", false], [507, "cmdoption-opt-disable-opt", false], [507, "cmdoption-opt-f", false], [507, "cmdoption-opt-help", false], [507, "cmdoption-opt-load", false], [507, "cmdoption-opt-o", false], [507, "cmdoption-opt-p", false], [507, "cmdoption-opt-passname", false], [507, "cmdoption-opt-stats", false], [507, "cmdoption-opt-strip-debug", false], [507, "cmdoption-opt-time-passes", false], [507, "cmdoption-opt-verify-each", false]], "p": [[476, "cmdoption-llvm-ar-arg-P", false], [476, "cmdoption-llvm-ar-arg-p", false]], "q": [[476, "cmdoption-llvm-ar-arg-q", false]], "r": [[476, "cmdoption-llvm-ar-arg-r", false]], "s": [[476, "cmdoption-llvm-ar-arg-S", false], [476, "cmdoption-llvm-ar-arg-s", false]], "save": [[476, "cmdoption-llvm-ar-arg-SAVE", false]], "t": [[476, "cmdoption-llvm-ar-arg-T", false]], "tblgen command line option": [[508, "cmdoption-tblgen-I", false], [508, "cmdoption-tblgen-asmparsernum", false], [508, "cmdoption-tblgen-asmwriternum", false], [508, "cmdoption-tblgen-class", false], [508, "cmdoption-tblgen-dump-json", false], [508, "cmdoption-tblgen-gen-asm-matcher", false], [508, "cmdoption-tblgen-gen-asm-writer", false], [508, "cmdoption-tblgen-gen-dag-isel", false], [508, "cmdoption-tblgen-gen-dfa-packetizer", false], [508, "cmdoption-tblgen-gen-disassembler", false], [508, "cmdoption-tblgen-gen-emitter", false], [508, "cmdoption-tblgen-gen-enhanced-disassembly-info", false], [508, "cmdoption-tblgen-gen-exegesis", false], [508, "cmdoption-tblgen-gen-fast-isel", false], [508, "cmdoption-tblgen-gen-instr-info", false], [508, "cmdoption-tblgen-gen-intrinsic-enums", false], [508, "cmdoption-tblgen-gen-intrinsic-impl", false], [508, "cmdoption-tblgen-gen-pseudo-lowering", false], [508, "cmdoption-tblgen-gen-register-info", false], [508, "cmdoption-tblgen-gen-subtarget", false], [508, "cmdoption-tblgen-gen-tgt-intrinsic", false], [508, "cmdoption-tblgen-help", false], [508, "cmdoption-tblgen-o", false], [508, "cmdoption-tblgen-print-enums", false], [508, "cmdoption-tblgen-print-records", false], [508, "cmdoption-tblgen-print-sets", false], [508, "cmdoption-tblgen-version", false]], "u": [[476, "cmdoption-llvm-ar-arg-U", false], [476, "cmdoption-llvm-ar-arg-u", false]], "v": [[476, "cmdoption-llvm-ar-arg-V", false], [476, "cmdoption-llvm-ar-arg-v", false]], "x": [[476, "cmdoption-llvm-ar-arg-x", false]]}, "objects": {"": [[600, 0, 1, "cmdoption-lto-pass-remarks-filter", "-lto-pass-remarks-filter"], [600, 0, 1, "cmdoption-lto-pass-remarks-format", "-lto-pass-remarks-format"], [600, 0, 1, "cmdoption-lto-pass-remarks-hotness-threshold", "-lto-pass-remarks-hotness-threshold"], [600, 0, 1, "cmdoption-lto-pass-remarks-output", "-lto-pass-remarks-output"], [600, 0, 1, "cmdoption-lto-pass-remarks-with-hotness", "-lto-pass-remarks-with-hotness"], [600, 0, 1, "cmdoption-opt-remarks-filename", "-opt-remarks-filename"], [600, 0, 1, "cmdoption-opt-remarks-filter", "-opt-remarks-filter"], [600, 0, 1, "cmdoption-opt-remarks-format", "-opt-remarks-format"], [600, 0, 1, "cmdoption-opt-remarks-with-hotness", "-opt-remarks-with-hotness"], [600, 0, 1, "cmdoption-pass-remarks", "-pass-remarks"], [600, 0, 1, "cmdoption-pass-remarks-analysis", "-pass-remarks-analysis"], [600, 0, 1, "cmdoption-pass-remarks-filter", "-pass-remarks-filter"], [600, 0, 1, "cmdoption-pass-remarks-format", "-pass-remarks-format"], [600, 0, 1, "cmdoption-pass-remarks-hotness-threshold", "-pass-remarks-hotness-threshold"], [600, 0, 1, "cmdoption-pass-remarks-missed", "-pass-remarks-missed"], [600, 0, 1, "cmdoption-pass-remarks-output", "-pass-remarks-output"], [600, 0, 1, "cmdoption-pass-remarks-with-hotness", "-pass-remarks-with-hotness"]], "FileCheck": [[468, 0, 1, "cmdoption-FileCheck-allow-deprecated-dag-overlap", "--allow-deprecated-dag-overlap"], [468, 0, 1, "cmdoption-FileCheck-check-prefix", "--check-prefix"], [468, 0, 1, "cmdoption-FileCheck-check-prefixes", "--check-prefixes"], [468, 0, 1, "cmdoption-FileCheck-color", "--color"], [468, 0, 1, "cmdoption-FileCheck-comment-prefixes", "--comment-prefixes"], [468, 0, 1, "cmdoption-FileCheck-dump-input", "--dump-input"], [468, 0, 1, "cmdoption-FileCheck-dump-input-context", "--dump-input-context"], [468, 0, 1, "cmdoption-FileCheck-dump-input-filter", "--dump-input-filter"], [468, 0, 1, "cmdoption-FileCheck-enable-var-scope", "--enable-var-scope"], [468, 0, 1, "cmdoption-FileCheck-ignore-case", "--ignore-case"], [468, 0, 1, "cmdoption-FileCheck-implicit-check-not", "--implicit-check-not"], [468, 0, 1, "cmdoption-FileCheck-input-file", "--input-file"], [468, 0, 1, "cmdoption-FileCheck-match-full-lines", "--match-full-lines"], [468, 0, 1, "cmdoption-FileCheck-strict-whitespace", "--strict-whitespace"], [468, 0, 1, "cmdoption-FileCheck-D-FMT-NUMVAR", "-D#&lt;FMT&gt;,&lt;NUMVAR&gt;"], [468, 0, 1, "cmdoption-FileCheck-D-VAR", "-D&lt;VAR"], [468, 0, 1, "cmdoption-FileCheck-help", "-help"], [468, 0, 1, "cmdoption-FileCheck-v", "-v"], [468, 0, 1, "cmdoption-FileCheck-version", "-version"], [468, 0, 1, "cmdoption-FileCheck-vv", "-vv"]], "dsymutil": [[470, 0, 1, "cmdoption-dsymutil-accelerator", "--accelerator"], [470, 0, 1, "cmdoption-dsymutil-arch", "--arch"], [470, 0, 1, "cmdoption-dsymutil-dump-debug-map", "--dump-debug-map"], [470, 0, 1, "cmdoption-dsymutil-flat", "--flat"], [470, 0, 1, "cmdoption-dsymutil-gen-reproducer", "--gen-reproducer"], [470, 0, 1, "cmdoption-dsymutil-help", "--help"], [470, 0, 1, "cmdoption-dsymutil-minimize", "--minimize"], [470, 0, 1, "cmdoption-dsymutil-no-odr", "--no-odr"], [470, 0, 1, "cmdoption-dsymutil-no-output", "--no-output"], [470, 0, 1, "cmdoption-dsymutil-no-swiftmodule-timestamp", "--no-swiftmodule-timestamp"], [470, 0, 1, "cmdoption-dsymutil-num-threads", "--num-threads"], [470, 0, 1, "cmdoption-dsymutil-object-prefix-map", "--object-prefix-map"], [470, 0, 1, "cmdoption-dsymutil-oso-prepend-path", "--oso-prepend-path"], [470, 0, 1, "cmdoption-dsymutil-out", "--out"], [470, 0, 1, "cmdoption-dsymutil-papertrail", "--papertrail"], [470, 0, 1, "cmdoption-dsymutil-remarks-output-format", "--remarks-output-format"], [470, 0, 1, "cmdoption-dsymutil-remarks-prepend-path", "--remarks-prepend-path"], [470, 0, 1, "cmdoption-dsymutil-statistics", "--statistics"], [470, 0, 1, "cmdoption-dsymutil-symbol-map", "--symbol-map"], [470, 0, 1, "cmdoption-dsymutil-s", "--symtab"], [470, 0, 1, "cmdoption-dsymutil-toolchain", "--toolchain"], [470, 0, 1, "cmdoption-dsymutil-u", "--update"], [470, 0, 1, "cmdoption-dsymutil-use-reproducer", "--use-reproducer"], [470, 0, 1, "cmdoption-dsymutil-verbose", "--verbose"], [470, 0, 1, "cmdoption-dsymutil-verify", "--verify"], [470, 0, 1, "cmdoption-dsymutil-v", "--version"], [470, 0, 1, "cmdoption-dsymutil-S", "-S"], [470, 0, 1, "cmdoption-dsymutil-flat", "-f"], [470, 0, 1, "cmdoption-dsymutil-help", "-h"], [470, 0, 1, "cmdoption-dsymutil-num-threads", "-j"], [470, 0, 1, "cmdoption-dsymutil-out", "-o"], [470, 0, 1, "cmdoption-dsymutil-s", "-s"], [470, 0, 1, "cmdoption-dsymutil-u", "-u"], [470, 0, 1, "cmdoption-dsymutil-v", "-v"], [470, 0, 1, "cmdoption-dsymutil-y", "-y"], [470, 0, 1, "cmdoption-dsymutil-minimize", "-z"]], "lit": [[472, 0, 1, "cmdoption-lit-config-prefix", "--config-prefix"], [472, 0, 1, "cmdoption-lit-debug", "--debug"], [472, 0, 1, "cmdoption-lit-vv", "--echo-all-commands"], [472, 0, 1, "cmdoption-lit-filter", "--filter"], [472, 0, 1, "cmdoption-lit-h", "--help"], [472, 0, 1, "cmdoption-lit-max-failures", "--max-failures"], [472, 0, 1, "cmdoption-lit-max-tests", "--max-tests"], [472, 0, 1, "cmdoption-lit-max-time", "--max-time"], [472, 0, 1, "cmdoption-lit-no-progress-bar", "--no-progress-bar"], [472, 0, 1, "cmdoption-lit-num-shards", "--num-shards"], [472, 0, 1, "cmdoption-lit-D", "--param"], [472, 0, 1, "cmdoption-lit-path", "--path"], [472, 0, 1, "cmdoption-lit-q", "--quiet"], [472, 0, 1, "cmdoption-lit-run-shard", "--run-shard"], [472, 0, 1, "cmdoption-lit-a", "--show-all"], [472, 0, 1, "cmdoption-lit-show-suites", "--show-suites"], [472, 0, 1, "cmdoption-lit-show-tests", "--show-tests"], [472, 0, 1, "cmdoption-lit-show-unsupported", "--show-unsupported"], [472, 0, 1, "cmdoption-lit-show-xfail", "--show-xfail"], [472, 0, 1, "cmdoption-lit-shuffle", "--shuffle"], [472, 0, 1, "cmdoption-lit-s", "--succinct"], [472, 0, 1, "cmdoption-lit-time-tests", "--time-tests"], [472, 0, 1, "cmdoption-lit-timeout", "--timeout"], [472, 0, 1, "cmdoption-lit-v", "--verbose"], [472, 0, 1, "cmdoption-lit-vg", "--vg"], [472, 0, 1, "cmdoption-lit-vg-arg", "--vg-arg"], [472, 0, 1, "cmdoption-lit-vg-leak", "--vg-leak"], [472, 0, 1, "cmdoption-lit-j", "--workers"], [472, 0, 1, "cmdoption-lit-D", "-D"], [472, 0, 1, "cmdoption-lit-a", "-a"], [472, 0, 1, "cmdoption-lit-h", "-h"], [472, 0, 1, "cmdoption-lit-j", "-j"], [472, 0, 1, "cmdoption-lit-q", "-q"], [472, 0, 1, "cmdoption-lit-s", "-s"], [472, 0, 1, "cmdoption-lit-v", "-v"], [472, 0, 1, "cmdoption-lit-vv", "-vv"]], "llc": [[473, 0, 1, "cmdoption-llc-disable-excess-fp-precision", "--disable-excess-fp-precision"], [473, 0, 1, "cmdoption-llc-enable-no-infs-fp-math", "--enable-no-infs-fp-math"], [473, 0, 1, "cmdoption-llc-enable-no-nans-fp-math", "--enable-no-nans-fp-math"], [473, 0, 1, "cmdoption-llc-enable-no-signed-zeros-fp-math", "--enable-no-signed-zeros-fp-math"], [473, 0, 1, "cmdoption-llc-enable-no-trapping-fp-math", "--enable-no-trapping-fp-math"], [473, 0, 1, "cmdoption-llc-enable-unsafe-fp-math", "--enable-unsafe-fp-math"], [473, 0, 1, "cmdoption-llc-frame-pointer", "--frame-pointer"], [473, 0, 1, "cmdoption-llc-load", "--load"], [473, 0, 1, "cmdoption-llc-print-machineinstrs", "--print-machineinstrs"], [473, 0, 1, "cmdoption-llc-regalloc", "--regalloc"], [473, 0, 1, "cmdoption-llc-spiller", "--spiller"], [473, 0, 1, "cmdoption-llc-stats", "--stats"], [473, 0, 1, "cmdoption-llc-time-passes", "--time-passes"], [473, 0, 1, "cmdoption-llc-x86-asm-syntax", "--x86-asm-syntax"], [473, 0, 1, "cmdoption-llc-O", "-O"], [473, 0, 1, "cmdoption-llc-filetype", "-filetype"], [473, 0, 1, "cmdoption-llc-help", "-help"], [473, 0, 1, "cmdoption-llc-march", "-march"], [473, 0, 1, "cmdoption-llc-mattr", "-mattr"], [473, 0, 1, "cmdoption-llc-mcpu", "-mcpu"], [473, 0, 1, "cmdoption-llc-meabi", "-meabi"], [473, 0, 1, "cmdoption-llc-mtriple", "-mtriple"], [473, 0, 1, "cmdoption-llc-o", "-o"], [473, 0, 1, "cmdoption-llc-remarks-section", "-remarks-section"], [473, 0, 1, "cmdoption-llc-stack-size-section", "-stack-size-section"]], "lli": [[474, 0, 1, "cmdoption-lli-code-model", "-code-model"], [474, 0, 1, "cmdoption-lli-disable-excess-fp-precision", "-disable-excess-fp-precision"], [474, 0, 1, "cmdoption-lli-disable-post-RA-scheduler", "-disable-post-RA-scheduler"], [474, 0, 1, "cmdoption-lli-disable-spill-fusing", "-disable-spill-fusing"], [474, 0, 1, "cmdoption-lli-enable-no-infs-fp-math", "-enable-no-infs-fp-math"], [474, 0, 1, "cmdoption-lli-enable-no-nans-fp-math", "-enable-no-nans-fp-math"], [474, 0, 1, "cmdoption-lli-enable-unsafe-fp-math", "-enable-unsafe-fp-math"], [474, 0, 1, "cmdoption-lli-fake-argv0", "-fake-argv0"], [474, 0, 1, "cmdoption-lli-force-interpreter", "-force-interpreter"], [474, 0, 1, "cmdoption-lli-help", "-help"], [474, 0, 1, "cmdoption-lli-jit-enable-eh", "-jit-enable-eh"], [474, 0, 1, "cmdoption-lli-join-liveintervals", "-join-liveintervals"], [474, 0, 1, "cmdoption-lli-load", "-load"], [474, 0, 1, "cmdoption-lli-march", "-march"], [474, 0, 1, "cmdoption-lli-mattr", "-mattr"], [474, 0, 1, "cmdoption-lli-mcpu", "-mcpu"], [474, 0, 1, "cmdoption-lli-mtriple", "-mtriple"], [474, 0, 1, "cmdoption-lli-nozero-initialized-in-bss", "-nozero-initialized-in-bss"], [474, 0, 1, "cmdoption-lli-pre-RA-sched", "-pre-RA-sched"], [474, 0, 1, "cmdoption-lli-regalloc", "-regalloc"], [474, 0, 1, "cmdoption-lli-relocation-model", "-relocation-model"], [474, 0, 1, "cmdoption-lli-soft-float", "-soft-float"], [474, 0, 1, "cmdoption-lli-spiller", "-spiller"], [474, 0, 1, "cmdoption-lli-stats", "-stats"], [474, 0, 1, "cmdoption-lli-time-passes", "-time-passes"], [474, 0, 1, "cmdoption-lli-version", "-version"], [474, 0, 1, "cmdoption-lli-x86-asm-syntax", "-x86-asm-syntax"]], "llvm-ar": [[476, 0, 1, "cmdoption-llvm-ar-format", "--format"], [476, 0, 1, "cmdoption-llvm-ar-h", "--help"], [476, 0, 1, "cmdoption-llvm-ar-version", "--version"], [476, 0, 1, "cmdoption-llvm-ar-M", "-M"], [476, 0, 1, "cmdoption-llvm-ar-h", "-h"], [476, 0, 1, "cmdoption-llvm-ar-arg-FILE", "@&lt;FILE&gt;"], [476, 0, 1, "cmdoption-llvm-ar-arg-ADDLIB", "ADDLIB"], [476, 0, 1, "cmdoption-llvm-ar-arg-ADDMOD", "ADDMOD"], [476, 0, 1, "cmdoption-llvm-ar-arg-CREATE", "CREATE"], [476, 0, 1, "cmdoption-llvm-ar-arg-CREATETHIN", "CREATETHIN"], [476, 0, 1, "cmdoption-llvm-ar-arg-D", "D"], [476, 0, 1, "cmdoption-llvm-ar-arg-DELETE", "DELETE"], [476, 0, 1, "cmdoption-llvm-ar-arg-END", "END"], [476, 0, 1, "cmdoption-llvm-ar-arg-L", "L"], [476, 0, 1, "cmdoption-llvm-ar-arg-N", "N"], [476, 0, 1, "cmdoption-llvm-ar-arg-O", "O"], [476, 0, 1, "cmdoption-llvm-ar-arg-P", "P"], [476, 0, 1, "cmdoption-llvm-ar-arg-S", "S"], [476, 0, 1, "cmdoption-llvm-ar-arg-SAVE", "SAVE"], [476, 0, 1, "cmdoption-llvm-ar-arg-T", "T"], [476, 0, 1, "cmdoption-llvm-ar-arg-U", "U"], [476, 0, 1, "cmdoption-llvm-ar-arg-V", "V"], [476, 0, 1, "cmdoption-llvm-ar-arg-a", "a"], [476, 0, 1, "cmdoption-llvm-ar-arg-b", "b"], [476, 0, 1, "cmdoption-llvm-ar-arg-c", "c"], [476, 0, 1, "cmdoption-llvm-ar-arg-d", "d"], [476, 0, 1, "cmdoption-llvm-ar-arg-i", "i"], [476, 0, 1, "cmdoption-llvm-ar-arg-m", "m"], [476, 0, 1, "cmdoption-llvm-ar-arg-o", "o"], [476, 0, 1, "cmdoption-llvm-ar-arg-p", "p"], [476, 0, 1, "cmdoption-llvm-ar-arg-q", "q"], [476, 0, 1, "cmdoption-llvm-ar-arg-r", "r"], [476, 0, 1, "cmdoption-llvm-ar-arg-s", "s"], [476, 0, 1, "cmdoption-llvm-ar-arg-u", "u"], [476, 0, 1, "cmdoption-llvm-ar-arg-v", "v"], [476, 0, 1, "cmdoption-llvm-ar-arg-x", "x"]], "llvm-bcanalyzer": [[478, 0, 1, "cmdoption-llvm-bcanalyzer-dump", "-dump"], [478, 0, 1, "cmdoption-llvm-bcanalyzer-help", "-help"], [478, 0, 1, "cmdoption-llvm-bcanalyzer-nodetails", "-nodetails"], [478, 0, 1, "cmdoption-llvm-bcanalyzer-verify", "-verify"]], "llvm-cov-export": [[481, 0, 1, "cmdoption-llvm-cov-export-arch", "-arch"], [481, 0, 1, "cmdoption-llvm-cov-export-format", "-format"], [481, 0, 1, "cmdoption-llvm-cov-export-ignore-filename-regex", "-ignore-filename-regex"], [481, 0, 1, "cmdoption-llvm-cov-export-num-threads", "-j"], [481, 0, 1, "cmdoption-llvm-cov-export-num-threads", "-num-threads"], [481, 0, 1, "cmdoption-llvm-cov-export-skip-expansions", "-skip-expansions"], [481, 0, 1, "cmdoption-llvm-cov-export-skip-functions", "-skip-functions"], [481, 0, 1, "cmdoption-llvm-cov-export-summary-only", "-summary-only"]], "llvm-cov-gcov": [[481, 0, 1, "cmdoption-llvm-cov-gcov-a", "--all-blocks"], [481, 0, 1, "cmdoption-llvm-cov-gcov-c", "--branch-counts"], [481, 0, 1, "cmdoption-llvm-cov-gcov-b", "--branch-probabilities"], [481, 0, 1, "cmdoption-llvm-cov-gcov-f", "--function-summaries"], [481, 0, 1, "cmdoption-llvm-cov-gcov-x", "--hash-filenames"], [481, 0, 1, "cmdoption-llvm-cov-gcov-help", "--help"], [481, 0, 1, "cmdoption-llvm-cov-gcov-l", "--long-file-names"], [481, 0, 1, "cmdoption-llvm-cov-gcov-n", "--no-output"], [481, 0, 1, "cmdoption-llvm-cov-gcov-o", "--object-directory"], [481, 0, 1, "cmdoption-llvm-cov-gcov-o", "--object-file"], [481, 0, 1, "cmdoption-llvm-cov-gcov-p", "--preserve-paths"], [481, 0, 1, "cmdoption-llvm-cov-gcov-u", "--unconditional-branches"], [481, 0, 1, "cmdoption-llvm-cov-gcov-a", "-a"], [481, 0, 1, "cmdoption-llvm-cov-gcov-b", "-b"], [481, 0, 1, "cmdoption-llvm-cov-gcov-c", "-c"], [481, 0, 1, "cmdoption-llvm-cov-gcov-f", "-f"], [481, 0, 1, "cmdoption-llvm-cov-gcov-l", "-l"], [481, 0, 1, "cmdoption-llvm-cov-gcov-n", "-n"], [481, 0, 1, "cmdoption-llvm-cov-gcov-o", "-o"], [481, 0, 1, "cmdoption-llvm-cov-gcov-p", "-p"], [481, 0, 1, "cmdoption-llvm-cov-gcov-u", "-u"], [481, 0, 1, "cmdoption-llvm-cov-gcov-version", "-version"], [481, 0, 1, "cmdoption-llvm-cov-gcov-x", "-x"]], "llvm-cov-report": [[481, 0, 1, "cmdoption-llvm-cov-report-arch", "-arch"], [481, 0, 1, "cmdoption-llvm-cov-report-ignore-filename-regex", "-ignore-filename-regex"], [481, 0, 1, "cmdoption-llvm-cov-report-show-functions", "-show-functions"], [481, 0, 1, "cmdoption-llvm-cov-report-show-instantiation-summary", "-show-instantiation-summary"], [481, 0, 1, "cmdoption-llvm-cov-report-use-color", "-use-color"]], "llvm-cov-show": [[481, 0, 1, "cmdoption-llvm-cov-show-Xdemangler", "-Xdemangler"], [481, 0, 1, "cmdoption-llvm-cov-show-arch", "-arch"], [481, 0, 1, "cmdoption-llvm-cov-show-format", "-format"], [481, 0, 1, "cmdoption-llvm-cov-show-ignore-filename-regex", "-ignore-filename-regex"], [481, 0, 1, "cmdoption-llvm-cov-show-num-threads", "-j"], [481, 0, 1, "cmdoption-llvm-cov-show-line-coverage-gt", "-line-coverage-gt"], [481, 0, 1, "cmdoption-llvm-cov-show-line-coverage-lt", "-line-coverage-lt"], [481, 0, 1, "cmdoption-llvm-cov-show-name", "-name"], [481, 0, 1, "cmdoption-llvm-cov-show-name-regex", "-name-regex"], [481, 0, 1, "cmdoption-llvm-cov-show-name-whitelist", "-name-whitelist"], [481, 0, 1, "cmdoption-llvm-cov-show-num-threads", "-num-threads"], [481, 0, 1, "cmdoption-llvm-cov-show-output-dir", "-output-dir"], [481, 0, 1, "cmdoption-llvm-cov-show-path-equivalence", "-path-equivalence"], [481, 0, 1, "cmdoption-llvm-cov-show-region-coverage-gt", "-region-coverage-gt"], [481, 0, 1, "cmdoption-llvm-cov-show-region-coverage-lt", "-region-coverage-lt"], [481, 0, 1, "cmdoption-llvm-cov-show-show-expansions", "-show-expansions"], [481, 0, 1, "cmdoption-llvm-cov-show-show-instantiations", "-show-instantiations"], [481, 0, 1, "cmdoption-llvm-cov-show-show-line-counts", "-show-line-counts"], [481, 0, 1, "cmdoption-llvm-cov-show-show-line-counts-or-regions", "-show-line-counts-or-regions"], [481, 0, 1, "cmdoption-llvm-cov-show-show-regions", "-show-regions"], [481, 0, 1, "cmdoption-llvm-cov-show-tab-size", "-tab-size"], [481, 0, 1, "cmdoption-llvm-cov-show-use-color", "-use-color"]], "llvm-cxxfilt": [[482, 0, 1, "cmdoption-llvm-cxxfilt-format", "--format"], [482, 0, 1, "cmdoption-llvm-cxxfilt-help", "--help"], [482, 0, 1, "cmdoption-llvm-cxxfilt-help-list", "--help-list"], [482, 0, 1, "cmdoption-llvm-cxxfilt-no-strip-underscore", "--no-strip-underscore"], [482, 0, 1, "cmdoption-llvm-cxxfilt-strip-underscore", "--strip-underscore"], [482, 0, 1, "cmdoption-llvm-cxxfilt-types", "--types"], [482, 0, 1, "cmdoption-llvm-cxxfilt-version", "--version"], [482, 0, 1, "cmdoption-llvm-cxxfilt-strip-underscore", "-_"], [482, 0, 1, "cmdoption-llvm-cxxfilt-help", "-h"], [482, 0, 1, "cmdoption-llvm-cxxfilt-no-strip-underscore", "-n"], [482, 0, 1, "cmdoption-llvm-cxxfilt-format", "-s"], [482, 0, 1, "cmdoption-llvm-cxxfilt-types", "-t"], [482, 0, 1, "cmdoption-llvm-cxxfilt-arg-FILE", "@&lt;FILE&gt;"]], "llvm-cxxmap": [[483, 0, 1, "cmdoption-llvm-cxxmap-Wambiguous", "-Wambiguous"], [483, 0, 1, "cmdoption-llvm-cxxmap-Wincomplete", "-Wincomplete"], [483, 0, 1, "cmdoption-llvm-cxxmap-output", "-o"], [483, 0, 1, "cmdoption-llvm-cxxmap-output", "-output"], [483, 0, 1, "cmdoption-llvm-cxxmap-remapping-file", "-r"], [483, 0, 1, "cmdoption-llvm-cxxmap-remapping-file", "-remapping-file"]], "llvm-dwarfdump": [[486, 0, 1, "cmdoption-llvm-dwarfdump-a", "--all"], [486, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--apple-names"], [486, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--apple-namespaces"], [486, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--apple-objc"], [486, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--apple-types"], [486, 0, 1, "cmdoption-llvm-dwarfdump-arch", "--arch"], [486, 0, 1, "cmdoption-llvm-dwarfdump-color", "--color"], [486, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--debug-abbrev"], [486, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--debug-addr"], [486, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--debug-aranges"], [486, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--debug-cu-index"], [486, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--debug-frame"], [486, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--debug-gnu-pubnames"], [486, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--debug-gnu-pubtypes"], [486, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--debug-info"], [486, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--debug-line"], [486, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--debug-line-str"], [486, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--debug-loc"], [486, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--debug-loclists"], [486, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--debug-macro"], [486, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--debug-names"], [486, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--debug-pubnames"], [486, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--debug-pubtypes"], [486, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--debug-ranges"], [486, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--debug-rnglists"], [486, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--debug-str"], [486, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--debug-str-offsets"], [486, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--debug-tu-index"], [486, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--debug-types"], [486, 0, 1, "cmdoption-llvm-dwarfdump-diff", "--diff"], [486, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--eh-frame"], [486, 0, 1, "cmdoption-llvm-dwarfdump-f", "--find"], [486, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--gdb-index"], [486, 0, 1, "cmdoption-llvm-dwarfdump-h", "--help"], [486, 0, 1, "cmdoption-llvm-dwarfdump-help-list", "--help-list"], [486, 0, 1, "cmdoption-llvm-dwarfdump-i", "--ignore-case"], [486, 0, 1, "cmdoption-llvm-dwarfdump-lookup", "--lookup"], [486, 0, 1, "cmdoption-llvm-dwarfdump-n", "--name"], [486, 0, 1, "cmdoption-llvm-dwarfdump-parent-recurse-depth", "--parent-recurse-depth"], [486, 0, 1, "cmdoption-llvm-dwarfdump-quiet", "--quiet"], [486, 0, 1, "cmdoption-llvm-dwarfdump-r", "--recurse-depth"], [486, 0, 1, "cmdoption-llvm-dwarfdump-x", "--regex"], [486, 0, 1, "cmdoption-llvm-dwarfdump-c", "--show-children"], [486, 0, 1, "cmdoption-llvm-dwarfdump-F", "--show-form"], [486, 0, 1, "cmdoption-llvm-dwarfdump-p", "--show-parents"], [486, 0, 1, "cmdoption-llvm-dwarfdump-show-section-sizes", "--show-section-sizes"], [486, 0, 1, "cmdoption-llvm-dwarfdump-statistics", "--statistics"], [486, 0, 1, "cmdoption-llvm-dwarfdump-summarize-types", "--summarize-types"], [486, 0, 1, "cmdoption-llvm-dwarfdump-u", "--uuid"], [486, 0, 1, "cmdoption-llvm-dwarfdump-v", "--verbose"], [486, 0, 1, "cmdoption-llvm-dwarfdump-verify", "--verify"], [486, 0, 1, "cmdoption-llvm-dwarfdump-version", "--version"], [486, 0, 1, "cmdoption-llvm-dwarfdump-F", "-F"], [486, 0, 1, "cmdoption-llvm-dwarfdump-a", "-a"], [486, 0, 1, "cmdoption-llvm-dwarfdump-c", "-c"], [486, 0, 1, "cmdoption-llvm-dwarfdump-f", "-f"], [486, 0, 1, "cmdoption-llvm-dwarfdump-h", "-h"], [486, 0, 1, "cmdoption-llvm-dwarfdump-i", "-i"], [486, 0, 1, "cmdoption-llvm-dwarfdump-n", "-n"], [486, 0, 1, "cmdoption-llvm-dwarfdump-o", "-o"], [486, 0, 1, "cmdoption-llvm-dwarfdump-p", "-p"], [486, 0, 1, "cmdoption-llvm-dwarfdump-r", "-r"], [486, 0, 1, "cmdoption-llvm-dwarfdump-u", "-u"], [486, 0, 1, "cmdoption-llvm-dwarfdump-v", "-v"], [486, 0, 1, "cmdoption-llvm-dwarfdump-x", "-x"], [486, 0, 1, "cmdoption-llvm-dwarfdump-arg-FILE", "@&lt;FILE&gt;"]], "llvm-exegesis": [[487, 0, 1, "cmdoption-llvm-exegesis-dump-object-to-disk", "--dump-object-to-disk"], [487, 0, 1, "cmdoption-llvm-exegesis-analysis-clustering", "-analysis-clustering"], [487, 0, 1, "cmdoption-llvm-exegesis-analysis-clustering-epsilon", "-analysis-clustering-epsilon"], [487, 0, 1, "cmdoption-llvm-exegesis-analysis-clusters-output-file", "-analysis-clusters-output-file"], [487, 0, 1, "cmdoption-llvm-exegesis-analysis-display-unstable-clusters", "-analysis-display-unstable-clusters"], [487, 0, 1, "cmdoption-llvm-exegesis-analysis-inconsistencies-output-file", "-analysis-inconsistencies-output-file"], [487, 0, 1, "cmdoption-llvm-exegesis-analysis-inconsistency-epsilon", "-analysis-inconsistency-epsilon"], [487, 0, 1, "cmdoption-llvm-exegesis-analysis-numpoints", "-analysis-numpoints"], [487, 0, 1, "cmdoption-llvm-exegesis-benchmarks-file", "-benchmarks-file"], [487, 0, 1, "cmdoption-llvm-exegesis-help", "-help"], [487, 0, 1, "cmdoption-llvm-exegesis-ignore-invalid-sched-class", "-ignore-invalid-sched-class"], [487, 0, 1, "cmdoption-llvm-exegesis-max-configs-per-opcode", "-max-configs-per-opcode"], [487, 0, 1, "cmdoption-llvm-exegesis-mcpu", "-mcpu"], [487, 0, 1, "cmdoption-llvm-exegesis-mode", "-mode"], [487, 0, 1, "cmdoption-llvm-exegesis-num-repetitions", "-num-repetitions"], [487, 0, 1, "cmdoption-llvm-exegesis-opcode-index", "-opcode-index"], [487, 0, 1, "cmdoption-llvm-exegesis-opcode-name", "-opcode-name"], [487, 0, 1, "cmdoption-llvm-exegesis-repetition-mode", "-repetition-mode"], [487, 0, 1, "cmdoption-llvm-exegesis-snippets-file", "-snippets-file"]], "llvm-link": [[490, 0, 1, "cmdoption-llvm-link-S", "-S"], [490, 0, 1, "cmdoption-llvm-link-d", "-d"], [490, 0, 1, "cmdoption-llvm-link-f", "-f"], [490, 0, 1, "cmdoption-llvm-link-help", "-help"], [490, 0, 1, "cmdoption-llvm-link-o", "-o"], [490, 0, 1, "cmdoption-llvm-link-v", "-v"]], "llvm-lipo": [[491, 0, 1, "cmdoption-llvm-lipo-archs", "-archs"], [491, 0, 1, "cmdoption-llvm-lipo-create", "-create"], [491, 0, 1, "cmdoption-llvm-lipo-help", "-h"], [491, 0, 1, "cmdoption-llvm-lipo-help", "-help"], [491, 0, 1, "cmdoption-llvm-lipo-info", "-info"], [491, 0, 1, "cmdoption-llvm-lipo-replace", "-replace"], [491, 0, 1, "cmdoption-llvm-lipo-segalign", "-segalign"], [491, 0, 1, "cmdoption-llvm-lipo-thin", "-thin"], [491, 0, 1, "cmdoption-llvm-lipo-verify_arch", "-verify_arch"], [491, 0, 1, "cmdoption-llvm-lipo-version", "-version"]], "llvm-locstats": [[492, 0, 1, "cmdoption-llvm-locstats-compare", "--compare"], [492, 0, 1, "cmdoption-llvm-locstats-draw-plot", "--draw-plot"], [492, 0, 1, "cmdoption-llvm-locstats-ignore-debug-entry-values", "--ignore-debug-entry-values"], [492, 0, 1, "cmdoption-llvm-locstats-only-formal-parameters", "--only-formal-parameters"], [492, 0, 1, "cmdoption-llvm-locstats-only-variables", "--only-variables"]], "llvm-mca": [[493, 0, 1, "cmdoption-llvm-mca-all-stats", "-all-stats"], [493, 0, 1, "cmdoption-llvm-mca-all-views", "-all-views"], [493, 0, 1, "cmdoption-llvm-mca-bottleneck-analysis", "-bottleneck-analysis"], [493, 0, 1, "cmdoption-llvm-mca-dispatch", "-dispatch"], [493, 0, 1, "cmdoption-llvm-mca-dispatch-stats", "-dispatch-stats"], [493, 0, 1, "cmdoption-llvm-mca-help", "-help"], [493, 0, 1, "cmdoption-llvm-mca-instruction-info", "-instruction-info"], [493, 0, 1, "cmdoption-llvm-mca-instruction-tables", "-instruction-tables"], [493, 0, 1, "cmdoption-llvm-mca-iterations", "-iterations"], [493, 0, 1, "cmdoption-llvm-mca-lqueue", "-lqueue"], [493, 0, 1, "cmdoption-llvm-mca-march", "-march"], [493, 0, 1, "cmdoption-llvm-mca-mcpu", "-mcpu"], [493, 0, 1, "cmdoption-llvm-mca-mtriple", "-mtriple"], [493, 0, 1, "cmdoption-llvm-mca-noalias", "-noalias"], [493, 0, 1, "cmdoption-llvm-mca-o", "-o"], [493, 0, 1, "cmdoption-llvm-mca-output-asm-variant", "-output-asm-variant"], [493, 0, 1, "cmdoption-llvm-mca-print-imm-hex", "-print-imm-hex"], [493, 0, 1, "cmdoption-llvm-mca-register-file-size", "-register-file-size"], [493, 0, 1, "cmdoption-llvm-mca-register-file-stats", "-register-file-stats"], [493, 0, 1, "cmdoption-llvm-mca-resource-pressure", "-resource-pressure"], [493, 0, 1, "cmdoption-llvm-mca-retire-stats", "-retire-stats"], [493, 0, 1, "cmdoption-llvm-mca-scheduler-stats", "-scheduler-stats"], [493, 0, 1, "cmdoption-llvm-mca-show-encoding", "-show-encoding"], [493, 0, 1, "cmdoption-llvm-mca-squeue", "-squeue"], [493, 0, 1, "cmdoption-llvm-mca-timeline", "-timeline"], [493, 0, 1, "cmdoption-llvm-mca-timeline-max-cycles", "-timeline-max-cycles"], [493, 0, 1, "cmdoption-llvm-mca-timeline-max-iterations", "-timeline-max-iterations"]], "llvm-nm": [[494, 0, 1, "cmdoption-llvm-nm-add-dyldinfo", "--add-dyldinfo"], [494, 0, 1, "cmdoption-llvm-nm-add-inlinedinfo", "--add-inlinedinfo"], [494, 0, 1, "cmdoption-llvm-nm-arch", "--arch"], [494, 0, 1, "cmdoption-llvm-nm-debug-syms", "--debug-syms"], [494, 0, 1, "cmdoption-llvm-nm-defined-only", "--defined-only"], [494, 0, 1, "cmdoption-llvm-nm-demangle", "--demangle"], [494, 0, 1, "cmdoption-llvm-nm-dyldinfo-only", "--dyldinfo-only"], [494, 0, 1, "cmdoption-llvm-nm-dynamic", "--dynamic"], [494, 0, 1, "cmdoption-llvm-nm-extern-only", "--extern-only"], [494, 0, 1, "cmdoption-llvm-nm-format", "--format"], [494, 0, 1, "cmdoption-llvm-nm-help", "--help"], [494, 0, 1, "cmdoption-llvm-nm-help-list", "--help-list"], [494, 0, 1, "cmdoption-llvm-nm-just-symbol-name", "--just-symbol-name"], [494, 0, 1, "cmdoption-llvm-nm-no-demangle", "--no-demangle"], [494, 0, 1, "cmdoption-llvm-nm-no-dyldinfo", "--no-dyldinfo"], [494, 0, 1, "cmdoption-llvm-nm-no-llvm-bc", "--no-llvm-bc"], [494, 0, 1, "cmdoption-llvm-nm-no-sort", "--no-sort"], [494, 0, 1, "cmdoption-llvm-nm-no-weak", "--no-weak"], [494, 0, 1, "cmdoption-llvm-nm-numeric-sort", "--numeric-sort"], [494, 0, 1, "cmdoption-llvm-nm-portability", "--portability"], [494, 0, 1, "cmdoption-llvm-nm-print-armap", "--print-armap"], [494, 0, 1, "cmdoption-llvm-nm-print-file-name", "--print-file-name"], [494, 0, 1, "cmdoption-llvm-nm-print-size", "--print-size"], [494, 0, 1, "cmdoption-llvm-nm-radix", "--radix"], [494, 0, 1, "cmdoption-llvm-nm-reverse-sort", "--reverse-sort"], [494, 0, 1, "cmdoption-llvm-nm-size-sort", "--size-sort"], [494, 0, 1, "cmdoption-llvm-nm-special-syms", "--special-syms"], [494, 0, 1, "cmdoption-llvm-nm-undefined-only", "--undefined-only"], [494, 0, 1, "cmdoption-llvm-nm-version", "--version"], [494, 0, 1, "cmdoption-llvm-nm-without-aliases", "--without-aliases"], [494, 0, 1, "cmdoption-llvm-nm-print-file-name", "-A"], [494, 0, 1, "cmdoption-llvm-nm-B", "-B"], [494, 0, 1, "cmdoption-llvm-nm-demangle", "-C"], [494, 0, 1, "cmdoption-llvm-nm-dynamic", "-D"], [494, 0, 1, "cmdoption-llvm-nm-print-armap", "-M"], [494, 0, 1, "cmdoption-llvm-nm-portability", "-P"], [494, 0, 1, "cmdoption-llvm-nm-print-size", "-S"], [494, 0, 1, "cmdoption-llvm-nm-defined-only", "-U"], [494, 0, 1, "cmdoption-llvm-nm-no-weak", "-W"], [494, 0, 1, "cmdoption-llvm-nm-debug-syms", "-a"], [494, 0, 1, "cmdoption-llvm-nm-format", "-f"], [494, 0, 1, "cmdoption-llvm-nm-extern-only", "-g"], [494, 0, 1, "cmdoption-llvm-nm-help", "-h"], [494, 0, 1, "cmdoption-llvm-nm-just-symbol-name", "-j"], [494, 0, 1, "cmdoption-llvm-nm-m", "-m"], [494, 0, 1, "cmdoption-llvm-nm-numeric-sort", "-n"], [494, 0, 1, "cmdoption-llvm-nm-print-file-name", "-o"], [494, 0, 1, "cmdoption-llvm-nm-no-sort", "-p"], [494, 0, 1, "cmdoption-llvm-nm-reverse-sort", "-r"], [494, 0, 1, "cmdoption-llvm-nm-s", "-s"], [494, 0, 1, "cmdoption-llvm-nm-radix", "-t"], [494, 0, 1, "cmdoption-llvm-nm-undefined-only", "-u"], [494, 0, 1, "cmdoption-llvm-nm-numeric-sort", "-v"], [494, 0, 1, "cmdoption-llvm-nm-x", "-x"], [494, 0, 1, "cmdoption-llvm-nm-arg-FILE", "@&lt;FILE&gt;"]], "llvm-objcopy": [[495, 0, 1, "cmdoption-llvm-objcopy-add-gnu-debuglink", "--add-gnu-debuglink"], [495, 0, 1, "cmdoption-llvm-objcopy-add-section", "--add-section"], [495, 0, 1, "cmdoption-llvm-objcopy-add-symbol", "--add-symbol"], [495, 0, 1, "cmdoption-llvm-objcopy-change-start", "--adjust-start"], [495, 0, 1, "cmdoption-llvm-objcopy-allow-broken-links", "--allow-broken-links"], [495, 0, 1, "cmdoption-llvm-objcopy-binary-architecture", "--binary-architecture"], [495, 0, 1, "cmdoption-llvm-objcopy-build-id-link-dir", "--build-id-link-dir"], [495, 0, 1, "cmdoption-llvm-objcopy-build-id-link-input", "--build-id-link-input"], [495, 0, 1, "cmdoption-llvm-objcopy-build-id-link-output", "--build-id-link-output"], [495, 0, 1, "cmdoption-llvm-objcopy-change-start", "--change-start"], [495, 0, 1, "cmdoption-llvm-objcopy-compress-debug-sections", "--compress-debug-sections"], [495, 0, 1, "cmdoption-llvm-objcopy-decompress-debug-sections", "--decompress-debug-sections"], [495, 0, 1, "cmdoption-llvm-objcopy-disable-deterministic-archives", "--disable-deterministic-archives"], [495, 0, 1, "cmdoption-llvm-objcopy-discard-all", "--discard-all"], [495, 0, 1, "cmdoption-llvm-objcopy-discard-locals", "--discard-locals"], [495, 0, 1, "cmdoption-llvm-objcopy-dump-section", "--dump-section"], [495, 0, 1, "cmdoption-llvm-objcopy-enable-deterministic-archives", "--enable-deterministic-archives"], [495, 0, 1, "cmdoption-llvm-objcopy-extract-dwo", "--extract-dwo"], [495, 0, 1, "cmdoption-llvm-objcopy-extract-main-partition", "--extract-main-partition"], [495, 0, 1, "cmdoption-llvm-objcopy-extract-partition", "--extract-partition"], [495, 0, 1, "cmdoption-llvm-objcopy-globalize-symbol", "--globalize-symbol"], [495, 0, 1, "cmdoption-llvm-objcopy-globalize-symbols", "--globalize-symbols"], [495, 0, 1, "cmdoption-llvm-objcopy-help", "--help"], [495, 0, 1, "cmdoption-llvm-objcopy-input-target", "--input-target"], [495, 0, 1, "cmdoption-llvm-objcopy-keep-file-symbols", "--keep-file-symbols"], [495, 0, 1, "cmdoption-llvm-objcopy-keep-global-symbol", "--keep-global-symbol"], [495, 0, 1, "cmdoption-llvm-objcopy-keep-global-symbols", "--keep-global-symbols"], [495, 0, 1, "cmdoption-llvm-objcopy-keep-section", "--keep-section"], [495, 0, 1, "cmdoption-llvm-objcopy-keep-symbol", "--keep-symbol"], [495, 0, 1, "cmdoption-llvm-objcopy-keep-symbols", "--keep-symbols"], [495, 0, 1, "cmdoption-llvm-objcopy-localize-hidden", "--localize-hidden"], [495, 0, 1, "cmdoption-llvm-objcopy-localize-symbol", "--localize-symbol"], [495, 0, 1, "cmdoption-llvm-objcopy-localize-symbols", "--localize-symbols"], [495, 0, 1, "cmdoption-llvm-objcopy-new-symbol-visibility", "--new-symbol-visibility"], [495, 0, 1, "cmdoption-llvm-objcopy-only-keep-debug", "--only-keep-debug"], [495, 0, 1, "cmdoption-llvm-objcopy-only-section", "--only-section"], [495, 0, 1, "cmdoption-llvm-objcopy-output-target", "--output-target"], [495, 0, 1, "cmdoption-llvm-objcopy-prefix-alloc-sections", "--prefix-alloc-sections"], [495, 0, 1, "cmdoption-llvm-objcopy-prefix-symbols", "--prefix-symbols"], [495, 0, 1, "cmdoption-llvm-objcopy-preserve-dates", "--preserve-dates"], [495, 0, 1, "cmdoption-llvm-objcopy-redefine-sym", "--redefine-sym"], [495, 0, 1, "cmdoption-llvm-objcopy-redefine-syms", "--redefine-syms"], [495, 0, 1, "cmdoption-llvm-objcopy-regex", "--regex"], [495, 0, 1, "cmdoption-llvm-objcopy-remove-section", "--remove-section"], [495, 0, 1, "cmdoption-llvm-objcopy-rename-section", "--rename-section"], [495, 0, 1, "cmdoption-llvm-objcopy-set-section-alignment", "--set-section-alignment"], [495, 0, 1, "cmdoption-llvm-objcopy-set-section-flags", "--set-section-flags"], [495, 0, 1, "cmdoption-llvm-objcopy-set-start-addr", "--set-start-addr"], [495, 0, 1, "cmdoption-llvm-objcopy-split-dwo", "--split-dwo"], [495, 0, 1, "cmdoption-llvm-objcopy-strip-all", "--strip-all"], [495, 0, 1, "cmdoption-llvm-objcopy-strip-all-gnu", "--strip-all-gnu"], [495, 0, 1, "cmdoption-llvm-objcopy-strip-debug", "--strip-debug"], [495, 0, 1, "cmdoption-llvm-objcopy-strip-dwo", "--strip-dwo"], [495, 0, 1, "cmdoption-llvm-objcopy-strip-non-alloc", "--strip-non-alloc"], [495, 0, 1, "cmdoption-llvm-objcopy-strip-sections", "--strip-sections"], [495, 0, 1, "cmdoption-llvm-objcopy-strip-symbol", "--strip-symbol"], [495, 0, 1, "cmdoption-llvm-objcopy-strip-symbols", "--strip-symbols"], [495, 0, 1, "cmdoption-llvm-objcopy-strip-unneeded", "--strip-unneeded"], [495, 0, 1, "cmdoption-llvm-objcopy-strip-unneeded-symbol", "--strip-unneeded-symbol"], [495, 0, 1, "cmdoption-llvm-objcopy-strip-unneeded-symbols", "--strip-unneeded-symbols"], [495, 0, 1, "cmdoption-llvm-objcopy-target", "--target"], [495, 0, 1, "cmdoption-llvm-objcopy-version", "--version"], [495, 0, 1, "cmdoption-llvm-objcopy-weaken", "--weaken"], [495, 0, 1, "cmdoption-llvm-objcopy-weaken-symbol", "--weaken-symbol"], [495, 0, 1, "cmdoption-llvm-objcopy-weaken-symbols", "--weaken-symbols"], [495, 0, 1, "cmdoption-llvm-objcopy-wildcard", "--wildcard"], [495, 0, 1, "cmdoption-llvm-objcopy-binary-architecture", "-B"], [495, 0, 1, "cmdoption-llvm-objcopy-enable-deterministic-archives", "-D"], [495, 0, 1, "cmdoption-llvm-objcopy-target", "-F"], [495, 0, 1, "cmdoption-llvm-objcopy-input-target", "-I"], [495, 0, 1, "cmdoption-llvm-objcopy-keep-symbol", "-K"], [495, 0, 1, "cmdoption-llvm-objcopy-localize-symbol", "-L"], [495, 0, 1, "cmdoption-llvm-objcopy-strip-symbol", "-N"], [495, 0, 1, "cmdoption-llvm-objcopy-output-target", "-O"], [495, 0, 1, "cmdoption-llvm-objcopy-remove-section", "-R"], [495, 0, 1, "cmdoption-llvm-objcopy-strip-all", "-S"], [495, 0, 1, "cmdoption-llvm-objcopy-disable-deterministic-archives", "-U"], [495, 0, 1, "cmdoption-llvm-objcopy-version", "-V"], [495, 0, 1, "cmdoption-llvm-objcopy-weaken-symbol", "-W"], [495, 0, 1, "cmdoption-llvm-objcopy-discard-locals", "-X"], [495, 0, 1, "cmdoption-llvm-objcopy-strip-debug", "-g"], [495, 0, 1, "cmdoption-llvm-objcopy-help", "-h"], [495, 0, 1, "cmdoption-llvm-objcopy-only-section", "-j"], [495, 0, 1, "cmdoption-llvm-objcopy-preserve-dates", "-p"], [495, 0, 1, "cmdoption-llvm-objcopy-wildcard", "-w"], [495, 0, 1, "cmdoption-llvm-objcopy-discard-all", "-x"], [495, 0, 1, "cmdoption-llvm-objcopy-arg-FILE", "@&lt;FILE&gt;"]], "llvm-objdump": [[496, 0, 1, "cmdoption-llvm-objdump-adjust-vma", "--adjust-vma"], [496, 0, 1, "cmdoption-llvm-objdump-x", "--all-headers"], [496, 0, 1, "cmdoption-llvm-objdump-arch", "--arch"], [496, 0, 1, "cmdoption-llvm-objdump-arch-name", "--arch-name"], [496, 0, 1, "cmdoption-llvm-objdump-a", "--archive-headers"], [496, 0, 1, "cmdoption-llvm-objdump-archive-member-offsets", "--archive-member-offsets"], [496, 0, 1, "cmdoption-llvm-objdump-bind", "--bind"], [496, 0, 1, "cmdoption-llvm-objdump-cfg", "--cfg"], [496, 0, 1, "cmdoption-llvm-objdump-data-in-code", "--data-in-code"], [496, 0, 1, "cmdoption-llvm-objdump-debug-vars", "--debug-vars"], [496, 0, 1, "cmdoption-llvm-objdump-debug-vars-indent", "--debug-vars-indent"], [496, 0, 1, "cmdoption-llvm-objdump-C", "--demangle"], [496, 0, 1, "cmdoption-llvm-objdump-dis-symname", "--dis-symname"], [496, 0, 1, "cmdoption-llvm-objdump-d", "--disassemble"], [496, 0, 1, "cmdoption-llvm-objdump-D", "--disassemble-all"], [496, 0, 1, "cmdoption-llvm-objdump-disassemble-symbols", "--disassemble-symbols"], [496, 0, 1, "cmdoption-llvm-objdump-z", "--disassemble-zeroes"], [496, 0, 1, "cmdoption-llvm-objdump-M", "--disassembler-options"], [496, 0, 1, "cmdoption-llvm-objdump-dsym", "--dsym"], [496, 0, 1, "cmdoption-llvm-objdump-dwarf", "--dwarf"], [496, 0, 1, "cmdoption-llvm-objdump-dylib-id", "--dylib-id"], [496, 0, 1, "cmdoption-llvm-objdump-dylibs-used", "--dylibs-used"], [496, 0, 1, "cmdoption-llvm-objdump-R", "--dynamic-reloc"], [496, 0, 1, "cmdoption-llvm-objdump-T", "--dynamic-syms"], [496, 0, 1, "cmdoption-llvm-objdump-exports-trie", "--exports-trie"], [496, 0, 1, "cmdoption-llvm-objdump-fault-map-section", "--fault-map-section"], [496, 0, 1, "cmdoption-llvm-objdump-f", "--file-headers"], [496, 0, 1, "cmdoption-llvm-objdump-s", "--full-contents"], [496, 0, 1, "cmdoption-llvm-objdump-full-leading-addr", "--full-leading-addr"], [496, 0, 1, "cmdoption-llvm-objdump-h", "--headers"], [496, 0, 1, "cmdoption-llvm-objdump-help", "--help"], [496, 0, 1, "cmdoption-llvm-objdump-indirect-symbols", "--indirect-symbols"], [496, 0, 1, "cmdoption-llvm-objdump-info-plist", "--info-plist"], [496, 0, 1, "cmdoption-llvm-objdump-lazy-bind", "--lazy-bind"], [496, 0, 1, "cmdoption-llvm-objdump-l", "--line-numbers"], [496, 0, 1, "cmdoption-llvm-objdump-link-opt-hints", "--link-opt-hints"], [496, 0, 1, "cmdoption-llvm-objdump-m", "--macho"], [496, 0, 1, "cmdoption-llvm-objdump-mattr", "--mattr"], [496, 0, 1, "cmdoption-llvm-objdump-mcpu", "--mcpu"], [496, 0, 1, "cmdoption-llvm-objdump-no-leading-addr", "--no-leading-addr"], [496, 0, 1, "cmdoption-llvm-objdump-no-leading-headers", "--no-leading-headers"], [496, 0, 1, "cmdoption-llvm-objdump-no-show-raw-insn", "--no-show-raw-insn"], [496, 0, 1, "cmdoption-llvm-objdump-no-symbolic-operands", "--no-symbolic-operands"], [496, 0, 1, "cmdoption-llvm-objdump-non-verbose", "--non-verbose"], [496, 0, 1, "cmdoption-llvm-objdump-objc-meta-data", "--objc-meta-data"], [496, 0, 1, "cmdoption-llvm-objdump-print-imm-hex", "--print-imm-hex"], [496, 0, 1, "cmdoption-llvm-objdump-private-header", "--private-header"], [496, 0, 1, "cmdoption-llvm-objdump-p", "--private-headers"], [496, 0, 1, "cmdoption-llvm-objdump-raw-clang-ast", "--raw-clang-ast"], [496, 0, 1, "cmdoption-llvm-objdump-rebase", "--rebase"], [496, 0, 1, "cmdoption-llvm-objdump-r", "--reloc"], [496, 0, 1, "cmdoption-llvm-objdump-j", "--section"], [496, 0, 1, "cmdoption-llvm-objdump-h", "--section-headers"], [496, 0, 1, "cmdoption-llvm-objdump-show-lma", "--show-lma"], [496, 0, 1, "cmdoption-llvm-objdump-S", "--source"], [496, 0, 1, "cmdoption-llvm-objdump-start-address", "--start-address"], [496, 0, 1, "cmdoption-llvm-objdump-stop-address", "--stop-address"], [496, 0, 1, "cmdoption-llvm-objdump-symbol-description", "--symbol-description"], [496, 0, 1, "cmdoption-llvm-objdump-t", "--syms"], [496, 0, 1, "cmdoption-llvm-objdump-triple", "--triple"], [496, 0, 1, "cmdoption-llvm-objdump-universal-headers", "--universal-headers"], [496, 0, 1, "cmdoption-llvm-objdump-u", "--unwind-info"], [496, 0, 1, "cmdoption-llvm-objdump-version", "--version"], [496, 0, 1, "cmdoption-llvm-objdump-weak-bind", "--weak-bind"], [496, 0, 1, "cmdoption-llvm-objdump-w", "--wide"], [496, 0, 1, "cmdoption-llvm-objdump-x86-asm-syntax", "--x86-asm-syntax"], [496, 0, 1, "cmdoption-llvm-objdump-C", "-C"], [496, 0, 1, "cmdoption-llvm-objdump-D", "-D"], [496, 0, 1, "cmdoption-llvm-objdump-M", "-M"], [496, 0, 1, "cmdoption-llvm-objdump-R", "-R"], [496, 0, 1, "cmdoption-llvm-objdump-S", "-S"], [496, 0, 1, "cmdoption-llvm-objdump-T", "-T"], [496, 0, 1, "cmdoption-llvm-objdump-a", "-a"], [496, 0, 1, "cmdoption-llvm-objdump-d", "-d"], [496, 0, 1, "cmdoption-llvm-objdump-f", "-f"], [496, 0, 1, "cmdoption-llvm-objdump-g", "-g"], [496, 0, 1, "cmdoption-llvm-objdump-h", "-h"], [496, 0, 1, "cmdoption-llvm-objdump-j", "-j"], [496, 0, 1, "cmdoption-llvm-objdump-l", "-l"], [496, 0, 1, "cmdoption-llvm-objdump-m", "-m"], [496, 0, 1, "cmdoption-llvm-objdump-p", "-p"], [496, 0, 1, "cmdoption-llvm-objdump-r", "-r"], [496, 0, 1, "cmdoption-llvm-objdump-s", "-s"], [496, 0, 1, "cmdoption-llvm-objdump-t", "-t"], [496, 0, 1, "cmdoption-llvm-objdump-u", "-u"], [496, 0, 1, "cmdoption-llvm-objdump-w", "-w"], [496, 0, 1, "cmdoption-llvm-objdump-x", "-x"], [496, 0, 1, "cmdoption-llvm-objdump-z", "-z"], [496, 0, 1, "cmdoption-llvm-objdump-arg-FILE", "@&lt;FILE&gt;"], [496, 0, 1, "cmdoption-llvm-objdump-arg-att", "att"], [496, 0, 1, "cmdoption-llvm-objdump-arg-intel", "intel"]], "llvm-pdbutil-bytes": [[497, 0, 1, "cmdoption-llvm-pdbutil-bytes-block-range", "-block-range"], [497, 0, 1, "cmdoption-llvm-pdbutil-bytes-byte-range", "-byte-range"], [497, 0, 1, "cmdoption-llvm-pdbutil-bytes-chunks", "-chunks"], [497, 0, 1, "cmdoption-llvm-pdbutil-bytes-ec", "-ec"], [497, 0, 1, "cmdoption-llvm-pdbutil-bytes-files", "-files"], [497, 0, 1, "cmdoption-llvm-pdbutil-bytes-fpm", "-fpm"], [497, 0, 1, "cmdoption-llvm-pdbutil-bytes-id", "-id"], [497, 0, 1, "cmdoption-llvm-pdbutil-bytes-mod", "-mod"], [497, 0, 1, "cmdoption-llvm-pdbutil-bytes-modi", "-modi"], [497, 0, 1, "cmdoption-llvm-pdbutil-bytes-name-map", "-name-map"], [497, 0, 1, "cmdoption-llvm-pdbutil-bytes-sc", "-sc"], [497, 0, 1, "cmdoption-llvm-pdbutil-bytes-sm", "-sm"], [497, 0, 1, "cmdoption-llvm-pdbutil-bytes-split-chunks", "-split-chunks"], [497, 0, 1, "cmdoption-llvm-pdbutil-bytes-stream-data", "-stream-data"], [497, 0, 1, "cmdoption-llvm-pdbutil-bytes-syms", "-syms"], [497, 0, 1, "cmdoption-llvm-pdbutil-bytes-type", "-type"], [497, 0, 1, "cmdoption-llvm-pdbutil-bytes-type-server", "-type-server"]], "llvm-pdbutil-dump": [[497, 0, 1, "cmdoption-llvm-pdbutil-dump-all", "-all"], [497, 0, 1, "cmdoption-llvm-pdbutil-dump-dependents", "-dependents"], [497, 0, 1, "cmdoption-llvm-pdbutil-dump-files", "-files"], [497, 0, 1, "cmdoption-llvm-pdbutil-dump-global-extras", "-global-extras"], [497, 0, 1, "cmdoption-llvm-pdbutil-dump-globals", "-globals"], [497, 0, 1, "cmdoption-llvm-pdbutil-dump-id-data", "-id-data"], [497, 0, 1, "cmdoption-llvm-pdbutil-dump-id-extras", "-id-extras"], [497, 0, 1, "cmdoption-llvm-pdbutil-dump-id-index", "-id-index"], [497, 0, 1, "cmdoption-llvm-pdbutil-dump-ids", "-ids"], [497, 0, 1, "cmdoption-llvm-pdbutil-dump-il", "-il"], [497, 0, 1, "cmdoption-llvm-pdbutil-dump-l", "-l"], [497, 0, 1, "cmdoption-llvm-pdbutil-dump-modi", "-modi"], [497, 0, 1, "cmdoption-llvm-pdbutil-dump-modules", "-modules"], [497, 0, 1, "cmdoption-llvm-pdbutil-dump-public-extras", "-public-extras"], [497, 0, 1, "cmdoption-llvm-pdbutil-dump-publics", "-publics"], [497, 0, 1, "cmdoption-llvm-pdbutil-dump-section-contribs", "-section-contribs"], [497, 0, 1, "cmdoption-llvm-pdbutil-dump-section-headers", "-section-headers"], [497, 0, 1, "cmdoption-llvm-pdbutil-dump-section-map", "-section-map"], [497, 0, 1, "cmdoption-llvm-pdbutil-dump-stream-blocks", "-stream-blocks"], [497, 0, 1, "cmdoption-llvm-pdbutil-dump-streams", "-streams"], [497, 0, 1, "cmdoption-llvm-pdbutil-dump-string-table", "-string-table"], [497, 0, 1, "cmdoption-llvm-pdbutil-dump-summary", "-summary"], [497, 0, 1, "cmdoption-llvm-pdbutil-dump-sym-data", "-sym-data"], [497, 0, 1, "cmdoption-llvm-pdbutil-dump-symbols", "-symbols"], [497, 0, 1, "cmdoption-llvm-pdbutil-dump-type-data", "-type-data"], [497, 0, 1, "cmdoption-llvm-pdbutil-dump-type-extras", "-type-extras"], [497, 0, 1, "cmdoption-llvm-pdbutil-dump-type-index", "-type-index"], [497, 0, 1, "cmdoption-llvm-pdbutil-dump-types", "-types"], [497, 0, 1, "cmdoption-llvm-pdbutil-dump-xme", "-xme"], [497, 0, 1, "cmdoption-llvm-pdbutil-dump-xmi", "-xmi"]], "llvm-pdbutil-merge": [[497, 0, 1, "cmdoption-llvm-pdbutil-merge-pdb", "-pdb"]], "llvm-pdbutil-pretty": [[497, 0, 1, "cmdoption-llvm-pdbutil-pretty-all", "-all"], [497, 0, 1, "cmdoption-llvm-pdbutil-pretty-class-definitions", "-class-definitions"], [497, 0, 1, "cmdoption-llvm-pdbutil-pretty-class-order", "-class-order"], [497, 0, 1, "cmdoption-llvm-pdbutil-pretty-class-recurse-depth", "-class-recurse-depth"], [497, 0, 1, "cmdoption-llvm-pdbutil-pretty-classes", "-classes"], [497, 0, 1, "cmdoption-llvm-pdbutil-pretty-color-output", "-color-output"], [497, 0, 1, "cmdoption-llvm-pdbutil-pretty-compilands", "-compilands"], [497, 0, 1, "cmdoption-llvm-pdbutil-pretty-enums", "-enums"], [497, 0, 1, "cmdoption-llvm-pdbutil-pretty-exclude-compilands", "-exclude-compilands"], [497, 0, 1, "cmdoption-llvm-pdbutil-pretty-exclude-symbols", "-exclude-symbols"], [497, 0, 1, "cmdoption-llvm-pdbutil-pretty-exclude-types", "-exclude-types"], [497, 0, 1, "cmdoption-llvm-pdbutil-pretty-externals", "-externals"], [497, 0, 1, "cmdoption-llvm-pdbutil-pretty-globals", "-globals"], [497, 0, 1, "cmdoption-llvm-pdbutil-pretty-include-compilands", "-include-compilands"], [497, 0, 1, "cmdoption-llvm-pdbutil-pretty-include-symbols", "-include-symbols"], [497, 0, 1, "cmdoption-llvm-pdbutil-pretty-include-types", "-include-types"], [497, 0, 1, "cmdoption-llvm-pdbutil-pretty-lines", "-lines"], [497, 0, 1, "cmdoption-llvm-pdbutil-pretty-load-address", "-load-address"], [497, 0, 1, "cmdoption-llvm-pdbutil-pretty-min-class-padding", "-min-class-padding"], [497, 0, 1, "cmdoption-llvm-pdbutil-pretty-min-class-padding-imm", "-min-class-padding-imm"], [497, 0, 1, "cmdoption-llvm-pdbutil-pretty-min-type-size", "-min-type-size"], [497, 0, 1, "cmdoption-llvm-pdbutil-pretty-module-syms", "-module-syms"], [497, 0, 1, "cmdoption-llvm-pdbutil-pretty-no-compiler-generated", "-no-compiler-generated"], [497, 0, 1, "cmdoption-llvm-pdbutil-pretty-no-enum-definitions", "-no-enum-definitions"], [497, 0, 1, "cmdoption-llvm-pdbutil-pretty-no-system-libs", "-no-system-libs"], [497, 0, 1, "cmdoption-llvm-pdbutil-pretty-sym-types", "-sym-types"], [497, 0, 1, "cmdoption-llvm-pdbutil-pretty-symbol-order", "-symbol-order"], [497, 0, 1, "cmdoption-llvm-pdbutil-pretty-typedefs", "-typedefs"], [497, 0, 1, "cmdoption-llvm-pdbutil-pretty-types", "-types"]], "llvm-pdbutil-yaml2pdb": [[497, 0, 1, "cmdoption-llvm-pdbutil-yaml2pdb-pdb", "-pdb"]], "llvm-profdata-merge": [[498, 0, 1, "cmdoption-llvm-profdata-merge-binary", "-binary"], [498, 0, 1, "cmdoption-llvm-profdata-merge-compress-all-sections", "-compress-all-sections"], [498, 0, 1, "cmdoption-llvm-profdata-merge-extbinary", "-extbinary"], [498, 0, 1, "cmdoption-llvm-profdata-merge-input-files", "-f"], [498, 0, 1, "cmdoption-llvm-profdata-merge-failure-mode", "-failure-mode"], [498, 0, 1, "cmdoption-llvm-profdata-merge-gcc", "-gcc"], [498, 0, 1, "cmdoption-llvm-profdata-merge-gen-partial-profile", "-gen-partial-profile"], [498, 0, 1, "cmdoption-llvm-profdata-merge-help", "-help"], [498, 0, 1, "cmdoption-llvm-profdata-merge-input-files", "-input-files"], [498, 0, 1, "cmdoption-llvm-profdata-merge-instr", "-instr"], [498, 0, 1, "cmdoption-llvm-profdata-merge-num-threads", "-j"], [498, 0, 1, "cmdoption-llvm-profdata-merge-num-threads", "-num-threads"], [498, 0, 1, "cmdoption-llvm-profdata-merge-output", "-o"], [498, 0, 1, "cmdoption-llvm-profdata-merge-output", "-output"], [498, 0, 1, "cmdoption-llvm-profdata-merge-prof-sym-list", "-prof-sym-list"], [498, 0, 1, "cmdoption-llvm-profdata-merge-remapping-file", "-r"], [498, 0, 1, "cmdoption-llvm-profdata-merge-remapping-file", "-remapping-file"], [498, 0, 1, "cmdoption-llvm-profdata-merge-sample", "-sample"], [498, 0, 1, "cmdoption-llvm-profdata-merge-sparse", "-sparse"], [498, 0, 1, "cmdoption-llvm-profdata-merge-text", "-text"], [498, 0, 1, "cmdoption-llvm-profdata-merge-use-md5", "-use-md5"], [498, 0, 1, "cmdoption-llvm-profdata-merge-weighted-input", "-weighted-input"]], "llvm-profdata-overlap": [[498, 0, 1, "cmdoption-llvm-profdata-overlap-cs", "-cs"], [498, 0, 1, "cmdoption-llvm-profdata-overlap-function", "-function"], [498, 0, 1, "cmdoption-llvm-profdata-overlap-help", "-help"], [498, 0, 1, "cmdoption-llvm-profdata-overlap-o", "-o"], [498, 0, 1, "cmdoption-llvm-profdata-overlap-value-cutoff", "-value-cutoff"]], "llvm-profdata-show": [[498, 0, 1, "cmdoption-llvm-profdata-show-all-functions", "-all-functions"], [498, 0, 1, "cmdoption-llvm-profdata-show-counts", "-counts"], [498, 0, 1, "cmdoption-llvm-profdata-show-function", "-function"], [498, 0, 1, "cmdoption-llvm-profdata-show-help", "-help"], [498, 0, 1, "cmdoption-llvm-profdata-show-instr", "-instr"], [498, 0, 1, "cmdoption-llvm-profdata-show-list-below-cutoff", "-list-below-cutoff"], [498, 0, 1, "cmdoption-llvm-profdata-show-memop-sizes", "-memop-sizes"], [498, 0, 1, "cmdoption-llvm-profdata-show-output", "-o"], [498, 0, 1, "cmdoption-llvm-profdata-show-output", "-output"], [498, 0, 1, "cmdoption-llvm-profdata-show-sample", "-sample"], [498, 0, 1, "cmdoption-llvm-profdata-show-show-prof-sym-list", "-show-prof-sym-list"], [498, 0, 1, "cmdoption-llvm-profdata-show-show-sec-info-only", "-show-sec-info-only"], [498, 0, 1, "cmdoption-llvm-profdata-show-showcs", "-showcs"], [498, 0, 1, "cmdoption-llvm-profdata-show-text", "-text"], [498, 0, 1, "cmdoption-llvm-profdata-show-topn", "-topn"], [498, 0, 1, "cmdoption-llvm-profdata-show-value-cutoff", "-value-cutoff"]], "llvm-readelf": [[500, 0, 1, "cmdoption-llvm-readelf-addrsig", "--addrsig"], [500, 0, 1, "cmdoption-llvm-readelf-all", "--all"], [500, 0, 1, "cmdoption-llvm-readelf-arch-specific", "--arch-specific"], [500, 0, 1, "cmdoption-llvm-readelf-cg-profile", "--cg-profile"], [500, 0, 1, "cmdoption-llvm-readelf-color", "--color"], [500, 0, 1, "cmdoption-llvm-readelf-demangle", "--demangle"], [500, 0, 1, "cmdoption-llvm-readelf-dyn-relocations", "--dyn-relocations"], [500, 0, 1, "cmdoption-llvm-readelf-dyn-symbols", "--dyn-symbols"], [500, 0, 1, "cmdoption-llvm-readelf-dyn-symbols", "--dyn-syms"], [500, 0, 1, "cmdoption-llvm-readelf-dynamic-table", "--dynamic"], [500, 0, 1, "cmdoption-llvm-readelf-dynamic-table", "--dynamic-table"], [500, 0, 1, "cmdoption-llvm-readelf-elf-hash-histogram", "--elf-hash-histogram"], [500, 0, 1, "cmdoption-llvm-readelf-elf-linker-options", "--elf-linker-options"], [500, 0, 1, "cmdoption-llvm-readelf-elf-output-style", "--elf-output-style"], [500, 0, 1, "cmdoption-llvm-readelf-elf-section-groups", "--elf-section-groups"], [500, 0, 1, "cmdoption-llvm-readelf-expand-relocs", "--expand-relocs"], [500, 0, 1, "cmdoption-llvm-readelf-file-headers", "--file-headers"], [500, 0, 1, "cmdoption-llvm-readelf-gnu-hash-table", "--gnu-hash-table"], [500, 0, 1, "cmdoption-llvm-readelf-hash-symbols", "--hash-symbols"], [500, 0, 1, "cmdoption-llvm-readelf-hash-table", "--hash-table"], [500, 0, 1, "cmdoption-llvm-readelf-headers", "--headers"], [500, 0, 1, "cmdoption-llvm-readelf-help", "--help"], [500, 0, 1, "cmdoption-llvm-readelf-help-list", "--help-list"], [500, 0, 1, "cmdoption-llvm-readelf-hex-dump", "--hex-dump"], [500, 0, 1, "cmdoption-llvm-readelf-elf-hash-histogram", "--histogram"], [500, 0, 1, "cmdoption-llvm-readelf-needed-libs", "--needed-libs"], [500, 0, 1, "cmdoption-llvm-readelf-notes", "--notes"], [500, 0, 1, "cmdoption-llvm-readelf-program-headers", "--program-headers"], [500, 0, 1, "cmdoption-llvm-readelf-raw-relr", "--raw-relr"], [500, 0, 1, "cmdoption-llvm-readelf-relocations", "--relocations"], [500, 0, 1, "cmdoption-llvm-readelf-relocations", "--relocs"], [500, 0, 1, "cmdoption-llvm-readelf-section-data", "--section-data"], [500, 0, 1, "cmdoption-llvm-readelf-elf-section-groups", "--section-groups"], [500, 0, 1, "cmdoption-llvm-readelf-sections", "--section-headers"], [500, 0, 1, "cmdoption-llvm-readelf-section-mapping", "--section-mapping"], [500, 0, 1, "cmdoption-llvm-readelf-section-relocations", "--section-relocations"], [500, 0, 1, "cmdoption-llvm-readelf-section-symbols", "--section-symbols"], [500, 0, 1, "cmdoption-llvm-readelf-sections", "--sections"], [500, 0, 1, "cmdoption-llvm-readelf-program-headers", "--segments"], [500, 0, 1, "cmdoption-llvm-readelf-stack-sizes", "--stack-sizes"], [500, 0, 1, "cmdoption-llvm-readelf-stackmap", "--stackmap"], [500, 0, 1, "cmdoption-llvm-readelf-string-dump", "--string-dump"], [500, 0, 1, "cmdoption-llvm-readelf-symbols", "--symbols"], [500, 0, 1, "cmdoption-llvm-readelf-symbols", "--syms"], [500, 0, 1, "cmdoption-llvm-readelf-unwind", "--unwind"], [500, 0, 1, "cmdoption-llvm-readelf-version", "--version"], [500, 0, 1, "cmdoption-llvm-readelf-version-info", "--version-info"], [500, 0, 1, "cmdoption-llvm-readelf-arch-specific", "-A"], [500, 0, 1, "cmdoption-llvm-readelf-demangle", "-C"], [500, 0, 1, "cmdoption-llvm-readelf-elf-hash-histogram", "-I"], [500, 0, 1, "cmdoption-llvm-readelf-sections", "-S"], [500, 0, 1, "cmdoption-llvm-readelf-version-info", "-V"], [500, 0, 1, "cmdoption-llvm-readelf-dynamic-table", "-d"], [500, 0, 1, "cmdoption-llvm-readelf-headers", "-e"], [500, 0, 1, "cmdoption-llvm-readelf-elf-section-groups", "-g"], [500, 0, 1, "cmdoption-llvm-readelf-file-headers", "-h"], [500, 0, 1, "cmdoption-llvm-readelf-program-headers", "-l"], [500, 0, 1, "cmdoption-llvm-readelf-notes", "-n"], [500, 0, 1, "cmdoption-llvm-readelf-string-dump", "-p"], [500, 0, 1, "cmdoption-llvm-readelf-relocations", "-r"], [500, 0, 1, "cmdoption-llvm-readelf-symbols", "-s"], [500, 0, 1, "cmdoption-llvm-readelf-unwind", "-u"], [500, 0, 1, "cmdoption-llvm-readelf-hex-dump", "-x"], [500, 0, 1, "cmdoption-llvm-readelf-arg-FILE", "@&lt;FILE&gt;"]], "llvm-readobj": [[501, 0, 1, "cmdoption-llvm-readobj-addrsig", "--addrsig"], [501, 0, 1, "cmdoption-llvm-readobj-all", "--all"], [501, 0, 1, "cmdoption-llvm-readobj-arch-specific", "--arch-specific"], [501, 0, 1, "cmdoption-llvm-readobj-cg-profile", "--cg-profile"], [501, 0, 1, "cmdoption-llvm-readobj-codeview", "--codeview"], [501, 0, 1, "cmdoption-llvm-readobj-codeview-ghash", "--codeview-ghash"], [501, 0, 1, "cmdoption-llvm-readobj-codeview-merged-types", "--codeview-merged-types"], [501, 0, 1, "cmdoption-llvm-readobj-codeview-subsection-bytes", "--codeview-subsection-bytes"], [501, 0, 1, "cmdoption-llvm-readobj-coff-basereloc", "--coff-basereloc"], [501, 0, 1, "cmdoption-llvm-readobj-coff-debug-directory", "--coff-debug-directory"], [501, 0, 1, "cmdoption-llvm-readobj-coff-directives", "--coff-directives"], [501, 0, 1, "cmdoption-llvm-readobj-coff-exports", "--coff-exports"], [501, 0, 1, "cmdoption-llvm-readobj-coff-imports", "--coff-imports"], [501, 0, 1, "cmdoption-llvm-readobj-coff-load-config", "--coff-load-config"], [501, 0, 1, "cmdoption-llvm-readobj-coff-resources", "--coff-resources"], [501, 0, 1, "cmdoption-llvm-readobj-color", "--color"], [501, 0, 1, "cmdoption-llvm-readobj-demangle", "--demangle"], [501, 0, 1, "cmdoption-llvm-readobj-dependent-libraries", "--dependent-libraries"], [501, 0, 1, "cmdoption-llvm-readobj-dyn-symbols", "--dt"], [501, 0, 1, "cmdoption-llvm-readobj-dyn-relocations", "--dyn-relocations"], [501, 0, 1, "cmdoption-llvm-readobj-dyn-symbols", "--dyn-symbols"], [501, 0, 1, "cmdoption-llvm-readobj-dyn-symbols", "--dyn-syms"], [501, 0, 1, "cmdoption-llvm-readobj-dynamic-table", "--dynamic"], [501, 0, 1, "cmdoption-llvm-readobj-dynamic-table", "--dynamic-table"], [501, 0, 1, "cmdoption-llvm-readobj-elf-hash-histogram", "--elf-hash-histogram"], [501, 0, 1, "cmdoption-llvm-readobj-elf-linker-options", "--elf-linker-options"], [501, 0, 1, "cmdoption-llvm-readobj-elf-output-style", "--elf-output-style"], [501, 0, 1, "cmdoption-llvm-readobj-elf-section-groups", "--elf-section-groups"], [501, 0, 1, "cmdoption-llvm-readobj-expand-relocs", "--expand-relocs"], [501, 0, 1, "cmdoption-llvm-readobj-file-headers", "--file-headers"], [501, 0, 1, "cmdoption-llvm-readobj-gnu-hash-table", "--gnu-hash-table"], [501, 0, 1, "cmdoption-llvm-readobj-hash-symbols", "--hash-symbols"], [501, 0, 1, "cmdoption-llvm-readobj-hash-table", "--hash-table"], [501, 0, 1, "cmdoption-llvm-readobj-headers", "--headers"], [501, 0, 1, "cmdoption-llvm-readobj-help", "--help"], [501, 0, 1, "cmdoption-llvm-readobj-help-list", "--help-list"], [501, 0, 1, "cmdoption-llvm-readobj-hex-dump", "--hex-dump"], [501, 0, 1, "cmdoption-llvm-readobj-elf-hash-histogram", "--histogram"], [501, 0, 1, "cmdoption-llvm-readobj-macho-data-in-code", "--macho-data-in-code"], [501, 0, 1, "cmdoption-llvm-readobj-macho-dsymtab", "--macho-dsymtab"], [501, 0, 1, "cmdoption-llvm-readobj-macho-indirect-symbols", "--macho-indirect-symbols"], [501, 0, 1, "cmdoption-llvm-readobj-macho-linker-options", "--macho-linker-options"], [501, 0, 1, "cmdoption-llvm-readobj-macho-segment", "--macho-segment"], [501, 0, 1, "cmdoption-llvm-readobj-macho-version-min", "--macho-version-min"], [501, 0, 1, "cmdoption-llvm-readobj-needed-libs", "--needed-libs"], [501, 0, 1, "cmdoption-llvm-readobj-notes", "--notes"], [501, 0, 1, "cmdoption-llvm-readobj-program-headers", "--program-headers"], [501, 0, 1, "cmdoption-llvm-readobj-raw-relr", "--raw-relr"], [501, 0, 1, "cmdoption-llvm-readobj-relocations", "--relocations"], [501, 0, 1, "cmdoption-llvm-readobj-relocations", "--relocs"], [501, 0, 1, "cmdoption-llvm-readobj-section-data", "--sd"], [501, 0, 1, "cmdoption-llvm-readobj-section-data", "--section-data"], [501, 0, 1, "cmdoption-llvm-readobj-elf-section-groups", "--section-groups"], [501, 0, 1, "cmdoption-llvm-readobj-sections", "--section-headers"], [501, 0, 1, "cmdoption-llvm-readobj-section-mapping", "--section-mapping"], [501, 0, 1, "cmdoption-llvm-readobj-section-relocations", "--section-relocations"], [501, 0, 1, "cmdoption-llvm-readobj-section-symbols", "--section-symbols"], [501, 0, 1, "cmdoption-llvm-readobj-sections", "--sections"], [501, 0, 1, "cmdoption-llvm-readobj-program-headers", "--segments"], [501, 0, 1, "cmdoption-llvm-readobj-section-relocations", "--sr"], [501, 0, 1, "cmdoption-llvm-readobj-section-symbols", "--st"], [501, 0, 1, "cmdoption-llvm-readobj-stack-sizes", "--stack-sizes"], [501, 0, 1, "cmdoption-llvm-readobj-stackmap", "--stackmap"], [501, 0, 1, "cmdoption-llvm-readobj-string-dump", "--string-dump"], [501, 0, 1, "cmdoption-llvm-readobj-symbols", "--symbols"], [501, 0, 1, "cmdoption-llvm-readobj-symbols", "--syms"], [501, 0, 1, "cmdoption-llvm-readobj-unwind", "--unwind"], [501, 0, 1, "cmdoption-llvm-readobj-version", "--version"], [501, 0, 1, "cmdoption-llvm-readobj-version-info", "--version-info"], [501, 0, 1, "cmdoption-llvm-readobj-arch-specific", "-A"], [501, 0, 1, "cmdoption-llvm-readobj-demangle", "-C"], [501, 0, 1, "cmdoption-llvm-readobj-elf-hash-histogram", "-I"], [501, 0, 1, "cmdoption-llvm-readobj-sections", "-S"], [501, 0, 1, "cmdoption-llvm-readobj-version-info", "-V"], [501, 0, 1, "cmdoption-llvm-readobj-dynamic-table", "-d"], [501, 0, 1, "cmdoption-llvm-readobj-headers", "-e"], [501, 0, 1, "cmdoption-llvm-readobj-elf-section-groups", "-g"], [501, 0, 1, "cmdoption-llvm-readobj-file-headers", "-h"], [501, 0, 1, "cmdoption-llvm-readobj-program-headers", "-l"], [501, 0, 1, "cmdoption-llvm-readobj-notes", "-n"], [501, 0, 1, "cmdoption-llvm-readobj-string-dump", "-p"], [501, 0, 1, "cmdoption-llvm-readobj-relocations", "-r"], [501, 0, 1, "cmdoption-llvm-readobj-sections", "-s"], [501, 0, 1, "cmdoption-llvm-readobj-symbols", "-t"], [501, 0, 1, "cmdoption-llvm-readobj-unwind", "-u"], [501, 0, 1, "cmdoption-llvm-readobj-hex-dump", "-x"], [501, 0, 1, "cmdoption-llvm-readobj-arg-FILE", "@&lt;FILE&gt;"]], "llvm-size": [[502, 0, 1, "cmdoption-llvm-size-arch", "--arch"], [502, 0, 1, "cmdoption-llvm-size-common", "--common"], [502, 0, 1, "cmdoption-llvm-size-format", "--format"], [502, 0, 1, "cmdoption-llvm-size-help", "--help"], [502, 0, 1, "cmdoption-llvm-size-help-list", "--help-list"], [502, 0, 1, "cmdoption-llvm-size-radix", "--radix"], [502, 0, 1, "cmdoption-llvm-size-totals", "--totals"], [502, 0, 1, "cmdoption-llvm-size-version", "--version"], [502, 0, 1, "cmdoption-llvm-size-A", "-A"], [502, 0, 1, "cmdoption-llvm-size-B", "-B"], [502, 0, 1, "cmdoption-llvm-size-d", "-d"], [502, 0, 1, "cmdoption-llvm-size-help", "-h"], [502, 0, 1, "cmdoption-llvm-size-l", "-l"], [502, 0, 1, "cmdoption-llvm-size-m", "-m"], [502, 0, 1, "cmdoption-llvm-size-o", "-o"], [502, 0, 1, "cmdoption-llvm-size-totals", "-t"], [502, 0, 1, "cmdoption-llvm-size-x", "-x"], [502, 0, 1, "cmdoption-llvm-size-arg-FILE", "@&lt;FILE&gt;"]], "llvm-stress": [[503, 0, 1, "cmdoption-llvm-stress-o", "-o"], [503, 0, 1, "cmdoption-llvm-stress-seed", "-seed"], [503, 0, 1, "cmdoption-llvm-stress-size", "-size"]], "llvm-strings": [[504, 0, 1, "cmdoption-llvm-strings-all", "--all"], [504, 0, 1, "cmdoption-llvm-strings-bytes", "--bytes"], [504, 0, 1, "cmdoption-llvm-strings-help", "--help"], [504, 0, 1, "cmdoption-llvm-strings-help-list", "--help-list"], [504, 0, 1, "cmdoption-llvm-strings-print-file-name", "--print-file-name"], [504, 0, 1, "cmdoption-llvm-strings-radix", "--radix"], [504, 0, 1, "cmdoption-llvm-strings-version", "--version"], [504, 0, 1, "cmdoption-llvm-strings-all", "-a"], [504, 0, 1, "cmdoption-llvm-strings-print-file-name", "-f"], [504, 0, 1, "cmdoption-llvm-strings-help", "-h"], [504, 0, 1, "cmdoption-llvm-strings-bytes", "-n"], [504, 0, 1, "cmdoption-llvm-strings-radix", "-t"], [504, 0, 1, "cmdoption-llvm-strings-arg-FILE", "@&lt;FILE&gt;"]], "llvm-strip": [[505, 0, 1, "cmdoption-llvm-strip-allow-broken-links", "--allow-broken-links"], [505, 0, 1, "cmdoption-llvm-strip-disable-deterministic-archives", "--disable-deterministic-archives"], [505, 0, 1, "cmdoption-llvm-strip-discard-all", "--discard-all"], [505, 0, 1, "cmdoption-llvm-strip-discard-locals", "--discard-locals"], [505, 0, 1, "cmdoption-llvm-strip-enable-deterministic-archives", "--enable-deterministic-archives"], [505, 0, 1, "cmdoption-llvm-strip-help", "--help"], [505, 0, 1, "cmdoption-llvm-strip-keep-file-symbols", "--keep-file-symbols"], [505, 0, 1, "cmdoption-llvm-strip-keep-section", "--keep-section"], [505, 0, 1, "cmdoption-llvm-strip-keep-symbol", "--keep-symbol"], [505, 0, 1, "cmdoption-llvm-strip-no-strip-all", "--no-strip-all"], [505, 0, 1, "cmdoption-llvm-strip-only-keep-debug", "--only-keep-debug"], [505, 0, 1, "cmdoption-llvm-strip-preserve-dates", "--preserve-dates"], [505, 0, 1, "cmdoption-llvm-strip-regex", "--regex"], [505, 0, 1, "cmdoption-llvm-strip-remove-section", "--remove-section"], [505, 0, 1, "cmdoption-llvm-strip-strip-all", "--strip-all"], [505, 0, 1, "cmdoption-llvm-strip-strip-all-gnu", "--strip-all-gnu"], [505, 0, 1, "cmdoption-llvm-strip-strip-debug", "--strip-debug"], [505, 0, 1, "cmdoption-llvm-strip-strip-sections", "--strip-sections"], [505, 0, 1, "cmdoption-llvm-strip-strip-symbol", "--strip-symbol"], [505, 0, 1, "cmdoption-llvm-strip-strip-unneeded", "--strip-unneeded"], [505, 0, 1, "cmdoption-llvm-strip-version", "--version"], [505, 0, 1, "cmdoption-llvm-strip-wildcard", "--wildcard"], [505, 0, 1, "cmdoption-llvm-strip-enable-deterministic-archives", "-D"], [505, 0, 1, "cmdoption-llvm-strip-keep-symbol", "-K"], [505, 0, 1, "cmdoption-llvm-strip-strip-symbol", "-N"], [505, 0, 1, "cmdoption-llvm-strip-remove-section", "-R"], [505, 0, 1, "cmdoption-llvm-strip-strip-all", "-S"], [505, 0, 1, "cmdoption-llvm-strip-T", "-T"], [505, 0, 1, "cmdoption-llvm-strip-disable-deterministic-archives", "-U"], [505, 0, 1, "cmdoption-llvm-strip-version", "-V"], [505, 0, 1, "cmdoption-llvm-strip-discard-locals", "-X"], [505, 0, 1, "cmdoption-llvm-strip-strip-debug", "-g"], [505, 0, 1, "cmdoption-llvm-strip-help", "-h"], [505, 0, 1, "cmdoption-llvm-strip-o", "-o"], [505, 0, 1, "cmdoption-llvm-strip-preserve-dates", "-p"], [505, 0, 1, "cmdoption-llvm-strip-wildcard", "-w"], [505, 0, 1, "cmdoption-llvm-strip-discard-all", "-x"], [505, 0, 1, "cmdoption-llvm-strip-arg-FILE", "@&lt;FILE&gt;"]], "llvm-symbolizer": [[506, 0, 1, "cmdoption-llvm-symbolizer-print-address", "--addresses"], [506, 0, 1, "cmdoption-llvm-symbolizer-adjust-vma", "--adjust-vma"], [506, 0, 1, "cmdoption-llvm-symbolizer-basenames", "--basenames"], [506, 0, 1, "cmdoption-llvm-symbolizer-default-arch", "--default-arch"], [506, 0, 1, "cmdoption-llvm-symbolizer-demangle", "--demangle"], [506, 0, 1, "cmdoption-llvm-symbolizer-dsym-hint", "--dsym-hint"], [506, 0, 1, "cmdoption-llvm-symbolizer-dwp", "--dwp"], [506, 0, 1, "cmdoption-llvm-symbolizer-obj", "--exe"], [506, 0, 1, "cmdoption-llvm-symbolizer-fallback-debug-path", "--fallback-debug-path"], [506, 0, 1, "cmdoption-llvm-symbolizer-functions", "--functions"], [506, 0, 1, "cmdoption-llvm-symbolizer-help", "--help"], [506, 0, 1, "cmdoption-llvm-symbolizer-help-list", "--help-list"], [506, 0, 1, "cmdoption-llvm-symbolizer-inlining", "--inlines"], [506, 0, 1, "cmdoption-llvm-symbolizer-inlining", "--inlining"], [506, 0, 1, "cmdoption-llvm-symbolizer-no-demangle", "--no-demangle"], [506, 0, 1, "cmdoption-llvm-symbolizer-obj", "--obj"], [506, 0, 1, "cmdoption-llvm-symbolizer-output-style", "--output-style"], [506, 0, 1, "cmdoption-llvm-symbolizer-pretty-print", "--pretty-print"], [506, 0, 1, "cmdoption-llvm-symbolizer-print-address", "--print-address"], [506, 0, 1, "cmdoption-llvm-symbolizer-print-source-context-lines", "--print-source-context-lines"], [506, 0, 1, "cmdoption-llvm-symbolizer-relativenames", "--relativenames"], [506, 0, 1, "cmdoption-llvm-symbolizer-use-symbol-table", "--use-symbol-table"], [506, 0, 1, "cmdoption-llvm-symbolizer-verbose", "--verbose"], [506, 0, 1, "cmdoption-llvm-symbolizer-version", "--version"], [506, 0, 1, "cmdoption-llvm-symbolizer-demangle", "-C"], [506, 0, 1, "cmdoption-llvm-symbolizer-print-address", "-a"], [506, 0, 1, "cmdoption-llvm-symbolizer-obj", "-e"], [506, 0, 1, "cmdoption-llvm-symbolizer-functions", "-f"], [506, 0, 1, "cmdoption-llvm-symbolizer-help", "-h"], [506, 0, 1, "cmdoption-llvm-symbolizer-inlining", "-i"], [506, 0, 1, "cmdoption-llvm-symbolizer-pretty-print", "-p"], [506, 0, 1, "cmdoption-llvm-symbolizer-basenames", "-s"], [506, 0, 1, "cmdoption-llvm-symbolizer-arg-FILE", "@&lt;FILE&gt;"]], "opt": [[507, 0, 1, "cmdoption-opt-S", "-S"], [507, 0, 1, "cmdoption-opt-debug", "-debug"], [507, 0, 1, "cmdoption-opt-disable-inlining", "-disable-inlining"], [507, 0, 1, "cmdoption-opt-disable-opt", "-disable-opt"], [507, 0, 1, "cmdoption-opt-f", "-f"], [507, 0, 1, "cmdoption-opt-help", "-help"], [507, 0, 1, "cmdoption-opt-load", "-load"], [507, 0, 1, "cmdoption-opt-o", "-o"], [507, 0, 1, "cmdoption-opt-p", "-p"], [507, 0, 1, "cmdoption-opt-stats", "-stats"], [507, 0, 1, "cmdoption-opt-strip-debug", "-strip-debug"], [507, 0, 1, "cmdoption-opt-time-passes", "-time-passes"], [507, 0, 1, "cmdoption-opt-verify-each", "-verify-each"], [507, 0, 1, "cmdoption-opt-passname", "-{passname}"]], "tblgen": [[508, 0, 1, "cmdoption-tblgen-I", "-I"], [508, 0, 1, "cmdoption-tblgen-asmparsernum", "-asmparsernum"], [508, 0, 1, "cmdoption-tblgen-asmwriternum", "-asmwriternum"], [508, 0, 1, "cmdoption-tblgen-class", "-class"], [508, 0, 1, "cmdoption-tblgen-dump-json", "-dump-json"], [508, 0, 1, "cmdoption-tblgen-gen-asm-matcher", "-gen-asm-matcher"], [508, 0, 1, "cmdoption-tblgen-gen-asm-writer", "-gen-asm-writer"], [508, 0, 1, "cmdoption-tblgen-gen-dag-isel", "-gen-dag-isel"], [508, 0, 1, "cmdoption-tblgen-gen-dfa-packetizer", "-gen-dfa-packetizer"], [508, 0, 1, "cmdoption-tblgen-gen-disassembler", "-gen-disassembler"], [508, 0, 1, "cmdoption-tblgen-gen-emitter", "-gen-emitter"], [508, 0, 1, "cmdoption-tblgen-gen-enhanced-disassembly-info", "-gen-enhanced-disassembly-info"], [508, 0, 1, "cmdoption-tblgen-gen-exegesis", "-gen-exegesis"], [508, 0, 1, "cmdoption-tblgen-gen-fast-isel", "-gen-fast-isel"], [508, 0, 1, "cmdoption-tblgen-gen-instr-info", "-gen-instr-info"], [508, 0, 1, "cmdoption-tblgen-gen-intrinsic-enums", "-gen-intrinsic-enums"], [508, 0, 1, "cmdoption-tblgen-gen-intrinsic-impl", "-gen-intrinsic-impl"], [508, 0, 1, "cmdoption-tblgen-gen-pseudo-lowering", "-gen-pseudo-lowering"], [508, 0, 1, "cmdoption-tblgen-gen-register-info", "-gen-register-info"], [508, 0, 1, "cmdoption-tblgen-gen-subtarget", "-gen-subtarget"], [508, 0, 1, "cmdoption-tblgen-gen-tgt-intrinsic", "-gen-tgt-intrinsic"], [508, 0, 1, "cmdoption-tblgen-help", "-help"], [508, 0, 1, "cmdoption-tblgen-o", "-o"], [508, 0, 1, "cmdoption-tblgen-print-enums", "-print-enums"], [508, 0, 1, "cmdoption-tblgen-print-records", "-print-records"], [508, 0, 1, "cmdoption-tblgen-print-sets", "-print-sets"], [508, 0, 1, "cmdoption-tblgen-version", "-version"]]}, "objnames": {"0": ["std", "cmdoption", "program option"]}, "objtypes": {"0": "std:cmdoption"}, "terms": {"": [9, 10, 19, 20, 21, 31, 32, 33, 53, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 110, 111, 117, 118, 140, 141, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 201, 202, 238, 239, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 295, 296, 300, 301, 307, 308, 309, 328, 331, 332, 333, 334, 335, 349, 350, 351, 361, 362, 363, 383, 384, 385, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422, 442, 444, 447, 448, 449, 450, 451, 453, 454, 455, 457, 458, 459, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 475, 476, 478, 479, 481, 482, 483, 486, 487, 488, 490, 493, 495, 497, 498, 499, 500, 501, 502, 504, 505, 506, 507, 509, 510, 511, 512, 513, 514, 515, 517, 518, 519, 520, 521, 524, 525, 526, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 541, 542, 544, 545, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 568, 569, 570, 571, 572, 573, 575, 577, 580, 581, 582, 584, 586, 590, 591, 592, 593, 594, 596, 597, 598, 599, 601, 602, 603, 604, 605, 607, 608, 609, 610, 611, 613, 615, 616, 617, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 633, 634, 635, 636, 637, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 659, 660, 661, 662, 663, 664, 665, 666, 668], "0": [14, 18, 46, 52, 58, 91, 93, 109, 112, 116, 136, 139, 179, 181, 195, 196, 200, 208, 210, 211, 215, 219, 221, 222, 226, 228, 231, 232, 237, 243, 276, 278, 292, 313, 344, 348, 376, 377, 382, 388, 423, 425, 441, 442, 443, 444, 445, 446, 447, 450, 451, 452, 453, 455, 456, 458, 459, 462, 464, 467, 468, 469, 470, 472, 473, 474, 476, 477, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 490, 491, 492, 493, 495, 497, 498, 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, 513, 514, 515, 517, 518, 519, 521, 522, 523, 526, 529, 531, 534, 535, 537, 538, 544, 545, 546, 547, 551, 552, 554, 557, 558, 559, 560, 561, 562, 563, 565, 566, 570, 571, 572, 573, 576, 577, 579, 580, 581, 582, 584, 585, 586, 587, 589, 591, 593, 594, 600, 602, 604, 605, 606, 607, 608, 610, 613, 615, 616, 617, 619, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 633, 634, 635, 636, 637, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 659, 660, 661, 662, 663, 664, 665, 666, 668], "00": [487, 493, 514, 546, 559, 565, 581, 589, 650, 651, 652, 654, 661, 662, 663, 665], "000": 605, "0000": 627, "000000": [619, 626, 629, 651, 653, 662, 664], "00000000041516c6": 629, "00000006": 605, "000000e": [650, 651, 652, 654, 661, 662, 663, 665], "000001": 629, "000002": 629, "000003": 629, "000006": 629, "000007": 629, "000008": 629, "000010": 629, "000014": 629, "000016": 629, "000017": 629, "000018": 629, "000019": 629, "000023": 629, "00002fc0": 629, "000032": 629, "000035": 629, "000037": 629, "000041": 629, "000046": 629, "000049": 629, "000050": 629, "000063": 629, "000075": 629, "0001": 627, "000102030405060708090a0b0c0d0e0f": 559, "000106": 629, "000120": 629, "000123": 629, "000138": 629, "000155": 629, "000156": 629, "000214": 629, "000215": 629, "0003": 627, "000302": 629, "000310": 629, "000342": 629, "0004": 627, "000471": 629, "0005": 627, "000562": 629, "0007": 627, "000737": 629, "000774": 629, "000799": 629, "0008": 594, "001": 454, "0011": 454, "001375": 629, "001596": 629, "003400": 619, "004523": 629, "0058": 487, "00bet5": 598, "00n": 514, "01": [446, 487, 514, 546, 559, 606, 619, 651, 652, 654, 662, 663, 665], "010": 446, "011": 454, "011200": 619, "012345": 493, "0123456789": 493, "0152": 502, "0170": 515, "01pi0": 445, "02": [487, 514, 653, 664], "03": [511, 653, 664], "03d516c6": 629, "04": [502, 529, 650, 653, 661, 664], "041688": 591, "041721": 591, "041739": 591, "0462": 619, "049886": 591, "04e": 559, "05": [459, 561, 653, 664], "06": [459, 511, 514], "0625": 559, "062624": 629, "067200": 619, "07": [493, 514, 630, 653, 664], "07b": 511, "08": 628, "0a": 559, "0b": [446, 511, 616], "0b000000": 626, "0b00000000": 559, "0b000011": 626, "0b000100": 626, "0b000111": 626, "0b0011": 445, "0b01101101": 559, "0b01111000": 559, "0b10": 615, "0b100": 615, "0b10000000": 559, "0b1001011": 615, "0b101": 615, "0b1010": [445, 446], "0b10110110": 559, "0b111": 615, "0b11100001": 559, "0b1111": 445, "0b11111110": 559, "0b11111111": 559, "0baz": 589, "0c": 514, "0cleanup": 519, "0dev": 619, "0e": 559, "0f": [514, 572], "0f00000000": 572, "0f0d0ed1c78f": 532, "0f3f800000": 572, "0f3fb8aa3b": 572, "0f42d20000": 572, "0f7f800000": 572, "0fb5bfbe8e": 572, "0fbf317200": 572, "0fc2d20000": 572, "0ffh": 446, "0th": 527, "0u": [534, 605], "0x": [446, 447, 468, 475, 509, 537, 559, 605, 616], "0x0": [447, 454, 464, 576, 589], "0x00": [447, 514, 576, 608], "0x000": 447, "0x0000": [442, 447, 584], "0x00000": 537, "0x000000": 537, "0x00000000": [447, 605], "0x0000000000000000": 447, "0x0000000000000002": 515, "0x0000000000000010": 605, "0x000000000059c583": 515, "0x0000000000d953b3": 515, "0x0000000000dc8872": 515, "0x00000000016677e0": 515, "0x00000000ffefffff": 446, "0x00000001": 605, "0x00000002": 605, "0x00000003": 605, "0x00000004": 605, "0x00000009": 605, "0x00000067": 605, "0x0000006e": 605, "0x000000c9": 468, "0x000000ff": [447, 537], "0x00000100": [447, 605], "0x00000110": 605, "0x00000120": 605, "0x00000130": 605, "0x00000140": 605, "0x00000147": 605, "0x00000150": 605, "0x00000200": 447, "0x00000233": 468, "0x000003bd": 605, "0x000003cd": 605, "0x000003f3": 605, "0x000003ff": 464, "0x00000ff0": 537, "0x00001000": 605, "0x00001023": 605, "0x00001203": 605, "0x00001c00": 464, "0x00002000": 605, "0x00002023": 605, "0x00002200": 605, "0x000034f0": 605, "0x00003500": 605, "0x00003550": 605, "0x00007fff": 464, "0x00007ffff7ed40a9": 515, "0x0001": [442, 447], "0x0001023": 605, "0x0002": [442, 447], "0x0002023": 605, "0x0003": [442, 447, 584], "0x0004": [442, 447], "0x0007": 584, "0x0008": 584, "0x001": 447, "0x0010": 584, "0x0011": 584, "0x0012": 584, "0x0013": 584, "0x0014": 584, "0x002": 447, "0x0020": 584, "0x0021": 584, "0x0022": 584, "0x0023": 584, "0x0024": 584, "0x003": 447, "0x0030": 584, "0x0031": 584, "0x0032": 584, "0x0033": 584, "0x0034": 584, "0x004": 447, "0x0040": 584, "0x0041": 584, "0x0042": 584, "0x0043": 584, "0x0044": 584, "0x0045": 584, "0x0046": 584, "0x005": 447, "0x0050": 584, "0x0051": 584, "0x0052": 584, "0x0053": 584, "0x0054": 584, "0x0055": 584, "0x0056": 584, "0x006": 447, "0x0068": 584, "0x0069": 584, "0x007": 447, "0x0070": 584, "0x0071": 584, "0x0072": 584, "0x0073": 584, "0x0074": 584, "0x0075": 584, "0x0076": 584, "0x0077": 584, "0x0078": 584, "0x0079": 584, "0x007a": 584, "0x007b": 584, "0x008": 447, "0x009": 447, "0x00a": 447, "0x00b": 447, "0x00c": 447, "0x00d": 447, "0x00e": 447, "0x00f": 447, "0x00ff0000": 464, "0x01": [447, 514, 576, 605, 617, 630], "0x010": 447, "0x011": 447, "0x01f": 447, "0x02": [447, 514, 576, 605], "0x020": 447, "0x021": 447, "0x022": 447, "0x023": 447, "0x024": 447, "0x025": 447, "0x026": 447, "0x027": 447, "0x028": 447, "0x029": 447, "0x02a": 447, "0x02b": 447, "0x02c": 447, "0x02d": 447, "0x02e": 447, "0x02f": 447, "0x03": [447, 576, 608], "0x030": 447, "0x031": 447, "0x032": 447, "0x033": 447, "0x034": 447, "0x035": 447, "0x036": 447, "0x04": [447, 576, 605, 630], "0x04000000": 605, "0x05": [447, 576, 608], "0x06": [447, 576, 608], "0x07": [447, 576, 608], "0x08": [447, 576, 605], "0x09": 576, "0x0a": [576, 608], "0x0abcd": 559, "0x0b": [576, 608], "0x0b17c0de": 454, "0x0c": [514, 576], "0x0d": 608, "0x0e": 608, "0x0f": 608, "0x0f0": 537, "0x0ff": 537, "0x0fffff": 446, "0x0fffffff": 630, "0x1": [445, 447, 464, 589, 605, 608], "0x10": [52, 139, 237, 382, 445, 487, 576, 605, 608], "0x100": [576, 605, 606], "0x1000": [584, 605], "0x100000": 446, "0x100000f24": 506, "0x12": [52, 139, 237, 382], "0x1234": [573, 605], "0x12345678": 605, "0x13": 576, "0x14c": [577, 668], "0x16": 576, "0x1603020": 515, "0x16151f0": 515, "0x16677e0": 515, "0x1881": [46, 136, 231, 376], "0x1afp": 446, "0x1b": 454, "0x1c2": 521, "0x1f": 447, "0x1f84": 506, "0x1ff00": 446, "0x1fffff": 446, "0x2": [445, 464, 589, 608], "0x20": [447, 605], "0x200": [605, 606], "0x2000": [447, 605], "0x20000": 447, "0x2001": 442, "0x2002": 442, "0x2413bc": 627, "0x29273623": 605, "0x2a": [453, 545], "0x3": [445, 464, 589, 608], "0x30": 442, "0x3000": 497, "0x3039": 589, "0x31": 442, "0x3500000001652748": 515, "0x3c00": 446, "0x3e08": 442, "0x3e09": 442, "0x3e0a": 442, "0x3e0b": 442, "0x3e0c": 442, "0x3f": 521, "0x3f800000": 446, "0x3fe9": 605, "0x3fea": 605, "0x3feaed548f090ce": 651, "0x3feb": 605, "0x3fed": 605, "0x4": [445, 464, 502, 608], "0x40": 605, "0x400": [605, 606], "0x4000": [497, 605], "0x40000000": 565, "0x400480": 506, "0x400486": 506, "0x400490": 506, "0x4004a0": 506, "0x4004be": 506, "0x4004d0": 506, "0x401167": 506, "0x4200": 605, "0x432ff973cafa8000": 559, "0x45": 545, "0x494e494d": 582, "0x4d544f4e": 582, "0x5": [464, 576, 608], "0x55585c0867ba": 545, "0x55585c0af787": 545, "0x55585c0af7b3": 545, "0x55585c0af7cf": 545, "0x55585c0afa55": 545, "0x57": 545, "0x5cf8c24cdb18bdac": 514, "0x5f": 447, "0x6": 464, "0x601028": 506, "0x60500020": 668, "0x6a": 502, "0x6fff4c02": 521, "0x7": 464, "0x70b298": 627, "0x744e60": 561, "0x744ea0": 561, "0x7c000000": 605, "0x7f": [559, 615], "0x7fecc966952b": 545, "0x7feccab26000": 545, "0x7fefffff00000000": 446, "0x7fefffffffffffff": 446, "0x7fff": 447, "0x7ffff7ed404c": 515, "0x7fffffff": 559, "0x7fffffffe018": 515, "0x7fffffffe040": 515, "0x8": [445, 464, 576, 589], "0x80": 605, "0x800": 605, "0x8000": [442, 447], "0x80000000": [447, 605], "0x8100": 442, "0x82638293": 605, "0x83": 545, "0x8664": 577, "0x9": [464, 589], "0x90": 610, "0x9f": 545, "0xa": [447, 464, 589], "0xa0463440": 468, "0xa0463443": 468, "0xa0463447": 468, "0xabcdef00": 610, "0xb": 464, "0xc": [454, 464, 468], "0xc3": 615, "0xd": [454, 464, 576], "0xe": 454, "0xe1": 442, "0xe2": 442, "0xe3": 442, "0xe4": 442, "0xe5": 442, "0xe6": 442, "0xe7": 442, "0xe8": [442, 615], "0xe9": 442, "0xea": 442, "0xeb": [442, 545], "0xec": 442, "0xeffe0000": 577, "0xf": [445, 615], "0xf0f0": 468, "0xfc": 447, "0xfe": 447, "0xff": [445, 446, 447, 559, 615], "0xff0": 537, "0xff00": 446, "0xffbef174": 627, "0xffefffff": 446, "0xffefffff00000000": 446, "0xfff": 445, "0xffff": [46, 52, 109, 136, 139, 195, 231, 237, 292, 376, 382, 441, 442, 445, 446, 447, 559, 577, 608], "0xffff000000000002": 608, "0xfffff": 446, "0xfffffffc": 446, "0xffffffff": [442, 446, 447, 454, 559], "0xffffffffffefffff": 446, "0xffffffffffff00ff": 446, "0xffffffffffffff00": 446, "0xffffffffffffffff": 442, "0xh": 559, "0xk": 559, "0xl": 559, "0xl00000000000000004000900000000000": 559, "0xm": 559, "0xr": 559, "0xxxxxxxxx": 605, "1": [9, 10, 12, 13, 14, 15, 17, 24, 25, 26, 27, 28, 29, 30, 32, 34, 35, 36, 37, 38, 39, 42, 43, 46, 52, 53, 54, 55, 58, 63, 66, 70, 71, 72, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 94, 95, 98, 102, 106, 107, 109, 110, 111, 112, 113, 115, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 136, 139, 140, 141, 150, 151, 152, 157, 158, 159, 160, 161, 162, 163, 167, 168, 169, 170, 171, 172, 173, 174, 184, 188, 192, 193, 195, 196, 197, 199, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 231, 232, 237, 238, 239, 240, 243, 249, 253, 254, 255, 260, 261, 262, 263, 266, 267, 268, 269, 270, 271, 281, 285, 289, 290, 292, 295, 296, 297, 300, 301, 302, 307, 308, 309, 311, 312, 313, 316, 320, 322, 323, 328, 333, 334, 335, 336, 338, 339, 341, 342, 343, 344, 345, 347, 354, 355, 356, 357, 358, 359, 360, 362, 364, 365, 366, 367, 368, 369, 372, 373, 376, 377, 382, 383, 384, 385, 388, 393, 396, 400, 401, 402, 407, 408, 409, 410, 413, 414, 415, 416, 417, 418, 426, 427, 430, 434, 438, 439, 441, 442, 443, 444, 445, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 457, 460, 463, 464, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 477, 478, 481, 482, 483, 484, 485, 486, 488, 491, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 505, 506, 509, 510, 511, 512, 513, 514, 515, 516, 517, 519, 521, 522, 523, 525, 526, 529, 532, 533, 534, 535, 537, 538, 539, 543, 544, 545, 546, 548, 551, 554, 555, 557, 558, 559, 561, 563, 565, 567, 570, 571, 572, 573, 574, 575, 576, 577, 579, 581, 582, 584, 585, 586, 587, 588, 589, 592, 593, 594, 596, 598, 599, 600, 602, 605, 608, 610, 613, 615, 616, 617, 619, 620, 621, 622, 623, 625, 626, 627, 628, 629, 630, 631, 634, 636, 637, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 668], "10": [46, 52, 136, 139, 231, 237, 376, 382, 446, 447, 450, 452, 454, 456, 464, 467, 492, 493, 498, 502, 506, 510, 514, 515, 527, 529, 532, 534, 545, 551, 554, 559, 562, 572, 573, 574, 577, 581, 589, 599, 600, 605, 606, 615, 626, 627, 629, 631, 649, 650, 651, 652, 653, 654, 655, 656, 658, 660, 661, 662, 663, 664, 665], "100": [109, 195, 292, 441, 447, 451, 467, 492, 493, 498, 526, 535, 545, 559, 561, 563, 605, 625, 627, 652, 653, 654, 655, 656, 663], "1000": [561, 581, 587, 657, 658], "10000": [487, 571], "10010001": 559, "1011": 454, "102": [446, 493, 629], "1020": [464, 559], "1023": [447, 464], "1024": [447, 464, 509, 559, 581, 602, 625], "1025": 464, "102593": 629, "1026": 464, "102kb": 509, "103": [447, 629], "1030": 559, "104": 446, "1054": 504, "106": [446, 502], "1066": 504, "108055": 629, "1083": 629, "1087": 447, "1088": 447, "109": 493, "10m": 561, "10x": 510, "11": [46, 109, 136, 231, 292, 376, 441, 445, 447, 451, 454, 462, 464, 467, 493, 506, 510, 515, 545, 554, 559, 572, 574, 577, 581, 600, 602, 605, 615, 625, 626, 628, 629, 631, 636, 637, 653, 654, 655, 656], "110": 629, "1101": 504, "1108": 656, "111": [447, 572, 619], "1112": 504, "112": [447, 559, 604], "1123": 504, "1129": [447, 656], "1130": [447, 504], "114": 502, "1141": 504, "1183": 656, "1184": 656, "12": [195, 442, 445, 446, 447, 454, 462, 464, 467, 468, 493, 497, 502, 506, 514, 515, 529, 545, 554, 559, 561, 565, 572, 574, 577, 579, 581, 584, 589, 598, 605, 610, 615, 619, 620, 626, 631, 653, 654, 655, 656], "120": [447, 515, 559, 651, 662], "1200": 561, "1210": 656, "1218": 656, "122": 559, "1222": 619, "123": [559, 571, 605, 629, 653, 654, 664, 665], "1234": [446, 447, 506], "12345": [551, 589, 591], "1234567": 559, "123908342": 589, "123kkk": 509, "123mb": 509, "124": 629, "125": [532, 559, 591, 629], "125000e": 559, "126": 502, "126744": 629, "127": [447, 559], "127715": 629, "128": [20, 118, 202, 350, 445, 447, 453, 454, 464, 514, 559, 572, 582, 584, 589, 626], "128974848": 509, "128mib": 521, "129": 447, "1298": 589, "129894": 594, "129907": 594, "129920": 594, "129923": 594, "129926": 594, "129934": 594, "129941": 594, "129996": 589, "12x10": 559, "13": [17, 115, 199, 347, 442, 445, 447, 454, 464, 493, 514, 515, 545, 554, 559, 572, 574, 577, 600, 605, 621, 625, 626, 627, 630, 654, 655, 656], "130": 629, "130111": 594, "130179": 594, "130181": 594, "130213": 594, "130214": 594, "130228": 594, "130229": 594, "130249": 594, "130266": 594, "130292": 594, "130304": 594, "130306": 594, "130309": 594, "130310": 594, "130312": 594, "130313": 594, "130318": 594, "130320": 594, "130323": 594, "130328": 594, "130329": 594, "130353": 594, "130355": 594, "130388": 594, "130415": 594, "130425": 594, "130430": 594, "130435": 594, "130465": 594, "130629": 594, "130630": 594, "1329373163": 559, "133700e": [650, 661], "134": 589, "138": [589, 629], "139": 629, "139563": 629, "139605": 629, "139607": 629, "139610": 629, "139612": 629, "139617": 629, "14": [109, 441, 442, 447, 454, 462, 464, 467, 506, 510, 515, 545, 554, 572, 574, 602, 605, 626, 629, 649, 660], "1402264": 594, "14159": 447, "142": 629, "143": 447, "1439": 656, "144": 559, "1444": 589, "1459": 656, "147345": 629, "14740650423002898831": 559, "1491": 629, "15": [46, 52, 109, 136, 139, 195, 231, 232, 237, 292, 376, 377, 382, 441, 445, 447, 454, 455, 467, 506, 514, 515, 529, 554, 559, 565, 571, 572, 574, 581, 600, 605, 608, 615, 630], "15155600": 629, "1523017872": 561, "1530": 629, "1535": 447, "1536": 447, "1564": 629, "1565878005": 559, "159": 447, "15915494": 446, "15915494309189532": 446, "1592": 446, "159279": 629, "15mb": 591, "15th": 445, "16": [17, 22, 30, 41, 43, 47, 48, 52, 73, 82, 115, 119, 137, 139, 153, 167, 199, 203, 208, 209, 210, 211, 215, 219, 220, 221, 222, 226, 228, 233, 237, 256, 266, 293, 298, 303, 317, 321, 324, 347, 352, 360, 371, 373, 378, 382, 403, 413, 444, 445, 446, 447, 451, 453, 454, 464, 468, 492, 493, 502, 510, 513, 515, 521, 529, 534, 545, 546, 554, 559, 561, 565, 569, 572, 574, 576, 577, 584, 589, 598, 600, 602, 605, 608, 610, 619, 623, 626, 630, 631, 655], "160": [447, 559], "1600": 559, "16000": 581, "161": 515, "162": 502, "164": 629, "16628590": 629, "16777216": 559, "16777217": 559, "1681": 629, "16b": 453, "16bit": 655, "16gb": 546, "16mib": 521, "17": [442, 447, 454, 462, 493, 509, 514, 515, 527, 529, 545, 559, 574, 605, 615, 656], "1723": 629, "175": 447, "1791": 447, "1792": 447, "18": [447, 454, 493, 506, 515, 572, 574, 605, 626], "182": 502, "187": 629, "188": 629, "18th": 527, "19": [447, 454, 515, 526, 529, 546, 559, 574, 605, 620, 626], "191": 447, "1967": 629, "1980": 596, "1981": 516, "1984": 629, "1987": 516, "1989": 526, "199": 502, "1991": 596, "1994": 526, "19941610": 582, "19950410": 584, "19950623": 582, "19950814": 582, "19951122": 584, "19960307": [577, 582], "19961031": 584, "19970604": 582, "19970605": 577, "19970606": 577, "19990604": 582, "19990903": [577, 584], "1a": 581, "1afp10": 446, "1b": 561, "1cleanup": 519, "1cy": 493, "1d": 445, "1d_arrai": 445, "1dx": 514, "1g": [509, 547], "1gb": 591, "1svn": 551, "1u": 605, "2": [14, 16, 17, 19, 21, 26, 27, 28, 33, 36, 40, 46, 47, 52, 58, 62, 67, 74, 75, 81, 82, 89, 90, 94, 99, 103, 108, 109, 110, 111, 112, 114, 115, 117, 123, 124, 125, 128, 132, 136, 137, 139, 141, 154, 155, 164, 165, 166, 167, 175, 176, 177, 178, 182, 185, 189, 194, 195, 196, 198, 199, 201, 207, 208, 210, 211, 212, 213, 217, 219, 221, 222, 225, 231, 232, 233, 237, 243, 250, 257, 258, 264, 265, 266, 272, 273, 274, 275, 279, 282, 286, 291, 292, 313, 332, 338, 340, 344, 346, 347, 349, 351, 356, 357, 358, 363, 366, 370, 376, 377, 378, 382, 388, 392, 397, 404, 405, 411, 412, 413, 419, 420, 421, 422, 426, 428, 431, 435, 440, 441, 442, 444, 445, 446, 447, 449, 450, 451, 452, 453, 454, 456, 460, 462, 463, 464, 467, 468, 472, 481, 483, 484, 491, 493, 494, 497, 498, 502, 506, 510, 511, 513, 514, 515, 516, 517, 518, 519, 521, 523, 526, 527, 529, 531, 532, 533, 534, 535, 537, 538, 539, 544, 545, 546, 548, 551, 554, 559, 561, 563, 565, 568, 570, 571, 572, 573, 574, 576, 577, 579, 581, 582, 584, 585, 586, 587, 589, 592, 594, 596, 598, 599, 600, 602, 605, 610, 613, 615, 619, 620, 621, 622, 623, 624, 625, 626, 628, 629, 630, 631, 633, 635, 636, 637, 648, 650, 651, 652, 653, 654, 655, 656, 658, 659, 661, 662, 663, 664, 665, 668], "20": [54, 55, 384, 385, 446, 447, 454, 456, 462, 464, 467, 472, 492, 493, 515, 526, 529, 532, 548, 559, 561, 568, 572, 574, 605, 619, 630, 649, 650, 651, 652, 653, 654, 655, 656, 660, 661, 662, 663, 664, 665], "200": [447, 545, 628], "2000": [445, 447, 627], "20000": [610, 637], "200000e": [652, 663], "20000404": 582, "2002": 464, "20030901": 582, "2004": 464, "20040203": 584, "2008": [447, 534, 559, 596], "20091201": [577, 582], "2010": 462, "2011": [591, 596], "2012": [521, 589, 631], "2013": [564, 577, 589], "20140508": 582, "20140516": 577, "2015": [542, 561, 596], "2016": [510, 542, 591, 596, 628], "2017": [462, 521, 525, 529, 531, 540, 542, 561, 596, 630], "2018": [534, 559, 569, 606, 628], "2019": [459, 466, 542, 569, 591, 594], "2020": 532, "203": 502, "2047": [445, 447], "2048": [445, 447, 464, 561, 581, 602], "207": 447, "209": 502, "2097496": 502, "21": [55, 385, 446, 447, 454, 464, 514, 515, 544, 559, 572, 574, 591, 605, 626, 629], "2100": 447, "2101248": 502, "2105344": 502, "2105360": 502, "212": 458, "213": 458, "213336": 629, "214": 458, "2147483648": [559, 572], "215": 458, "216": 458, "217": 458, "2192": 619, "22": [442, 447, 454, 515, 559, 572, 574, 605, 613, 626, 629], "2200": 447, "2200g": 447, "223": 447, "224": 447, "225": 559, "225708": 629, "22c": 504, "23": [445, 447, 454, 464, 559, 605, 626, 648, 659], "2303": 447, "2304": 447, "231150": 605, "231154": 605, "23333": 524, "234": [446, 650, 661], "234000e": [650, 661], "23406408": 515, "23421e": 559, "234e2": 446, "235": 559, "236": 504, "239": 447, "24": [442, 445, 447, 454, 464, 466, 493, 502, 513, 559, 572, 589, 591, 601, 605, 626, 631, 651, 662], "240": [649, 660], "2400g": 447, "241": 504, "242": [521, 629], "2468601609": 559, "247": 559, "248": 589, "24a": 504, "24e8": 589, "24mb": 561, "25": [447, 454, 559, 587, 589, 619, 626, 628], "250": 591, "2500": 447, "250000e": 565, "253": 504, "254": 559, "255": [445, 446, 447, 464, 515, 559, 605, 648, 649, 650, 651, 652, 653, 654, 655, 656, 664], "2559": 447, "256": [445, 446, 447, 464, 521, 559, 574, 602, 605], "2560": 447, "257": [464, 559], "258": [464, 504], "2590": 456, "25mb": 561, "26": [447, 454, 502, 559, 572, 605], "260": 447, "2601000000": 629, "26096": 629, "260x": 447, "261": 504, "264": 502, "2692": 629, "27": [442, 447, 454, 572, 589], "271": 629, "272": [447, 493], "28": [447, 454, 514, 559, 572, 630], "281474976710654": 608, "2815": 447, "2816": 447, "2817": 589, "2882400000": 610, "29": [442, 447, 454, 464, 514, 559, 606, 626, 629], "290": 447, "2900": 559, "290x": 447, "2919": 589, "294": 502, "2963": 629, "297": 493, "2ap3": 521, "2b": 561, "2d": [445, 453], "2d_arrai": 445, "2d_msaa": 445, "2d_msaa_arrai": 445, "2gb": 606, "2n": 559, "2nd": [559, 561, 589, 615], "2u": 605, "2x": [543, 545, 561, 606], "2x3x4": 559, "3": [17, 37, 52, 58, 100, 104, 109, 115, 129, 139, 179, 186, 190, 195, 199, 211, 218, 222, 232, 237, 243, 276, 283, 287, 292, 347, 367, 377, 382, 388, 423, 432, 436, 441, 442, 444, 445, 446, 447, 453, 454, 456, 462, 463, 464, 467, 468, 472, 493, 497, 506, 509, 510, 511, 513, 514, 515, 517, 519, 522, 526, 527, 529, 531, 533, 534, 537, 538, 545, 547, 548, 549, 551, 554, 556, 559, 561, 565, 568, 570, 571, 572, 573, 574, 577, 579, 581, 584, 585, 587, 589, 593, 596, 598, 599, 600, 605, 606, 608, 615, 617, 619, 620, 622, 623, 625, 626, 627, 629, 630, 631, 633, 634, 636, 637, 648, 649, 651, 652, 653, 654, 655, 656, 658, 659, 662, 663, 664, 665, 668], "30": [47, 137, 233, 378, 445, 447, 454, 464, 492, 493, 502, 559, 561, 572, 600, 605, 606, 619, 626, 630, 653, 654, 655, 656, 661, 664, 665], "300": [472, 493, 559, 660], "3000": [447, 589], "302": 620, "305064": 518, "306": 493, "3069": 629, "3071": 447, "3072": 447, "30pm": 631, "31": [46, 91, 136, 179, 195, 231, 276, 376, 423, 442, 445, 447, 454, 464, 545, 559, 606, 626], "31027": 545, "31337": [650, 661], "314": 493, "3148790418": 559, "31511": 561, "315994": 629, "32": [18, 23, 27, 28, 30, 39, 41, 43, 46, 47, 63, 94, 95, 96, 110, 111, 116, 120, 124, 125, 131, 136, 137, 141, 200, 204, 212, 213, 215, 224, 226, 228, 231, 233, 314, 318, 323, 338, 348, 353, 357, 358, 360, 369, 371, 373, 376, 378, 393, 426, 427, 444, 445, 446, 451, 453, 454, 456, 462, 464, 468, 478, 493, 502, 510, 511, 513, 514, 519, 520, 521, 529, 531, 534, 546, 557, 559, 561, 565, 572, 576, 577, 579, 582, 584, 598, 599, 602, 605, 606, 608, 613, 615, 617, 623, 626, 629, 630, 653, 655, 657, 664, 666], "32088": 629, "3213": 589, "3221225472": 509, "324": 515, "32768": [22, 47, 76, 119, 137, 156, 203, 233, 259, 352, 378, 406, 581], "32bit": 655, "33": [454, 572, 600, 620, 626], "3327": 447, "3328": 447, "3340b": 447, "335": 577, "3363": 629, "339450": 619, "34": [454, 514, 626], "345": 589, "35": [447, 454, 493, 559, 589], "350": 593, "351": [447, 593], "352": [447, 593], "357": 593, "358": 593, "3583": 447, "359": 593, "36": [447, 454, 572, 606], "360": [593, 629], "362": 593, "363": 593, "36652": 629, "367": 593, "37": [454, 464, 559, 629], "370": 593, "371": 593, "3714": 629, "372": 593, "376": 593, "38": [454, 458, 559, 629], "380": 447, "3800": 447, "381": 629, "3811": 561, "3827": 561, "383": 447, "384": 447, "385": 447, "387": 559, "39": [447, 454, 559, 572], "392": 589, "39331465": 629, "39337525": 629, "3963": 561, "397": 515, "399": [493, 629], "3cy": 493, "3d": [445, 447], "3dnow": 655, "3dnowa": 655, "3g": 509, "3gb": 531, "3rd": [559, 561, 633], "3u": 605, "3x4": 559, "4": [17, 20, 24, 27, 29, 30, 31, 34, 41, 42, 43, 46, 47, 52, 60, 61, 64, 65, 68, 82, 91, 97, 101, 105, 109, 115, 118, 121, 124, 126, 127, 133, 134, 136, 137, 139, 145, 146, 147, 148, 167, 183, 187, 191, 195, 199, 202, 205, 208, 212, 214, 215, 216, 219, 226, 227, 228, 231, 233, 237, 245, 246, 247, 248, 251, 266, 280, 284, 288, 292, 315, 319, 331, 347, 350, 354, 357, 359, 360, 361, 364, 371, 372, 373, 376, 378, 382, 390, 394, 395, 398, 413, 429, 433, 437, 441, 442, 444, 445, 446, 447, 451, 453, 454, 462, 463, 464, 467, 468, 472, 473, 478, 481, 493, 502, 504, 506, 509, 510, 511, 513, 514, 515, 517, 518, 519, 521, 525, 526, 527, 529, 533, 534, 537, 538, 545, 546, 547, 549, 550, 554, 555, 559, 561, 563, 565, 567, 568, 569, 570, 571, 572, 573, 574, 576, 577, 579, 580, 581, 584, 585, 586, 587, 589, 594, 596, 600, 605, 606, 608, 610, 615, 617, 619, 620, 622, 623, 625, 626, 629, 630, 631, 633, 634, 637, 648, 649, 650, 652, 653, 654, 655, 656, 658, 659, 660, 661, 663, 664, 665], "40": [447, 454, 464, 492, 496, 514, 521, 527, 559, 648, 649, 650, 651, 652, 653, 654, 655, 656, 659, 660, 661, 662, 663, 664, 665], "400": [498, 649], "4000": [445, 447], "40000": 498, "40219": 546, "403": 619, "40535375": 629, "4095": [445, 559, 561, 581], "4096": [445, 559, 581, 584], "4097": 581, "4098": 581, "4099": 581, "40kib": 545, "40th": [648, 659], "41": [454, 545, 559], "410": 559, "412": 502, "415": 447, "416": 447, "4167": 561, "41m": 509, "42": [453, 454, 464, 467, 487, 493, 506, 513, 514, 521, 559, 562, 565, 572, 589, 648, 652, 653, 657, 659, 663, 664, 666], "421": 559, "423325": 619, "429": 559, "43": [447, 454, 464, 653, 664], "434": 589, "4377547752858689819": 559, "44": [447, 454, 493, 559, 581, 627], "446": 629, "447": 447, "448": 447, "449": 447, "45": [454, 572, 648, 650, 659], "450": 447, "451": 447, "452": 447, "453": 447, "454": 447, "455": 447, "456": [619, 653, 664], "457": 447, "458": 447, "4584": 629, "459": 447, "46": [454, 629, 653, 664], "460": 447, "463": 447, "463331": 629, "463340": 629, "464": [447, 619], "47": [447, 454, 493, 559, 606, 615, 620], "470": 447, "470948": 629, "472618": 629, "474": 619, "48": [447, 454, 464, 493, 502, 584, 623], "480": 447, "49": [454, 589], "4b": 561, "4gib": 521, "4k": 464, "4kib": 581, "4th": [464, 559], "4u": 605, "5": [46, 136, 231, 376, 445, 446, 447, 454, 456, 462, 463, 464, 468, 473, 493, 502, 506, 509, 510, 513, 514, 515, 518, 526, 529, 532, 534, 537, 538, 545, 546, 551, 554, 559, 561, 565, 569, 570, 571, 572, 574, 577, 581, 584, 587, 589, 596, 597, 600, 605, 610, 615, 616, 619, 620, 623, 625, 626, 627, 629, 630, 631, 633, 634, 636, 648, 649, 650, 651, 653, 654, 655, 656, 658, 659, 660, 661, 662, 664], "50": [454, 492, 493, 529, 606, 619], "500": 493, "5000": [447, 545], "503": 593, "5046": 589, "506": [619, 629], "507": 593, "508": [559, 619], "51": [46, 136, 231, 376, 447, 454, 493, 544, 620], "5100": 447, "511": 447, "512": [447, 559, 581, 598, 602], "513": 447, "51440360": 629, "52": [447, 454, 559, 620], "5200": 447, "521": 593, "527": 593, "53": [454, 559, 581], "5312": 561, "532": 589, "5321": 591, "54": [454, 493, 619, 629], "5434426023268520": 629, "5434426023523052": 629, "5434426029925386": 629, "5434426030031128": 629, "5434426046951388": 629, "5434426047282020": 629, "5434426047857332": 629, "5434426047984152": 629, "5434426048036584": 629, "5434426048042292": 629, "5434426048055056": 629, "5434426048067316": 629, "547": 545, "548": 593, "549": 593, "55": [454, 559, 600, 627], "5500": 447, "554": 593, "556": 504, "56": [447, 454, 502], "5600": 447, "5600m": 447, "563098": 619, "566": 504, "57": 454, "5700": 447, "577": 504, "58": 454, "58421550": 629, "586": 504, "59": [454, 464, 493], "590": 456, "595": 504, "59620e187c6ac38b36382685ccd2b63b": 619, "5b": 502, "5e": 559, "5l": 511, "5rqxku": 629, "5th": 559, "5u": 605, "5x": [543, 606], "6": [46, 52, 109, 136, 139, 195, 231, 237, 292, 376, 382, 441, 442, 445, 447, 463, 464, 468, 492, 493, 502, 506, 510, 513, 514, 515, 526, 529, 534, 545, 549, 550, 551, 554, 559, 561, 570, 571, 572, 574, 577, 581, 584, 586, 589, 596, 598, 600, 605, 615, 617, 620, 623, 626, 627, 629, 630, 648, 649, 650, 652, 654, 655, 656, 658, 659, 660, 665], "60": [454, 492, 581], "600": [498, 504], "6000": 447, "60000": 498, "603": 593, "609": 504, "61": 454, "610": 493, "62": [454, 606], "621": 593, "626": 591, "62635": 629, "626455": 629, "627": 593, "628": 593, "6295592": 506, "63": [46, 109, 136, 231, 376, 441, 447, 454, 606, 610, 615], "638838075": 559, "64": [16, 19, 27, 28, 40, 62, 94, 96, 112, 114, 117, 124, 125, 132, 198, 201, 212, 213, 225, 332, 338, 346, 349, 357, 358, 370, 392, 426, 444, 445, 446, 451, 453, 454, 456, 462, 464, 468, 478, 487, 493, 495, 510, 511, 519, 520, 521, 527, 529, 531, 554, 559, 561, 565, 571, 572, 576, 577, 579, 584, 589, 602, 604, 605, 608, 610, 613, 615, 623, 626, 629, 648, 656, 657, 659, 666], "648": 593, "649": 593, "64bit": [559, 565, 599], "64k": 577, "65": [447, 454, 464, 493], "654": 593, "65500": 446, "65535": [22, 47, 76, 93, 119, 137, 156, 181, 203, 233, 259, 278, 352, 378, 406, 425, 445, 559], "65600": 446, "66": [447, 454, 600], "66ghz": 546, "67": [454, 648, 659], "672368": 629, "68": 454, "680": 572, "69819": 629, "6b": 561, "6th": 559, "7": [52, 58, 91, 109, 139, 179, 195, 237, 243, 276, 292, 382, 388, 423, 441, 442, 445, 446, 447, 454, 455, 456, 463, 468, 493, 497, 510, 511, 514, 515, 526, 529, 531, 534, 545, 546, 549, 550, 551, 554, 559, 561, 565, 571, 572, 573, 574, 577, 581, 584, 586, 587, 589, 591, 596, 600, 605, 610, 615, 619, 621, 625, 627, 629, 630, 631, 633, 650, 652, 653, 655, 656, 658, 659, 663], "70": [456, 464, 492, 619, 627, 631], "700": [659, 666], "7000": 447, "7004155349499253778": 559, "703": 526, "705": 526, "7050b": 447, "71": 559, "7100": 447, "7150b": 447, "72": [493, 502], "7200p": 447, "725": 589, "7300": 447, "7350b": 447, "74": [493, 559, 606, 620], "7400p": 447, "75": [559, 589, 619, 627, 629], "7500": [447, 561], "754": [447, 534, 559], "756": 593, "7600p": 447, "7646": 589, "7651369219802541373": 559, "768": 447, "769": 447, "77": [493, 561, 608], "7790": 447, "77x": 606, "78": [608, 629, 653, 664], "789": [653, 664], "79": [447, 529], "7942": 561, "7976922776554302e308": 446, "7976931348623157e308": 446, "7c": 493, "7e15": 509, "7foo_bar": 483, "7th": 559, "7ykb2k5f": 489, "8": [17, 52, 61, 69, 109, 115, 139, 141, 146, 149, 195, 199, 237, 246, 252, 292, 347, 382, 391, 399, 441, 442, 444, 445, 446, 447, 451, 453, 454, 455, 456, 463, 464, 468, 493, 494, 502, 506, 510, 513, 514, 515, 518, 519, 521, 527, 529, 531, 534, 545, 546, 547, 549, 551, 554, 559, 565, 568, 571, 572, 573, 574, 576, 577, 579, 581, 584, 589, 591, 596, 598, 600, 602, 604, 605, 606, 608, 610, 613, 617, 619, 625, 626, 629, 630, 631, 652, 653, 654, 656, 658, 659, 664], "80": [454, 456, 467, 492, 493, 498, 559, 584], "8000": 581, "8011": [528, 546], "8014": 546, "80386": [451, 655], "80f351b51825": 518, "80x86": 546, "80x87": 464, "81": 492, "8191": 581, "82": 502, "83": [492, 629], "83348": 619, "841471": [651, 662], "85": 629, "8500b": 447, "8500p": 447, "86": [589, 619], "8600b": 447, "8600p": 447, "87": [464, 589], "8700b": 447, "8700p": 447, "8770": 447, "8780p": 447, "88": [447, 629], "8800b": 447, "8800p": 447, "89": 619, "896800": 619, "8gib": 521, "8x": 606, "9": [52, 139, 237, 382, 442, 446, 447, 450, 454, 463, 464, 468, 493, 506, 510, 514, 515, 517, 518, 529, 545, 549, 552, 554, 559, 561, 565, 566, 572, 573, 574, 577, 581, 586, 589, 591, 596, 599, 600, 605, 606, 616, 619, 620, 621, 626, 648, 649, 650, 651, 652, 653, 654, 655, 658, 659, 660, 661, 662, 663, 664, 665], "90": [467, 492, 502, 619, 629], "900": 493, "9000": 581, "9010": 447, "9015": 561, "90p": 629, "91": [502, 526], "92": [467, 502, 598], "9210": 447, "928": 619, "93": 559, "930803": 577, "9410": 447, "95": 447, "96": 447, "9600p": 447, "9630p": 447, "9633790": 629, "97": 559, "9700p": 447, "9730p": 447, "97724f18c79c": 532, "9800p": 447, "9830p": 447, "989": 565, "99": [552, 566, 576, 600, 605, 607], "9990": 546, "9994": 546, "999999999": 600, "99p": 629, "9_": [446, 468], "9a": [446, 468], "9b": 561, "A": [16, 19, 20, 22, 44, 45, 47, 52, 58, 94, 109, 114, 117, 118, 119, 135, 137, 139, 195, 198, 201, 202, 203, 229, 230, 232, 233, 237, 243, 292, 338, 346, 349, 350, 352, 374, 375, 377, 378, 382, 388, 426, 441, 442, 443, 445, 446, 447, 450, 451, 453, 454, 455, 461, 462, 463, 464, 466, 467, 468, 470, 472, 476, 481, 493, 494, 497, 500, 501, 502, 504, 506, 509, 511, 512, 513, 514, 516, 517, 519, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 537, 538, 539, 542, 543, 545, 548, 549, 550, 551, 555, 558, 559, 561, 562, 563, 565, 566, 569, 570, 571, 573, 574, 577, 579, 580, 582, 584, 585, 587, 591, 592, 594, 596, 597, 598, 600, 601, 602, 603, 605, 607, 608, 610, 613, 615, 616, 617, 619, 622, 624, 625, 626, 627, 628, 630, 631, 632, 633, 634, 635, 636, 637, 648, 658, 659, 660, 661, 662, 663, 664, 665, 667], "AND": [447, 451, 464, 516, 559, 625], "AS": 442, "AT": [473, 474, 493, 496, 521], "And": [459, 462, 467, 509, 526, 527, 555, 559, 562, 570, 571, 573, 581, 589, 605, 606, 611, 613, 621, 625, 626, 627, 631, 634, 637, 652, 656], "As": [442, 446, 447, 449, 450, 451, 454, 455, 459, 460, 463, 464, 467, 468, 472, 493, 497, 509, 510, 513, 514, 516, 517, 519, 520, 524, 526, 527, 528, 529, 532, 533, 535, 536, 538, 545, 548, 549, 552, 558, 559, 560, 561, 562, 563, 565, 566, 570, 571, 572, 573, 575, 579, 580, 581, 589, 591, 592, 594, 598, 603, 604, 605, 606, 608, 610, 611, 615, 617, 621, 622, 626, 627, 628, 631, 633, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 659, 660, 661, 662, 663, 664, 665, 666], "At": [447, 449, 457, 458, 464, 479, 481, 493, 496, 509, 515, 520, 526, 529, 538, 539, 549, 553, 559, 564, 570, 571, 577, 581, 582, 584, 585, 589, 603, 605, 608, 610, 614, 617, 620, 623, 626, 628, 629, 631, 634, 635, 649, 650, 651, 652, 653, 654, 655, 656, 657, 660, 662, 663, 664, 665, 666], "Be": [448, 462, 464, 465, 467, 524, 559, 561, 589, 627], "Being": [442, 465, 517, 559, 588, 654, 665], "But": [442, 447, 453, 464, 467, 510, 527, 550, 559, 566, 568, 571, 577, 589, 593, 605, 606, 607, 615, 626, 631, 651], "By": [445, 448, 449, 460, 462, 464, 467, 468, 469, 470, 472, 473, 474, 476, 481, 487, 493, 497, 498, 505, 509, 517, 529, 531, 545, 548, 554, 557, 559, 561, 570, 572, 573, 584, 587, 589, 590, 600, 605, 610, 611, 622, 625, 627, 628, 629, 635, 650, 651, 653, 658, 659, 661], "For": [1, 5, 6, 7, 8, 215, 226, 228, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 462, 463, 464, 465, 466, 467, 468, 469, 472, 473, 474, 476, 481, 483, 486, 487, 493, 495, 496, 497, 498, 502, 505, 507, 509, 510, 512, 513, 514, 516, 517, 519, 520, 521, 522, 523, 525, 526, 527, 530, 531, 533, 535, 539, 541, 543, 545, 547, 550, 551, 552, 553, 554, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577, 581, 582, 585, 586, 587, 588, 589, 590, 591, 592, 594, 596, 598, 599, 600, 602, 603, 605, 606, 607, 608, 610, 611, 613, 615, 616, 617, 619, 620, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666], "IF": [447, 589, 625], "IFs": 625, "IN": [463, 516], "IT": 464, "If": [14, 17, 24, 25, 26, 27, 28, 31, 32, 33, 38, 52, 55, 112, 121, 122, 123, 124, 125, 130, 139, 141, 196, 205, 206, 207, 212, 213, 223, 237, 313, 322, 344, 354, 355, 356, 357, 358, 361, 362, 363, 368, 382, 385, 442, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 472, 473, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 490, 491, 493, 494, 495, 496, 498, 500, 501, 502, 504, 505, 506, 507, 508, 509, 510, 512, 513, 514, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 537, 538, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 570, 572, 573, 574, 577, 579, 580, 585, 587, 588, 589, 590, 591, 592, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 610, 611, 613, 615, 616, 617, 619, 620, 621, 622, 623, 624, 627, 628, 629, 630, 631, 633, 634, 635, 648, 649, 650, 651, 653, 654, 655, 656, 657, 659, 660, 661, 662, 664, 665, 666], "In": [442, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 456, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 472, 480, 481, 488, 493, 495, 497, 498, 509, 510, 512, 513, 514, 515, 516, 517, 519, 520, 521, 523, 524, 525, 527, 529, 531, 532, 533, 534, 537, 538, 539, 541, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 568, 570, 571, 572, 573, 574, 576, 577, 580, 581, 582, 584, 585, 587, 588, 589, 590, 591, 593, 594, 596, 598, 600, 601, 602, 603, 605, 606, 608, 609, 610, 611, 615, 616, 617, 620, 621, 622, 623, 625, 626, 627, 629, 630, 631, 633, 634, 635, 637, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666], "Into": 588, "It": [39, 40, 56, 59, 131, 132, 142, 144, 224, 225, 241, 244, 323, 329, 330, 369, 370, 386, 389, 442, 445, 446, 447, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 472, 473, 474, 476, 477, 478, 480, 481, 482, 484, 485, 488, 490, 492, 493, 494, 497, 499, 500, 501, 502, 507, 508, 509, 510, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 538, 539, 541, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 559, 560, 561, 562, 563, 564, 565, 566, 568, 569, 570, 571, 572, 573, 577, 580, 581, 582, 584, 585, 587, 588, 589, 590, 591, 592, 594, 596, 598, 599, 600, 602, 603, 605, 606, 607, 608, 610, 611, 613, 615, 616, 617, 619, 620, 621, 622, 626, 627, 630, 631, 633, 634, 635, 636, 637, 648, 649, 650, 651, 652, 653, 654, 656, 657, 659, 660, 661, 662, 663, 664, 665, 666], "Its": [442, 454, 462, 509, 516, 526, 559, 562, 565, 570, 593, 603, 623, 630, 648, 651, 659], "NO": 526, "NOT": [547, 559, 574, 621], "Near": 584, "No": [444, 447, 451, 464, 468, 474, 476, 495, 509, 515, 517, 519, 522, 526, 527, 529, 534, 539, 548, 559, 560, 582, 605, 610, 619, 626], "Not": [442, 445, 447, 454, 463, 464, 465, 468, 470, 495, 498, 509, 517, 519, 521, 526, 559, 562, 563, 584, 599, 603, 606, 626, 627, 630, 652, 656, 663], "ON": [452, 462, 518, 525, 529, 549, 561, 619, 627], "OR": [464, 559, 625], "ORE": 594, "Of": [478, 524, 539, 564, 571, 573, 589, 634], "On": [442, 445, 447, 449, 451, 452, 453, 460, 462, 464, 467, 472, 482, 493, 495, 505, 510, 512, 519, 523, 524, 525, 526, 529, 541, 549, 557, 559, 562, 571, 573, 576, 588, 589, 599, 606, 608, 611, 613, 621, 624, 630, 631, 633, 635, 650, 651, 653, 661, 662, 664], "One": [442, 445, 447, 450, 451, 453, 457, 458, 460, 462, 463, 464, 467, 468, 470, 494, 506, 509, 513, 518, 524, 526, 527, 529, 531, 532, 533, 539, 556, 559, 561, 563, 569, 570, 571, 573, 576, 579, 584, 585, 589, 591, 592, 605, 606, 610, 616, 627, 629, 631, 649, 650, 651, 652, 653, 656, 657, 658, 660, 661, 662, 663, 664, 665, 666], "Or": [442, 447, 467, 468, 493, 526, 528, 529, 544, 545, 559, 571, 573, 591, 602, 605, 631, 649, 660], "Such": [442, 445, 447, 451, 464, 467, 509, 513, 517, 524, 559, 572, 589, 591, 603, 605, 606, 611], "THEN": 447, "That": [442, 451, 452, 453, 460, 463, 464, 466, 467, 493, 513, 517, 526, 527, 529, 532, 533, 544, 551, 552, 557, 558, 559, 563, 567, 570, 571, 573, 589, 591, 606, 610, 611, 616, 626, 631, 651, 657, 666], "The": [22, 23, 44, 45, 46, 47, 52, 58, 76, 93, 109, 119, 120, 135, 136, 137, 139, 156, 181, 195, 203, 204, 229, 230, 231, 232, 233, 237, 243, 259, 278, 292, 352, 353, 374, 375, 376, 377, 378, 382, 388, 406, 425, 441, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 483, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 525, 528, 531, 532, 533, 534, 535, 536, 537, 538, 539, 541, 543, 545, 546, 547, 548, 550, 553, 555, 556, 557, 558, 561, 562, 563, 564, 565, 566, 567, 569, 571, 573, 574, 575, 576, 586, 587, 588, 590, 592, 593, 594, 595, 597, 598, 599, 601, 602, 603, 604, 605, 607, 608, 609, 610, 611, 612, 613, 614, 616, 618, 619, 620, 621, 622, 623, 624, 628, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 650, 651, 652, 653, 654, 655, 656, 657, 658, 661, 662, 663, 664, 665, 666], "Their": [442, 535, 559, 589, 606, 615], "Then": [442, 446, 447, 458, 464, 509, 512, 519, 537, 545, 546, 552, 553, 557, 559, 561, 562, 563, 567, 571, 587, 588, 589, 600, 605, 606, 609, 626, 627, 651, 653, 654, 655, 656, 664, 665], "There": [215, 226, 228, 442, 444, 445, 446, 447, 450, 451, 453, 454, 456, 457, 460, 462, 463, 464, 466, 467, 468, 493, 495, 498, 509, 510, 512, 513, 514, 516, 517, 519, 520, 521, 522, 525, 526, 527, 529, 531, 533, 534, 535, 536, 537, 538, 539, 540, 545, 546, 547, 549, 550, 554, 557, 558, 559, 561, 563, 565, 566, 569, 571, 572, 573, 575, 580, 582, 587, 589, 590, 591, 592, 594, 595, 600, 605, 606, 610, 611, 613, 614, 617, 619, 620, 621, 622, 626, 627, 628, 630, 631, 649, 650, 653, 654, 656, 657, 660, 661, 662, 664, 665, 666], "These": [109, 195, 292, 441, 442, 444, 445, 446, 447, 450, 451, 453, 454, 455, 458, 460, 461, 462, 464, 467, 468, 469, 471, 472, 473, 481, 486, 489, 493, 501, 506, 509, 510, 513, 516, 517, 520, 521, 524, 525, 526, 527, 529, 533, 534, 535, 545, 548, 551, 555, 556, 558, 559, 561, 563, 565, 572, 573, 574, 586, 587, 589, 590, 591, 593, 594, 595, 596, 600, 603, 605, 606, 608, 610, 611, 613, 615, 617, 619, 621, 623, 625, 626, 627, 628, 630, 633, 634, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 659, 660, 662, 666], "To": [442, 444, 447, 449, 450, 451, 452, 453, 456, 458, 462, 463, 464, 465, 466, 467, 468, 469, 471, 480, 481, 487, 491, 493, 495, 496, 502, 504, 505, 507, 509, 510, 512, 513, 518, 519, 522, 524, 525, 526, 527, 528, 529, 531, 532, 533, 537, 538, 544, 545, 549, 552, 553, 554, 557, 559, 560, 561, 562, 563, 567, 570, 571, 572, 573, 574, 577, 587, 588, 589, 590, 591, 597, 598, 601, 605, 606, 607, 608, 609, 610, 611, 615, 617, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 649, 650, 651, 652, 653, 654, 655, 656, 657, 660, 661, 662, 663, 664, 665, 666], "WITH": [467, 633, 634, 635, 636, 637], "Will": [561, 563, 592], "With": [442, 450, 452, 454, 463, 464, 468, 476, 477, 478, 485, 488, 490, 507, 509, 513, 527, 531, 552, 557, 559, 560, 561, 573, 591, 592, 594, 600, 602, 605, 617, 623, 624, 628, 631, 635, 648, 649, 650, 651, 652, 653, 654, 656, 658, 659, 660, 661, 662, 663, 664, 665], "_": [447, 454, 482, 495, 534, 535, 538, 554, 559, 565, 573, 594, 607, 616, 619, 660, 661, 662, 663, 664, 665], "_0": [559, 565], "__1": 483, "__active_lane_pc": 447, "__aeabi_": 511, "__annot": 559, "__anon_expr": [649, 650, 651, 652, 653, 654, 655, 656], "__apple_nam": 605, "__apple_namespac": 605, "__apple_objc": 605, "__apple_typ": 605, "__asm": 493, "__atomic_compare_exchang": 451, "__atomic_compare_exchange_n": 451, "__atomic_exchang": 451, "__atomic_exchange_n": 451, "__atomic_fetch_add_n": 451, "__atomic_fetch_and_n": 451, "__atomic_fetch_nand_n": 451, "__atomic_fetch_or_n": 451, "__atomic_fetch_sub_n": 451, "__atomic_fetch_xor_n": 451, "__atomic_load": 451, "__atomic_load_n": 451, "__atomic_stor": 451, "__atomic_store_n": 451, "__attribute__": [510, 598, 605, 623, 628], "__bf16": 598, "__bitcod": 454, "__bss": 494, "__builtin_eh_return": 519, "__builtin_expect": 456, "__builtin_expect_with_prob": 456, "__builtin_longjmp": 519, "__builtin_setjmp": 519, "__builtin_trap": 561, "__c_specific_handl": 519, "__chkstk": 521, "__clang__": 510, "__clear_cach": 559, "__cuda__": 510, "__cuda_arch__": 510, "__cuda_ftz": 572, "__cudacc__": 510, "__cxa_allocate_except": 519, "__cxa_begin_catch": 519, "__cxa_call_unexpect": 519, "__cxa_demangl": 525, "__cxa_end_catch": 519, "__cxa_rethrow": 519, "__cxa_throw": 519, "__cxx11": 483, "__cxx_": 629, "__cxx_global_var_init": 629, "__cxxframehandler3": 519, "__cxxthrowexcept": 519, "__data": [494, 502, 559], "__declspec": [651, 652, 653, 654, 655, 656], "__divergent_lane_pc": 447, "__divergent_lane_pc_1_1_els": 447, "__divergent_lane_pc_1_1_then": 447, "__divergent_lane_pc_1_els": 447, "__divergent_lane_pc_1_then": 447, "__dwarf": 605, "__eh_fram": 464, "__except": 519, "__fastcal": 559, "__gcmap_": 526, "__global__": 510, "__gwp_asan_default_opt": 545, "__gxx_personality_v0": 519, "__has_attribut": 613, "__i386__": [657, 666], "__image_info": 559, "__imp_": 559, "__int128": 598, "__internal_accurate_powf": 572, "__jit_debug_register_cod": 515, "__kmpc_fork_cal": 559, "__lex_1_1_save_exec": 447, "__lex_1_save_exec": 447, "__libc_start_main": 545, "__libunwind_config": 519, "__llvm": [454, 600], "__llvm__": 559, "__llvm_coverage_map": 514, "__llvm_covmap": 514, "__llvm_deoptim": 559, "__llvm_faultmap": 523, "__llvm_memcpy_element_unordered_atomic_": 559, "__llvm_memmove_element_unordered_atomic_": 559, "__llvm_memset_element_unordered_atomic_": 559, "__llvm_stackmap": 608, "__main": 627, "__morestack": 604, "__next__": 513, "__nv_isinff": 572, "__nv_isnanf": 572, "__nv_powf": 572, "__nv_truncf": 572, "__nvcc__": 510, "__objc": [502, 559], "__objc_imageinfo": 559, "__profn_foo": 514, "__remark": [473, 600], "__scudo_default_opt": 602, "__stack_chk_fail": [559, 565], "__stack_chk_guard": 559, "__stdcall": 559, "__sync_fetch_and_add_n": 451, "__sync_fetch_and_and_n": 451, "__sync_fetch_and_max_n": 451, "__sync_fetch_and_min_n": 451, "__sync_fetch_and_nand_n": 451, "__sync_fetch_and_or_n": 451, "__sync_fetch_and_sub_n": 451, "__sync_fetch_and_umax_n": 451, "__sync_fetch_and_umin_n": 451, "__sync_fetch_and_xor_n": 451, "__sync_lock_test_and_set_n": 451, "__sync_synchron": 451, "__sync_val_compare_and_swap_n": 451, "__syncthread": 572, "__text": [464, 494, 502, 619], "__text_exec": 494, "__try": 519, "__uint64": 447, "__uint_64": 447, "__unwind_info": 464, "__vectorcal": 559, "__xray_log_fin": 628, "__xray_log_flushlog": 628, "__xray_log_init_mod": 628, "__xray_log_process_buff": 628, "__xray_log_register_mod": 628, "__xray_log_select_mod": 628, "__xray_log_set_buffer_iter": 628, "__xray_patch": 628, "_aligna": 605, "_args_": 463, "_b128": 444, "_b16": 444, "_b256": 444, "_b32": 444, "_b512": 444, "_b64": 444, "_b8": 444, "_binary_": 495, "_bool": [654, 665], "_bootstrap_default_passthrough": 449, "_buffer": 447, "_crit_edg": 559, "_cuda_ftz": 572, "_cxxthrowexcept": 519, "_dcleanup": 519, "_division_by_zero": 447, "_dpp": [444, 447], "_e32": [444, 447], "_e64": [444, 447], "_end": 495, "_except_handler3": 519, "_except_handler4": 519, "_f16": 444, "_f32": 444, "_f64": 444, "_flag": 463, "_flags_": 463, "_flags_relwithdebinfo": 460, "_function_nam": 521, "_how": 466, "_i": 498, "_i16": 444, "_i32": 444, "_i64": 444, "_i8": 444, "_i_bitcast": 538, "_inexact": 447, "_info": 447, "_init": 447, "_inv": 447, "_invalid_oper": 447, "_invl": 447, "_is_": 559, "_link_into_tool": 627, "_m4enum": 559, "_main": [506, 573, 668], "_name_": 463, "_overflow": 447, "_p1": 605, "_p3": 605, "_padding_record": 576, "_r0h": 519, "_regoffset": 617, "_ri": 615, "_rr": 615, "_runtim": 608, "_sdwa": [444, 447], "_segment_buff": 447, "_segment_ptr": 447, "_segment_wavefront_offset": 447, "_size": [447, 495], "_sourc": 447, "_source_dir": 462, "_start": [495, 545], "_tag": [660, 661, 662, 663, 664, 665], "_trunc": 534, "_ty": 520, "_u16": 444, "_u32": 444, "_u64": 444, "_u8": 444, "_underflow": 447, "_unwind_resum": 519, "_var": 463, "_void": 534, "_vol": 447, "_w_side_effect": 534, "_wavefront_offset": 447, "_win32": [611, 651, 652, 653, 654, 655, 656], "_workgroup_count_i": 447, "_workgroup_count_x": 447, "_workgroup_count_z": 447, "_x": 447, "_y": 447, "_z": 447, "_z3bari": 482, "_z3bazv": 506, "_z3foo3barv": 483, "_z3foov": [482, 559], "_z4leaki": 606, "_z5hellov": 504, "_zero": 447, "_zfoov": 559, "_zgv": 559, "_zn1a1nei": 559, "_zst1a": 623, "_zstlsicst11char_traitsiceerst13basic_ostreamit_t0_es6_st17basic_string_viewis3_s4_": 545, "_ztid": 559, "_ztii": 559, "_zts1a": [559, 623], "_zts1b": 623, "_zts1c": 623, "_zts1d": 623, "_ztv1a": 623, "_ztv1b": 623, "_ztv1c": 623, "_ztv1d": 623, "_ztv3bar": 468, "_ztv3foo": 468, "a0463440": 468, "a0463443": 468, "a1": [464, 473, 474, 496, 517, 573, 615, 623, 625], "a10": 447, "a12": 447, "a15": 547, "a16": [4, 17, 347], "a2": [464, 473, 474, 496, 517, 559, 573, 615, 623, 625], "a252": 446, "a253": 446, "a254": 446, "a255": 446, "a3": [464, 473, 474, 496, 517, 559], "a32": 453, "a34": 598, "a4": [447, 464], "a57": 511, "a6": 447, "a64": 453, "a77": 598, "a78": 598, "a8": [447, 555], "a9": [447, 550], "a_ctor_bas": 468, "aa": [451, 559, 627], "aa32bf16": 598, "aad": 464, "aad8i8": 464, "aapc": 559, "aarch32": 511, "aarch64": [453, 461, 495, 525, 529, 533, 541, 543, 547, 554, 559, 565, 569, 594, 602, 608, 613, 626, 628], "aarch64registerinfo": 565, "ab": [49, 51, 138, 234, 236, 294, 299, 304, 306, 325, 327, 379, 381, 572], "abandon": [543, 589, 650], "abbrev": [454, 486], "abbrevi": [447, 467, 478, 486, 560, 594], "abbrevid": [454, 600], "abbrevop0": 454, "abbrevop1": 454, "abbrevwidth": 454, "abc": [442, 559], "abcd": 454, "abcdillnoopsstuuvv": 476, "abi": [442, 453, 461, 462, 476, 483, 513, 517, 521, 522, 529, 533, 535, 540, 549, 550, 551, 557, 559, 572, 586, 587, 598, 605, 608, 621, 623, 626, 651, 655, 656, 657, 662, 666], "abid": [8, 603], "abil": [442, 464, 465, 507, 509, 515, 520, 524, 526, 539, 554, 559, 567, 589, 590, 591, 592, 598, 605, 606, 631, 648, 652, 653, 654, 659, 663, 664, 665], "abl": [442, 447, 450, 452, 458, 459, 464, 466, 467, 468, 472, 493, 495, 505, 509, 510, 513, 514, 517, 522, 524, 526, 527, 529, 530, 532, 534, 535, 538, 539, 550, 553, 557, 558, 559, 560, 562, 566, 573, 585, 589, 591, 592, 596, 598, 600, 601, 603, 605, 606, 607, 608, 610, 615, 622, 625, 626, 627, 628, 631, 634, 651, 652, 653, 656, 657, 662, 663, 664, 666], "abnorm": [513, 524, 611], "abort": [458, 464, 467, 519, 532, 559, 589, 615], "abort_on_error": 602, "about": [442, 444, 446, 447, 450, 451, 454, 455, 459, 460, 462, 463, 464, 466, 467, 468, 470, 472, 473, 478, 490, 491, 493, 494, 497, 498, 500, 501, 502, 509, 510, 513, 515, 517, 518, 519, 520, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 535, 537, 539, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 577, 579, 580, 581, 584, 585, 586, 587, 588, 589, 597, 598, 599, 600, 601, 602, 603, 605, 606, 607, 608, 610, 611, 613, 614, 615, 616, 619, 620, 622, 623, 624, 625, 626, 627, 628, 629, 634, 635, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666], "abov": [46, 52, 109, 136, 139, 195, 231, 232, 237, 292, 376, 377, 382, 441, 442, 444, 445, 446, 447, 450, 451, 453, 454, 455, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 473, 493, 506, 509, 510, 513, 517, 520, 522, 523, 524, 525, 526, 527, 529, 534, 538, 544, 548, 549, 550, 551, 552, 553, 554, 556, 559, 562, 563, 564, 565, 566, 567, 570, 571, 573, 574, 577, 587, 589, 590, 591, 592, 596, 599, 601, 603, 604, 605, 606, 607, 608, 610, 615, 620, 621, 623, 626, 627, 629, 631, 633, 648, 649, 650, 651, 652, 653, 654, 656, 657, 659, 660, 661, 662, 663, 664, 665, 666], "abs8": 521, "abs_f": 617, "abs_fp32": 617, "abs_fp64": 617, "abs_fp80": 617, "absenc": [458, 464, 493, 521, 606], "absent": [442, 468, 589], "absl": 483, "absolut": [46, 52, 109, 136, 139, 195, 231, 237, 292, 376, 382, 441, 445, 455, 462, 467, 468, 481, 494, 495, 497, 506, 520, 529, 533, 534, 550, 559, 577, 589, 600, 621, 626, 627, 630], "absolute_express": [22, 23, 44, 45, 46, 47, 52, 58, 76, 93, 109, 119, 120, 135, 136, 137, 139, 156, 181, 195, 203, 204, 229, 230, 231, 232, 233, 237, 243, 259, 278, 292, 352, 353, 374, 375, 376, 377, 378, 382, 388, 406, 425, 441], "absolute_tsc": 630, "absolutesymbol": 573, "abstract": [442, 464, 467, 516, 517, 519, 522, 552, 560, 562, 574, 587, 589, 600, 605, 617, 626, 627, 631, 648, 650, 651, 652, 653, 654, 655, 656, 659, 661, 662, 663, 664, 665], "absv16i8": 626, "absv1i64": 626, "abtu": 476, "abus": 589, "ac": [561, 594, 611], "academia": 517, "acc": [446, 447], "acc0": 446, "acc2": 446, "acc250": 446, "acc3": 446, "acceler": [470, 486, 551, 579, 657, 666], "accept": [442, 445, 447, 459, 463, 465, 467, 468, 481, 483, 494, 495, 509, 512, 513, 517, 518, 521, 522, 525, 529, 531, 533, 538, 544, 551, 552, 559, 561, 567, 571, 572, 588, 589, 598, 606, 609, 615, 616, 621, 637], "access": [46, 136, 231, 376, 445, 446, 450, 451, 453, 462, 466, 479, 481, 494, 495, 505, 509, 512, 513, 516, 518, 519, 520, 524, 526, 527, 529, 531, 533, 538, 539, 545, 546, 554, 561, 564, 565, 569, 570, 572, 573, 574, 575, 579, 581, 584, 587, 588, 589, 592, 598, 602, 605, 606, 608, 609, 610, 613, 615, 616, 622, 623, 625, 626, 627, 628, 631, 634, 650, 654, 657, 665, 666], "accessor": [464, 605, 627, 649], "accessti": 559, "accessty1": 559, "accessty2": 559, "accident": [467, 509, 573, 589, 611, 627], "accommod": [454, 464, 521, 559, 572], "accomod": [533, 559], "accompani": [467, 600], "accomplish": [466, 517, 526, 552, 582, 587, 589, 606, 648, 659], "accord": [447, 454, 455, 493, 509, 526, 534, 535, 540, 552, 559, 565, 589, 594, 596, 599, 603, 608, 610, 626, 631, 650], "accordingli": [519, 526, 556, 559, 563, 581, 603], "account": [447, 461, 465, 497, 512, 517, 526, 534, 538, 546, 552, 559, 568, 571, 588, 591, 601, 606, 628, 629, 633, 634], "accqual": 447, "accumul": [446, 447, 561, 587, 605, 625, 660, 661, 662, 663, 664, 665], "accumulateconstantoffset": 571, "accur": [447, 450, 456, 481, 487, 493, 526, 529, 535, 548, 554, 562, 584, 587, 591, 605, 656, 657, 666], "accuraci": [493, 554, 559, 587], "achiev": [451, 459, 462, 466, 516, 517, 524, 525, 533, 535, 556, 559, 562, 563, 569, 595, 596, 602, 605, 606, 611], "acknowledg": 601, "acknowledgeorcv1deprec": [635, 636, 637], "acl": 598, "acm": [464, 526, 593], "aco": 450, "acq_rel": [447, 451, 559], "acquaint": 633, "acquir": [447, 517, 559, 561, 570, 589], "acquisit": 589, "acronym": 545, "across": [451, 453, 460, 461, 463, 464, 466, 478, 509, 510, 513, 517, 519, 524, 529, 534, 536, 541, 558, 559, 560, 561, 563, 572, 573, 574, 582, 587, 589, 591, 600, 605, 606, 608, 610, 617, 625, 627, 651, 657, 662, 666], "act": [442, 455, 464, 467, 468, 476, 534, 559, 561, 570, 571, 587, 589, 600, 601, 603, 605, 621], "action": [442, 447, 448, 456, 457, 464, 467, 513, 519, 520, 525, 529, 559, 560, 573, 574, 588, 589, 591, 601, 603, 610, 626, 627, 630, 636, 637], "actionscript": [657, 666], "activ": [442, 447, 450, 462, 464, 466, 493, 495, 505, 513, 517, 518, 519, 526, 528, 557, 561, 568, 581, 589, 591, 598, 603, 606, 608, 619, 626, 627, 634, 635, 636, 637, 667], "actual": [11, 17, 92, 115, 180, 199, 277, 310, 337, 347, 424, 442, 443, 447, 450, 451, 453, 454, 457, 458, 463, 464, 467, 468, 472, 476, 493, 509, 510, 513, 516, 517, 519, 522, 523, 524, 526, 527, 546, 548, 552, 558, 559, 560, 561, 563, 564, 570, 571, 573, 577, 587, 589, 590, 591, 599, 602, 605, 606, 609, 610, 611, 615, 619, 621, 626, 627, 631, 633, 634, 636, 637, 648, 649, 650, 651, 652, 653, 654, 656, 657, 659, 660, 661, 662, 663, 664, 665, 666], "actual_access": 447, "actualaccqu": 447, "acycl": [464, 508, 560, 584, 605, 626], "ad": [54, 55, 141, 239, 240, 384, 385, 442, 447, 448, 454, 455, 458, 459, 461, 462, 464, 466, 467, 468, 472, 473, 476, 481, 485, 486, 495, 513, 514, 515, 521, 525, 526, 528, 532, 538, 546, 549, 552, 556, 559, 561, 562, 563, 566, 567, 571, 573, 587, 588, 591, 592, 593, 594, 598, 601, 603, 605, 607, 608, 610, 611, 613, 615, 616, 620, 621, 622, 624, 625, 626, 627, 628, 631, 633, 635, 636, 637, 649, 650, 652, 653, 654, 655, 657, 658, 659, 660, 661, 663, 664, 665, 666, 667], "ada": 519, "adapt": [510, 517, 522, 545, 549, 568, 587, 589, 611], "adc": [447, 560, 589], "adc32mi": 617, "adc32mi8": 617, "adc32mr": 617, "adc32ri": 617, "adc32ri8": 617, "adc32rm": 617, "adc32rr": 617, "adc64mi32": 617, "adc64mi8": 617, "adc64mr": 617, "adc64ri32": 617, "adc64ri8": 617, "adc64rm": 617, "adc64rr": 617, "add": [24, 25, 26, 27, 28, 34, 35, 36, 37, 38, 41, 42, 43, 121, 122, 123, 124, 125, 127, 128, 129, 130, 133, 134, 205, 206, 207, 212, 213, 216, 217, 218, 219, 220, 221, 222, 223, 226, 227, 228, 322, 354, 355, 356, 357, 358, 364, 365, 366, 367, 368, 371, 372, 373, 442, 444, 447, 450, 451, 454, 457, 458, 462, 463, 464, 466, 467, 468, 469, 472, 476, 481, 493, 494, 495, 496, 497, 506, 507, 509, 510, 512, 513, 515, 517, 518, 519, 520, 521, 522, 523, 524, 526, 528, 529, 533, 534, 535, 539, 544, 545, 548, 549, 550, 552, 553, 554, 555, 556, 561, 563, 565, 568, 569, 571, 572, 574, 586, 587, 588, 589, 590, 591, 592, 594, 595, 596, 599, 605, 606, 608, 610, 611, 614, 615, 616, 617, 620, 621, 622, 624, 626, 627, 628, 629, 631, 633, 634, 635, 636, 637, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666], "add16mi": 617, "add16mi8": 617, "add16mr": 617, "add16ri": 617, "add16ri8": 617, "add16rm": 617, "add16rr": 617, "add32mi": 617, "add32mi8": 617, "add32mr": 617, "add32ri": 617, "add32ri8": 617, "add32ri8_db": 487, "add32ri_db": 487, "add32rm": [605, 617], "add32rr": [487, 605, 617], "add32rr_db": 487, "add32rr_rev": 487, "add64i32": 487, "add64mi32": 617, "add64mi8": 617, "add64mr": 617, "add64ri32": [487, 617], "add64ri8": 487, "add64rr": 487, "add8rr": 464, "add_": 463, "add_cfg_simplif": [662, 663, 664, 665], "add_char": [659, 660, 661, 662, 663, 664, 665], "add_custom_command": 463, "add_custom_target": 463, "add_definit": 462, "add_dep": 463, "add_depend": 463, "add_execut": [462, 463], "add_gvn": [662, 663, 664, 665], "add_incom": [663, 664], "add_instruction_combin": [662, 663, 664, 665], "add_librari": 462, "add_llvm_execut": 463, "add_llvm_fuzz": 525, "add_llvm_librari": [462, 627], "add_llvm_pass_plugin": 627, "add_llvm_tool": 525, "add_llvm_unittest": 462, "add_memory_to_register_promot": 665, "add_pf": 556, "add_pt": 556, "add_reassoci": [662, 663, 664, 665], "add_ri": 615, "add_rr": 615, "add_subdirectori": [462, 627], "add_to_library_group": 558, "addcom": 526, "addedcomplex": 617, "addend": [447, 559], "addenda": 511, "addendum": [530, 624], "addfunctionast": [636, 637], "addgener": [633, 634], "addi": [559, 598, 615], "addimm": 464, "addincom": [652, 653, 654, 655, 656], "addinstselector": 626, "addintervalsforspil": 464, "addirmodul": 573, "addit": [442, 445, 446, 449, 450, 451, 454, 458, 460, 462, 463, 464, 465, 466, 467, 468, 469, 473, 476, 478, 481, 488, 491, 493, 494, 497, 502, 507, 509, 510, 511, 513, 514, 517, 519, 521, 524, 526, 527, 528, 529, 531, 533, 534, 535, 537, 538, 539, 540, 541, 548, 549, 550, 551, 553, 557, 558, 559, 560, 561, 567, 568, 569, 570, 571, 572, 574, 577, 585, 587, 589, 590, 591, 593, 594, 596, 602, 603, 605, 606, 608, 609, 610, 611, 613, 616, 617, 620, 621, 622, 623, 625, 626, 627, 628, 649, 650, 651, 653, 654, 655, 657, 660, 661, 662, 664, 665, 666], "addition": [450, 451, 460, 464, 495, 505, 509, 517, 526, 529, 533, 538, 540, 544, 558, 559, 570, 575, 585, 587, 589, 603, 606, 609, 610], "addl": 606, "addlazyirmodul": 573, "addlib": 476, "addllvm": [462, 463], "addmbb": 464, "addmod": 476, "addmodul": [573, 633, 634, 635, 636, 637, 651, 652, 653, 654], "addmoduleflag": 656, "addop": 605, "addpassestoemitfil": [627, 655], "addpassestoemitmc": 564, "addpdrm": 615, "addpdrr": 615, "addpreemitpass": 626, "addpreserv": [450, 537], "addpsrm": 615, "addpsrr": 615, "addq": [487, 608], "addr": [468, 486, 495, 496, 502, 506, 513, 554, 559, 606, 626, 637], "addr1": 605, "addr2": [506, 605], "addr2lin": [471, 506, 545], "addr3": 506, "addr64": [2, 112], "addrawvalu": 555, "addreg": 464, "addregbankcoverag": 541, "addregfrm": 626, "addregisterclass": [464, 626], "addrequir": 537, "addressaddress_rang": 442, "address_s": [442, 447, 572], "address_spac": 447, "addressis32bit": 577, "addresssanit": [545, 559, 561, 569, 609], "addressspac": 533, "addri": 626, "addrr": 626, "addrri": 626, "addrrr": 626, "addrsig": [449, 500, 501, 521], "addrsig_sym": 521, "addrspac": [519, 533, 559, 572, 610], "addrspacecast": 534, "addrspacequ": 447, "addsdrm": 615, "addsdrr": 615, "addtmp": [650, 651, 652, 653, 654, 655, 656, 661, 662, 663, 664, 665], "addtmp1": [651, 662], "addtmp4": [650, 661], "addtypenam": 589, "addx": 615, "addxri": 565, "adequ": [462, 526, 531, 606, 626], "adher": [465, 467, 517, 573, 589, 594, 611, 614, 617], "aditya": 542, "adjac": [447, 559, 589, 616], "adjust": [442, 447, 462, 495, 496, 498, 506, 519, 524, 529, 557, 571, 585, 606, 621, 626], "adjustpassmanag": 572, "admin": [457, 517, 546], "administr": 546, "admittedli": 615, "adopt": [464, 467, 517, 528, 573, 606, 611], "adorn": [559, 607], "adrian": 512, "adrp": 521, "adst": 8, "adt": [467, 529, 633, 634, 635, 636, 637, 649, 650, 651, 652, 653, 654, 655, 656], "adttest": 462, "advanc": [442, 460, 462, 463, 509, 517, 526, 552, 559, 566, 568, 573, 605, 607, 624, 626, 627, 649, 656, 660, 662], "advantag": [451, 453, 464, 467, 509, 513, 517, 526, 527, 533, 555, 559, 561, 562, 563, 589, 591, 592, 600, 606, 653, 654, 657, 664, 665, 666], "advent": 559, "adventur": 589, "advertis": 519, "advic": [469, 517, 524, 526, 528, 547, 588], "advis": [460, 463, 476, 538, 551, 555, 652, 663], "advisori": 465, "advoc": [465, 467], "aed0d21a6": 532, "aed0d21a62db": 532, "affect": [41, 215, 226, 228, 371, 445, 447, 451, 453, 461, 462, 465, 466, 468, 493, 495, 502, 509, 510, 517, 543, 550, 551, 553, 559, 560, 571, 572, 574, 589, 591, 594, 599, 603, 605, 611, 615, 616, 619, 621, 627, 651, 652, 663], "affili": [463, 517], "affix": 514, "afn": 559, "aforement": [517, 581, 584, 622], "aform_1": 464, "aform_2": 464, "afre": 557, "aft": 622, "after": [64, 147, 247, 394, 442, 445, 446, 447, 449, 450, 451, 452, 453, 454, 455, 458, 461, 462, 463, 464, 465, 468, 469, 470, 472, 474, 476, 481, 485, 486, 493, 497, 506, 507, 509, 513, 514, 517, 518, 519, 521, 522, 525, 526, 527, 529, 532, 534, 535, 536, 538, 539, 543, 546, 547, 550, 551, 552, 554, 557, 559, 561, 563, 564, 565, 566, 567, 568, 570, 571, 572, 573, 577, 581, 587, 588, 589, 590, 594, 598, 600, 602, 603, 605, 607, 608, 609, 610, 611, 613, 615, 616, 619, 620, 621, 622, 623, 626, 627, 630, 631, 633, 634, 649, 650, 651, 652, 653, 654, 655, 656, 657, 660, 661, 662, 663, 664, 665, 666], "after_bb": [663, 664, 665], "afterbb": [652, 653, 654, 655, 656], "afterloop": [652, 653, 654, 655, 656, 663, 664, 665], "afterward": [517, 524, 559, 587, 606, 610], "ag": [465, 577, 582], "again": [449, 453, 463, 466, 468, 472, 509, 513, 519, 524, 532, 538, 551, 553, 559, 566, 570, 571, 575, 589, 594, 602, 604, 607, 620, 622, 627, 650, 651, 652, 654, 657, 662, 663, 665, 666], "against": [449, 456, 457, 460, 462, 465, 468, 480, 493, 497, 517, 519, 521, 522, 524, 525, 543, 545, 552, 557, 559, 561, 572, 573, 586, 587, 589, 591, 592, 594, 598, 602, 603, 606, 620, 621, 623, 628, 631, 650], "agenc": 601, "agent": [447, 559], "agg": 559, "agg1": 559, "agg2": 559, "agg3": 559, "aggreg": [467, 486, 497, 519, 557, 560, 589, 626, 629], "aggress": [450, 464, 467, 510, 523, 526, 529, 559, 560, 589, 605, 649, 652, 660, 663], "agnost": [453, 464, 495, 505, 559, 573, 605, 611], "agpr": 559, "agpr0": 447, "agpr255": 447, "agre": [465, 466, 517, 535, 579, 587, 594, 603, 605, 631], "agreement": [442, 594], "agrep": 620, "ah": [559, 608, 617], "ahead": [467, 517, 519, 529, 531, 552, 553, 573, 591, 610, 627, 633, 649, 657, 658, 659, 660, 666], "ahm": 542, "ai": [467, 589, 665], "aid": [526, 559, 606], "aim": [453, 457, 458, 463, 467, 469, 514, 517, 525, 559, 573, 589, 596, 597, 601, 602, 605, 611, 633], "ain": 447, "air": 559, "aix": [464, 511, 598], "aka": [449, 450, 464, 559, 561, 584, 585, 589, 648, 649, 650, 651, 652, 653, 654, 655, 656, 659, 660, 661, 662, 663, 664, 665], "akila": 603, "al": [464, 552, 559, 565, 608, 617, 626], "al_aliasset": 626, "al_superregsset": 626, "alac": 619, "alacconvert": 619, "albeit": [654, 665], "albini": 603, "alex": [514, 594], "algebra": 587, "algn": 629, "algo": 627, "algorithm": [450, 467, 484, 487, 493, 509, 516, 519, 526, 539, 559, 563, 570, 571, 577, 587, 589, 596, 598, 606, 613, 626, 635, 636, 637, 649, 650, 651, 652, 653, 654, 655, 657, 660, 663, 665, 666], "alia": [442, 451, 454, 468, 472, 475, 488, 493, 494, 499, 501, 557, 560, 565, 570, 571, 573, 622, 624, 626, 627], "alias": [442, 445, 450, 454, 487, 493, 494, 501, 527, 551, 570, 587, 608, 626, 657, 666], "aliasanalysi": [559, 627], "aliasanalysisdebugg": 450, "aliase": [454, 559, 571], "aliaseeti": 559, "aliasesset": 450, "aliasopt": 509, "aliasresult": 450, "aliasset": [450, 626], "align": [442, 446, 447, 451, 464, 468, 491, 495, 497, 511, 513, 514, 517, 519, 526, 527, 534, 545, 554, 555, 559, 562, 565, 569, 571, 572, 587, 589, 596, 598, 602, 605, 608, 610, 626, 630, 631], "align32bit": 454, "align_nod": 559, "aligna": 605, "alignlog2": 559, "alignstack": [454, 559], "alignstyl": 589, "aliv": [464, 513, 571, 587, 589, 606, 627], "all": [46, 112, 136, 231, 232, 376, 377, 442, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 475, 476, 478, 480, 481, 482, 483, 484, 486, 487, 488, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 520, 521, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 538, 539, 541, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 568, 570, 571, 572, 573, 574, 575, 576, 577, 580, 581, 582, 584, 585, 588, 589, 590, 592, 593, 594, 595, 596, 598, 599, 600, 601, 602, 603, 605, 606, 608, 609, 610, 611, 613, 615, 616, 617, 619, 620, 621, 622, 623, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 648, 649, 650, 651, 652, 653, 654, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666], "all_build": 531, "all_ones_mask": 606, "all_zeros_mask": 606, "allevi": [464, 509, 559, 589], "alli": 559, "alloc": [46, 136, 231, 376, 442, 447, 450, 451, 467, 473, 474, 493, 494, 495, 505, 519, 521, 524, 526, 527, 529, 533, 536, 557, 559, 561, 564, 565, 569, 574, 587, 596, 597, 606, 608, 609, 610, 626, 627, 629, 631, 633, 635, 651, 654, 657, 662, 665, 666], "alloca": [447, 464, 467, 513, 519, 526, 527, 554, 557, 570, 587, 589, 605, 608, 609, 610, 654, 655, 656, 665], "allocainst": [467, 559, 589, 654, 655, 656, 665], "allocat": [464, 495, 559, 626], "allocatevmodul": [635, 636, 637], "allocationinst": 589, "allocator_may_return_nul": 602, "allocinst": 665, "allocs": [454, 559], "allon": 559, "allow": [442, 445, 446, 447, 450, 451, 453, 454, 456, 460, 462, 463, 464, 465, 466, 467, 468, 469, 472, 473, 476, 481, 487, 493, 495, 501, 505, 510, 513, 514, 515, 516, 517, 518, 519, 520, 521, 524, 526, 527, 528, 529, 534, 535, 538, 545, 546, 548, 550, 552, 554, 555, 557, 558, 559, 561, 562, 563, 564, 565, 567, 569, 570, 571, 572, 573, 574, 575, 577, 584, 586, 587, 588, 589, 591, 594, 597, 598, 600, 602, 603, 604, 605, 606, 607, 608, 610, 611, 613, 614, 615, 616, 617, 619, 621, 622, 623, 625, 626, 627, 628, 629, 631, 633, 634, 635, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 668], "allow_retri": 472, "allowlist": 573, "allowsanysmalls": 589, "allroot": 620, "alltargetsasmpars": 460, "alltargetsdesc": 460, "alltargetsdisassembl": 460, "alltargetsinfo": 460, "almost": [442, 451, 453, 464, 466, 467, 493, 517, 520, 524, 525, 526, 532, 534, 560, 589, 591, 610, 611], "alon": [454, 459, 464, 509, 517, 568, 570, 606, 621, 649, 660], "along": [451, 454, 462, 464, 467, 494, 495, 498, 510, 513, 516, 524, 526, 529, 548, 552, 553, 556, 559, 564, 565, 566, 572, 582, 587, 589, 596, 604, 605, 606, 607, 626, 627, 634, 650, 651, 657, 658, 659, 661, 662, 666], "alongsid": [454, 496, 512, 529, 591, 600, 627], "alpha": [559, 626], "alphacompilationcallback": 626, "alphajitinfo": 626, "alphanumer": [482, 495], "alreadi": [442, 447, 450, 456, 457, 459, 460, 461, 462, 463, 464, 467, 493, 494, 509, 510, 512, 513, 517, 520, 526, 529, 531, 533, 538, 541, 544, 545, 552, 553, 557, 559, 566, 571, 573, 574, 589, 590, 591, 593, 594, 601, 603, 604, 605, 606, 607, 608, 610, 617, 621, 622, 626, 627, 631, 633, 635, 637, 650, 651, 652, 653, 654, 655, 656, 659, 661, 662, 663, 664, 665], "also": [442, 443, 444, 446, 447, 448, 450, 451, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 466, 468, 476, 481, 487, 493, 497, 498, 509, 510, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 529, 531, 533, 534, 535, 536, 538, 539, 541, 544, 545, 547, 548, 549, 550, 551, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 565, 566, 568, 570, 571, 572, 573, 574, 575, 577, 581, 586, 587, 588, 589, 590, 591, 592, 594, 596, 598, 599, 601, 602, 603, 605, 606, 607, 608, 610, 611, 613, 615, 616, 617, 619, 620, 621, 622, 623, 625, 626, 627, 628, 629, 630, 631, 633, 634, 635, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666], "alt_always_instru": 628, "alt_never_instru": 628, "alter": [509, 559, 589, 605, 622], "altern": [442, 445, 446, 447, 458, 460, 462, 464, 466, 470, 481, 510, 517, 519, 524, 527, 529, 531, 532, 533, 538, 539, 541, 544, 559, 561, 563, 573, 574, 589, 596, 619, 626, 627, 628, 631, 649, 654, 660, 665, 668], "although": [442, 451, 454, 463, 464, 466, 467, 472, 479, 509, 510, 517, 520, 526, 529, 531, 539, 552, 554, 558, 559, 561, 563, 565, 566, 577, 582, 584, 589, 607, 610, 621, 627, 653, 661], "altivec": [464, 559, 560], "altogeth": [548, 596], "alu": [447, 493], "alu32_rr": 556, "alwai": [442, 447, 450, 451, 453, 454, 456, 457, 459, 462, 463, 464, 465, 466, 467, 468, 472, 476, 478, 488, 493, 509, 510, 513, 514, 517, 519, 522, 524, 529, 532, 534, 538, 548, 552, 558, 559, 560, 562, 563, 570, 577, 579, 584, 585, 588, 589, 590, 591, 598, 600, 601, 603, 605, 606, 609, 610, 611, 613, 620, 621, 628, 629, 630, 631, 649, 650, 651, 652, 653, 654, 655, 656, 657, 661, 662, 663, 664, 665, 666], "always_inlin": 510, "always_instru": 628, "alwaysinlin": [454, 559], "am": [517, 534, 589], "amara": 594, "amaz": [653, 664], "amazingli": [652, 663], "ambigu": [445, 509, 552, 616, 621, 649, 653, 660, 664], "amd": [442, 445, 447, 464, 493, 511, 550, 606, 613], "amd64": 529, "amd_code_version_major": 447, "amd_kernel_code_version_minor": 447, "amd_machine_kind": 447, "amd_machine_version_major": 447, "amd_machine_version_step": 447, "amd_queue_t": 447, "amdfam10": 655, "amdgpu": [0, 1, 2, 3, 4, 5, 6, 7, 8, 442, 529, 559, 565, 594, 613, 624], "amdgpu_flat_work_group_s": 447, "amdgpu_num_sgpr": 447, "amdgpu_num_vgpr": 447, "amdgpu_waves_per_eu": 447, "amdhsa_dx10_clamp": 447, "amdhsa_exception_fp_denorm_src": 447, "amdhsa_exception_fp_ieee_div_zero": 447, "amdhsa_exception_fp_ieee_inexact": 447, "amdhsa_exception_fp_ieee_invalid_op": 447, "amdhsa_exception_fp_ieee_overflow": 447, "amdhsa_exception_fp_ieee_underflow": 447, "amdhsa_exception_int_div_zero": 447, "amdhsa_float_denorm_mode_16_64": 447, "amdhsa_float_denorm_mode_32": 447, "amdhsa_float_round_mode_16_64": 447, "amdhsa_float_round_mode_32": 447, "amdhsa_forward_progress": 447, "amdhsa_fp16_overflow": 447, "amdhsa_group_segment_fixed_s": 447, "amdhsa_ieee_mod": 447, "amdhsa_memory_ord": 447, "amdhsa_next_free_sgpr": 447, "amdhsa_next_free_spgr": 447, "amdhsa_next_free_vgpr": 447, "amdhsa_next_free_vpgr": 447, "amdhsa_private_segment_fixed_s": 447, "amdhsa_reserve_": 447, "amdhsa_reserve_flat_scratch": 447, "amdhsa_reserve_vcc": 447, "amdhsa_reserve_xnack_mask": 447, "amdhsa_system_sgpr_private_segment_wavefront_offset": 447, "amdhsa_system_sgpr_workgroup_id_i": 447, "amdhsa_system_sgpr_workgroup_id_x": 447, "amdhsa_system_sgpr_workgroup_id_z": 447, "amdhsa_system_sgpr_workgroup_info": 447, "amdhsa_system_vgpr_workitem_id": 447, "amdhsa_user_sgpr_dispatch_id": 447, "amdhsa_user_sgpr_dispatch_ptr": 447, "amdhsa_user_sgpr_flat_scratch_init": 447, "amdhsa_user_sgpr_kernarg_segment_ptr": 447, "amdhsa_user_sgpr_private_segment_buff": 447, "amdhsa_user_sgpr_private_segment_s": 447, "amdhsa_user_sgpr_queue_ptr": 447, "amdhsa_wavefront_size32": 447, "amdhsa_workgroup_processor_mod": 447, "amdkernelcodet": 447, "amen": [464, 592], "amend": [512, 517, 529, 588], "amini": 594, "aminiinconsist": 594, "among": [442, 464, 467, 468, 510, 521, 524, 529, 535, 559, 561, 562, 571, 572, 587, 589, 591, 613], "amongst": [442, 451], "amort": 543, "amount": [447, 458, 460, 464, 465, 467, 473, 474, 493, 497, 507, 509, 517, 519, 520, 522, 526, 529, 534, 553, 559, 561, 571, 587, 589, 591, 592, 602, 603, 604, 605, 608, 610, 613, 617, 627, 628, 635, 651, 658, 659, 662], "amper": 547, "ampersand": [109, 195, 292, 441], "amu": 598, "amx": 598, "an": [0, 1, 2, 3, 4, 5, 6, 7, 8, 14, 15, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 52, 53, 54, 55, 56, 58, 59, 62, 63, 76, 82, 91, 93, 95, 109, 112, 113, 119, 120, 121, 122, 123, 124, 125, 126, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 144, 156, 167, 179, 181, 195, 196, 197, 203, 204, 205, 206, 207, 212, 213, 214, 215, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 237, 238, 239, 240, 241, 243, 244, 259, 266, 276, 278, 292, 293, 298, 303, 313, 322, 323, 324, 328, 329, 330, 332, 344, 345, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 382, 383, 384, 385, 386, 388, 389, 392, 393, 406, 413, 423, 425, 427, 441, 442, 443, 444, 445, 446, 447, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 483, 484, 485, 486, 487, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 504, 505, 506, 507, 508, 510, 512, 513, 514, 515, 516, 518, 519, 520, 521, 522, 523, 524, 525, 526, 528, 530, 532, 533, 534, 535, 536, 538, 539, 540, 541, 544, 546, 547, 549, 550, 551, 552, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 580, 581, 582, 584, 585, 587, 588, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 605, 607, 608, 609, 610, 611, 613, 615, 616, 617, 619, 620, 621, 622, 623, 624, 625, 628, 629, 630, 631, 632, 633, 635, 636, 637, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668], "anachronist": 454, "analog": [442, 519, 526, 539, 559, 589, 606, 610, 615, 627], "analys": [450, 455, 461, 464, 507, 520, 529, 559, 563, 587, 589, 594, 596, 605, 624, 627, 628, 629], "analysi": [451, 455, 456, 461, 478, 507, 514, 520, 522, 524, 526, 529, 533, 543, 556, 559, 560, 562, 563, 565, 570, 574, 596, 597, 600, 605, 606, 613, 620, 624, 629, 632, 651, 654, 656, 662, 665], "analysisalias": 600, "analysisfpcommut": 600, "analysisusag": [450, 537], "analyt": 593, "analyz": [462, 464, 467, 471, 487, 507, 513, 516, 524, 529, 531, 541, 563, 571, 587, 589, 598, 605, 606, 613, 620, 627, 628, 629, 652, 663], "analyzebranch": 626, "ancestor": [447, 552], "anchor": 605, "ancient": 449, "andrew": [526, 591], "andric": 603, "android": [598, 621], "ands": 560, "andw": 468, "anew": 605, "angl": [510, 631], "ani": [109, 195, 292, 441, 442, 445, 446, 447, 449, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 472, 473, 476, 478, 480, 481, 484, 485, 486, 487, 493, 494, 495, 496, 497, 498, 500, 501, 504, 505, 506, 507, 509, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 529, 531, 533, 534, 536, 538, 545, 547, 550, 551, 552, 554, 555, 556, 558, 559, 560, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 581, 584, 585, 587, 589, 590, 591, 593, 594, 596, 598, 600, 601, 602, 603, 605, 606, 607, 608, 610, 611, 613, 614, 615, 616, 617, 620, 621, 622, 623, 625, 626, 627, 631, 633, 634, 635, 636, 637, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 659, 660, 661, 662, 663, 664, 665, 666], "annot": [447, 456, 468, 472, 493, 498, 510, 519, 524, 560, 572, 591, 594, 606], "announc": [528, 568, 591, 594, 599, 628], "anon": 559, "anonym": [493, 601, 605, 613, 615, 616, 626, 627, 629, 649, 650, 651, 652, 653, 654, 655, 656, 660, 661, 662, 663, 664, 665], "anoth": [442, 445, 446, 447, 450, 451, 452, 453, 454, 460, 462, 463, 464, 465, 467, 468, 472, 476, 481, 493, 495, 497, 505, 506, 507, 509, 513, 514, 516, 517, 519, 520, 521, 522, 526, 529, 531, 534, 536, 537, 538, 539, 541, 547, 548, 550, 556, 557, 558, 559, 560, 561, 562, 563, 566, 570, 571, 572, 573, 576, 584, 585, 587, 591, 594, 605, 606, 607, 608, 609, 610, 611, 613, 615, 617, 621, 622, 623, 626, 627, 628, 629, 630, 631, 634, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 649, 650, 651, 652, 653, 654, 655, 656, 657, 660, 662, 663, 664, 665, 666], "another_op": 565, "anotherbranch": 591, "anothercategori": 509, "answer": [450, 457, 467, 509, 517, 522, 524, 527, 536, 552, 559, 566, 570, 571, 587, 592, 597, 651, 652, 654, 662, 663, 665], "anti": [493, 516], "anticip": [442, 591, 594, 630], "antisymmetr": 571, "antisymmetri": 571, "anxiou": 462, "any_other_cond": 559, "anyextload": 534, "anyhow": 559, "anymor": [457, 589, 622, 627], "anyon": [451, 463, 466, 517, 518, 570, 601, 603, 605, 626], "anyregcc": [454, 559, 608], "anyth": [442, 451, 460, 464, 467, 473, 474, 493, 495, 510, 513, 517, 522, 529, 531, 545, 552, 559, 573, 575, 581, 587, 589, 591, 598, 605, 606, 608, 610, 617, 622, 651, 652, 661, 662, 663], "anywai": [467, 516, 550, 559, 570, 587, 594, 605], "anywher": [465, 468, 519, 524, 545, 559, 562, 566, 571, 607, 616, 621, 649, 654, 660, 665], "ao": 521, "ap": [526, 559], "ap2": 559, "apach": [467, 517, 522, 551, 611, 633, 634, 635, 636, 637], "apart": [450, 453, 462, 533, 559, 581, 589], "apertur": [46, 376, 447], "apfloat": [529, 650, 651, 652, 653, 654, 655, 656, 661], "api": [447, 450, 462, 467, 497, 509, 511, 512, 526, 530, 533, 537, 544, 551, 554, 558, 561, 570, 572, 582, 585, 586, 592, 594, 595, 602, 608, 613, 628, 632, 634, 635, 636, 637, 650, 651, 656, 661, 662], "apint": [565, 589, 629], "app": [586, 589, 593], "appar": [442, 447, 654, 665], "appeal": 606, "appear": [442, 446, 447, 450, 451, 458, 467, 468, 472, 476, 484, 493, 495, 509, 514, 517, 521, 527, 554, 559, 573, 575, 576, 577, 582, 584, 585, 587, 589, 591, 596, 605, 606, 610, 613, 615, 616, 626], "appel": 526, "appel89": 526, "append": [442, 454, 462, 469, 470, 476, 477, 481, 538, 554, 559, 589, 590, 615, 619, 621, 628, 663], "append_block": [661, 662, 663, 664, 665], "appendinglinkag": 589, "appendix": 442, "appenduniqu": 559, "appertain": 559, "appl": [463, 464, 468, 470, 486, 515, 517, 519, 528, 529, 559, 603, 605], "apple_nam": [470, 605], "apple_namespac": 605, "apple_objc": 605, "apple_typ": [470, 605], "appli": [64, 147, 247, 394, 442, 444, 445, 446, 447, 450, 451, 453, 457, 458, 462, 463, 464, 465, 466, 467, 472, 476, 481, 486, 495, 502, 505, 507, 509, 513, 516, 517, 521, 524, 527, 529, 533, 541, 545, 546, 548, 549, 551, 554, 559, 561, 562, 563, 564, 573, 574, 577, 584, 587, 589, 591, 594, 596, 599, 603, 605, 606, 611, 615, 616, 619, 622, 626, 627, 630, 631, 634, 651, 653, 654, 657, 662, 664, 665, 666], "applic": [442, 447, 453, 454, 462, 464, 466, 467, 476, 480, 481, 494, 501, 509, 510, 511, 517, 519, 523, 524, 526, 533, 558, 559, 561, 564, 571, 587, 589, 597, 606, 608, 610, 615, 617, 619, 621, 626, 627, 629, 630, 632, 633, 648, 651, 653, 657, 659, 662, 664, 666], "applu331": 593, "applymergedloc": 554, "appreci": [442, 512, 517, 548], "approach": [442, 447, 453, 458, 459, 462, 464, 493, 509, 510, 513, 517, 519, 527, 539, 543, 552, 556, 559, 569, 571, 587, 589, 594, 596, 604, 605, 610, 626], "appropri": [442, 447, 450, 451, 453, 464, 466, 467, 468, 472, 481, 493, 498, 509, 513, 517, 519, 520, 524, 525, 526, 529, 534, 535, 536, 546, 550, 551, 552, 555, 556, 559, 562, 572, 579, 584, 587, 588, 589, 591, 592, 594, 598, 599, 601, 605, 610, 611, 617, 626, 627, 629, 631, 633, 635, 649, 653, 654, 660, 664, 665], "approv": [466, 517, 551, 588, 594, 603], "approx": [510, 572], "approxim": [456, 472, 510, 531, 545, 559, 560, 561, 603, 622], "apr": 611, "aptr": 559, "apu": 447, "aq": 559, "aq2": 559, "aqlwrap": 447, "ar": [14, 30, 38, 41, 43, 52, 58, 112, 115, 130, 139, 141, 196, 199, 215, 223, 226, 228, 237, 243, 313, 344, 347, 360, 368, 371, 373, 382, 388, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 467, 468, 469, 470, 471, 472, 473, 474, 475, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 491, 493, 494, 495, 496, 498, 499, 500, 501, 502, 504, 505, 506, 507, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 581, 582, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 613, 614, 615, 616, 617, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 633, 634, 635, 636, 637, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666], "arang": 486, "arbitrari": [442, 447, 450, 454, 464, 467, 472, 479, 487, 509, 513, 519, 525, 526, 527, 534, 543, 554, 558, 559, 563, 565, 570, 573, 585, 589, 598, 603, 605, 606, 608, 610, 613, 615, 626, 627, 630, 649, 650, 651, 654, 657, 658, 659, 660, 661, 662, 665, 666], "arbitrarili": [442, 552, 559, 579, 605, 652, 663], "arc": [481, 529, 588, 594], "arcanist": [528, 529, 588], "arcfilt": 588, "arch": [470, 473, 474, 481, 486, 491, 493, 494, 495, 496, 500, 501, 502, 506, 510, 529, 547, 548, 573, 599, 628, 655], "arch1": 494, "arch2": 494, "arch_nam": 506, "architect": 447, "architectur": [442, 451, 453, 461, 462, 464, 468, 470, 472, 473, 474, 481, 486, 487, 491, 493, 494, 495, 496, 500, 501, 502, 506, 510, 512, 519, 524, 525, 529, 530, 531, 545, 547, 548, 550, 551, 559, 565, 572, 573, 576, 596, 599, 602, 606, 613, 617, 621, 623, 624, 626, 628, 632, 637, 655, 667], "archiv": [460, 471, 481, 486, 489, 494, 495, 496, 502, 505, 511, 517, 528, 544, 558, 562, 577, 589, 590, 591, 601, 602, 628], "archiveiter": 589, "arcp": 559, "arcpatch": 588, "arctan": 631, "area": [442, 447, 453, 457, 459, 464, 466, 512, 514, 517, 519, 526, 560, 561, 568, 588, 589, 599, 603, 606, 611, 621, 654, 665], "aren": [450, 464, 465, 467, 510, 517, 526, 527, 529, 531, 538, 548, 559, 565, 587, 591, 606, 651, 652, 657, 662, 666], "areprivatesymbolsstrip": 577, "arg": [447, 467, 469, 472, 474, 481, 498, 509, 515, 525, 548, 553, 554, 565, 571, 600, 610, 613, 615, 616, 630, 648, 649, 650, 651, 652, 653, 654, 655, 656, 659, 660, 661, 662, 663, 664, 665], "arg1": [559, 561, 628, 648, 659], "arg2": [559, 561, 648, 659], "arg_begin": 589, "arg_empti": 589, "arg_end": 589, "arg_index": 559, "arg_iter": 589, "arg_siz": [526, 589, 650, 651, 652, 653, 654, 655, 656], "argc": [509, 514, 515, 559, 561, 572, 589, 605, 629, 637], "argidx": 656, "arglist": 559, "argmemonli": [454, 524, 559], "argn": 463, "argnam": [509, 649, 650, 651, 652, 653, 654, 655, 656], "argstart": 509, "argsv": [650, 651, 652, 653, 654, 655, 656], "argti": 559, "arguabl": 533, "argument": [52, 139, 237, 382, 442, 450, 453, 454, 456, 459, 461, 462, 464, 467, 468, 469, 471, 472, 474, 476, 478, 480, 481, 486, 494, 498, 506, 508, 510, 514, 518, 519, 520, 522, 524, 525, 526, 527, 529, 531, 535, 540, 544, 548, 552, 553, 556, 557, 561, 564, 565, 571, 574, 591, 597, 598, 600, 602, 604, 605, 606, 608, 609, 610, 613, 616, 617, 620, 621, 626, 627, 628, 630, 633, 634, 635, 637, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 660, 661, 662, 663, 664, 665, 666], "argumentexpr": [660, 661, 662, 663, 664, 665], "argumentlisttyp": 589, "argv": [458, 463, 474, 509, 514, 515, 561, 572, 589, 605, 629, 637], "argv0": 474, "argvalu": [509, 515], "aris": [517, 527, 559, 589], "arithmet": [514, 524, 534, 587, 589, 598, 606, 615, 625, 650, 654, 661, 665], "ariti": 526, "arm": [451, 464, 495, 496, 500, 501, 505, 519, 524, 529, 538, 548, 559, 560, 565, 567, 594, 595, 603, 613, 621, 624, 626], "arm32": 511, "arm64": [511, 529, 619], "arm7": 628, "arm_aapcs_vfpcc": 454, "arm_aapcscc": 454, "arm_apcscc": 454, "arm_cd": 598, "arm_mv": 598, "arm_neon": [453, 613], "armap": 494, "armgenasmmatch": 613, "armgenregisterinfo": 613, "armhf": [549, 550, 602], "arminstrinfo": 626, "armv5": 451, "armv6": [511, 547], "armv7": [453, 511, 529, 547, 550, 559], "armv7a": 549, "armv8": [511, 559, 569, 597, 598, 617], "arnaud": 568, "around": [442, 450, 451, 461, 463, 466, 468, 492, 493, 509, 517, 519, 526, 527, 529, 539, 555, 557, 558, 559, 561, 568, 571, 573, 574, 587, 589, 591, 594, 605, 606, 607, 610, 611, 616, 626, 627, 628, 649, 652, 656, 657, 663, 666], "arr": [527, 559, 606], "arr1": 606, "arr2": 606, "arrai": [442, 445, 447, 450, 453, 454, 464, 473, 497, 513, 519, 524, 526, 561, 571, 572, 576, 577, 580, 581, 584, 587, 605, 606, 613, 621, 622, 625, 626, 649, 654, 657, 660, 661, 662, 663, 664, 665, 666], "arrang": [464, 466, 509, 526, 552, 559, 587, 606, 621, 627, 634, 635], "arrayidx": 559, "arrayidx1": 559, "arrayidx2": 559, "arrayidx3": 559, "arrayidx4": 559, "arraytyp": 589, "arriv": 527, "arsenault": 594, "arsenaultagre": 594, "art": 526, "artem": 510, "articl": [559, 571, 587, 591, 632, 652, 654, 663, 665], "articul": 466, "artifact": [527, 561, 571, 596], "artifact_prefix": 561, "artifici": 447, "as_float": [662, 663, 664, 665], "asan": [561, 597, 602], "asanstackvariabledescript": 609, "asc": 593, "ascend": [442, 514, 559], "ascii": [454, 496, 504, 559, 561, 605, 648, 649, 650, 651, 652, 653, 654, 655, 656, 659, 660, 661, 662, 663, 664, 665], "asciz": 521, "asf": 517, "ashr": 534, "asi": 626, "asid": [539, 559, 570, 589, 602], "ask": [442, 450, 457, 465, 466, 510, 512, 517, 520, 524, 526, 529, 531, 551, 552, 568, 571, 589, 591, 592, 599, 601, 603, 605, 610, 614, 615, 616, 627, 635, 649, 652, 654, 656, 657, 660, 663, 665, 666], "asm": [454, 460, 473, 474, 487, 493, 496, 508, 572, 598, 600], "asmmatcheremitt": 613, "asmnam": 626, "asmpars": [520, 529, 613], "asmparsernum": 508, "asmprint": [464, 526, 559, 613, 626], "asmstr": [615, 617, 626], "asmwrit": [520, 526], "asmwriternum": 508, "aspect": [442, 462, 464, 466, 513, 516, 526, 539, 541, 545, 559, 581, 582, 589, 591, 596, 602, 605, 616, 649, 650, 652, 656, 657, 660, 661, 663, 666], "aspir": [653, 664], "aspx": [467, 593], "asrc": 8, "asrc2": 8, "assembl": [17, 54, 55, 94, 115, 199, 338, 347, 384, 385, 426, 442, 443, 444, 445, 446, 471, 473, 510, 517, 519, 521, 529, 531, 549, 573, 591, 598, 613, 617, 620, 626, 667], "assembli": [442, 446, 447, 454, 470, 473, 474, 477, 478, 484, 485, 493, 496, 507, 508, 511, 517, 519, 520, 522, 525, 527, 529, 531, 549, 558, 565, 567, 572, 592, 597, 598, 604, 610, 613, 621, 651, 655, 662], "assert": [462, 464, 509, 512, 529, 547, 551, 553, 559, 560, 561, 572, 586, 587, 589, 599, 605, 621, 626, 627, 631, 634, 636, 637, 650, 651, 652, 653, 654, 655, 656], "assert_valid_funct": [661, 662, 663, 664, 665], "assign": [442, 446, 447, 451, 454, 455, 456, 457, 464, 467, 468, 487, 498, 509, 512, 516, 517, 519, 521, 522, 527, 533, 539, 541, 545, 554, 556, 559, 560, 569, 571, 572, 574, 589, 591, 602, 605, 615, 616, 622, 626, 631, 650, 655, 656, 658, 659, 661], "assigne": 457, "assignvirt2phi": 464, "assignvirt2stackslot": 464, "assist": [467, 508, 524, 545, 553, 554, 574, 653, 664], "associ": [442, 447, 453, 454, 455, 456, 463, 464, 466, 467, 473, 509, 514, 516, 519, 521, 526, 555, 558, 560, 563, 564, 565, 570, 573, 574, 587, 589, 594, 598, 600, 602, 605, 608, 610, 611, 615, 623, 624, 626, 628, 630, 635, 649, 651, 660], "assort": 656, "assum": [442, 444, 446, 447, 449, 450, 454, 455, 456, 458, 462, 464, 466, 467, 472, 473, 474, 482, 487, 493, 495, 497, 506, 510, 513, 517, 519, 520, 522, 524, 526, 527, 529, 531, 532, 533, 563, 571, 572, 573, 577, 579, 580, 581, 582, 584, 585, 587, 589, 591, 592, 594, 599, 603, 604, 605, 606, 608, 610, 613, 620, 622, 623, 626, 627, 629, 631, 633, 649, 650, 653, 654, 655, 656, 657, 658, 661, 664, 666], "assumpt": [464, 467, 468, 473, 493, 514, 517, 519, 559, 598, 605, 606, 633, 656, 657, 666], "assur": 631, "ast": [496, 510, 560, 613, 633, 635, 637, 648, 650, 651, 653, 654, 656, 657, 658, 659, 661, 662, 664, 665, 666, 667], "astcontext": 467, "astdump": 613, "astnod": 613, "astread": 613, "astwrit": 613, "asymmetr": 527, "asymmetri": [523, 571], "asymptomat": 469, "async": [513, 573], "async_op": 513, "async_op1": 513, "async_op2": 513, "asynchron": [447, 451, 513, 559], "at_apple_properti": 605, "at_apple_property_attribut": 605, "at_apple_property_sett": 605, "at_apple_runtime_class": 605, "at_artifici": 605, "at_byte_s": 605, "at_decl_fil": 605, "at_decl_lin": 605, "at_encod": 605, "at_end": [661, 662, 663, 664, 665], "at_nam": 605, "at_typ": 605, "atan2": [648, 659], "atc": 447, "athlon": 655, "atkinson": 593, "atoi": 559, "atom": [24, 25, 26, 27, 28, 31, 32, 33, 39, 40, 121, 122, 123, 124, 125, 131, 132, 205, 206, 207, 212, 213, 224, 225, 322, 323, 354, 355, 356, 357, 358, 361, 362, 363, 369, 370, 445, 447, 468, 516, 517, 524, 534, 538, 570, 581, 589, 597, 598, 602, 605], "atom_count": 605, "atom_count0": 605, "atomic_": 451, "atomic_cmpxchg": 451, "atomic_f": 451, "atomic_load_": 451, "atomic_swap": 451, "atomicexpand": 451, "atomicexpandpass": 451, "atomicrmw": [447, 451, 534], "atomtyp": 605, "atop": 526, "att": [473, 474, 496, 559], "attach": [513, 515, 517, 529, 546, 554, 559, 572, 573, 588, 589, 598, 605, 622, 623, 630, 633, 650, 651, 652, 653, 654, 665], "attack": [465, 559], "attacker_data": 606, "attacker_offset": 606, "attempt": [442, 450, 454, 458, 464, 469, 475, 482, 493, 495, 496, 507, 510, 513, 517, 519, 524, 529, 545, 549, 554, 559, 561, 564, 573, 587, 589, 600, 601, 602, 606, 608, 610, 611, 626, 627, 629, 630, 635, 636, 637], "attend": 568, "attende": 568, "attent": [465, 467, 517, 535, 559, 601, 621, 626, 633], "attornei": 517, "attr": [0, 2, 3, 4, 447, 454, 467, 559, 605, 613, 628, 629], "attr0": [18, 116, 200, 348, 454], "attr1": 454, "attr32": [18, 116, 200, 348], "attract": [442, 517, 526, 568], "attrdump": 613, "attrgrp": 454, "attrgrp0": 454, "attrgrp1": 454, "attribut": [18, 116, 200, 348, 454, 464, 473, 474, 484, 486, 495, 496, 500, 501, 505, 513, 519, 521, 526, 533, 536, 539, 556, 562, 571, 572, 574, 576, 588, 589, 595, 597, 598, 600, 604, 610, 613, 617, 622, 626, 627], "attributelist": [454, 613], "attributerefer": 613, "attrimpl": 613, "attrinfomap": 613, "attrkind": [555, 613], "attrlist": 613, "attrparsedattrimpl": 613, "attrparsedattrkind": 613, "attrparsedattrlist": 613, "attrparserstringswitch": 613, "attrpchread": 613, "attrpchwrit": 613, "attrspel": 613, "attrspellinglistindex": 613, "attrtemplateinstanti": 613, "attrvisitor": 613, "atyp": 527, "au": [450, 537, 627], "audienc": [524, 632], "audit": 606, "augment": [442, 447, 456, 535, 541, 589, 653, 664], "augmentation_str": [442, 447], "augmentation_string_s": 447, "august": 564, "aurora": 595, "authent": 546, "author": [442, 459, 464, 466, 467, 468, 513, 517, 522, 530, 546, 552, 559, 560, 571, 573, 588, 594, 605, 606], "authorit": 497, "auto": [445, 464, 479, 481, 482, 498, 563, 573, 589, 596, 605, 622, 624, 628, 633, 634, 635, 636, 637, 649, 650, 651, 652, 653, 654, 655, 656], "autoconf": [463, 517, 547], "autocrlf": 529, "autodetect": [462, 468, 473, 474, 481, 493], "autogener": 517, "autoinsert": 589, "autom": [449, 464, 508, 517, 529, 588, 590, 594, 613, 617], "automat": [442, 444, 447, 450, 457, 462, 464, 467, 471, 472, 473, 487, 495, 509, 512, 517, 522, 526, 528, 529, 532, 544, 546, 550, 551, 552, 557, 558, 563, 565, 566, 571, 573, 588, 589, 590, 591, 596, 597, 604, 605, 607, 613, 615, 616, 619, 622, 626, 627, 628, 631, 650, 652, 654, 655, 656, 661, 662, 663], "automaton": [464, 613], "autotool": 529, "autovector": 625, "aux": 589, "auxiliari": [447, 613, 626], "auxiliarydata": 668, "av": 570, "avail": [62, 332, 392, 442, 446, 447, 451, 460, 462, 463, 464, 467, 471, 472, 473, 474, 480, 481, 487, 492, 493, 496, 502, 507, 509, 510, 515, 517, 519, 522, 524, 529, 533, 537, 538, 539, 541, 544, 545, 546, 548, 549, 551, 552, 554, 558, 559, 561, 586, 587, 589, 591, 593, 595, 597, 598, 599, 600, 601, 602, 605, 606, 608, 610, 611, 612, 613, 615, 617, 618, 619, 620, 621, 623, 625, 626, 627, 628, 629, 633, 648, 650, 651, 652, 653, 655, 659, 661, 662, 663], "available_extern": [454, 559], "available_featur": [472, 621], "avalanch": 589, "avenu": 601, "averag": [456, 478, 493, 545, 561, 652, 655, 663], "avl": 589, "avoid": [442, 445, 447, 450, 452, 453, 454, 458, 462, 463, 464, 468, 493, 501, 517, 521, 525, 526, 527, 535, 536, 538, 543, 548, 552, 554, 557, 559, 561, 562, 563, 571, 587, 588, 589, 591, 594, 596, 598, 599, 602, 603, 605, 606, 608, 609, 610, 611, 615, 621, 622, 626, 627, 637, 654, 656, 665], "avr": 594, "avx": [559, 621, 625], "avx1": 621, "avx2": [559, 621], "avx512": [533, 559, 595], "avx512bw": 598, "avx512f": 598, "awai": [455, 460, 467, 468, 510, 513, 517, 526, 552, 559, 562, 568, 587, 589, 591, 605, 606, 627, 659], "awaken": 519, "awar": [450, 451, 462, 463, 464, 467, 468, 509, 510, 517, 527, 529, 558, 559, 561, 573, 589, 591, 595, 603, 605, 610], "awkward": [509, 527], "ax": [464, 521, 559, 617, 626], "axi": [606, 625], "axpi": 510, "ayal": 596, "azul": 603, "b": [442, 447, 454, 455, 459, 463, 464, 467, 468, 472, 476, 481, 493, 494, 495, 502, 509, 513, 515, 516, 517, 519, 521, 524, 527, 529, 532, 533, 539, 543, 544, 554, 556, 557, 559, 570, 571, 572, 573, 584, 587, 589, 591, 593, 596, 605, 610, 615, 617, 621, 622, 625, 626, 627, 649, 650, 654, 660, 661, 665], "b0000": 447, "b1": [554, 573, 615, 623, 625], "b128": [0, 2, 3, 4, 444], "b13e8756b13a00cf168300179061fb4b91fefb": 561, "b16": [444, 446], "b16x2": [0, 4, 444], "b16x3": 444, "b16x4": 444, "b2": [554, 559, 573, 623, 625], "b256": 444, "b3": 554, "b32": [0, 2, 3, 4, 444, 446, 572], "b32x2": [0, 2, 3, 4], "b512": 444, "b64": [0, 2, 3, 4, 444, 446], "b64x2": [0, 2, 3, 4], "b96": 444, "b_ctor_bas": 468, "bach": 611, "back": [442, 447, 451, 458, 462, 464, 467, 476, 481, 502, 513, 517, 519, 524, 526, 527, 533, 538, 544, 545, 547, 550, 551, 559, 561, 573, 586, 589, 591, 598, 602, 603, 604, 605, 606, 608, 610, 614, 617, 621, 624, 631, 634, 650, 651, 652, 653, 654, 655, 656, 662, 663, 665], "backedg": [455, 563, 587, 610, 652, 653, 663, 664], "backend": [442, 451, 456, 458, 469, 474, 480, 493, 496, 508, 510, 511, 519, 520, 524, 525, 529, 538, 539, 540, 541, 546, 548, 553, 554, 557, 559, 565, 589, 594, 595, 602, 605, 608, 610, 624, 667], "background": [463, 465, 566, 589, 591, 613, 629], "backport": [550, 603], "backslash": 561, "backtrac": [464, 656], "backtrace_symbol": 545, "backup": [544, 591], "backward": [442, 447, 454, 509, 514, 555, 581, 589, 606, 610, 623, 625], "bad": [458, 467, 469, 532, 548, 554, 559, 571, 589, 599, 605, 606, 611, 631, 653, 656, 664], "badarchivememb": 589, "badfileformat": 589, "badli": [524, 589], "bag": 525, "bail": [559, 628, 634], "bailouton": 589, "bake": [514, 536, 573], "balanc": [449, 451, 517, 602], "ball": 568, "bam": 467, "ban": [554, 601], "bandwidth": 559, "bang": 616, "bangoper": 616, "bank": [445, 534, 539, 540, 541], "bank_mask": [0, 1, 3, 4, 7, 8, 447], "banner": 589, "bar": [462, 463, 464, 466, 467, 468, 472, 482, 483, 493, 498, 504, 506, 509, 510, 513, 514, 517, 521, 522, 557, 559, 568, 572, 573, 589, 591, 600, 605, 610, 615, 616, 621, 623, 625, 631, 650, 652, 661, 663], "bar_bodi": 573, "bar_in_b_cc": 456, "bar_map": 467, "bare": [480, 549, 559, 608, 626, 633], "baremet": 549, "baremetalarm": 549, "barlist": 467, "barrier": [451, 493, 549, 559, 606, 610], "barrier0": 559, "bart": 447, "base": [19, 20, 54, 55, 117, 118, 141, 201, 202, 239, 240, 349, 350, 384, 385, 442, 444, 446, 447, 449, 450, 454, 456, 458, 460, 461, 462, 463, 465, 466, 468, 472, 473, 475, 478, 479, 481, 482, 483, 493, 495, 497, 498, 509, 512, 513, 514, 517, 518, 519, 521, 525, 526, 529, 532, 533, 534, 536, 538, 543, 545, 547, 549, 550, 551, 553, 556, 557, 559, 560, 561, 563, 564, 565, 569, 570, 571, 572, 573, 574, 576, 588, 590, 591, 592, 593, 595, 596, 597, 598, 599, 601, 602, 603, 605, 606, 607, 611, 613, 615, 616, 617, 620, 621, 623, 624, 625, 626, 627, 628, 631, 633, 634, 635, 636, 637, 649, 650, 651, 652, 653, 654, 655, 656, 660, 661, 662, 663, 664, 665], "base0": 619, "base1": 619, "base2": [559, 619], "base_offset": 610, "baseclass": 615, "baseclasslist": 616, "baseclasslistn": 616, "basedonaddress": 576, "basedonseg": 576, "basedonsegmentaddress": 576, "basedonsegmentvalu": 576, "basedonself": 576, "basedontyp": 576, "basedonvalu": 576, "baseinstrinfo": 613, "baselay": 634, "baselin": [464, 551, 606, 619], "basemulticlasslist": 616, "basenam": [506, 575, 605], "basename_t": 472, "baseobject": 606, "baseopcod": [556, 626], "basereg": 464, "baseregisterinfo": 613, "basereloc": 501, "baseti": 559, "basety1": 559, "basety2": 559, "basetyp": 559, "bash": [472, 487, 518, 607, 611], "basi": [442, 447, 478, 506, 509, 517, 518, 526, 559, 570, 574, 589, 591, 596, 602, 603, 606, 610, 653, 659, 664], "basic": [447, 451, 455, 456, 457, 463, 464, 467, 473, 476, 478, 481, 484, 487, 488, 495, 509, 510, 513, 514, 516, 517, 519, 522, 525, 526, 527, 529, 531, 534, 536, 539, 543, 551, 553, 554, 555, 560, 563, 566, 570, 572, 573, 576, 585, 590, 596, 600, 602, 605, 606, 607, 608, 610, 611, 614, 616, 619, 620, 625, 629, 634, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 661, 662, 663, 664, 665, 666], "basic_": 615, "basic_block": 661, "basic_p": 615, "basic_r": 615, "basic_ss": 615, "basicaa": 627, "basicaliasanalysi": [587, 627, 656], "basicblock": [467, 529, 570, 587, 594, 596, 627, 650, 651, 652, 653, 654, 655, 656, 663], "basicblocklisttyp": 589, "basicblockutil": 589, "basicirlayermaterializationunit": 634, "basictyp": 559, "bastien": 603, "batch": 531, "batteri": 598, "battl": [497, 592], "bayer": 593, "baz": [463, 467, 498, 506, 509, 589, 605, 616, 623, 625, 652, 663], "baz_in_c_cc": 456, "bb": [467, 488, 534, 554, 559, 560, 565, 571, 572, 589, 605, 606, 626, 650, 651, 652, 653, 654, 655, 656, 661, 662, 663, 664, 665], "bb0_1": 572, "bb0_2": 572, "bb0_26": 572, "bb0_28": 572, "bb0_29": 572, "bb0_30": 572, "bb0_4": 572, "bb0_5": 572, "bb1": [454, 539, 559, 570, 605, 606], "bb10": 606, "bb2": [454, 539, 559, 570, 605], "bb3": 559, "bb4": 539, "bbrefer": 565, "bc": [450, 454, 458, 459, 464, 469, 473, 477, 485, 494, 507, 517, 522, 529, 531, 544, 553, 572, 574, 589, 597, 621, 627], "bcanalyz": [454, 471, 600], "bcc": 626, "bcpl": 616, "bcplcomment": 616, "bcreader": 480, "bcsymbolmap": 470, "bdce": 560, "bear": 468, "beat": 543, "beauti": [648, 650, 653, 659, 661, 664], "becam": 442, "becaus": [442, 445, 447, 449, 450, 451, 453, 454, 456, 458, 460, 463, 464, 467, 468, 472, 476, 493, 494, 497, 509, 510, 513, 514, 516, 517, 519, 522, 523, 524, 525, 526, 527, 529, 531, 532, 536, 538, 541, 545, 548, 550, 551, 552, 554, 555, 556, 557, 559, 561, 562, 563, 564, 565, 569, 570, 571, 574, 576, 579, 581, 587, 588, 589, 591, 593, 594, 600, 603, 605, 606, 608, 611, 615, 616, 617, 620, 621, 622, 623, 625, 626, 627, 631, 634, 649, 650, 651, 652, 653, 654, 655, 656, 657, 659, 660, 661, 662, 663, 664, 665, 666], "becom": [442, 447, 453, 463, 464, 467, 486, 493, 506, 509, 510, 513, 517, 524, 527, 533, 535, 537, 539, 547, 552, 554, 559, 563, 587, 589, 591, 594, 603, 605, 606, 608, 610, 617, 621, 625, 626, 627, 628, 634, 649, 652, 654, 660, 663, 665], "been": [442, 447, 448, 451, 453, 458, 459, 461, 462, 463, 464, 466, 467, 468, 469, 472, 478, 493, 507, 509, 510, 512, 513, 515, 517, 519, 520, 521, 522, 524, 526, 527, 531, 534, 535, 536, 538, 539, 551, 559, 561, 564, 566, 571, 572, 573, 574, 576, 577, 580, 582, 584, 585, 587, 588, 589, 590, 591, 593, 594, 596, 598, 599, 600, 601, 602, 603, 605, 606, 608, 610, 611, 612, 614, 615, 616, 617, 622, 623, 626, 627, 628, 629, 631, 633, 634, 635, 636, 637, 649, 650, 651, 652, 653, 654, 655, 656, 657, 660, 661, 662, 663, 664, 666], "befor": [24, 25, 26, 27, 28, 31, 32, 33, 121, 122, 123, 124, 125, 205, 206, 207, 212, 213, 322, 354, 355, 356, 357, 358, 361, 362, 363, 442, 445, 446, 447, 450, 451, 453, 458, 461, 462, 463, 464, 466, 468, 470, 472, 474, 476, 482, 493, 495, 497, 504, 506, 507, 509, 510, 512, 513, 517, 518, 519, 520, 522, 523, 524, 526, 527, 529, 531, 532, 536, 537, 538, 539, 549, 550, 551, 552, 553, 554, 557, 559, 563, 564, 565, 568, 570, 571, 572, 573, 574, 577, 587, 588, 589, 594, 596, 599, 600, 603, 605, 606, 607, 608, 609, 610, 613, 615, 616, 620, 621, 622, 625, 626, 627, 628, 629, 630, 631, 633, 634, 636, 637, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 659, 660, 661, 662, 663, 664, 665, 666], "beforehand": 563, "began": [467, 573, 591], "begin": [442, 447, 450, 454, 462, 464, 467, 468, 476, 484, 493, 509, 517, 519, 524, 526, 529, 531, 539, 551, 552, 559, 560, 564, 570, 571, 572, 575, 576, 577, 581, 589, 594, 600, 602, 605, 606, 608, 611, 616, 621, 626, 628, 630, 631, 633, 634, 652, 654, 655, 656, 660, 661, 662, 663, 664, 665], "beginassembli": 526, "beginn": [457, 512], "behalf": [512, 517, 588], "behav": [442, 447, 450, 451, 459, 463, 467, 481, 493, 496, 510, 513, 517, 519, 523, 528, 553, 559, 563, 635], "behavior": [447, 451, 457, 459, 463, 464, 465, 467, 468, 469, 472, 476, 484, 493, 509, 510, 513, 517, 519, 520, 522, 524, 526, 553, 554, 559, 561, 563, 573, 574, 587, 589, 598, 601, 602, 603, 606, 623, 625, 626, 627, 649, 652, 654, 660, 663, 665], "behaviour": [453, 459, 509, 534, 539, 559, 565, 621, 625], "behind": [464, 467, 468, 516, 517, 553, 554, 555, 556, 559, 572, 589, 610, 624, 627, 633], "being": [46, 115, 136, 199, 231, 347, 376, 442, 445, 446, 447, 450, 451, 453, 454, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 472, 476, 478, 484, 485, 487, 493, 502, 509, 510, 512, 513, 514, 517, 519, 520, 523, 525, 527, 529, 532, 537, 538, 547, 549, 551, 552, 553, 555, 557, 558, 559, 561, 563, 564, 570, 571, 572, 573, 574, 577, 579, 581, 585, 587, 589, 591, 594, 598, 601, 602, 603, 605, 606, 608, 610, 611, 613, 614, 615, 616, 617, 621, 622, 625, 626, 627, 628, 629, 630, 631, 633, 634, 635, 636, 637, 649, 650, 652, 653, 654, 656, 657, 661, 663, 664, 665, 666], "belevich": 510, "belief": 465, "believ": [442, 465, 517, 553, 559, 574, 589, 601, 606, 651, 652, 653, 662, 663, 664], "bellow": 516, "belong": [447, 467, 509, 513, 516, 519, 521, 559, 571, 589, 602, 623, 630, 654], "below": [46, 52, 109, 136, 139, 195, 231, 232, 237, 292, 376, 377, 382, 441, 442, 443, 445, 446, 447, 449, 450, 451, 454, 456, 462, 463, 464, 466, 467, 468, 473, 476, 486, 488, 493, 498, 502, 506, 509, 510, 512, 513, 514, 517, 524, 529, 531, 537, 539, 545, 547, 548, 550, 551, 552, 557, 558, 559, 565, 570, 571, 572, 574, 577, 582, 587, 588, 589, 590, 591, 593, 596, 599, 602, 603, 604, 605, 606, 608, 610, 613, 621, 623, 625, 626, 627, 628, 629, 630, 631, 634, 649, 651, 652, 653, 654, 655, 656, 660, 662, 664, 665], "benchmark": [462, 471, 510, 517, 528, 529, 551, 589, 590, 597, 599, 605, 606, 620, 621, 625], "benchspec": 620, "benderski": 510, "beneath": 607, "benefici": [460, 513, 535, 541, 559, 622, 625], "benefit": [442, 450, 460, 467, 524, 526, 527, 533, 538, 548, 559, 561, 563, 587, 590, 594, 602, 605, 634, 635, 636, 651, 655], "benign": 589, "benjamin": 526, "berkelei": 502, "bernstein": 605, "besid": [509, 528, 559, 591, 601, 606, 621, 626, 653, 660, 664], "bespok": 526, "best": [442, 450, 453, 460, 463, 464, 466, 467, 474, 487, 493, 517, 519, 522, 526, 532, 541, 548, 553, 554, 559, 568, 587, 589, 596, 602, 605, 606, 607, 608, 610, 624, 648, 649, 658, 660, 666], "better": [442, 447, 451, 457, 464, 466, 467, 468, 470, 487, 493, 515, 517, 519, 528, 533, 534, 539, 543, 545, 547, 548, 553, 554, 559, 560, 561, 563, 568, 569, 570, 571, 573, 587, 589, 591, 598, 605, 606, 620, 625, 627, 628, 629, 633, 649, 652, 654, 657, 660, 663, 665, 666], "bettor": 573, "between": [442, 445, 447, 449, 450, 451, 453, 454, 463, 464, 467, 468, 473, 482, 484, 486, 492, 493, 497, 498, 501, 509, 513, 514, 516, 517, 518, 519, 520, 522, 526, 529, 532, 533, 534, 539, 549, 551, 554, 556, 557, 559, 560, 561, 563, 564, 565, 567, 570, 571, 572, 573, 575, 577, 580, 584, 587, 588, 591, 594, 598, 599, 600, 602, 605, 606, 608, 610, 611, 613, 615, 616, 619, 621, 622, 624, 626, 628, 630, 631, 648, 651, 652, 659, 662, 663], "bewar": [526, 568], "beyl": [594, 603], "beylsdistinguish": 594, "beyond": [447, 463, 464, 508, 519, 524, 527, 537, 539, 559, 566, 567, 570, 573, 589, 603, 606, 607, 617], "bf": 593, "bf16": [559, 598], "bf16x2": 8, "bfd": [525, 544], "bfdname": 495, "bff": 589, "bfi": 559, "bfloat": [454, 559, 598], "bfloat16": 598, "bg": 598, "bh": 617, "bia": 452, "bicub": 593, "bidirect": 589, "big": [452, 460, 464, 467, 474, 517, 524, 538, 547, 559, 589, 593, 599, 621, 624, 626, 630, 650, 653, 654, 661, 664, 665], "bigblock": 474, "bigger": [442, 467, 513, 563, 631], "biggest": [464, 557], "bigmip": 495, "bigmsf": 581, "bikesh": 552, "bilinear": 593, "bin": [449, 469, 481, 487, 509, 518, 525, 529, 531, 532, 539, 544, 547, 548, 549, 550, 590, 591, 599, 617, 619, 621, 626, 629], "binari": [447, 451, 454, 456, 458, 460, 461, 462, 464, 470, 471, 476, 477, 480, 481, 485, 488, 490, 496, 497, 498, 502, 506, 507, 509, 510, 511, 512, 514, 517, 518, 521, 525, 526, 529, 531, 544, 545, 548, 549, 550, 561, 564, 569, 571, 572, 577, 580, 584, 586, 587, 589, 599, 602, 605, 606, 613, 615, 626, 628, 629, 630, 650, 651, 652, 654, 655, 656, 657, 658, 659, 661, 662, 663, 665, 666, 668], "binary128": 559, "binary16": 559, "binary32": 559, "binary64": 559, "binary_nam": 506, "binary_preced": [664, 665], "binaryexprast": [649, 650, 651, 652, 653, 654, 655, 656], "binaryoper": [467, 589], "binarypreced": [653, 654, 655, 656], "bind": [462, 467, 495, 496, 522, 539, 559, 573, 597, 615, 616, 626, 631, 637, 649, 650, 651, 652, 653, 654, 655, 656, 660, 661, 662, 663, 664, 665], "bindex": 626, "bindir": 480, "binfmt": 529, "binfmt_misc": 529, "bininteg": 616, "binloc": 656, "binop": [446, 559, 649, 650, 651, 652, 653, 654, 655, 656, 660, 661, 662, 663, 664, 665], "binop_preced": [660, 661, 662, 663, 664, 665], "binoppreced": [649, 650, 651, 652, 653, 654, 655, 656], "binopprototyp": [664, 665], "binoprh": [649, 650, 651, 652, 653, 654, 655, 656, 660, 661, 662, 663, 664, 665], "binpath": 515, "binutil": [462, 511, 518, 529, 544, 546, 550], "bisect": [528, 589, 597], "bisect_script": 591, "bison": 620, "bit": [16, 19, 20, 22, 23, 27, 28, 30, 39, 40, 41, 43, 46, 47, 48, 52, 54, 55, 58, 62, 63, 82, 94, 95, 109, 112, 114, 117, 118, 119, 120, 124, 125, 131, 132, 136, 137, 139, 141, 167, 195, 198, 201, 202, 203, 204, 208, 209, 210, 211, 212, 213, 215, 219, 220, 221, 222, 224, 225, 226, 228, 231, 232, 233, 237, 243, 266, 292, 293, 298, 303, 323, 324, 332, 338, 346, 349, 350, 352, 353, 357, 358, 360, 369, 370, 371, 373, 376, 377, 378, 382, 384, 385, 388, 392, 393, 413, 426, 427, 441, 444, 445, 446, 449, 451, 453, 456, 462, 463, 464, 468, 478, 487, 510, 511, 513, 514, 517, 519, 520, 521, 525, 526, 527, 529, 531, 533, 534, 535, 538, 543, 546, 552, 555, 557, 560, 561, 563, 565, 569, 571, 572, 573, 576, 577, 581, 582, 584, 598, 599, 602, 605, 608, 610, 613, 615, 616, 617, 623, 626, 627, 630, 631, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666], "bitbucket": [591, 593], "bitcast": [450, 453, 468, 513, 519, 526, 527, 533, 534, 571, 587, 623, 626], "bitcod": [458, 460, 464, 469, 471, 473, 476, 477, 480, 484, 485, 488, 489, 507, 517, 520, 529, 531, 544, 553, 559, 571, 572, 587, 589, 597, 619, 627], "bitcoderead": 520, "bitcodewrit": [520, 589], "bite": 522, "bitfield": [451, 576, 577, 581, 630], "bitless": 584, "bitmap": 454, "bitmask": [445, 559, 576, 584], "bitmask_perm": 445, "bitpack": 621, "bitpattern": 559, "bitread": 558, "bits_0_7": 534, "bits_16_23": 534, "bits_24_31": 534, "bits_8_15": 534, "bitset": [561, 623, 626, 631], "bitsetcas": 631, "bitstreamwrit": 520, "bitwidth": [454, 534, 559, 571, 610], "bitwis": [446, 464, 587], "bjark": 510, "bjarn": 589, "bl": [468, 521, 617], "black": [539, 628], "blah": [467, 509, 561], "blame": [465, 588, 591], "blank": [467, 468, 476, 483, 498, 517, 566, 588, 607, 649, 657, 658, 659, 660, 666], "blanket": 573, "blarg": 589, "blatant": 654, "blatantli": 603, "blatent": 665, "bleed": [463, 528], "blend": 464, "blgp": 8, "blind": 464, "blissfulli": [509, 510], "bloat": [467, 514, 545], "blob": [454, 504, 559, 591, 599, 600], "block": [442, 447, 450, 456, 457, 459, 463, 464, 474, 478, 479, 481, 484, 486, 487, 488, 496, 497, 498, 513, 516, 517, 519, 524, 526, 534, 535, 536, 539, 543, 551, 554, 557, 560, 561, 563, 566, 570, 571, 572, 579, 580, 585, 594, 596, 597, 599, 600, 603, 604, 605, 608, 613, 615, 623, 625, 626, 636, 637, 649, 650, 651, 652, 653, 654, 655, 656, 660, 661, 662, 663, 664, 665], "block_begin": [661, 662, 663, 664, 665], "block_par": [663, 664, 665], "blockaddress": [534, 559], "blockcodes": 600, "blockdim": 572, "blocker": [551, 599], "blockextractor": 539, "blockfrequencyinfo": [455, 597], "blockid": [454, 600], "blockidx": 572, "blockinfo_block": 600, "blocklen": 454, "blocklen_32": 454, "blockmapaddr": 581, "blocknam": 454, "blockscalartrait": 631, "blocksiz": 581, "blocksizei": 572, "blocksizex": 572, "blocksizez": 572, "blog": [591, 606], "blogspot": 606, "bloom": 464, "blow": 561, "blr": 521, "blunt": 629, "blx": 521, "bmi2": 606, "bnextind": 559, "bnf": 447, "bo": 467, "board": [547, 550, 601, 603], "boat": [467, 594], "bob": 631, "bodi": [442, 447, 454, 458, 468, 509, 513, 516, 517, 519, 554, 559, 561, 563, 565, 571, 573, 589, 594, 604, 606, 610, 615, 617, 626, 627, 629, 636, 637, 649, 650, 651, 652, 653, 654, 655, 656, 660, 661, 662, 663, 664, 665], "body_v": 665, "bodyexpr": [652, 653, 654, 655, 656, 665], "bodyitem": 616, "bodylist": 616, "bodysequ": 630, "bodyv": [654, 655, 656], "boehm": 526, "bogner": 542, "bogu": [627, 655], "boil": [453, 517, 552, 591, 652, 653, 663, 664], "boiler": [509, 589], "boilerpl": [509, 526, 552, 613, 662], "bold": [566, 607], "bonair": 447, "bondhugula": 593, "bone": [608, 626, 633], "book": [467, 511, 512, 532, 560, 589, 627, 632], "bookkeep": [587, 589], "bool": [450, 451, 460, 462, 464, 467, 493, 509, 513, 520, 536, 537, 552, 559, 561, 571, 574, 589, 598, 600, 605, 626, 627, 628, 629, 631, 650, 651, 652, 653, 654, 655, 656, 661, 662, 663, 664, 665], "boolean": [447, 454, 462, 464, 467, 473, 513, 558, 559, 584, 587, 589, 598, 613, 615, 621, 626, 652, 663], "boolean128": 584, "boolean16": 584, "boolean32": 584, "boolean64": 584, "boolean8": 584, "boolean_property_nam": 558, "boolordefault": 509, "booltmp": [650, 651, 652, 653, 654, 655, 656, 661, 662, 663, 664, 665], "boost": 452, "bootstrap": [460, 529], "bootstrap_": [449, 460, 518], "bore": [468, 627], "boringssl": 561, "bork": [509, 615], "borrow": [559, 589], "bot": [449, 517, 528, 529, 591], "both": [14, 112, 196, 313, 344, 442, 443, 445, 446, 447, 448, 449, 450, 451, 454, 456, 458, 460, 462, 463, 464, 465, 466, 467, 468, 472, 476, 481, 489, 491, 493, 494, 497, 498, 509, 510, 511, 514, 516, 517, 519, 522, 524, 525, 526, 527, 533, 534, 538, 541, 543, 545, 549, 550, 551, 552, 554, 559, 561, 563, 564, 569, 570, 571, 573, 577, 581, 582, 586, 587, 589, 594, 596, 598, 601, 602, 603, 604, 605, 606, 608, 610, 613, 615, 616, 617, 621, 622, 625, 626, 627, 628, 629, 631, 633, 634, 649, 650, 651, 652, 654, 656, 657, 658, 660, 661, 662, 663, 665, 666], "bother": [634, 654, 665], "botsalgn": 593, "botsspar": 593, "bottom": [455, 474, 509, 536, 538, 559, 560, 563, 587, 588, 611, 625, 626, 627, 634, 663], "bou_fals": 509, "bou_tru": 509, "bou_unset": 509, "bougacha": 542, "bound": [442, 446, 493, 517, 538, 557, 559, 565, 572, 589, 609, 610, 615, 626, 631], "bound_ctrl": [0, 1, 3, 4, 7, 8, 447], "boundari": [451, 453, 454, 461, 464, 513, 545, 559, 563, 573, 587, 589, 606, 651], "bourn": [509, 529], "box": [464, 517, 539, 588, 598, 605, 606, 628], "bp": [447, 608, 617], "bpf": [464, 529, 561, 594], "bpf_add": 464, "bpf_alu": 464, "bpf_alu64": 464, "bpf_and": 464, "bpf_arsh": 464, "bpf_b": 464, "bpf_call": 464, "bpf_class": 464, "bpf_div": 464, "bpf_dw": 464, "bpf_end": 464, "bpf_exit": 464, "bpf_h": 464, "bpf_imm": 464, "bpf_ja": 464, "bpf_jeq": 464, "bpf_jge": 464, "bpf_jgt": 464, "bpf_jmp": 464, "bpf_jne": 464, "bpf_jset": 464, "bpf_jsge": 464, "bpf_jsgt": 464, "bpf_k": 464, "bpf_ld": 464, "bpf_ldx": 464, "bpf_lsh": 464, "bpf_mem": 464, "bpf_mod": 464, "bpf_mov": 464, "bpf_mul": 464, "bpf_neg": 464, "bpf_op": 464, "bpf_or": 464, "bpf_rsh": 464, "bpf_st": 464, "bpf_stx": 464, "bpf_sub": 464, "bpf_w": 464, "bpf_x": 464, "bpf_xadd": 464, "bpf_xor": 464, "bpl": 617, "bptr": 559, "br": [454, 455, 513, 519, 522, 523, 539, 563, 570, 572, 605, 622, 652, 653, 654, 655, 656, 663, 665], "bra": 572, "brace": [468, 519, 559, 589, 615, 616, 621], "bracket": [468, 510, 517, 519, 558, 559, 565, 605, 631], "bradburi": 594, "bradburyconcern": 594, "bradburytransit": 594, "brain": [454, 467, 559], "branch": [47, 137, 233, 378, 442, 446, 461, 462, 464, 467, 481, 493, 511, 513, 517, 518, 519, 522, 523, 524, 529, 532, 534, 554, 559, 563, 565, 574, 588, 589, 594, 596, 597, 598, 610, 623, 652, 653, 654, 655, 656, 663, 664, 665], "branch_weight": [455, 456], "branchfold": [554, 626], "branchfunnel": 559, "branchless": 606, "branchprob": 456, "brand": 627, "brave": [649, 660], "breadth": [474, 593, 658, 659], "breagen": 593, "break": [442, 453, 456, 462, 464, 467, 509, 517, 519, 520, 521, 526, 546, 551, 554, 555, 559, 563, 567, 586, 592, 605, 610, 625, 626, 627, 648, 649, 650, 651, 652, 653, 654, 655, 656, 659, 660, 663, 664], "breakag": [517, 591], "breakcriticaledg": 627, "breakdown": 457, "breakpoint": [447, 458, 515, 554, 559, 656, 658], "brendan": 629, "breviti": [453, 572, 573], "brew": 589, "brian": 596, "brick": 571, "brief": [450, 462, 463, 467, 497, 509, 529, 553, 571], "briefli": [514, 548, 571, 627], "brig": 447, "bring": [524, 526, 540, 561, 600, 610, 633, 657, 666], "broad": [509, 517, 526, 589, 592, 651, 659, 662], "broadcast": [445, 464, 559, 560], "broader": 606, "broadli": 538, "broken": [442, 447, 453, 466, 472, 495, 505, 517, 522, 532, 546, 559, 589, 591, 594, 606, 610, 615, 621, 626, 627, 632], "broker": 559, "brought": [571, 591, 603], "brows": [462, 525, 588, 591, 650, 661], "browsabl": 462, "browser": [548, 588, 629], "brtarget": 626, "brtarget8": 626, "bruce": 589, "bruno": 594, "bsd": [476, 494, 517, 529], "bss": [447, 474, 494, 502, 504, 521], "bswap": 520, "bswap32r_bswap64r_movsx64rr32": 487, "bt": 515, "bt331": 593, "btc": 559, "btver2": 493, "bucket": [492, 497, 500, 501, 579, 582, 584, 589, 602, 605], "bucket_count": 605, "budget": 447, "buf": 600, "buffer": [20, 34, 35, 36, 37, 38, 60, 61, 82, 118, 127, 128, 129, 130, 145, 146, 167, 202, 208, 209, 210, 211, 216, 217, 218, 219, 220, 221, 222, 223, 245, 246, 266, 331, 350, 364, 365, 366, 367, 368, 390, 391, 413, 461, 487, 493, 513, 519, 559, 562, 577, 582, 584, 589, 605, 613, 628, 630, 649, 650, 651, 652, 653, 654, 655, 656, 657, 659, 660, 661, 662, 663, 664, 665, 666], "buffer_atomic_add": [0, 2, 3, 4], "buffer_atomic_add_f32": 8, "buffer_atomic_add_x2": [0, 2, 3, 4], "buffer_atomic_and": [0, 2, 3, 4], "buffer_atomic_and_x2": [0, 2, 3, 4], "buffer_atomic_cmpswap": [0, 2, 3, 4], "buffer_atomic_cmpswap_x2": [0, 2, 3, 4], "buffer_atomic_dec": [0, 2, 3, 4], "buffer_atomic_dec_x2": [0, 2, 3, 4], "buffer_atomic_inc": [0, 2, 3, 4, 447], "buffer_atomic_inc_x2": [0, 2, 3, 4], "buffer_atomic_or": [0, 2, 3, 4], "buffer_atomic_or_x2": [0, 2, 3, 4], "buffer_atomic_pk_add_f16": 8, "buffer_atomic_smax": [0, 2, 3, 4], "buffer_atomic_smax_x2": [0, 2, 3, 4], "buffer_atomic_smin": [0, 2, 3, 4], "buffer_atomic_smin_x2": [0, 2, 3, 4], "buffer_atomic_sub": [0, 2, 3, 4], "buffer_atomic_sub_x2": [0, 2, 3, 4], "buffer_atomic_swap": [0, 2, 3, 4], "buffer_atomic_swap_x2": [0, 2, 3, 4], "buffer_atomic_umax": [0, 2, 3, 4], "buffer_atomic_umax_x2": [0, 2, 3, 4], "buffer_atomic_umin": [0, 2, 3, 4], "buffer_atomic_umin_x2": [0, 2, 3, 4], "buffer_atomic_xor": [0, 2, 3, 4], "buffer_atomic_xor_x2": [0, 2, 3, 4], "buffer_gl": 447, "buffer_gl0_inv": [0, 447], "buffer_gl1_inv": [0, 447], "buffer_load": 447, "buffer_load_dword": [0, 2, 3, 4, 447], "buffer_load_dwordx2": [0, 2, 3, 4], "buffer_load_dwordx3": [0, 2, 3, 4], "buffer_load_dwordx4": [0, 2, 3, 4], "buffer_load_format_d16_hi_x": 4, "buffer_load_format_d16_x": [0, 3, 4], "buffer_load_format_d16_xi": [0, 3, 4], "buffer_load_format_d16_xyz": [0, 3, 4], "buffer_load_format_d16_xyzw": [0, 3, 4], "buffer_load_format_x": [0, 2, 3, 4], "buffer_load_format_xi": [0, 2, 3, 4], "buffer_load_format_xyz": [0, 2, 3, 4], "buffer_load_format_xyzw": [0, 2, 3, 4], "buffer_load_sbyt": [0, 2, 3, 4], "buffer_load_sbyte_d16": [0, 4], "buffer_load_sbyte_d16_hi": [0, 4], "buffer_load_short_d16": [0, 4], "buffer_load_short_d16_hi": [0, 4], "buffer_load_sshort": [0, 2, 3, 4], "buffer_load_ubyt": [0, 2, 3, 4], "buffer_load_ubyte_d16": [0, 4], "buffer_load_ubyte_d16_hi": [0, 4], "buffer_load_ushort": [0, 2, 3, 4], "buffer_s": 630, "buffer_store_byt": [0, 2, 3, 4], "buffer_store_byte_d16_hi": [0, 4], "buffer_store_dword": [0, 2, 3, 4], "buffer_store_dwordx2": [0, 2, 3, 4], "buffer_store_dwordx3": [0, 2, 3, 4], "buffer_store_dwordx4": [0, 2, 3, 4, 444, 447], "buffer_store_format_d16_hi_x": 4, "buffer_store_format_d16_x": [0, 3, 4], "buffer_store_format_d16_xi": [0, 3, 4], "buffer_store_format_d16_xyz": [0, 3, 4], "buffer_store_format_d16_xyzw": [0, 3, 4], "buffer_store_format_x": [0, 2, 3, 4], "buffer_store_format_xi": [0, 2, 3, 4, 447], "buffer_store_format_xyz": [0, 2, 3, 4], "buffer_store_format_xyzw": [0, 2, 3, 4], "buffer_store_lds_dword": [3, 4], "buffer_store_short": [0, 2, 3, 4], "buffer_store_short_d16_hi": [0, 4], "buffer_wbinvl1": [2, 3, 4, 447], "buffer_wbinvl1_vol": [2, 3, 4, 447], "bug": [446, 447, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 488, 493, 517, 524, 528, 529, 532, 539, 545, 550, 551, 559, 560, 561, 565, 569, 571, 587, 588, 589, 591, 592, 594, 597, 598, 609, 615, 616, 617, 621, 650, 654, 657, 661, 665, 666], "buggi": 553, "buggy_cod": 545, "bugpoint": [471, 488, 517, 528, 529, 553, 574, 597, 627], "bugzilla": [457, 517, 525, 528, 551, 561, 591, 599, 603, 610, 621], "bui": [547, 603], "buid": 513, "build": [450, 454, 463, 464, 466, 467, 470, 471, 472, 473, 476, 480, 481, 487, 495, 507, 509, 510, 512, 513, 515, 516, 517, 519, 526, 528, 531, 532, 539, 545, 559, 562, 573, 574, 577, 586, 587, 596, 599, 602, 605, 606, 613, 614, 615, 617, 619, 620, 621, 623, 626, 628, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666], "build_add": [661, 662, 663, 664, 665], "build_alloca": 665, "build_arch": 590, "build_br": [663, 664, 665], "build_cal": [661, 662, 663, 664, 665], "build_cond_br": [663, 664, 665], "build_config": 531, "build_dir": 591, "build_docker_imag": 518, "build_fadd": 661, "build_fcmp": [661, 662, 663, 664, 665], "build_fmul": 661, "build_for_websit": 551, "build_fsub": 661, "build_load": 665, "build_mod": 531, "build_mul": [661, 662, 663, 664, 665], "build_phi": [663, 664, 665], "build_ret": [661, 662, 663, 664, 665], "build_shared_lib": [460, 462], "build_stor": 665, "build_sub": [661, 662, 663, 664, 665], "build_uitofp": [661, 662, 663, 664, 665], "buildattribut": 549, "buildbot": [466, 472, 517, 525, 528, 551, 591, 592, 621], "builddir": 546, "builder": [516, 528, 529, 555, 573, 589, 592, 595, 627, 635, 649, 650, 651, 652, 653, 654, 655, 656, 660, 661, 662, 663, 664, 665], "builder_at": 665, "buildmi": 464, "buildmod": 621, "buildmodul": 633, "buildnumb": 577, "buildslav": 546, "buildtool": 558, "built": [449, 454, 460, 462, 479, 480, 481, 483, 497, 506, 509, 512, 517, 518, 519, 524, 525, 527, 529, 531, 532, 538, 543, 544, 546, 548, 549, 550, 551, 552, 558, 559, 560, 561, 570, 573, 577, 584, 585, 587, 589, 590, 591, 592, 596, 602, 605, 606, 613, 617, 620, 621, 626, 629, 630, 649, 650, 651, 652, 653, 654, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666], "builtin": [451, 454, 472, 479, 559, 572, 589, 591, 595, 624, 627, 653, 654, 655, 656, 660, 664, 665], "bulk": [464, 517, 569, 589, 654, 665], "bulki": 447, "bullet": 552, "bump": [526, 589, 604], "bunch": [449, 463, 522, 589, 620, 651, 653, 659, 662, 664], "bundl": [470, 486, 513, 610], "bunzip2": 529, "bur": 560, "burden": [517, 559, 570, 606], "burg": 560, "burk": 593, "burn": 547, "burr": 474, "busi": [517, 603], "busiest": 588, "button": 588, "bw": 521, "bwave": 593, "bwaves_": 593, "bwaves_r": 593, "bx": 617, "by_valu": 447, "byarg": 559, "bypass": [445, 447, 510, 559, 636, 637], "byproduct": 538, "byte": [53, 54, 55, 140, 141, 238, 239, 240, 328, 383, 384, 385, 442, 445, 446, 447, 450, 451, 453, 454, 464, 470, 478, 486, 492, 493, 496, 500, 501, 504, 513, 514, 520, 521, 527, 534, 538, 545, 559, 561, 565, 569, 575, 576, 577, 579, 580, 581, 582, 584, 585, 589, 600, 602, 604, 605, 608, 610, 623, 626, 630, 660, 661, 662, 663, 664, 665], "byte_0": [445, 447], "byte_1": [445, 447], "byte_2": [445, 447], "byte_3": 445, "bytearrai": 559, "bytecod": [454, 461], "byteswap": 520, "byval": [454, 464, 559], "byvalu": 447, "bz2": 529, "bzip2": 529, "c": [442, 447, 449, 450, 451, 452, 454, 455, 456, 458, 459, 460, 463, 464, 468, 470, 471, 472, 475, 476, 479, 480, 481, 482, 483, 486, 493, 494, 496, 498, 500, 501, 502, 506, 509, 510, 511, 514, 515, 516, 518, 519, 520, 521, 524, 525, 526, 527, 528, 531, 532, 534, 536, 544, 545, 546, 547, 548, 549, 552, 553, 554, 557, 561, 562, 563, 566, 568, 570, 571, 572, 573, 574, 575, 576, 581, 587, 590, 591, 594, 598, 602, 603, 606, 607, 608, 610, 613, 615, 616, 617, 619, 620, 621, 622, 624, 625, 626, 627, 629, 631, 633, 634, 635, 636, 637, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667], "c1": [447, 623], "c11": [451, 510, 577, 580, 605], "c11bytes": [577, 580], "c11lineinfo": 580, "c11size": 580, "c13": [497, 577, 580], "c13bytes": [577, 580], "c13lineinfo": 580, "c13size": 580, "c17": 592, "c1_1": 498, "c1_2": 498, "c1_n": 498, "c1_u_1": 498, "c1_u_i": 498, "c1x": 559, "c2": [447, 623, 660, 661, 662, 663, 664, 665], "c2_1": 498, "c2_2": 498, "c2_n": 498, "c2_u_": 498, "c2_u_2": 498, "c2_v_1": 498, "c2_v_2": 498, "c2_v_i": 498, "c2_v_t": 498, "c5": 493, "c5y977rlqpw": 466, "c89": 467, "c9": 514, "c99": 559, "c_ctor_bas": 468, "c_str": [509, 572, 589, 648, 649, 650, 651, 652, 653, 654, 655, 656], "cach": [445, 447, 449, 450, 451, 460, 463, 464, 470, 487, 493, 535, 547, 559, 564, 573, 587, 589, 598, 602, 605, 606, 608, 619, 627, 656], "cachefil": 619, "cactubssn": 593, "cactubssn_r": 593, "caf\u00e9": 568, "caico": 447, "calcul": [442, 447, 450, 455, 456, 464, 471, 481, 493, 519, 527, 534, 559, 560, 587, 589, 598, 605, 621, 626, 627, 652, 663], "call": [449, 451, 453, 454, 455, 456, 458, 460, 461, 462, 463, 468, 472, 474, 478, 481, 488, 495, 498, 509, 510, 511, 513, 514, 515, 516, 518, 519, 520, 523, 524, 526, 528, 529, 534, 538, 539, 540, 548, 554, 555, 558, 560, 561, 562, 563, 564, 565, 567, 569, 570, 571, 572, 573, 574, 576, 582, 586, 588, 590, 591, 592, 596, 598, 602, 603, 604, 605, 608, 609, 610, 611, 613, 615, 616, 620, 621, 623, 627, 628, 629, 630, 631, 633, 634, 635, 636, 637, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666], "call2": 468, "call32m": 615, "call32r": 615, "call64pcrel32": 565, "call_branch_weight": 456, "call_convent": 447, "call_site_num": 519, "callabl": [467, 559, 572, 573, 650, 661], "callahan": 596, "callback": [450, 464, 509, 513, 526, 561, 589, 608, 626, 633, 635, 637, 667], "callbackvh": 589, "callbas": 589, "callbr": 589, "callcount": 589, "calle": [442, 453, 464, 510, 522, 561, 571, 587, 598, 606, 608, 610, 615, 623, 626, 627, 649, 650, 651, 652, 653, 654, 655, 656, 661, 662, 663, 664, 665], "calledcount": 458, "calleef": [650, 651, 652, 653, 654, 655, 656], "caller": [442, 447, 453, 456, 458, 464, 506, 510, 513, 519, 521, 522, 526, 559, 561, 571, 587, 589, 604, 606, 626, 627, 652, 653, 661, 663, 664], "caller_pc": 561, "callexprast": [649, 650, 651, 652, 653, 654, 655, 656], "callgraph": [500, 501], "callgraphscc": [574, 627], "callgraphsccpass": 574, "callingconv": [454, 626], "callinst": 589, "calllow": [535, 540], "callloweringinfo": 629, "callon": 589, "callpcrel32": 615, "callq": [604, 606, 608, 610], "callseq_end": 610, "callseq_start": 610, "callsit": [456, 559, 565, 598, 606, 608, 610], "callthroughmgr": 573, "calltmp": [650, 651, 652, 653, 654, 655, 656, 661, 662, 663, 664, 665], "calltmp1": [650, 652, 661, 663], "calltmp2": [651, 662], "calltmp6": [654, 665], "calltwo": 589, "callvoidvoid": 637, "calm": [654, 665], "cam4_": 593, "cam4_r": 593, "came": [449, 494, 519, 606, 652, 657, 663, 666], "camel": [467, 594], "camelback": 594, "camelcas": 594, "camera": 568, "caml": [659, 660], "camlp4": [659, 660], "camlp4of": [660, 661, 662, 663, 664, 665], "can": [442, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 462, 463, 464, 465, 467, 468, 469, 470, 472, 473, 474, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 489, 491, 493, 495, 496, 497, 498, 499, 503, 505, 506, 507, 508, 509, 510, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 523, 525, 526, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 541, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 576, 577, 579, 581, 582, 584, 585, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 598, 599, 600, 601, 602, 603, 605, 607, 608, 609, 610, 611, 613, 614, 615, 616, 617, 619, 620, 621, 622, 623, 625, 626, 627, 628, 629, 630, 631, 633, 634, 635, 636, 637, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666], "canadian": 529, "canari": [545, 559], "cancel": 519, "canconstantfoldcallto": 520, "candid": [457, 517, 518, 523, 559, 565, 596, 599], "canfoldasload": 617, "canlosslesslybitcastto": 571, "cannot": [38, 130, 223, 368, 442, 443, 445, 446, 447, 450, 451, 453, 456, 457, 458, 462, 463, 464, 465, 467, 468, 469, 476, 481, 482, 493, 498, 505, 506, 509, 510, 513, 514, 517, 519, 521, 526, 527, 531, 534, 536, 549, 554, 557, 559, 564, 570, 581, 582, 587, 588, 589, 591, 592, 594, 601, 603, 605, 606, 611, 619, 622, 625, 626, 627, 633, 650, 657, 666], "canon": [442, 453, 519, 524, 559, 573, 587, 589, 591, 605, 606, 624, 636, 637], "canonic": [464, 468, 534, 589, 627], "canonicalis": 453, "canreserveresourc": 464, "cantfail": [633, 634, 635, 636, 637, 651, 652, 653, 654], "capabl": [450, 464, 509, 510, 511, 516, 520, 529, 545, 559, 562, 569, 570, 572, 582, 589, 595, 600, 613, 626, 627, 650, 651, 653, 654, 657, 661, 662, 664, 665, 666], "capac": [579, 589], "capit": [467, 517, 594], "capston": 561, "captur": [442, 454, 458, 460, 464, 468, 509, 520, 536, 559, 594, 596, 605, 606, 608, 621, 626, 628, 630, 636, 637, 649, 650, 651, 652, 653, 654, 655, 656, 657, 660, 661, 662, 663, 664, 665, 666], "card": [547, 610], "care": [447, 448, 450, 451, 464, 465, 467, 468, 510, 525, 529, 545, 551, 554, 559, 561, 565, 567, 570, 573, 589, 591, 600, 605, 606, 611, 615, 617, 620, 626, 627, 654, 657, 665, 666], "carefulli": [442, 517, 524, 526, 559, 605, 654, 665], "careless": 467, "caret": [481, 559], "carri": [493, 516, 527, 534, 537, 559, 567, 589, 603, 622], "carrizo": 447, "carruth": [594, 606], "carruthacronym": 594, "carruthcamelback": 594, "carruthdistinguish": 594, "carruthfunct": 594, "carruthinconsist": 594, "carruthlow": 594, "cascad": 554, "case": [442, 443, 445, 446, 447, 448, 450, 451, 453, 454, 456, 458, 461, 462, 463, 464, 465, 466, 467, 468, 471, 472, 476, 480, 482, 486, 488, 493, 494, 495, 506, 507, 509, 510, 512, 513, 514, 518, 519, 520, 522, 523, 524, 526, 527, 529, 534, 543, 547, 548, 549, 550, 552, 553, 554, 556, 557, 559, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 574, 576, 577, 582, 584, 587, 589, 590, 591, 593, 594, 597, 598, 600, 601, 602, 603, 604, 605, 606, 607, 608, 610, 611, 613, 615, 616, 620, 621, 622, 623, 625, 626, 627, 631, 633, 634, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 659, 660, 661, 662, 663, 664, 665, 666], "case_branch_weight": 456, "cassert": [467, 572, 636, 637, 651, 652, 653, 654, 655], "cast": [442, 453, 461, 467, 509, 534, 552, 559, 571, 573, 596, 610, 615, 616, 617, 623, 651, 652, 653, 654, 656, 657, 662, 666], "cast210": [535, 559], "cast_or_nul": 589, "castinst": 589, "casual": 517, "cat": [482, 504, 506, 509, 526, 529, 545, 561, 621], "catagor": 587, "catapult": 628, "catastroph": 606, "catch": [509, 515, 517, 527, 545, 549, 559, 560, 588, 589, 606, 650, 651, 661, 662], "catch3": 519, "catchpad": 519, "catchret": 519, "catchswitch": 519, "categor": [509, 563, 587, 613, 626], "categori": [467, 486, 497, 506, 553, 559, 587, 589, 605, 613, 621, 626, 630], "cater": 613, "caught": [467, 519, 545, 559], "caus": [442, 447, 450, 451, 453, 457, 458, 462, 464, 466, 467, 468, 469, 470, 472, 474, 478, 481, 484, 489, 493, 495, 498, 507, 509, 517, 520, 521, 522, 526, 529, 532, 536, 537, 538, 539, 544, 545, 548, 549, 553, 559, 561, 564, 574, 587, 589, 590, 591, 602, 603, 605, 606, 609, 610, 611, 621, 623, 625, 627, 631, 649, 650, 652, 653, 654, 656, 660, 665], "caution": [451, 610], "cautiou": 563, "caveat": [459, 510, 656], "cayman": 447, "cb": [502, 514, 589], "cbe": 553, "cbpf": 464, "cbsz": 8, "cbtw": 464, "cbw": 464, "cc": [447, 464, 506, 512, 529, 544, 550, 551, 559, 561, 588, 599, 602, 613, 629, 661, 662, 663, 664, 665], "cc1": 515, "cc_sparc32": 626, "ccach": 462, "ccache_dir": 462, "ccache_maxs": 462, "ccaddr": [636, 637], "ccassigntoreg": 626, "ccassigntoregwithshadow": 626, "ccassigntostack": 626, "ccc": [454, 559], "ccdelegateto": 626, "ccif": 626, "ccifcc": 626, "ccifinreg": 626, "ccifnest": 626, "ccifnotvararg": 626, "cciftyp": 626, "cclib": [664, 665], "ccmake": 462, "ccmgrorerr": 637, "cconv": 559, "ccpassbyv": 626, "ccpromotetotyp": 626, "ccr": 533, "cctool": 462, "cctype": [649, 650, 651, 652, 653, 654, 655, 656], "cd": [462, 529, 531, 544, 551, 553, 591, 602, 605, 619, 620, 629], "cdbg_user": 447, "cde": 598, "cdecl": 559, "ce": 514, "cedar": 447, "cee": 589, "ceil": [447, 581, 625], "cell": 626, "center": [589, 656], "centerpoint": 517, "central": [519, 605, 611], "centric": 559, "cerr": [572, 629], "certain": [442, 447, 450, 453, 462, 464, 466, 468, 472, 476, 504, 509, 513, 514, 520, 521, 526, 529, 539, 554, 559, 561, 575, 581, 582, 586, 589, 592, 606, 608, 610, 615, 627, 628, 629, 651, 653, 654, 655, 662, 665], "certainli": [451, 466, 524, 526, 534, 563, 587, 591, 657, 666], "cf": 514, "cfa": [447, 519], "cfd": 593, "cfe": [517, 529, 551, 568, 588, 591, 596], "cfg": [464, 472, 496, 519, 531, 554, 557, 559, 563, 571, 574, 589, 596, 621, 626, 627, 652, 663], "cfgsimplifi": 589, "cfguard_checkcc": 559, "cfi": [442, 461, 519, 560, 565, 606], "cfi_instruct": 565, "cfi_offset": 565, "cflag": [561, 590], "cfrac": 620, "cg": [500, 501, 627], "cg_profil": 521, "cgft_objectfil": 655, "cgo": [510, 596], "cgp_from": 521, "cgp_to": 521, "cgp_weight": 521, "cgroup": 518, "ch": 617, "ch9": 656, "chain": [442, 448, 449, 456, 462, 464, 467, 472, 486, 493, 513, 533, 536, 559, 560, 562, 563, 570, 571, 587, 605, 611, 613, 622, 626, 627, 654, 665], "challeng": [517, 543, 606, 610, 653, 664], "champion": 603, "chanc": [456, 513, 517, 524, 559, 564, 617, 628, 631, 658, 659], "chandler": [594, 606], "chandlerc": [588, 606], "chang": [445, 446, 447, 450, 453, 454, 456, 457, 458, 460, 462, 464, 465, 466, 467, 468, 469, 472, 477, 479, 480, 484, 486, 493, 495, 509, 510, 512, 513, 514, 516, 520, 522, 524, 525, 526, 527, 528, 531, 532, 534, 535, 538, 545, 546, 551, 552, 554, 555, 557, 558, 559, 560, 562, 563, 564, 569, 571, 572, 573, 574, 577, 582, 586, 587, 592, 594, 599, 600, 606, 608, 610, 612, 613, 615, 618, 619, 620, 622, 625, 626, 627, 630, 631, 633, 634, 635, 636, 637, 651, 652, 653, 654, 655, 656, 662, 663, 664, 665], "changebit": 561, "changebyt": 561, "changelog": 561, "channel": [18, 116, 200, 348, 445, 447, 465, 512, 528, 606, 637], "chao": 449, "chapter": [442, 512, 571, 632, 648, 657, 658, 659, 666], "char": [450, 467, 509, 514, 515, 527, 545, 552, 559, 561, 562, 572, 573, 577, 581, 584, 589, 602, 605, 606, 625, 626, 627, 628, 629, 633, 637, 649, 650, 651, 652, 653, 654, 655, 656, 659, 660, 661, 662, 663, 664, 665], "char16_t": 584, "char32_t": 584, "char6": 454, "charact": [442, 445, 447, 464, 472, 476, 481, 482, 493, 494, 495, 496, 504, 505, 509, 514, 559, 565, 567, 589, 605, 613, 615, 616, 621, 648, 649, 650, 651, 652, 653, 654, 655, 656, 659, 660, 661, 662, 663, 664, 665], "character": [487, 559, 606], "character16": 584, "character32": 584, "characterist": [60, 145, 245, 331, 390, 442, 464, 487, 520, 559, 577, 589, 596, 626, 635, 668], "charg": [464, 568, 603], "charscalarti": 559, "chart": 625, "charter": 517, "chase": 553, "chat": [465, 517], "cheap": [451, 467, 517, 559, 589], "cheaper": [523, 534, 589, 606], "cheapest": 541, "cheapli": [570, 606], "cheat": 635, "check": [442, 446, 447, 449, 451, 458, 461, 462, 463, 464, 467, 469, 470, 472, 487, 493, 509, 513, 514, 517, 518, 519, 524, 525, 526, 527, 529, 531, 532, 534, 536, 539, 544, 546, 547, 548, 549, 550, 551, 552, 553, 554, 561, 562, 563, 565, 566, 571, 572, 573, 574, 588, 591, 596, 597, 598, 599, 602, 604, 605, 608, 609, 610, 615, 619, 620, 621, 622, 623, 626, 627, 629, 631, 633, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 659, 660, 661, 662, 663, 664, 665, 666], "checkcudaerror": 572, "checker": [527, 553, 594, 613], "checkformat": 589, "checkout": [462, 518, 532, 548, 586, 599], "checkpoint": 519, "checksum": [442, 521, 559, 561, 602], "checksumkind": [521, 559], "chees": 467, "child": [519, 552, 559, 561, 589, 653, 664], "child_begin": 589, "child_end": 589, "child_iter": 589, "childidx": 589, "childorerr": 589, "children": [486, 552, 575, 589, 615], "childvalid": 589, "chill": 517, "chip": [447, 464, 473, 474, 533, 547, 550, 572, 621, 626], "chmod": 529, "choic": [442, 466, 467, 473, 485, 520, 533, 536, 547, 559, 561, 588, 589, 608, 610, 648, 652, 657, 663, 666], "choos": [442, 453, 462, 464, 465, 469, 474, 496, 509, 510, 517, 526, 545, 546, 549, 550, 553, 556, 559, 568, 570, 573, 588, 589, 592, 594, 601, 605, 619, 626, 627, 628, 629, 649, 651, 652, 659, 660, 661, 662, 663], "chop": 605, "chose": [599, 606, 662], "chosen": [453, 464, 467, 472, 526, 545, 559, 610, 628], "chri": [464, 510, 517, 591, 594, 627, 666], "chriscox": 593, "chrome": 628, "chromium": [545, 551, 603], "chronolog": 594, "chronologi": 591, "chunk": [453, 454, 464, 467, 497, 561, 587, 604, 605, 661], "churn": 635, "ci": [442, 447, 452, 517], "cie": [442, 447, 560], "cie_id": 442, "cie_point": 442, "cimag": [653, 664], "cin": 522, "cindex": 626, "cint2006": 619, "circl": 552, "circuit": [653, 664], "circular": [442, 467, 628], "circumst": [457, 468, 519, 559, 589, 603, 605, 626, 627, 651, 654, 662, 665], "circumv": 509, "cis501": 452, "cite": 594, "citi": [528, 568], "citizen": 589, "cl": [577, 605, 617, 621, 627, 637], "claim": [451, 517, 630], "clamp": [0, 1, 2, 3, 4, 5, 6, 7, 8, 447, 559], "clampnumel": 538, "clampscalar": 538, "clang": [442, 451, 456, 459, 460, 461, 462, 466, 467, 468, 470, 472, 473, 481, 483, 493, 496, 506, 512, 514, 515, 517, 518, 519, 522, 524, 527, 528, 531, 532, 544, 545, 552, 553, 558, 559, 560, 561, 562, 572, 573, 574, 585, 588, 589, 590, 591, 594, 595, 598, 599, 600, 603, 605, 617, 619, 621, 622, 623, 625, 627, 628, 629, 633, 634, 635, 636, 637, 649, 650, 651, 652, 653, 654, 655, 656, 662, 665, 666], "clang_attr_arg_context_list": 613, "clang_attr_identifier_arg_list": 613, "clang_bootstrap_cmake_arg": 449, "clang_cc1": [468, 621], "clang_cl": 621, "clang_cpp": 621, "clang_enable_bootstrap": 449, "clangxx": 621, "clarif": [467, 511, 517, 630], "clarifi": [442, 605], "clariti": [559, 601, 652, 663], "clash": [467, 559, 568, 598, 636, 637], "class": [453, 454, 465, 468, 487, 495, 497, 505, 508, 512, 516, 517, 519, 520, 525, 526, 529, 530, 533, 536, 538, 539, 540, 541, 555, 557, 560, 564, 567, 569, 571, 573, 574, 576, 577, 582, 584, 586, 587, 594, 595, 596, 597, 598, 602, 605, 606, 611, 613, 617, 623, 628, 631, 633, 634, 635, 636, 637, 649, 650, 651, 652, 653, 654, 655, 656, 657, 660, 661, 662, 665, 666], "classic": [459, 464, 467, 545, 587, 589, 606], "classid": 616, "classif": [559, 609, 611], "classifi": [450, 459, 559], "classllvm_1_1instruct": 563, "classnam": [508, 577], "classof": 613, "claus": [447, 464, 517, 519, 559, 589, 616], "clean": [464, 469, 517, 519, 529, 536, 548, 551, 553, 559, 562, 572, 587, 588, 589, 591, 598, 606, 627], "cleaner": [467, 509, 589], "cleanest": 442, "cleanli": [467, 517, 559, 627], "cleanup": [513, 517, 559, 560, 587, 605, 651, 652, 662, 663], "cleanuppad": [513, 519], "cleanupret": [513, 519], "clear": [466, 467, 468, 507, 517, 526, 527, 554, 557, 558, 559, 577, 581, 584, 589, 591, 594, 603, 606, 610, 628, 649, 650, 651, 652, 653, 654, 655, 656, 660, 661, 662, 663, 664, 665], "clearer": 467, "cleargraphattr": 589, "clearli": [442, 457, 467, 517, 570, 576, 591, 598, 603, 605, 608], "clearresourc": 464, "clenumv": 509, "clenumvaln": 509, "clever": [552, 657, 666], "cleverli": 453, "click": [517, 531, 588, 607], "client": [447, 454, 462, 464, 467, 479, 509, 517, 526, 552, 558, 564, 567, 573, 589, 591, 597, 600, 605, 608, 619, 623, 626, 627, 633, 634, 637, 651, 654, 662, 665], "clientaddr": 637, "clientaddrlen": 637, "cling": 573, "clip": 515, "clobber": [442, 447, 450, 565, 606, 615], "clober": 447, "clock": [493, 559, 627], "clone": [472, 517, 529, 531, 544, 589, 596, 613, 619, 620, 627, 654, 665], "close": [460, 464, 467, 468, 479, 513, 527, 528, 529, 538, 551, 559, 560, 561, 588, 589, 599, 606, 627, 649, 660], "close_fd_mask": 561, "closer": [527, 560], "closest": [442, 559, 656], "closur": [558, 657, 666], "clr": [577, 610], "clrb": 464, "clrl": 464, "clrq": 464, "clrw": 464, "cluster": [487, 533, 539], "cluster_id": 487, "clutter": [459, 467, 517], "cm": 594, "cmake": [449, 452, 479, 517, 518, 525, 529, 531, 532, 544, 545, 546, 547, 548, 558, 566, 589, 591, 593, 602, 607, 621, 624, 626, 629], "cmake_": [460, 463], "cmake_asm_compiler_target": 549, "cmake_asm_flag": 549, "cmake_build_typ": [460, 462, 463, 529, 619], "cmake_c_compil": [529, 619], "cmake_c_compiler_external_toolchain": 549, "cmake_c_compiler_target": 549, "cmake_c_flag": [462, 549, 619], "cmake_c_flags_optim": 619, "cmake_cflag": 549, "cmake_cxx_compil": 529, "cmake_cxx_flag": 462, "cmake_cxx_flags_releas": 529, "cmake_cxx_flags_relwithdebinfo": 529, "cmake_cxx_standard": 462, "cmake_instal": 462, "cmake_install_prefix": [449, 462, 529, 531, 550], "cmake_minimum_requir": [462, 463], "cmake_module_path": 462, "cmake_parse_argu": 463, "cmake_sysroot": 549, "cmake_toolchain_fil": [462, 529], "cmake_try_compile_target": 549, "cmake_verbose_makefil": 449, "cmakecach": [462, 463, 629], "cmakefil": [529, 619], "cmakelist": [449, 462, 463, 479, 529, 551, 619, 626, 627], "cmakeparseargu": 463, "cmd": 452, "cmov": 606, "cmovcc": 606, "cmoveq": 606, "cmovneq": 606, "cmp": [464, 559, 587, 589, 606], "cmp32ri8": 464, "cmpb": 521, "cmpflag": 571, "cmpinst": [565, 589], "cmpnumber": 571, "cmpq": [521, 604], "cmpswap": 445, "cmptmp": [650, 651, 652, 653, 654, 655, 656, 661, 662, 663, 664, 665], "cmpxchg": [451, 534], "cmse": 598, "cnt": [109, 195, 292, 441], "co": [450, 529, 551, 568, 591, 623, 625, 631, 648, 649, 650, 651, 659, 660, 661, 662], "co_await": 513, "coalesc": [464, 474, 484, 589], "coars": 472, "cocoa": 559, "code": [52, 96, 139, 182, 237, 279, 382, 428, 442, 446, 448, 449, 450, 451, 453, 454, 456, 457, 459, 460, 461, 462, 463, 468, 469, 471, 472, 473, 475, 481, 482, 492, 494, 495, 496, 497, 500, 501, 502, 504, 505, 509, 512, 513, 516, 518, 520, 521, 523, 524, 525, 527, 528, 531, 533, 536, 538, 539, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 554, 555, 557, 558, 560, 561, 562, 563, 566, 568, 569, 571, 572, 573, 574, 575, 576, 577, 585, 586, 591, 592, 593, 596, 597, 598, 599, 600, 603, 604, 606, 608, 609, 610, 613, 616, 617, 619, 620, 621, 623, 625, 628, 629, 631, 648, 657, 658, 659, 666, 667], "code_alignment_factor": [442, 447], "code_object_uri": 447, "code_own": [512, 517, 588], "codebas": [467, 517, 535, 588, 598, 603], "codeblock": 526, "codeemittergen": 613, "codegen": [447, 448, 464, 468, 469, 510, 513, 520, 523, 524, 526, 529, 537, 539, 554, 559, 562, 565, 572, 598, 613, 621, 624, 626, 627, 636, 637, 650, 651, 652, 653, 654, 655, 656, 661, 662, 663, 664, 665], "codegen_expr": [661, 662, 663, 664, 665], "codegen_func": [661, 662, 663, 664, 665], "codegen_proto": [661, 662, 663, 664, 665], "codegener": 553, "codegenopt": 574, "codegenschedmodel": 626, "codeid": 600, "codepath": [451, 589], "codeprop": 447, "coder": 591, "codes": 617, "codeview": [497, 501, 577, 582], "codeviewdebug": 605, "coding_style_cpp": 594, "codlay": 635, "coerc": [513, 571], "coerce_offset0": 468, "coff": [454, 464, 494, 495, 511, 531, 559, 573, 577, 582, 598], "cohen": 611, "coher": [445, 447, 558, 559], "coincid": 622, "col": [559, 656], "cold": [454, 455, 524, 559], "coldcc": [454, 559, 610], "colder": 455, "colfield": 556, "collabor": [442, 517, 591], "collaps": [559, 606], "colleagu": 465, "collect": [442, 450, 455, 456, 462, 481, 486, 493, 517, 524, 530, 533, 545, 548, 555, 560, 561, 562, 564, 573, 584, 587, 589, 591, 593, 596, 600, 606, 608, 609, 615, 616, 619, 620, 625, 629, 658, 659], "collect_and_build_with_pgo": 548, "collector": [454, 522, 560, 610, 657, 666], "collis": [467, 559, 589, 591, 605], "colloqui": 559, "colombet": 542, "colon": [447, 460, 462, 463, 468, 545, 558, 602, 613, 615, 621, 631], "color": [91, 179, 276, 423, 464, 468, 481, 486, 497, 500, 501, 513, 589, 596, 629], "colour": 465, "column": [442, 447, 467, 468, 493, 496, 506, 514, 521, 529, 554, 556, 600, 605, 620, 625, 631, 656], "columnend": 514, "columnstart": 514, "com": [452, 459, 467, 489, 529, 531, 532, 549, 551, 559, 561, 568, 584, 588, 589, 591, 593, 594, 602, 606, 619, 620, 628, 667], "com_fir": 464, "combin": [109, 112, 195, 292, 441, 442, 447, 451, 458, 460, 462, 468, 478, 479, 481, 491, 493, 496, 505, 509, 510, 513, 516, 517, 520, 521, 526, 527, 529, 534, 538, 539, 541, 554, 559, 561, 565, 571, 574, 575, 585, 589, 596, 598, 605, 606, 610, 622, 625, 626, 627, 628, 629, 631, 649, 650, 657, 660, 661, 666], "combine1": 464, "combine2": 464, "combinedalloc": 602, "comdat": [454, 521, 598], "come": [442, 447, 454, 460, 462, 463, 464, 465, 467, 469, 481, 513, 516, 517, 520, 526, 527, 529, 554, 556, 557, 559, 565, 570, 571, 572, 573, 577, 584, 585, 589, 590, 592, 600, 603, 605, 606, 610, 615, 619, 621, 627, 628, 631, 633, 635, 648, 650, 651, 652, 654, 657, 659, 661, 662, 663, 665, 666], "comfort": 601, "comma": [109, 195, 232, 292, 377, 441, 443, 444, 447, 468, 487, 509, 559, 565, 567, 589, 615, 621, 631, 652, 663], "command": [447, 449, 450, 452, 458, 460, 462, 464, 467, 468, 469, 472, 473, 474, 477, 478, 482, 485, 486, 487, 488, 489, 490, 493, 494, 495, 497, 500, 501, 502, 504, 505, 506, 507, 508, 510, 512, 515, 517, 518, 525, 528, 529, 531, 536, 539, 544, 546, 548, 549, 551, 553, 555, 558, 559, 561, 562, 573, 574, 589, 591, 598, 599, 602, 608, 610, 613, 617, 619, 620, 621, 624, 626, 627, 629, 637, 648, 649, 650, 651, 652, 653, 654, 655, 656, 659, 660, 661, 662, 663, 664, 665], "commandlin": [472, 624, 637], "commandlinepars": 629, "commasepar": 509, "comment": [447, 457, 464, 466, 468, 476, 479, 493, 502, 504, 512, 517, 526, 552, 558, 559, 560, 561, 570, 571, 587, 588, 589, 591, 594, 598, 613, 616, 617, 621, 628, 631, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666], "commentstr": 626, "commerci": [442, 517, 610], "commit": [457, 467, 493, 512, 524, 528, 532, 546, 551, 560, 566, 577, 581, 594, 607, 610, 621], "committ": 517, "committe": [465, 589], "common": [442, 447, 449, 450, 451, 453, 454, 460, 463, 464, 466, 467, 476, 494, 495, 502, 509, 510, 512, 513, 516, 517, 519, 520, 522, 524, 525, 526, 527, 533, 536, 538, 552, 554, 558, 559, 560, 561, 563, 564, 566, 570, 571, 573, 577, 587, 590, 591, 596, 602, 605, 606, 607, 608, 610, 611, 614, 615, 617, 626, 627, 630, 631, 649, 651, 652, 653, 654, 657, 660, 662, 663, 664, 665, 666], "commonli": [454, 467, 476, 526, 559, 563, 589, 594, 626], "commun": [450, 459, 466, 467, 510, 512, 513, 515, 517, 522, 524, 559, 560, 564, 572, 573, 589, 591, 592, 594, 601, 603, 606, 608, 611, 627, 637], "commut": [450, 464, 587, 626], "compact": [442, 447, 464, 478, 498, 512, 513, 519, 526, 559, 589, 608, 656, 657, 666], "compactli": [513, 589, 615], "compani": [517, 568, 603], "companion": 470, "compar": [445, 446, 449, 450, 451, 455, 456, 464, 468, 484, 486, 492, 493, 497, 516, 519, 556, 559, 561, 587, 589, 590, 596, 599, 605, 606, 615, 616, 619, 620, 621, 625, 631, 649, 652, 653, 654, 655, 656, 660, 663, 664, 665], "comparefp": 615, "comparison": [446, 451, 456, 521, 524, 527, 534, 539, 552, 559, 587, 589, 599, 605, 610, 615, 625, 635, 649, 653, 660, 664], "compat": [442, 445, 447, 451, 453, 454, 462, 463, 464, 467, 471, 474, 476, 481, 495, 496, 497, 501, 504, 509, 510, 513, 514, 519, 520, 521, 525, 526, 529, 531, 551, 555, 557, 559, 572, 581, 584, 587, 589, 597, 598, 602, 605, 606, 608, 610, 621, 622, 623, 657, 666], "compatible_class": 464, "compet": [447, 517], "compil": [47, 137, 233, 378, 442, 447, 449, 450, 451, 453, 454, 458, 459, 460, 461, 463, 464, 466, 468, 469, 471, 474, 481, 486, 487, 493, 494, 497, 498, 506, 509, 512, 513, 514, 516, 517, 518, 519, 520, 524, 525, 526, 527, 530, 531, 532, 533, 535, 538, 539, 543, 545, 546, 547, 548, 551, 558, 560, 561, 562, 563, 569, 570, 571, 572, 574, 575, 577, 584, 585, 587, 589, 590, 591, 592, 593, 594, 596, 597, 598, 599, 600, 602, 603, 605, 608, 609, 610, 611, 613, 616, 617, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 632, 633, 634, 637, 648, 649, 650, 652, 653, 654, 657, 658, 659, 660, 661, 663, 664, 665, 666, 667], "compiland": [497, 577, 580, 585], "compile_tim": 619, "compileact": [636, 637], "compilecallback": [636, 637], "compilecallbackmanag": [635, 636], "compilecallbackmgr": [636, 637], "compilelay": [573, 633, 634, 635, 636, 637], "compilemodul": 629, "compileondemand": [635, 636], "compileondemandlay": [573, 635], "compiler_rt": 517, "compiler_rt_test_compile_cflag": 549, "compiler_rt_test_compiler_cflag": 549, "compileutil": [633, 634, 635, 636, 637], "complain": [468, 529, 531, 532, 544], "complaint": [657, 666], "complement": [442, 527, 559, 589, 606], "complet": [442, 447, 450, 454, 455, 457, 462, 463, 464, 467, 469, 471, 472, 481, 486, 507, 509, 513, 516, 517, 519, 526, 528, 531, 532, 535, 539, 543, 546, 548, 549, 551, 559, 560, 561, 562, 563, 564, 570, 571, 572, 573, 587, 589, 591, 596, 598, 600, 601, 605, 606, 610, 611, 613, 615, 626, 627, 631, 633, 634, 635, 636, 637, 648, 649, 650, 651, 652, 653, 654, 655, 656, 659, 660, 661, 662, 663, 664, 665], "complex": [442, 463, 464, 467, 513, 520, 526, 551, 561, 571, 574, 584, 587, 605, 606, 610, 611, 613, 614, 617, 625, 626, 627, 634, 649, 651, 653, 654, 656, 657, 660, 662, 664, 665, 666], "complex128": 584, "complex16": 584, "complex32": 584, "complex32partialprecis": 584, "complex48": 584, "complex64": 584, "complex80": 584, "complexpattern": [464, 626], "complextyp": 668, "compli": 517, "compliant": [447, 510, 592], "complic": [449, 451, 462, 463, 519, 520, 526, 529, 531, 549, 552, 557, 559, 563, 596, 606, 613, 623, 625, 626], "compliment": 442, "compon": [442, 445, 447, 460, 462, 463, 466, 472, 476, 479, 481, 483, 503, 515, 516, 518, 525, 526, 528, 529, 531, 549, 551, 553, 559, 560, 563, 564, 572, 573, 581, 582, 587, 589, 590, 591, 600, 606, 608, 620, 624, 626, 628, 630, 633, 667], "component_0": 558, "component_1": 558, "compos": [442, 446, 460, 514, 531, 559, 565, 573, 600, 603, 630, 634], "composit": [559, 589, 596, 600], "compound": 514, "compr": [0, 2, 3, 4, 82, 167, 266, 413], "comprehens": [529, 587, 606, 621], "compress": [82, 167, 266, 413, 445, 454, 462, 478, 495, 498, 514, 529, 561, 589], "compris": [442, 447, 596], "compriz": 478, "compromis": [559, 589, 606], "comput": [46, 109, 136, 195, 231, 292, 376, 441, 442, 445, 450, 455, 458, 464, 467, 478, 493, 510, 514, 516, 522, 524, 537, 546, 559, 560, 561, 563, 577, 584, 587, 589, 593, 596, 598, 602, 603, 606, 608, 610, 615, 626, 627, 648, 650, 651, 652, 653, 654, 655, 656, 657, 659, 661, 662, 663, 664, 665, 666], "computation": 560, "compute_20": 572, "compute_factori": 515, "compute_pgm_rsrc1_fwd_progress": 447, "compute_pgm_rsrc1_mem_ord": 447, "compute_pgm_rsrc1_sgpr": 447, "compute_pgm_rsrc1_vgpr": 447, "compute_pgm_rsrc1_wgp_mod": 447, "compute_pgm_rsrc2_user_sgpr": 447, "compute_xx": [510, 572], "computearea": 552, "computeknownbit": 535, "con": [453, 615, 616], "concat": 559, "concat_vector": 464, "concaten": [442, 448, 453, 454, 529, 534, 538, 559, 615, 616, 621], "concentr": [493, 549], "concept": [442, 447, 453, 454, 464, 524, 527, 533, 552, 559, 563, 571, 572, 573, 589, 600, 605, 606, 611, 614, 623, 633, 634, 650, 652, 661, 663], "conceptu": [442, 447, 453, 464, 467, 468, 509, 519, 527, 559, 589, 607, 622], "concern": [442, 466, 517, 526, 527, 558, 559, 591, 594, 610, 634], "concis": [464, 467, 509, 517, 527], "conclud": [493, 559, 652, 653, 663, 664], "conclus": [493, 571, 635, 656, 658, 659, 665, 667], "concret": [454, 464, 509, 516, 533, 538, 539, 551, 559, 570, 589, 595, 605, 610, 615, 617, 626, 627, 651, 658, 662], "concurr": [447, 462, 526, 561, 573, 589, 597, 633], "concurrentircompil": [573, 633, 634], "cond": [455, 513, 522, 559, 563, 570, 605, 615, 616, 626, 652, 653, 654, 655, 656, 663, 664, 665], "cond_fals": [654, 665], "cond_next": [654, 665], "cond_tru": [654, 665], "cond_val": [663, 664, 665], "condbranch": 626, "condit": [96, 182, 279, 428, 442, 446, 447, 451, 456, 459, 461, 462, 463, 464, 467, 481, 509, 513, 517, 519, 522, 524, 527, 529, 533, 534, 554, 560, 562, 563, 571, 572, 574, 584, 589, 598, 602, 605, 610, 611, 615, 616, 621, 622, 626, 627, 648, 649, 650, 652, 653, 654, 655, 656, 659, 660, 661, 663, 664, 665], "condition": [463, 472, 526, 606], "condition1": 615, "condition2": 615, "condition_1": 615, "condition_2": 615, "condition_n": 615, "condmovfp": 615, "condoper": 616, "conduct": [466, 493, 517, 528, 568], "condv": [652, 653, 654, 655, 656], "condval": 616, "confer": [464, 526, 528, 568], "confid": [442, 517, 559], "confidenti": [517, 601], "config": [449, 462, 471, 472, 479, 487, 501, 517, 525, 529, 546, 549, 558, 589, 590, 591, 621, 626, 633, 634, 635, 636, 637, 649, 650, 651, 652, 653, 654, 655, 656, 661], "configur": [447, 460, 462, 464, 467, 468, 487, 517, 528, 531, 532, 543, 544, 545, 548, 549, 558, 559, 561, 572, 573, 586, 589, 590, 591, 599, 600, 602, 610, 621, 624, 625, 626, 627, 628, 629, 630, 631, 633, 634], "confirm": [457, 467, 529, 561], "conflict": [447, 464, 468, 501, 517, 533, 559, 570, 589, 591, 594, 615, 621, 661, 662, 663, 664, 665], "conform": [442, 447, 461, 462, 467, 472, 473, 512, 517, 522, 526, 551, 559, 589, 592, 631, 634, 635], "confront": [524, 527], "confus": [459, 467, 468, 476, 517, 519, 526, 527, 535, 554, 559, 571, 589, 594, 596, 602, 606, 626], "confusingli": 451, "congrat": 548, "congruenc": 560, "congruent": 602, "conjuct": 462, "conjunct": [442, 460, 462, 468, 470, 479, 497, 498, 559, 577, 599, 611, 615], "connect": [91, 447, 516, 538, 546, 560, 563, 570, 587, 588, 589, 596, 606, 610, 619, 622, 633, 637], "consecut": [442, 446, 447, 453, 468, 559, 596, 602, 605, 616, 623, 625, 627], "consensu": [466, 517, 594, 595, 603], "consequ": [442, 451, 458, 465, 493, 510, 519, 529, 532, 559, 561, 563, 575, 589, 606, 608, 621], "conserv": [447, 450, 451, 455, 467, 493, 526, 551, 559, 562, 606, 608, 610, 622, 627], "conservat": 622, "consid": [442, 447, 450, 453, 454, 455, 459, 464, 465, 466, 467, 468, 469, 472, 476, 483, 494, 504, 509, 510, 513, 514, 515, 516, 517, 519, 521, 522, 523, 526, 527, 529, 533, 534, 535, 538, 541, 543, 547, 548, 552, 554, 556, 557, 559, 560, 563, 570, 571, 584, 587, 589, 591, 594, 599, 601, 602, 605, 606, 607, 608, 609, 610, 611, 615, 616, 617, 619, 621, 623, 625, 627, 634, 649, 652, 654, 656, 657, 659, 660, 663, 665, 666], "consider": [442, 464, 465, 521, 529, 561, 589, 603, 605, 610, 611, 614, 617, 631], "consist": [442, 447, 450, 451, 454, 463, 464, 466, 467, 468, 470, 472, 478, 494, 498, 509, 514, 517, 519, 521, 524, 525, 526, 527, 536, 539, 545, 548, 551, 555, 558, 559, 561, 565, 571, 574, 581, 582, 589, 591, 594, 598, 605, 606, 610, 615, 616, 617, 620, 623, 626, 627, 628, 650, 651, 652, 653, 654, 655, 656, 661, 662, 663, 664, 665], "consol": [464, 528, 561, 566, 607, 628, 651, 662], "const": [447, 450, 464, 467, 488, 509, 514, 520, 526, 537, 545, 552, 557, 561, 562, 565, 573, 574, 576, 589, 602, 605, 626, 627, 628, 629, 631, 633, 634, 635, 636, 637, 649, 650, 651, 652, 653, 654, 655, 656], "const0": 454, "const_arg_iter": 589, "const_float": [661, 662, 663, 664, 665], "const_global_iter": 589, "const_iter": 589, "const_nul": [663, 664, 665], "const_op_iter": 589, "const_use_iter": 589, "constant": [9, 10, 20, 27, 28, 53, 60, 61, 64, 77, 78, 79, 80, 81, 83, 86, 88, 89, 109, 115, 118, 124, 125, 140, 145, 146, 147, 157, 159, 160, 161, 164, 165, 168, 174, 175, 177, 195, 199, 202, 212, 213, 238, 245, 246, 247, 260, 261, 262, 263, 264, 265, 267, 271, 272, 274, 292, 295, 296, 300, 301, 307, 308, 309, 328, 331, 333, 334, 335, 336, 347, 350, 357, 358, 383, 390, 391, 394, 407, 408, 409, 410, 411, 412, 414, 418, 419, 421, 441, 442, 447, 450, 451, 454, 456, 464, 467, 478, 488, 497, 509, 510, 513, 514, 520, 522, 524, 526, 529, 533, 536, 537, 554, 560, 571, 572, 573, 574, 596, 598, 608, 610, 615, 622, 623, 626, 627, 629, 630, 636, 637, 650, 652, 653, 654, 655, 656, 661], "constant_tsc": 630, "constantarrai": 589, "constantexpr": 594, "constantfold": 520, "constantfoldcal": 520, "constantfp": [589, 650, 651, 652, 653, 654, 655, 656, 661], "constantindex": 608, "constantint": [467, 559, 565, 589], "constantpoolsect": 626, "constantstruct": 589, "constdata": 565, "constexpr": 510, "constindex": 608, "constitu": [519, 534, 652, 663], "constitut": [453, 454, 540, 589, 601, 621, 634], "constprop": [509, 589], "constrain": [447, 493, 519, 522, 529, 533, 536, 539, 541, 570, 586, 598, 615, 624, 650, 661], "constrainedop": 448, "constraint": [462, 464, 467, 468, 507, 517, 519, 520, 533, 539, 570, 587, 589, 591, 596, 603, 605, 610, 617, 626, 627], "constrast": 450, "construct": [447, 450, 451, 454, 460, 461, 463, 465, 467, 493, 509, 513, 519, 520, 521, 526, 556, 557, 559, 565, 566, 573, 584, 589, 596, 605, 607, 610, 613, 615, 616, 623, 626, 627, 629, 631, 633, 635, 648, 649, 650, 651, 652, 653, 654, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666], "constructor": [451, 464, 495, 509, 510, 513, 522, 552, 555, 557, 559, 564, 573, 605, 626, 627, 631, 633, 634, 635, 652], "constval": 589, "constvcal": 559, "consult": [462, 467, 476, 528, 529, 531, 560, 570, 575, 577, 582, 598, 603, 627], "consum": [442, 447, 476, 478, 479, 487, 493, 497, 509, 513, 519, 521, 527, 529, 531, 533, 534, 538, 547, 559, 561, 567, 577, 579, 580, 581, 582, 584, 585, 600, 608, 613, 617, 649, 650, 651, 652, 653, 654, 655, 656, 660, 661, 662, 663, 664, 665], "consumeerror": 589, "consumpt": [464, 493, 561, 600, 627], "cont": [513, 519, 557, 559], "cont6": 519, "conta": 559, "contact": [465, 517, 546, 551, 561, 568, 598, 601, 603, 627], "contain": [442, 447, 449, 450, 451, 453, 454, 455, 456, 457, 458, 462, 463, 464, 466, 468, 470, 472, 473, 476, 477, 481, 483, 486, 487, 489, 492, 493, 494, 495, 496, 498, 504, 506, 508, 509, 510, 512, 513, 514, 515, 516, 517, 518, 519, 521, 524, 526, 527, 528, 529, 531, 535, 536, 538, 539, 544, 545, 546, 547, 549, 550, 551, 552, 553, 554, 556, 558, 559, 560, 562, 563, 564, 565, 570, 571, 572, 573, 574, 575, 576, 577, 579, 580, 581, 582, 584, 587, 590, 591, 593, 596, 598, 599, 602, 603, 605, 606, 607, 608, 610, 613, 615, 616, 617, 619, 620, 621, 623, 625, 626, 627, 628, 630, 631, 633, 634, 635, 636, 637, 650, 651, 652, 653, 654, 656, 660, 661, 662, 663], "containingtyp": 559, "containsfoo": 467, "contb": 559, "content": [447, 450, 453, 462, 467, 468, 469, 476, 478, 479, 481, 486, 491, 493, 495, 496, 500, 501, 505, 509, 517, 521, 523, 530, 558, 559, 562, 566, 571, 577, 584, 585, 587, 589, 591, 596, 600, 602, 607, 616, 617, 620, 621, 626, 627, 629, 659, 660, 661, 662, 663, 664, 665], "content_disposition_typ": 517, "contenti": 517, "context": [442, 450, 451, 467, 468, 498, 506, 509, 519, 522, 524, 527, 533, 538, 546, 552, 559, 560, 563, 567, 571, 572, 573, 588, 589, 595, 598, 601, 606, 613, 615, 616, 617, 621, 627, 630, 633, 649, 654, 656, 660, 661, 662, 663, 664, 665], "contextu": 630, "contigu": [442, 447, 538, 559, 579, 581, 585, 589, 605, 630], "continu": [442, 447, 450, 454, 458, 461, 464, 466, 468, 469, 497, 509, 512, 515, 517, 519, 535, 551, 552, 559, 561, 562, 577, 588, 589, 591, 598, 604, 606, 621, 630, 633, 636, 637, 649, 657, 660, 666], "contract": [510, 524, 559, 589, 608, 613], "contradict": 559, "contrari": [464, 559], "contrast": [446, 464, 467, 519, 552, 589, 591, 594, 596, 627, 650, 661], "contrib": [497, 529], "contribut": [442, 447, 464, 466, 470, 497, 517, 524, 528, 549, 559, 580, 585, 587, 589, 591, 603, 610, 627, 628, 632, 667], "contributor": [449, 462, 463, 466, 591, 592, 603], "contriv": [522, 615], "control": [14, 48, 112, 196, 232, 293, 298, 303, 313, 324, 344, 377, 445, 446, 447, 451, 458, 462, 464, 467, 472, 473, 474, 484, 493, 513, 516, 517, 518, 519, 520, 523, 524, 529, 531, 557, 559, 560, 561, 562, 563, 564, 572, 587, 589, 591, 596, 597, 598, 604, 605, 608, 610, 621, 622, 623, 624, 625, 626, 628, 649, 650, 651, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 664, 665, 666, 667], "conv": 522, "convei": [517, 519, 524, 526, 533, 559, 622], "conveni": [460, 462, 464, 467, 468, 472, 483, 509, 513, 514, 517, 533, 539, 552, 559, 570, 572, 573, 587, 589, 590, 615, 621, 628, 651, 652, 653, 657, 663, 664, 666], "convent": [442, 454, 463, 467, 511, 513, 519, 535, 552, 566, 571, 584, 589, 594, 598, 605, 607, 608, 610, 613, 650, 656, 661], "converg": [454, 559, 664], "convers": [447, 448, 464, 509, 523, 524, 538, 539, 554, 589, 615, 631], "convert": [44, 45, 135, 219, 220, 221, 222, 229, 230, 374, 375, 442, 445, 446, 447, 448, 451, 453, 464, 471, 472, 476, 481, 485, 495, 509, 517, 520, 523, 524, 527, 529, 534, 538, 539, 545, 548, 555, 563, 571, 572, 587, 589, 591, 598, 600, 605, 613, 615, 616, 626, 627, 628, 629, 631, 648, 650, 651, 652, 653, 654, 655, 656, 657, 659, 661, 662, 663, 664, 665, 666, 668], "converttoerrorcod": 589, "cooki": [559, 589], "cool": [509, 517, 627, 650, 651, 652, 653, 654, 655, 656, 661, 662, 663, 664, 665], "cooper": [526, 544], "coordin": [17, 115, 199, 347, 526, 559, 610, 631], "cope": [509, 589], "copi": [82, 91, 167, 179, 266, 276, 413, 423, 442, 447, 450, 451, 454, 458, 462, 464, 468, 471, 474, 480, 481, 482, 487, 509, 513, 517, 519, 525, 526, 529, 533, 534, 536, 538, 539, 540, 541, 544, 550, 551, 559, 560, 563, 564, 565, 566, 570, 572, 577, 587, 589, 593, 598, 602, 603, 604, 605, 606, 607, 610, 621, 622, 625, 626, 627, 658], "coprocessor": 533, "copyabl": 559, "copycost": [541, 626], "copyleft": 517, "copypart": 561, "copyphysreg": 626, "copyright": [522, 627], "core": [1, 5, 6, 7, 8, 447, 450, 452, 462, 463, 513, 517, 519, 520, 529, 538, 540, 543, 545, 546, 547, 550, 558, 559, 561, 563, 574, 591, 592, 598, 606, 613, 617, 621, 627, 633, 634, 635, 636, 637, 650, 651, 652, 653, 654, 656], "core2": 621, "corei7": [621, 625], "corner": 608, "cornerston": 527, "coroaddr": 513, "corollari": [580, 582], "corospit": 513, "coroutin": 597, "corp": 561, "corpora": 561, "corpu": 525, "corpus1": 561, "corpus2": 561, "corpus_dir": 561, "correct": [447, 450, 451, 453, 462, 464, 467, 509, 510, 513, 517, 520, 524, 529, 539, 544, 546, 550, 551, 553, 559, 560, 563, 574, 582, 587, 588, 589, 598, 599, 604, 605, 606, 610, 611, 619, 620, 625, 627, 628, 651, 662], "correctli": [442, 447, 451, 457, 462, 464, 467, 468, 509, 517, 519, 522, 527, 529, 549, 554, 559, 571, 573, 582, 588, 589, 590, 591, 598, 600, 604, 605, 606, 610, 621, 627, 631, 649, 652, 660, 663], "correl": [493, 526, 559, 623], "correpond": 559, "correspond": [52, 139, 237, 382, 442, 445, 447, 448, 451, 453, 454, 456, 458, 462, 464, 467, 468, 473, 480, 481, 484, 487, 493, 506, 509, 513, 514, 516, 517, 519, 520, 521, 522, 526, 527, 529, 531, 534, 552, 553, 554, 556, 559, 560, 565, 570, 571, 572, 575, 577, 579, 580, 581, 582, 587, 588, 589, 591, 600, 605, 610, 613, 616, 617, 621, 623, 625, 626, 627, 630, 631, 649, 650, 652, 656, 660, 661, 663], "corrupt": [467, 519, 561, 602, 657, 666], "cortex": [511, 547, 550, 555, 598], "cortexa53model": 626, "cortexa57model": 626, "cosin": [559, 626], "cost": [442, 460, 464, 467, 493, 517, 533, 540, 541, 543, 545, 556, 559, 560, 562, 568, 571, 586, 589, 591, 596, 600, 606, 625, 626, 657, 666], "costli": [594, 606, 630], "could": [442, 447, 450, 451, 458, 459, 462, 463, 464, 467, 468, 472, 483, 493, 509, 513, 517, 518, 522, 523, 524, 525, 526, 527, 529, 533, 534, 538, 541, 544, 546, 550, 552, 555, 556, 557, 559, 560, 563, 566, 570, 573, 574, 576, 581, 587, 588, 589, 591, 593, 594, 600, 602, 603, 605, 606, 607, 608, 610, 611, 614, 615, 621, 622, 623, 626, 630, 631, 634, 635, 649, 650, 651, 652, 654, 655, 657, 660, 662, 663, 665, 666], "couldn": [450, 534, 571, 636, 637, 655], "counsel": 517, "count": [109, 195, 292, 441, 442, 446, 447, 458, 476, 481, 487, 493, 498, 509, 514, 519, 520, 526, 534, 555, 561, 563, 573, 577, 579, 589, 591, 596, 598, 600, 605, 608, 615, 619, 620, 622, 626, 629, 630, 649, 660], "counter": [46, 136, 231, 376, 446, 447, 449, 451, 456, 458, 462, 487, 493, 498, 559, 561, 574, 598, 605, 630], "counterpart": [442, 448, 559, 573], "coupl": [451, 466, 524, 539, 559, 562, 568, 588, 589, 591, 610, 615, 627, 628, 652, 653, 656, 657, 663, 664, 666], "cours": [450, 462, 509, 520, 539, 554, 559, 561, 571, 574, 589, 627, 634, 648, 657, 658, 659, 660, 666], "court": 517, "courtesi": [466, 512], "cout": [467, 522, 545, 572, 631, 655], "cov": [471, 492, 514, 561], "cover": [442, 460, 464, 468, 481, 483, 492, 509, 511, 514, 517, 524, 526, 527, 529, 531, 541, 546, 548, 551, 559, 561, 566, 568, 571, 576, 584, 589, 598, 605, 607, 608, 609, 621, 626, 627, 628, 653, 658, 659, 664], "coverag": [461, 462, 471, 492, 498, 517, 525, 540, 548, 597, 605, 624, 629], "cp": [447, 529, 561, 565], "cp0": 533, "cp1": 533, "cp2": 533, "cp3": 533, "cpi": 565, "cpp": [448, 462, 463, 464, 467, 468, 480, 504, 506, 509, 515, 520, 522, 526, 529, 539, 545, 571, 572, 573, 591, 602, 605, 610, 611, 613, 621, 625, 626, 627, 629, 633, 634, 635, 636, 637, 649, 650, 651, 652, 653, 654, 655, 656], "cppflag": 590, "cppguid": 594, "cppperformancebenchmark": 593, "cpprefer": 589, "cptmp0": 626, "cptmp1": 626, "cpu": [442, 447, 451, 452, 454, 464, 470, 472, 473, 474, 486, 487, 493, 496, 510, 529, 547, 550, 555, 559, 561, 562, 569, 571, 598, 606, 619, 626, 627, 629, 630, 631, 636, 637, 655], "cpu0": 667, "cpu1": 631, "cpu2": 631, "cpu2017": 593, "cpu_id": 630, "cpu_nam": 487, "cpu_powerpc": 631, "cpu_x86": 631, "cpu_x86_64": 631, "cpufreq": [452, 547], "cpufrequtil": 547, "cpuinfo": 547, "cpun": 452, "cpunam": [473, 474, 493], "cpuset": 452, "cpusubtyp": 491, "cputyp": [454, 491], "cpux": 452, "cr": [464, 559], "cr0": 559, "cr7": 559, "craft": 589, "crafter": 603, "crash": [459, 469, 474, 526, 529, 532, 545, 554, 587, 589, 591, 593, 608, 657, 666], "crawl": 526, "crawler": 526, "crazi": [509, 657, 659, 666], "crazier": [652, 663], "crc": 561, "crc32": 602, "crd": 593, "creal": [653, 664], "creat": [442, 447, 453, 454, 460, 462, 463, 464, 465, 466, 467, 470, 472, 473, 476, 480, 481, 487, 488, 489, 491, 493, 495, 496, 497, 507, 509, 510, 512, 513, 514, 516, 517, 518, 519, 521, 522, 526, 527, 528, 529, 531, 533, 534, 536, 538, 539, 540, 544, 545, 546, 548, 550, 554, 555, 557, 559, 560, 561, 562, 564, 565, 566, 567, 570, 571, 572, 584, 587, 588, 591, 596, 598, 599, 600, 605, 606, 608, 610, 611, 613, 614, 615, 616, 617, 619, 620, 621, 622, 623, 625, 626, 628, 629, 631, 633, 634, 635, 636, 637, 649, 650, 651, 652, 653, 654, 655, 656, 657, 659, 660, 661, 662, 663, 664, 665, 666, 667], "create_add": 661, "create_argument_alloca": 665, "create_entry_block_alloca": 665, "create_funct": [662, 663, 664, 665], "create_modul": [661, 662, 663, 664, 665], "createalloca": [654, 655, 656], "createasmstream": 464, "createbarejitdylib": [633, 634], "createbasicaliasanalysispass": 656, "createbasictyp": 656, "createbr": [652, 653, 654, 655, 656], "createcal": [589, 650, 651, 652, 653, 654, 655, 656], "createcfgsimplificationpass": [634, 635, 636, 637, 651, 652, 653, 654, 656], "createcompileunit": 656, "createcondbr": [652, 653, 654, 655, 656], "createdatalayout": [635, 636, 637, 651, 652, 653, 654, 655, 656], "createdefaultmypass": 627, "createentryblockalloca": [654, 655, 656], "createexpress": 656, "createfadd": [650, 651, 652, 653, 654, 655, 656], "createfcmpon": [652, 653, 654, 655, 656], "createfcmpult": [650, 651, 652, 653, 654, 655, 656], "createfil": 656, "createfmul": [650, 651, 652, 653, 654, 655, 656], "createfsub": [650, 651, 652, 653, 654, 655, 656], "createfunct": 656, "createfunctiontyp": 656, "creategvnpass": [634, 635, 636, 637, 651, 652, 653, 654, 656], "createindirectstubsmanag": 637, "createinstructioncombiningpass": [634, 635, 636, 637, 651, 652, 653, 654], "createjit": 564, "createjitdylib": 573, "createlegacylookupresolv": [635, 636, 637], "createload": [654, 655, 656], "createlocalcompilecallbackmanag": [635, 636], "createlocalindirectstubsmanagerbuild": [635, 636], "createmul": 589, "createmyregisteralloc": 627, "createparametervari": 656, "createphi": [652, 653, 654, 655, 656], "createpromotememorytoregisterpass": [654, 656], "createreassociatepass": [634, 635, 636, 637, 651, 652, 653, 654], "createremotememorymanag": 637, "createret": [650, 651, 652, 653, 654, 655, 656], "createstor": [654, 655, 656], "createstringerror": 589, "createstub": [636, 637], "createsubroutinetyp": 656, "createtargetasminfo": 626, "createtargetmachin": 655, "createthin": 476, "createuitofp": [650, 651, 652, 653, 654, 655, 656], "createvirtualregist": 464, "creation": [462, 476, 513, 516, 526, 551, 555, 559, 589, 591, 626], "creator": [462, 627], "creatur": [653, 659, 664], "credit": [517, 606], "creduc": 459, "crhc": 593, "critedge1": 572, "criteria": [517, 591], "criterion": [591, 602], "critic": [450, 463, 474, 493, 517, 524, 526, 539, 551, 559, 599, 606, 627, 649, 660], "cross": [449, 467, 469, 497, 539, 540, 541, 547, 559, 571, 573, 585, 591, 596, 598, 603, 624, 655], "crosscompil": [464, 550], "crucial": [559, 588, 606], "cruel": [566, 607], "cruft": 591, "crypto": 561, "cryptograph": [602, 606], "cs1": [450, 559], "cs2": [450, 559], "csail": 606, "cse": [451, 520, 535, 560, 574, 651, 662], "csemirbuild": 535, "cset": 452, "csk_md5": 559, "csk_none": 559, "csk_sha1": 559, "csk_sha256": 559, "csr": 598, "csr_64": 565, "cst": 559, "cst_code_integ": 454, "cst_code_wide_integ": 454, "cstdint": [637, 651, 652, 653, 654], "cstdio": [637, 649, 650, 651, 652, 653, 654, 655, 656], "cstdlib": [636, 637, 649, 650, 651, 652, 653, 654, 655], "cstptr": 559, "cstring": 637, "cstylecom": 616, "csv": [487, 620, 628, 629], "cta": 572, "ctaid": 572, "ctest": 619, "ctmark": 619, "ctor": [467, 522, 557, 559, 605], "ctpop": 626, "ctrl": [650, 655], "ctx": [573, 633, 634], "ctxt": 631, "ctype": 577, "cu": [447, 486, 506, 510, 554, 559, 605], "cube": 445, "cubemap": 445, "cubic": 561, "cucontext": 572, "cuctxcreat": 572, "cuctxdestroi": 572, "cuda": [442, 447, 464, 511, 518, 572, 624], "cuda_success": 572, "cudamodul": 572, "cudevic": 572, "cudevicecomputecap": 572, "cudeviceget": 572, "cudevicegetcount": 572, "cudevicegetnam": 572, "cudeviceptr": 572, "cufunct": 572, "cuinit": 572, "culaunchkernel": 572, "culinkst": 572, "cull": 467, "cultur": [465, 568], "cumbersom": [573, 591, 615], "cumemalloc": 572, "cumemcpydtoh": 572, "cumemcpyhtod": 572, "cumemfre": 572, "cumod": 447, "cumodul": 572, "cumodulegetfunct": 572, "cumoduleloaddata": 572, "cumoduleloaddataex": 572, "cumoduleunload": 572, "cumul": [464, 495, 629], "cuobjdump": 510, "cur_var": 665, "curesult": 572, "curiou": 571, "curious": 552, "curli": [467, 559, 589, 615, 621], "curloc": 656, "curop": 626, "curr": 659, "currenc": [464, 466, 651, 662], "current": [17, 54, 55, 94, 115, 199, 338, 347, 384, 385, 426, 442, 445, 446, 447, 450, 451, 453, 454, 456, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 472, 473, 474, 476, 481, 483, 493, 495, 496, 500, 501, 504, 509, 510, 513, 514, 516, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 531, 532, 533, 534, 535, 538, 539, 541, 543, 544, 545, 546, 550, 551, 556, 557, 558, 559, 561, 564, 565, 571, 572, 573, 577, 581, 586, 587, 588, 589, 590, 593, 595, 598, 599, 600, 601, 602, 604, 605, 606, 608, 610, 611, 613, 615, 616, 617, 621, 622, 623, 624, 626, 627, 628, 629, 631, 633, 634, 635, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 659, 660, 661, 662, 663, 664, 665, 666], "current_corpus_dir": 561, "current_valu": 513, "curs": [469, 472], "curtok": [649, 650, 651, 652, 653, 654, 655, 656], "curvar": [654, 655, 656, 665], "custom": [459, 462, 464, 467, 468, 469, 519, 520, 522, 524, 530, 538, 539, 558, 559, 561, 565, 587, 598, 610, 613, 614, 617, 621, 630, 633, 636], "customalloc": 513, "customari": [509, 517, 559], "customev": 630, "customeventunstructuredmemori": 630, "customfor": 538, "customfre": 513, "customif": 538, "customis": [462, 628], "customiz": [535, 554], "cut": [455, 487, 509, 626, 633], "cute": [657, 666], "cutoff": 498, "cv": 591, "cv_cpu_type_": 577, "cv_signature_xx": 580, "cvdebugrecord": 582, "cvdump": 497, "cve": [561, 603], "cvinfo": 580, "cvpack": 584, "cvt": 572, "cx": 617, "cxa_demangl": 605, "cxx": [460, 467, 472, 529, 544, 550, 573, 599], "cxx11": 593, "cxx14": 467, "cxx_fast_tl": 559, "cxx_fast_tlscc": [454, 559], "cxx_flag": 547, "cxx_statu": 467, "cxxcompilelay": 573, "cxxcompilinglay": 573, "cxxfilt": 471, "cxxflag": [480, 633, 634, 635, 636, 637, 649, 650, 651, 652, 653, 654, 655, 656], "cxxlayer": 573, "cxxmap": [471, 498], "cy": 493, "cycl": [487, 493, 512, 516, 519, 528, 559, 562, 563, 605, 629], "cycle_frequ": 630, "cyclic": [529, 559], "cyclonemodel": 626, "cygwin": [464, 529, 531], "cypress": 447, "cywritev3": 626, "d": [442, 453, 454, 457, 462, 463, 467, 468, 472, 476, 487, 490, 493, 494, 495, 496, 500, 501, 502, 504, 505, 509, 510, 513, 516, 517, 518, 520, 521, 529, 532, 533, 538, 540, 543, 548, 554, 559, 570, 573, 587, 588, 589, 591, 597, 598, 610, 611, 613, 615, 616, 619, 626, 627, 629, 633, 634, 635, 649, 650, 651, 652, 653, 654, 655, 656, 660, 661, 662, 664, 668], "d0": [468, 493, 559, 626], "d02": 623, "d0o": 514, "d1": [468, 514, 626], "d10": 626, "d11": 626, "d12": [623, 626], "d13": 626, "d14": 626, "d15": [559, 626], "d16": [0, 3, 4, 30, 41, 43, 215, 226, 228, 360, 371, 373], "d16_x": 444, "d16_xy": 444, "d16_xyz": 444, "d16_xyzw": 444, "d2": 626, "d3": [565, 626], "d31": 559, "d4": [559, 626], "d5": 626, "d57504": 595, "d57896": 594, "d6": [514, 626], "d7": [559, 626], "d71913": 598, "d7k": 514, "d8": 626, "d9": 626, "d_ctor_bas": 468, "da": [2, 3, 4, 493, 514, 559, 594], "dag": [448, 508, 560, 584, 589, 591, 610, 613, 615, 616, 617, 621, 626], "dagarg": 616, "dagarglist": 616, "dagcombin": [520, 598], "dagtodag": 520, "dagtodagisel": 520, "dai": [462, 466, 517, 528, 529, 551, 589, 603, 666], "damag": 605, "dan": 631, "danc": 532, "danger": [468, 559, 589, 601, 606, 622], "dangl": [467, 559, 589, 616, 663], "daniel": [542, 605], "danila": 594, "darktabl": 593, "darwin": [460, 464, 476, 494, 502, 523, 559, 562, 573, 608, 656], "darwin9": 468, "dash": [509, 525, 631], "dasinconsist": 594, "data": [17, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 61, 64, 82, 91, 115, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 146, 147, 167, 179, 199, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 246, 247, 266, 276, 322, 323, 347, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 391, 394, 413, 423, 444, 445, 446, 449, 450, 451, 452, 453, 458, 460, 463, 466, 467, 471, 479, 481, 493, 494, 495, 496, 497, 500, 501, 502, 505, 506, 509, 513, 519, 520, 521, 523, 524, 525, 526, 527, 533, 538, 539, 548, 560, 561, 562, 563, 564, 565, 576, 577, 581, 582, 584, 585, 591, 592, 593, 596, 597, 598, 600, 603, 605, 608, 610, 613, 615, 617, 619, 626, 627, 629, 633, 650, 651, 654, 655, 656, 662, 663, 664, 665], "data16bitsdirect": 626, "data32bitsdirect": 626, "data64bitsdirect": 626, "data_alignment_factor": [442, 447], "databas": [559, 585, 597, 631, 657, 666], "datacrc": 577, "dataflow": [462, 559, 605, 654, 665], "datalayout": [454, 526, 559, 572, 573, 623, 626, 633, 634, 635, 636, 637, 662, 663, 664, 665], "datalayoutpass": 656, "dataloc": 559, "datapath": 598, "dataset": [593, 619], "datastructur": [589, 591], "datatyp": [464, 509, 589, 648, 659], "date": [450, 458, 459, 461, 476, 495, 505, 529, 531, 550, 551, 570, 577, 584, 588, 594, 598, 599, 603, 615, 633, 634, 635, 652, 663], "daunt": 462, "david": [594, 596], "db": 559, "dbaremetal_armv6m_sysroot": 549, "dbaremetal_armv7em_sysroot": 549, "dbaremetal_armv7m_sysroot": 549, "dbg": [458, 554, 559, 589, 626, 656], "dbg_valu": [447, 554, 605], "dbgentityhistorycalcul": 605, "dbgopt": 605, "dbgstreamarrai": 577, "dbi": [575, 580, 585], "dbi_head": 577, "dbistreamhead": 577, "dbistreamvers": 577, "dbl": 619, "dblty": 656, "dbootstrap_cmake_build_typ": 518, "dbootstrap_cmake_c_flag": 449, "dbootstrap_cmake_cxx_flag": 449, "dbscan": 487, "dbuild_shared_lib": 529, "dbuilder": 656, "dbx": 605, "dc": [561, 567], "dce": [469, 509, 513, 520, 559, 595], "dced": 589, "dclang_bootstrap_passthrough": 449, "dclang_bootstrap_target": 518, "dclang_enable_bootstrap": [449, 518], "dclang_enable_proto_fuzz": 525, "dclang_enable_static_analyz": 529, "dclang_tablegen": [548, 550], "dcmake_ar": 549, "dcmake_asm_compiler_target": 549, "dcmake_asm_flag": 549, "dcmake_build_typ": [512, 518, 529, 547, 548, 621, 629], "dcmake_c_compil": [548, 549, 619], "dcmake_c_compiler_external_toolchain": 549, "dcmake_c_compiler_target": 549, "dcmake_c_flag": [547, 548, 549], "dcmake_c_flags_releas": 629, "dcmake_crosscompil": 550, "dcmake_cxx_compil": 548, "dcmake_cxx_flag": [548, 550, 629], "dcmake_cxx_link_flag": 529, "dcmake_exe_linker_flag": 549, "dcmake_install_prefix": [462, 529, 547, 550], "dcmake_nm": 549, "dcmake_osx_architectur": 529, "dcmake_ranlib": 549, "dcmake_sysroot": 549, "dcmake_toolchain_fil": 529, "dcmake_try_compile_target_typ": 549, "dcommit": 591, "dcompiler_rt_baremetal_build": 549, "dcompiler_rt_build_builtin": 549, "dcompiler_rt_build_libfuzz": 549, "dcompiler_rt_build_profil": 549, "dcompiler_rt_build_sanit": 549, "dcompiler_rt_build_xrai": 549, "dcompiler_rt_default_target_onli": 549, "dcompiler_rt_emul": 549, "dcompiler_rt_include_test": 549, "dcompiler_rt_os_dir": 549, "dcompiler_rt_test_compil": 549, "dcompiler_rt_test_compiler_cflag": 549, "ddg": [516, 597], "ddgbuilder": 516, "de": [501, 582, 585, 604, 627, 631], "dead": [450, 464, 509, 522, 524, 529, 536, 554, 559, 560, 562, 565, 572, 574, 589, 605, 610], "deadli": 561, "deadlin": 466, "deadtypeelim": 589, "deal": [451, 453, 454, 462, 465, 467, 510, 513, 517, 519, 523, 533, 538, 539, 552, 563, 576, 584, 587, 589, 591, 596, 598, 605, 606, 613, 628, 654, 665], "dealloc": [526, 545, 559, 589, 602], "deallocationtypemismatch": 602, "death": [525, 561], "deb": 550, "debat": 535, "debian": [529, 549, 550, 586], "debian8": 518, "debug": [448, 458, 459, 460, 462, 464, 467, 469, 472, 473, 480, 481, 484, 487, 488, 494, 495, 496, 497, 501, 505, 506, 507, 509, 512, 514, 517, 519, 521, 526, 529, 531, 535, 548, 551, 553, 560, 561, 562, 565, 569, 571, 573, 575, 576, 579, 580, 582, 584, 585, 586, 590, 594, 600, 608, 610, 617, 619, 624, 626, 627, 648, 654, 655, 657, 658, 659, 665, 666], "debug_": 447, "debug_addr": 442, "debug_arang": [442, 447], "debug_count": 589, "debug_fram": [442, 496], "debug_info": [486, 605], "debug_inlin": 470, "debug_level": 509, "debug_line_str": 442, "debug_loclist": 442, "debug_metadata_vers": 656, "debug_mod": 447, "debug_nam": [442, 605], "debug_pubnam": [470, 575, 605], "debug_pubtyp": [470, 605], "debug_s_crossscopeexport": 497, "debug_s_crossscopeimport": 497, "debug_s_inlineelin": 497, "debug_s_lin": 497, "debug_str": [442, 468, 487, 605], "debug_symbol": 586, "debug_with_typ": 589, "debugcount": 589, "debugflag": [509, 589], "debugg": [464, 467, 497, 515, 519, 535, 545, 564, 573, 582, 585, 594, 598, 621, 624, 627, 652, 656, 658, 663, 666], "debuginfo": [462, 529, 559, 582, 591, 621, 656], "debuginfoforprofil": 559, "debuginfometadata": 605, "debuglev": 509, "debuglevel": 509, "debuglink": 495, "debugloc": [464, 600, 656], "debugstreamarrai": 577, "debugtrap": 447, "dec": [502, 589], "decad": 617, "decent": [520, 547, 551, 589, 627, 656], "decid": [447, 453, 460, 462, 509, 510, 517, 519, 520, 538, 543, 553, 559, 575, 577, 588, 589, 603, 605, 606, 610, 625, 627, 631, 649, 653, 654, 660, 662, 664, 665], "decim": [446, 447, 468, 475, 494, 498, 502, 504, 509, 521, 559, 615, 631], "decimal_numb": 447, "decimalinteg": 616, "deciph": 447, "decis": [453, 458, 460, 464, 465, 466, 467, 517, 519, 524, 534, 538, 543, 561, 589, 596, 601, 606, 610, 625, 632, 634, 651, 662], "decl": [552, 617, 650], "declar": [442, 446, 447, 450, 454, 464, 468, 509, 510, 513, 520, 522, 552, 557, 558, 559, 571, 572, 589, 608, 610, 611, 613, 615, 617, 623, 626, 627, 648, 649, 650, 651, 652, 653, 654, 655, 656, 659, 660, 661, 662, 663, 664, 665], "declare_funct": [661, 662, 663, 664, 665], "declaring_vari": 594, "declcontext": 552, "declet": 559, "decltyp": [559, 635, 636, 637], "decod": [454, 487, 493, 500, 501, 559, 605, 613, 615, 619], "decompos": [447, 517, 520, 538, 584, 610], "decomposit": 487, "decompress": 495, "decor": 605, "decoupl": 615, "decreas": [460, 474, 548, 551, 559, 576, 602], "decrement": [447, 519, 589], "decrib": 559, "dedic": [446, 464, 517, 543, 545, 551, 563, 591, 626], "deduc": [447, 524, 559, 563, 574, 589, 615, 616, 622], "dedupl": 577, "deee": 493, "deeer": 493, "deem": [517, 520, 551, 553, 559], "deep": [467, 516, 552, 587, 593], "deeper": [463, 497, 525, 566, 607, 619, 633], "deepli": 514, "def": [442, 448, 464, 487, 513, 516, 520, 533, 536, 554, 556, 560, 563, 565, 570, 596, 605, 613, 615, 617, 626, 627, 648, 649, 650, 651, 652, 653, 654, 655, 656, 659, 660, 661, 662, 663, 664, 665], "default": [24, 25, 26, 34, 35, 36, 37, 38, 41, 61, 121, 122, 123, 127, 128, 129, 130, 133, 146, 205, 206, 207, 216, 217, 218, 220, 223, 226, 246, 322, 354, 355, 356, 364, 365, 366, 367, 368, 371, 442, 445, 447, 448, 449, 450, 451, 454, 456, 460, 462, 464, 468, 469, 470, 472, 473, 474, 475, 476, 480, 481, 482, 485, 486, 487, 488, 493, 494, 495, 496, 497, 498, 500, 501, 502, 504, 505, 506, 508, 509, 510, 513, 517, 520, 521, 524, 525, 526, 529, 531, 541, 544, 545, 546, 548, 549, 550, 552, 554, 557, 559, 561, 564, 565, 567, 570, 572, 573, 586, 588, 589, 590, 591, 598, 600, 602, 603, 605, 606, 608, 610, 613, 615, 617, 619, 620, 621, 622, 623, 625, 626, 627, 628, 629, 633, 634, 649, 650, 651, 652, 653, 654, 655, 656, 661, 662, 663, 664], "default_branch_weight": 456, "defaultdest": 559, "defaultlib": 531, "defaultopt": 509, "defeat": 606, "defect": 466, "defend": 606, "defens": 517, "defer": [466, 564, 571, 573, 594, 633, 634, 635, 651, 662], "deferrederr": 589, "defi": 559, "defici": [526, 659], "defin": [46, 60, 61, 136, 145, 146, 231, 245, 246, 331, 376, 390, 391, 442, 445, 446, 447, 449, 450, 451, 453, 454, 455, 456, 459, 462, 463, 464, 468, 469, 472, 476, 478, 479, 493, 494, 495, 498, 509, 510, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 525, 526, 527, 529, 533, 535, 536, 537, 538, 545, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 565, 566, 570, 571, 572, 573, 574, 576, 577, 580, 582, 585, 586, 587, 589, 590, 592, 594, 595, 597, 598, 602, 605, 607, 608, 609, 610, 611, 613, 615, 616, 617, 619, 620, 621, 622, 623, 627, 628, 629, 630, 631, 633, 634, 635, 636, 637, 648, 649, 650, 651, 652, 655, 656, 657, 658, 659, 660, 661, 662, 663, 666, 667], "define_dwarf": 447, "definingaccess": 570, "definit": [446, 447, 451, 453, 454, 456, 463, 464, 468, 470, 484, 487, 494, 497, 508, 509, 512, 513, 516, 520, 526, 533, 534, 536, 537, 538, 545, 551, 553, 556, 558, 559, 562, 563, 565, 570, 571, 573, 587, 589, 602, 605, 610, 613, 616, 617, 623, 626, 627, 633, 634, 635, 636, 637, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 659, 660, 661, 662, 663, 664, 665, 666], "defm": [615, 617, 626], "defreg": 487, "degen": 559, "degener": [587, 654, 665], "degrad": [517, 526], "degrandmaison": 568, "degre": [451, 518, 524, 546, 606, 625], "deinit": 598, "deiniti": 598, "delai": [466, 571, 589, 594, 601, 603, 605, 615], "deleg": [451, 493, 519, 559, 592], "delet": [442, 450, 458, 464, 468, 476, 488, 522, 529, 544, 548, 559, 563, 570, 571, 572, 591, 602, 605, 627, 633, 635, 650, 651, 652, 653, 654, 656, 661, 662, 663, 664, 665], "delete_funct": [661, 662, 663, 664, 665], "deleteaninstruct": 589, "deletesizemismatch": 602, "deliber": [570, 608], "delimit": [463, 519, 529, 559, 567, 616], "delin": 472, "delta": [459, 493, 553, 630], "deltalinestart": 514, "delv": [517, 651, 662], "demand": [447, 454, 464, 529, 573, 591, 633, 654, 665], "demangl": [460, 471, 475, 481, 494, 496, 500, 501, 506, 561, 605], "demo": [509, 637, 650, 661], "demonstr": [493, 514, 517, 529, 552, 559, 581, 589, 605, 626, 650, 651, 661, 662], "denisov": 594, "denisovcamelback": 594, "denorm": [510, 559, 598, 631], "denot": [442, 454, 464, 526, 529, 559, 581, 598, 631], "dens": [447, 454, 559, 589], "densemap": 467, "densemapinfo": 589, "denser": [653, 664], "denseset": 573, "densiti": [467, 653, 664], "deopt": [559, 610], "deopt_arg": 559, "deoptim": 610, "dep": [662, 663, 664, 665], "depart": [476, 568, 593], "departur": 591, "depend": [17, 27, 28, 29, 30, 41, 42, 43, 48, 52, 94, 96, 115, 124, 125, 126, 134, 139, 199, 208, 210, 211, 212, 213, 214, 215, 219, 221, 222, 226, 227, 228, 237, 293, 298, 303, 324, 338, 347, 357, 358, 359, 360, 371, 372, 373, 382, 426, 442, 443, 445, 446, 447, 448, 449, 451, 452, 454, 456, 457, 462, 464, 465, 467, 469, 472, 473, 476, 478, 480, 487, 493, 497, 498, 501, 507, 509, 510, 513, 517, 518, 519, 522, 524, 525, 526, 527, 529, 533, 534, 537, 538, 545, 546, 549, 550, 555, 556, 558, 561, 564, 570, 571, 572, 573, 574, 576, 581, 589, 590, 591, 592, 597, 598, 599, 600, 602, 605, 608, 610, 611, 615, 616, 619, 620, 621, 622, 625, 626, 627, 630, 633, 649, 650, 654, 660, 661, 665], "dependencegraphbuild": 516, "depict": [493, 516], "deplib": [454, 521], "deploi": [518, 588, 603, 606], "deploy": 606, "deprec": [442, 447, 454, 462, 468, 472, 517, 547, 573, 576, 589, 605, 610, 621, 626, 628], "depth": [91, 179, 276, 423, 459, 464, 468, 486, 497, 509, 544, 559, 571, 587, 591, 593, 609, 617, 634, 652, 663], "deref_bytes_nod": 559, "derefer": [442, 447, 463, 527, 559, 589, 605, 633], "dereferenc": [442, 454, 523, 524, 545, 587, 589, 598], "dereferenceable_byt": 559, "dereferenceable_or_nul": 454, "deregisterehfram": 637, "deregisterehframesinprocess": 637, "deriv": [447, 464, 467, 495, 517, 526, 552, 556, 558, 559, 560, 564, 587, 588, 598, 605, 613, 615, 616, 617, 622, 627, 634, 648, 659], "derivedtyp": [520, 589, 650, 651, 652, 653, 654, 655], "desc": [447, 509, 626, 627, 637], "descend": [519, 532, 559], "descent": [649, 653, 658, 659, 660, 664], "descreas": 445, "describ": [0, 1, 2, 3, 4, 5, 6, 7, 8, 44, 45, 46, 52, 109, 135, 136, 139, 195, 229, 230, 231, 232, 237, 292, 374, 375, 376, 377, 382, 441, 442, 443, 444, 445, 446, 447, 451, 453, 454, 455, 456, 460, 463, 464, 467, 468, 471, 472, 473, 479, 483, 486, 493, 495, 497, 509, 510, 512, 513, 514, 516, 517, 519, 520, 521, 523, 525, 526, 527, 528, 529, 532, 533, 538, 539, 540, 541, 544, 551, 552, 553, 554, 556, 558, 559, 560, 562, 563, 564, 565, 569, 570, 571, 572, 573, 574, 575, 576, 577, 580, 581, 582, 584, 585, 587, 588, 589, 590, 591, 594, 596, 597, 598, 600, 601, 603, 605, 606, 608, 610, 613, 615, 617, 622, 623, 624, 626, 627, 628, 630, 631, 632, 633, 635, 636, 637, 649, 650, 651, 652, 653, 655, 656, 658, 659, 660, 661, 662, 663, 664, 666], "descript": [1, 5, 6, 7, 8, 18, 46, 52, 57, 58, 62, 91, 109, 116, 136, 139, 143, 179, 195, 200, 231, 232, 237, 242, 243, 276, 292, 332, 348, 376, 377, 382, 387, 388, 392, 423, 441, 443, 444, 445, 446, 447, 450, 451, 454, 460, 463, 466, 467, 471, 509, 514, 518, 519, 526, 528, 529, 534, 538, 541, 545, 546, 552, 553, 558, 559, 560, 571, 572, 575, 587, 588, 589, 597, 598, 602, 603, 605, 608, 613, 617, 619, 624, 626, 628, 630, 655, 656, 668], "descriptor": [442, 454, 493, 559, 577, 605, 608, 626, 656], "deseri": 613, "deserv": [524, 559], "design": [450, 451, 460, 466, 467, 468, 469, 472, 479, 493, 509, 512, 513, 514, 515, 517, 519, 522, 524, 526, 528, 546, 555, 558, 559, 560, 561, 565, 568, 575, 579, 581, 587, 590, 591, 592, 594, 597, 600, 603, 605, 606, 608, 610, 611, 614, 615, 617, 620, 623, 624, 626, 627, 631, 654, 657, 658, 659, 665, 666], "desir": [442, 447, 451, 458, 462, 467, 468, 470, 472, 486, 509, 521, 524, 526, 556, 559, 561, 564, 574, 587, 589, 592, 594, 600, 601, 605, 606, 608, 610, 621, 626, 627, 657, 666], "desktop": [586, 621], "despit": [451, 464, 509, 548, 559, 591, 594, 605, 606, 610, 614, 615, 617, 627, 630], "dest": [559, 655], "dest1": 559, "dest2": 559, "destarglist": 559, "destin": [59, 144, 244, 330, 389, 443, 444, 445, 446, 447, 456, 464, 476, 519, 521, 524, 534, 559, 606, 621, 626, 654, 655, 656, 665], "destreg": 464, "destroi": [464, 519, 522, 543, 557, 559, 565, 573, 589, 626, 631], "destruct": [513, 557, 589, 605, 606, 608, 657, 666], "destructor": [467, 510, 513, 519, 522, 559, 589, 594, 605, 627], "detail": [52, 139, 237, 382, 444, 445, 447, 450, 451, 455, 457, 458, 462, 463, 464, 465, 466, 468, 472, 473, 486, 487, 493, 497, 498, 509, 510, 513, 517, 518, 519, 522, 525, 526, 527, 528, 529, 531, 545, 546, 548, 552, 553, 558, 559, 560, 561, 562, 568, 569, 571, 572, 573, 574, 577, 581, 584, 587, 589, 590, 591, 593, 594, 597, 598, 601, 602, 603, 610, 611, 613, 619, 621, 622, 626, 627, 628, 629, 631, 632, 634, 635, 636, 637, 650, 653, 654, 657, 658, 659, 661, 664, 665, 666], "detect": [447, 462, 468, 472, 481, 482, 484, 487, 493, 498, 550, 559, 561, 563, 569, 571, 573, 588, 589, 596, 597, 602, 605, 606, 609, 621, 625, 630, 651, 662], "detect_leak": 561, "detecthost": [633, 634], "detector": [559, 569, 571], "determin": [442, 447, 450, 454, 459, 462, 464, 472, 473, 475, 476, 483, 493, 495, 507, 513, 514, 517, 519, 536, 537, 538, 541, 551, 552, 553, 556, 559, 561, 564, 571, 572, 573, 574, 575, 577, 579, 584, 587, 589, 590, 596, 601, 602, 603, 605, 606, 608, 609, 610, 611, 620, 621, 622, 623, 626, 627, 630, 631, 649, 650, 652, 653, 660, 661, 663, 664], "determinist": [449, 450, 458, 460, 464, 476, 495, 505, 559, 561, 589, 613], "deterministicfiniteautomaton": 594, "detriment": [467, 594], "dev": [451, 466, 473, 474, 512, 517, 520, 524, 526, 528, 545, 550, 568, 588, 589, 591, 594, 596, 605, 610, 615, 616, 627, 629, 655, 657, 666], "devbuffera": 572, "devbufferb": 572, "devbufferc": 572, "devcount": 572, "devel": 599, "develop": [442, 447, 454, 457, 460, 463, 464, 465, 466, 467, 495, 505, 509, 511, 512, 518, 519, 524, 526, 527, 531, 532, 538, 546, 547, 549, 551, 553, 558, 559, 562, 568, 569, 573, 586, 590, 592, 593, 594, 595, 596, 598, 600, 601, 605, 606, 610, 611, 617, 620, 628, 629, 632, 634, 635, 636, 637, 654, 665, 667], "deviat": [464, 467, 521], "devic": [442, 445, 447, 452, 477, 485, 488, 490, 507, 547, 572, 573], "device_enqueue_symbol": 447, "device_fn": 510, "device_onli": 510, "devirtu": [559, 623], "devis": 590, "devmajor": 572, "devmeet": 540, "devminor": 572, "devoid": 464, "dexonsmith": 605, "dfa": [464, 508, 594, 613], "dfapacket": 464, "dform_1": 464, "dfpreg": 626, "dfpregsclass": 626, "dfpregsregclass": 626, "dfpregsregisterclass": 626, "dgh": 598, "dgpu": 447, "dgwp_asan_default_opt": 545, "dh": 617, "di": [471, 477, 478, 492, 496, 529, 531, 554, 605, 617, 621, 635, 654, 665], "di_index": 559, "dia": [462, 497], "diagnos": [468, 484, 559, 625, 627], "diagnost": [467, 468, 471, 472, 473, 484, 561, 569, 589, 613, 617], "diagnosticinfooptim": 600, "diagram": [516, 539, 581], "dialect": [559, 567], "diamond": 554, "diana": [542, 594], "dibasictyp": [554, 605], "dibuild": [605, 656], "dice": 589, "dicompileunit": [554, 605, 656], "dict": 561, "dictat": [442, 467, 589, 604], "dictionari": [472, 559, 613], "dictionary_fil": 561, "did": [450, 467, 513, 517, 519, 525, 552, 559, 563, 571, 589, 591, 600, 627, 634, 651, 653, 654, 657, 662, 664, 665, 666], "didn": [464, 510, 524, 525, 559, 571, 589, 605, 606, 627, 650, 654, 660, 661, 665], "die": [442, 486, 605, 656], "die_offset_bas": 605, "diego": 459, "diegotf": 459, "diexpress": [447, 554, 605], "dif": 587, "diff": [466, 467, 471, 486, 512, 517, 518, 529, 587, 588, 589, 591, 619, 621], "differ": [11, 92, 180, 215, 226, 228, 277, 310, 337, 424, 442, 443, 444, 445, 446, 447, 448, 449, 453, 454, 455, 456, 458, 459, 462, 463, 464, 465, 466, 467, 468, 469, 472, 473, 474, 475, 478, 481, 484, 486, 487, 492, 493, 495, 496, 497, 502, 503, 505, 506, 509, 511, 513, 514, 516, 517, 518, 519, 520, 521, 522, 524, 526, 529, 531, 532, 533, 534, 535, 538, 539, 543, 548, 551, 552, 555, 556, 559, 561, 562, 563, 564, 565, 568, 571, 572, 573, 574, 575, 577, 584, 587, 588, 589, 591, 592, 594, 597, 598, 599, 600, 601, 602, 603, 605, 606, 608, 610, 611, 613, 615, 616, 617, 619, 621, 622, 625, 626, 627, 628, 629, 630, 631, 632, 634, 635, 637, 650, 651, 652, 654, 655, 656, 657, 661, 662, 663, 664, 665, 666], "differenti": [466, 521, 558, 588, 592], "difficult": [442, 450, 451, 467, 509, 517, 519, 538, 539, 549, 559, 562, 566, 573, 574, 589, 591, 594, 605, 607, 656, 664], "difficulti": [593, 605], "difil": [554, 605, 656], "diflagartifici": 559, "diflagfwddecl": 559, "diflagprototyp": [559, 605], "diflagpubl": 605, "diflagvector": 559, "difwddecl": 559, "dig": [615, 659], "digit": [447, 468, 494, 509, 559, 569], "diglobalvari": 605, "digress": [653, 664], "dijkstra": 593, "dil": [521, 617], "dilexicalblock": 605, "diloc": [468, 554, 605], "dilocalvari": [554, 605, 656], "dim": [0, 17, 559], "dimens": [61, 115, 146, 199, 246, 347, 391, 445, 447, 559], "dimension": [17, 115, 199, 347, 445, 527, 572, 653, 664], "diminish": 605, "dimitri": 603, "dimodul": 598, "dindex": 626, "dinkumwar": 589, "dinod": [559, 605, 656], "dinstall_gwp_asan_stub": 545, "diploma": 596, "dir": [449, 462, 472, 481, 495, 525, 529, 549, 550, 559, 561, 590, 599, 605, 619], "dir1": [447, 561], "dir2": [447, 561], "dir3": 447, "dir4": 447, "dir_to_mount": 452, "direct": [442, 461, 462, 463, 465, 467, 469, 472, 487, 493, 501, 508, 509, 513, 516, 517, 519, 524, 525, 535, 539, 549, 554, 560, 571, 584, 589, 591, 599, 605, 606, 610, 611, 615, 616, 617, 620, 622, 626, 627, 631, 654, 665], "directedgraph": 516, "directli": [38, 130, 223, 368, 442, 447, 451, 454, 462, 464, 466, 467, 471, 478, 480, 493, 506, 509, 513, 517, 519, 524, 525, 526, 527, 529, 531, 539, 541, 543, 544, 546, 557, 559, 570, 572, 573, 574, 575, 577, 579, 587, 588, 589, 590, 591, 596, 600, 601, 602, 605, 608, 610, 611, 613, 615, 617, 619, 626, 627, 628, 629, 630, 633, 634, 635, 636, 637, 650, 651, 652, 653, 654, 662, 663, 664, 665], "directori": [447, 449, 461, 462, 463, 464, 467, 470, 472, 476, 480, 481, 495, 501, 506, 508, 510, 517, 524, 528, 531, 532, 544, 546, 548, 549, 550, 551, 554, 558, 559, 561, 565, 577, 582, 585, 589, 590, 591, 594, 598, 599, 600, 605, 611, 617, 618, 619, 620, 621, 626, 627, 628, 656], "dirti": 577, "disabl": [232, 377, 445, 446, 447, 450, 452, 453, 458, 462, 467, 468, 469, 472, 473, 474, 481, 487, 493, 494, 495, 496, 505, 507, 509, 514, 526, 529, 539, 544, 550, 551, 553, 554, 561, 570, 574, 586, 589, 598, 599, 602, 610, 619, 621, 622, 625, 628, 652, 656, 663], "disable_assert": 586, "disable_nonforc": 622, "disableencod": 617, "disablelazycompil": 589, "disadvantag": [509, 555, 562, 563, 589], "disagr": 465, "disagre": [465, 517, 559, 603, 605], "disallow": [509, 527, 558, 559, 608, 610], "disambigu": [450, 524, 533, 563, 570], "disappear": [522, 529, 547, 605], "disassembl": [461, 471, 496, 508, 529, 531, 558, 559, 561, 567], "disassembleremitt": 613, "disassembli": [461, 496, 508, 559, 589, 597, 598], "discard": [442, 446, 459, 464, 468, 495, 505, 509, 513, 521, 529, 534, 538, 559, 589, 591, 596, 610], "discharg": 524, "disclaim": [463, 517], "disclos": [601, 603], "disclosur": [517, 601], "discontigu": 581, "discop": 656, "discord": 517, "discourag": [467, 509, 517, 559, 589, 601, 611], "discours": 517, "discov": [442, 464, 472, 487, 513, 526, 551, 561, 582, 605, 606, 611, 652, 654, 663, 665], "discover": 518, "discret": 603, "discrimin": [464, 467, 506, 552, 559, 613, 630], "discriminatori": 465, "discuss": [442, 463, 465, 466, 467, 468, 493, 509, 512, 513, 514, 517, 525, 528, 529, 530, 531, 535, 538, 552, 554, 559, 568, 573, 574, 577, 579, 581, 584, 588, 589, 591, 595, 601, 605, 606, 608, 610, 617, 626, 627, 628, 634, 635, 637, 649, 658, 660], "disjoint": [442, 447, 450, 516, 534, 559, 563, 570, 625], "disk": [442, 447, 467, 472, 487, 529, 558, 559, 561, 562, 577, 581, 582, 584, 591, 605, 611, 628, 633], "dislik": 517, "disp32": 464, "dispac": 442, "dispatch": [519, 559, 573, 589, 606, 608, 649, 660], "dispatch1": 559, "dispatch2": [519, 559], "dispatchwidth": 493, "dispel": 527, "dispflagdefinit": 605, "dispflagdelet": 605, "dispflagelement": 605, "dispflagpur": 605, "dispflagrecurs": 605, "displac": [442, 464, 559], "displai": [463, 464, 465, 467, 470, 472, 476, 478, 481, 482, 486, 487, 491, 493, 494, 495, 496, 497, 498, 500, 501, 502, 504, 505, 509, 514, 517, 546, 552, 567, 587, 600, 605, 613, 620, 626, 648, 659], "disposit": 517, "disproportion": 605, "disregard": 603, "disrupt": [566, 606], "dissassembl": 460, "dissemin": 603, "distanc": [496, 559, 589, 602, 631, 636, 667], "distil": 621, "distinct": [442, 447, 450, 454, 464, 468, 483, 486, 516, 517, 519, 527, 533, 539, 545, 554, 558, 559, 587, 589, 596, 598, 602, 605, 621, 622, 626, 650, 661], "distinctli": 533, "distinguish": [442, 453, 454, 458, 513, 514, 517, 533, 541, 559, 563, 589, 594, 610, 611, 657, 666], "distract": 517, "distribut": [449, 455, 463, 467, 469, 472, 493, 498, 510, 512, 515, 517, 518, 522, 528, 529, 530, 531, 549, 550, 572, 591, 600, 603, 606, 617, 619, 627, 628], "distributionexampl": 460, "distributor": 603, "distro": [548, 550], "disubprogram": [554, 605, 656], "disubroutinetyp": [554, 605, 656], "dityp": 656, "div": [445, 464, 468, 559], "divari": 559, "dive": [552, 648, 658, 659], "diverg": [442, 447, 527, 559, 574, 653, 664], "divers": 548, "divid": [442, 447, 455, 464, 468, 472, 478, 493, 510, 513, 520, 559, 585, 587, 611, 619], "dividend": [464, 510, 559], "divis": [446, 447, 464, 559, 653, 664], "divisionbyzero": 559, "divisor": [510, 559], "django": [465, 601], "dl": [464, 573, 593, 617, 633, 634, 635, 636, 637], "dlc": [0, 447], "dlclose": 561, "dlibfuzzer_en": 561, "dlibfuzzer_enable_test": 561, "dll": [454, 519, 573, 577, 621], "dllc": [554, 621], "dllexport": [454, 559, 651, 652, 653, 654, 655, 656], "dllimport": [454, 559], "dllstorageclass": [454, 559], "dllvm_binutils_incdir": 544, "dllvm_build_instru": 548, "dllvm_build_runtim": [525, 529, 548], "dllvm_build_stat": 452, "dllvm_config_path": 549, "dllvm_default_target_tripl": 550, "dllvm_dir": 462, "dllvm_enable_assert": [512, 529, 547, 621], "dllvm_enable_backtrac": 529, "dllvm_enable_doxygen": 462, "dllvm_enable_doxygen_qt_help": 462, "dllvm_enable_p": 550, "dllvm_enable_project": [529, 591], "dllvm_enable_sphinx": 529, "dllvm_experimental_targets_to_build": 626, "dllvm_external_bar_source_dir": 462, "dllvm_external_foo_source_dir": 462, "dllvm_external_project": 462, "dllvm_include_exampl": 529, "dllvm_include_test": 529, "dllvm_libdir_suffix": 462, "dllvm_local_rpath": 529, "dllvm_optimized_tablegen": 529, "dllvm_parallel_link_job": 529, "dllvm_profdata_fil": 548, "dllvm_tablegen": [548, 550], "dllvm_target_arch": 550, "dllvm_targets_to_build": [462, 518, 529, 547, 550], "dllvm_use_link": [462, 529], "dllvm_use_sanit": 525, "dllvm_use_sanitize_coverag": 525, "dllvm_use_split_dwarf": 529, "dloc": 468, "dlsym": [651, 662], "dmask": [0, 2, 3, 4, 27, 28, 29, 30, 42, 43, 124, 125, 126, 134, 212, 213, 214, 215, 227, 228, 357, 358, 359, 360, 372, 373], "dmb": 451, "dmlc": 593, "dmpqrstx": 476, "dname": 509, "do": [442, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 457, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 474, 476, 481, 482, 487, 490, 493, 494, 495, 496, 498, 500, 501, 505, 507, 509, 510, 512, 513, 516, 517, 518, 519, 520, 521, 523, 524, 525, 526, 529, 531, 532, 533, 536, 537, 538, 539, 545, 546, 547, 548, 549, 551, 552, 553, 554, 555, 557, 558, 559, 560, 561, 562, 563, 566, 567, 568, 570, 572, 573, 574, 575, 576, 580, 581, 584, 588, 589, 590, 591, 593, 598, 599, 600, 601, 605, 606, 607, 608, 610, 611, 614, 615, 616, 617, 619, 620, 621, 622, 625, 626, 627, 628, 629, 630, 631, 633, 634, 635, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 659, 660, 661, 662, 663, 664, 665, 666], "do_on": 513, "do_safepoint": 610, "do_something_with_t": 523, "do_two": 513, "doc": [448, 462, 467, 514, 520, 528, 529, 532, 549, 550, 551, 559, 561, 566, 591, 594, 595, 598, 607, 619, 631, 633, 655], "dockerfil": 624, "doclist": 631, "document": [0, 1, 2, 3, 4, 5, 6, 7, 8, 442, 444, 445, 446, 450, 451, 453, 454, 455, 457, 459, 460, 462, 463, 464, 465, 471, 487, 509, 510, 512, 514, 516, 517, 518, 519, 520, 521, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 543, 546, 547, 549, 550, 552, 553, 554, 556, 558, 559, 560, 561, 562, 564, 565, 566, 569, 570, 572, 573, 575, 576, 579, 581, 584, 586, 587, 589, 591, 593, 594, 597, 598, 599, 601, 603, 605, 607, 608, 610, 611, 612, 613, 615, 616, 617, 618, 619, 621, 623, 624, 626, 627, 628, 629, 630, 650, 651, 656, 662], "documentlist": 631, "documentlisttrait": 631, "dodg": 468, "doe": [215, 226, 228, 442, 444, 445, 446, 447, 449, 450, 451, 452, 454, 457, 458, 460, 461, 462, 463, 464, 466, 467, 468, 472, 476, 477, 481, 484, 487, 493, 494, 495, 496, 501, 505, 506, 509, 510, 513, 515, 517, 518, 519, 520, 521, 523, 524, 526, 529, 531, 532, 534, 535, 538, 543, 544, 545, 548, 549, 551, 552, 553, 554, 555, 557, 559, 562, 563, 564, 567, 569, 570, 571, 572, 573, 576, 577, 582, 584, 587, 588, 589, 590, 591, 592, 593, 598, 600, 601, 602, 603, 604, 605, 606, 608, 610, 611, 615, 616, 619, 621, 622, 626, 628, 629, 631, 633, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666], "doesn": [450, 451, 453, 456, 457, 458, 459, 463, 464, 465, 467, 468, 472, 476, 493, 509, 510, 512, 514, 517, 518, 519, 522, 524, 526, 527, 529, 532, 534, 537, 538, 541, 544, 551, 552, 553, 559, 565, 570, 579, 589, 591, 594, 603, 605, 606, 608, 610, 611, 614, 615, 616, 621, 627, 629, 631, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666], "dofin": 626, "dog": [509, 594], "doiniti": [561, 626, 634, 635, 636, 637, 651, 652, 653, 654, 656], "dollar": 547, "domain": [464, 526, 533, 559, 563, 606, 614, 617, 626, 657, 666], "domin": [488, 510, 526, 559, 563, 570, 589, 619, 627, 654, 665], "dominatorset": 627, "dominatortre": [594, 627], "dominatortreebas": 589, "don": [448, 450, 457, 459, 462, 463, 464, 465, 468, 470, 472, 474, 493, 494, 497, 506, 509, 510, 512, 514, 517, 518, 519, 524, 526, 529, 532, 536, 538, 547, 551, 552, 553, 559, 561, 565, 566, 570, 571, 572, 575, 586, 587, 588, 589, 591, 598, 599, 601, 603, 605, 607, 609, 610, 620, 621, 625, 627, 630, 633, 636, 637, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 659, 660, 661, 662, 663, 664, 665, 666], "done": [0, 2, 3, 4, 442, 447, 451, 452, 458, 459, 460, 462, 464, 466, 467, 487, 507, 509, 512, 515, 517, 519, 520, 526, 529, 534, 536, 545, 547, 548, 551, 552, 556, 559, 561, 562, 563, 564, 570, 571, 573, 587, 588, 589, 591, 599, 603, 604, 605, 606, 610, 611, 615, 616, 619, 620, 621, 623, 627, 628, 630, 631, 635, 636, 637, 649, 650, 651, 652, 653, 654, 655, 656, 660, 661, 662, 663, 664, 665], "dooneiter": 458, "door": 552, "doorbel": 447, "dootherth": 467, "dopartialredundancyelimin": 509, "dorit": [596, 625], "dosometh": [467, 606], "dosomethinginterestingwithmyapi": 561, "dot": [493, 551, 588, 589, 605, 628, 629], "doubl": [446, 447, 454, 456, 464, 468, 509, 510, 511, 531, 533, 552, 559, 565, 571, 587, 589, 598, 602, 613, 615, 626, 631, 637, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 659, 660, 661, 662, 663, 664, 665, 666], "double_typ": [661, 662, 663, 664, 665], "doublescalarti": 559, "doubletyp": 589, "doubleword": 559, "doubli": [463, 589, 604], "doubt": [552, 566, 607], "dovetail": [654, 665], "down": [450, 451, 453, 456, 458, 464, 465, 469, 473, 474, 509, 514, 517, 519, 527, 529, 539, 541, 552, 553, 559, 561, 570, 571, 574, 586, 587, 588, 589, 591, 596, 605, 617, 620, 626, 627, 628, 632, 633, 635, 649, 652, 653, 655, 656, 657, 658, 660, 663, 664, 666], "downcast": 552, "download": [462, 517, 518, 529, 531, 544, 546, 549, 550, 551, 561, 589, 598, 599, 621, 626], "download_link": 593, "download_prerequisit": 529, "downsid": [517, 561, 589], "downstream": [455, 466, 484, 591, 598], "downward": 559, "dox": 465, "doxgyen": 462, "doxygen": [462, 525, 529, 531, 552, 563, 589, 597], "dozen": [524, 547, 589], "dpp": 444, "dpp16_ctrl": [0, 1], "dpp8_sel": [0, 1], "dpp_ctrl": [3, 4, 7, 8], "dpython_execut": 547, "dr": 521, "draft": [442, 451, 459, 465, 534, 559, 601, 605], "drag": 588, "dragonegg": [464, 517], "dramat": [467, 473, 509, 529, 559, 589, 606, 651, 662], "drastic": 611, "draw": [447, 492], "drawback": [463, 509, 517, 589, 636], "drectv": 501, "dret": 598, "drive": [460, 547, 558, 592, 596, 603, 610], "driven": [464, 468, 509, 513, 587, 621, 626, 651, 654, 657, 659, 662, 665, 666], "driver": [447, 481, 510, 511, 544, 549, 550, 561, 562, 572, 574, 590, 621, 648, 651, 652, 653, 654, 655, 656, 659, 662, 663, 664, 665], "drop": [467, 471, 495, 502, 504, 505, 517, 559, 565, 588, 589, 598, 605, 622], "dropdown": 588, "drown": 620, "dry": [548, 594], "ds_add_f32": [0, 3, 4], "ds_add_rtn_f32": [0, 3, 4], "ds_add_rtn_u32": [0, 2, 3, 4], "ds_add_rtn_u64": [0, 2, 3, 4], "ds_add_src2_f32": [0, 3, 4], "ds_add_src2_u32": [0, 2, 3, 4], "ds_add_src2_u64": [0, 2, 3, 4], "ds_add_u32": [0, 2, 3, 4, 447], "ds_add_u64": [0, 2, 3, 4], "ds_and_b32": [0, 2, 3, 4], "ds_and_b64": [0, 2, 3, 4], "ds_and_rtn_b32": [0, 2, 3, 4], "ds_and_rtn_b64": [0, 2, 3, 4], "ds_and_src2_b32": [0, 2, 3, 4], "ds_and_src2_b64": [0, 2, 3, 4], "ds_append": [0, 2, 3, 4], "ds_atom": 447, "ds_bpermute_b32": [0, 3, 4], "ds_cmpst_b32": [0, 2, 3, 4], "ds_cmpst_b64": [0, 2, 3, 4], "ds_cmpst_f32": [0, 2, 3, 4, 447], "ds_cmpst_f64": [0, 2, 3, 4], "ds_cmpst_rtn_b32": [0, 2, 3, 4], "ds_cmpst_rtn_b64": [0, 2, 3, 4], "ds_cmpst_rtn_f32": [0, 2, 3, 4], "ds_cmpst_rtn_f64": [0, 2, 3, 4], "ds_condxchg32_rtn_b64": [0, 2, 3, 4], "ds_consum": [0, 2, 3, 4], "ds_dec_rtn_u32": [0, 2, 3, 4], "ds_dec_rtn_u64": [0, 2, 3, 4], "ds_dec_src2_u32": [0, 2, 3, 4], "ds_dec_src2_u64": [0, 2, 3, 4], "ds_dec_u32": [0, 2, 3, 4], "ds_dec_u64": [0, 2, 3, 4], "ds_gws_barrier": [0, 2, 3, 4], "ds_gws_init": [0, 2, 3, 4], "ds_gws_sema_br": [0, 2, 3, 4], "ds_gws_sema_p": [0, 2, 3, 4], "ds_gws_sema_release_al": [0, 2, 3, 4], "ds_gws_sema_v": [0, 2, 3, 4], "ds_inc_rtn_u32": [0, 2, 3, 4], "ds_inc_rtn_u64": [0, 2, 3, 4], "ds_inc_src2_u32": [0, 2, 3, 4], "ds_inc_src2_u64": [0, 2, 3, 4], "ds_inc_u32": [0, 2, 3, 4], "ds_inc_u64": [0, 2, 3, 4], "ds_load": 447, "ds_max_f32": [0, 2, 3, 4], "ds_max_f64": [0, 2, 3, 4], "ds_max_i32": [0, 2, 3, 4], "ds_max_i64": [0, 2, 3, 4], "ds_max_rtn_f32": [0, 2, 3, 4], "ds_max_rtn_f64": [0, 2, 3, 4], "ds_max_rtn_i32": [0, 2, 3, 4], "ds_max_rtn_i64": [0, 2, 3, 4], "ds_max_rtn_u32": [0, 2, 3, 4], "ds_max_rtn_u64": [0, 2, 3, 4], "ds_max_src2_f32": [0, 2, 3, 4], "ds_max_src2_f64": [0, 2, 3, 4], "ds_max_src2_i32": [0, 2, 3, 4], "ds_max_src2_i64": [0, 2, 3, 4], "ds_max_src2_u32": [0, 2, 3, 4], "ds_max_src2_u64": [0, 2, 3, 4], "ds_max_u32": [0, 2, 3, 4], "ds_max_u64": [0, 2, 3, 4], "ds_min_f32": [0, 2, 3, 4], "ds_min_f64": [0, 2, 3, 4], "ds_min_i32": [0, 2, 3, 4], "ds_min_i64": [0, 2, 3, 4], "ds_min_rtn_f32": [0, 2, 3, 4], "ds_min_rtn_f64": [0, 2, 3, 4, 447], "ds_min_rtn_i32": [0, 2, 3, 4], "ds_min_rtn_i64": [0, 2, 3, 4], "ds_min_rtn_u32": [0, 2, 3, 4], "ds_min_rtn_u64": [0, 2, 3, 4], "ds_min_src2_f32": [0, 2, 3, 4], "ds_min_src2_f64": [0, 2, 3, 4], "ds_min_src2_i32": [0, 2, 3, 4], "ds_min_src2_i64": [0, 2, 3, 4], "ds_min_src2_u32": [0, 2, 3, 4], "ds_min_src2_u64": [0, 2, 3, 4], "ds_min_u32": [0, 2, 3, 4], "ds_min_u64": [0, 2, 3, 4], "ds_mskor_b32": [0, 2, 3, 4], "ds_mskor_b64": [0, 2, 3, 4], "ds_mskor_rtn_b32": [0, 2, 3, 4], "ds_mskor_rtn_b64": [0, 2, 3, 4], "ds_nop": [0, 2, 3, 4], "ds_or_b32": [0, 2, 3, 4], "ds_or_b64": [0, 2, 3, 4], "ds_or_rtn_b32": [0, 2, 3, 4], "ds_or_rtn_b64": [0, 2, 3, 4], "ds_or_src2_b32": [0, 2, 3, 4], "ds_or_src2_b64": [0, 2, 3, 4], "ds_ordered_count": [0, 2, 3, 4], "ds_permute_b32": [0, 3, 4], "ds_read2_b32": [0, 2, 3, 4], "ds_read2_b64": [0, 2, 3, 4], "ds_read2st64_b32": [0, 2, 3, 4], "ds_read2st64_b64": [0, 2, 3, 4], "ds_read_b128": [0, 2, 3, 4], "ds_read_b32": [0, 2, 3, 4], "ds_read_b64": [0, 2, 3, 4], "ds_read_b96": [0, 2, 3, 4], "ds_read_i16": [0, 2, 3, 4], "ds_read_i8": [0, 2, 3, 4], "ds_read_i8_d16": [0, 4], "ds_read_i8_d16_hi": [0, 4], "ds_read_u16": [0, 2, 3, 4], "ds_read_u16_d16": [0, 4], "ds_read_u16_d16_hi": [0, 4], "ds_read_u8": [0, 2, 3, 4], "ds_read_u8_d16": [0, 4], "ds_read_u8_d16_hi": [0, 4], "ds_rsub_rtn_u32": [0, 2, 3, 4], "ds_rsub_rtn_u64": [0, 2, 3, 4], "ds_rsub_src2_u32": [0, 2, 3, 4], "ds_rsub_src2_u64": [0, 2, 3, 4], "ds_rsub_u32": [0, 2, 3, 4], "ds_rsub_u64": [0, 2, 3, 4], "ds_store": 447, "ds_sub_rtn_u32": [0, 2, 3, 4], "ds_sub_rtn_u64": [0, 2, 3, 4], "ds_sub_src2_u32": [0, 2, 3, 4], "ds_sub_src2_u64": [0, 2, 3, 4], "ds_sub_u32": [0, 2, 3, 4], "ds_sub_u64": [0, 2, 3, 4], "ds_swizzle_b32": [0, 2, 3, 4, 445], "ds_wrap_rtn_b32": [0, 2, 3, 4], "ds_write2_b32": [0, 2, 3, 4], "ds_write2_b64": [0, 2, 3, 4], "ds_write2st64_b32": [0, 2, 3, 4], "ds_write2st64_b64": [0, 2, 3, 4], "ds_write_b128": [0, 2, 3, 4], "ds_write_b16": [0, 2, 3, 4], "ds_write_b16_d16_hi": [0, 4], "ds_write_b32": [0, 2, 3, 4], "ds_write_b64": [0, 2, 3, 4], "ds_write_b8": [0, 2, 3, 4], "ds_write_b8_d16_hi": [0, 4], "ds_write_b96": [0, 2, 3, 4], "ds_write_src2_b32": [0, 2, 3, 4], "ds_write_src2_b64": [0, 2, 3, 4, 447], "ds_wrxchg2_rtn_b32": [0, 2, 3, 4], "ds_wrxchg2_rtn_b64": [0, 2, 3, 4], "ds_wrxchg2st64_rtn_b32": [0, 2, 3, 4], "ds_wrxchg2st64_rtn_b64": [0, 2, 3, 4], "ds_wrxchg_rtn_b32": [0, 2, 3, 4], "ds_wrxchg_rtn_b64": [0, 2, 3, 4], "ds_xor_b32": [0, 2, 3, 4], "ds_xor_b64": [0, 2, 3, 4], "ds_xor_rtn_b32": [0, 2, 3, 4], "ds_xor_rtn_b64": [0, 2, 3, 4], "ds_xor_src2_b32": [0, 2, 3, 4], "ds_xor_src2_b64": [0, 2, 3, 4], "dsa": 560, "dsc": 629, "dscratch": 598, "dscratch0": 598, "dscratch1": 598, "dse": [451, 560], "dsl": [614, 617], "dso": [451, 461], "dso_loc": [454, 559, 605], "dso_path": 473, "dso_preempt": [454, 559], "dsoloc": 559, "dsp": 442, "dst": [0, 1, 2, 3, 4, 5, 6, 7, 8, 232, 377, 443, 464, 556, 615, 617, 626], "dst0": [0, 2, 3, 4], "dst1": [0, 2, 3, 4], "dst_sel": [0, 3, 4, 7, 8, 447], "dst_unus": [0, 3, 4, 7, 8, 447], "dstindex": 626, "dsym": [470, 486, 496, 506], "dsymtab": 501, "dsymutil": [471, 486], "dt": [501, 594, 627], "dtest_suite_profile_gener": 619, "dtest_suite_profile_us": 619, "dtest_suite_run_typ": 619, "dtest_suite_subdir": 619, "dtor": [522, 559, 605], "dtrace": 460, "duck": 589, "due": [442, 446, 447, 450, 456, 459, 460, 461, 462, 464, 468, 510, 513, 515, 517, 518, 519, 523, 524, 526, 529, 532, 534, 547, 549, 553, 559, 560, 562, 571, 582, 589, 591, 599, 602, 603, 606, 610, 615, 616, 622, 623, 630, 635, 650, 651], "dumb": [657, 666], "dummi": [464, 514, 522, 565, 587, 621, 626], "dummy_main": 525, "dummytargetmachin": 626, "dump": [447, 454, 458, 464, 468, 470, 471, 478, 487, 494, 495, 496, 498, 500, 501, 508, 545, 573, 577, 589, 605, 613, 617, 627, 631, 650, 651, 652, 656, 661, 662, 663], "dump_modul": [661, 662, 663, 664, 665], "dump_valu": [661, 662, 663, 664, 665], "dumpabl": 627, "dumpattr": 613, "dumper": [471, 498, 605], "dumpmymapdoc": 631, "duo": 447, "duplic": [442, 450, 457, 460, 463, 464, 467, 468, 476, 487, 501, 509, 513, 514, 517, 521, 524, 554, 559, 560, 562, 571, 573, 582, 585, 589, 605, 610, 613, 617, 649, 660], "durat": [450, 464, 605, 627, 628, 630, 633], "dure": [442, 447, 449, 455, 456, 458, 462, 463, 464, 466, 487, 493, 498, 509, 510, 512, 513, 517, 518, 519, 520, 523, 524, 528, 529, 535, 545, 548, 551, 556, 559, 561, 562, 563, 571, 574, 577, 589, 591, 593, 596, 598, 599, 600, 606, 608, 610, 620, 621, 626, 631, 650, 661], "dvariabl": 462, "dw_addr_amdgpu_region": 447, "dw_addr_llvm_const": [442, 447], "dw_addr_llvm_gener": 442, "dw_addr_llvm_glob": [442, 447], "dw_addr_llvm_group": [442, 447], "dw_addr_llvm_hi_us": 442, "dw_addr_llvm_lo_us": 442, "dw_addr_llvm_priv": [442, 447], "dw_addr_non": [442, 447], "dw_apple_property_assign": 605, "dw_apple_property_atom": 605, "dw_apple_property_class": 605, "dw_apple_property_copi": 605, "dw_apple_property_gett": 605, "dw_apple_property_nonatom": 605, "dw_apple_property_nul": 605, "dw_apple_property_null_resett": 605, "dw_apple_property_readonli": 605, "dw_apple_property_readwrit": 605, "dw_apple_property_retain": 605, "dw_apple_property_sett": 605, "dw_apple_property_strong": 605, "dw_apple_property_unsafe_unretain": 605, "dw_apple_property_weak": 605, "dw_aspace_": 442, "dw_aspace_amdgpu_gener": 447, "dw_aspace_amdgpu_loc": 447, "dw_aspace_amdgpu_private_lan": 447, "dw_aspace_amdgpu_private_wav": 447, "dw_aspace_amdgpu_region": 447, "dw_aspace_non": [442, 447], "dw_at_addr_bas": 442, "dw_at_address_class": [442, 447], "dw_at_address_spac": 442, "dw_at_align": 605, "dw_at_apple_properti": 605, "dw_at_apple_property_attribut": 605, "dw_at_apple_property_gett": 605, "dw_at_apple_property_sett": 605, "dw_at_artifici": 605, "dw_at_byte_s": 447, "dw_at_call_data_loc": 442, "dw_at_call_data_valu": 442, "dw_at_call_site_parameter_valu": 559, "dw_at_call_valu": 442, "dw_at_const_valu": 442, "dw_at_data_loc": 442, "dw_at_data_member_loc": 442, "dw_at_decl_lin": 605, "dw_at_declar": 605, "dw_at_delet": 605, "dw_at_element": 605, "dw_at_encod": 447, "dw_at_entry_pc": 605, "dw_at_export_symbol": 559, "dw_at_frame_bas": [442, 447], "dw_at_high_pc": 605, "dw_at_languag": 442, "dw_at_llvm_active_lan": 442, "dw_at_llvm_address_spac": 442, "dw_at_llvm_augment": 442, "dw_at_llvm_lan": 442, "dw_at_llvm_lane_pc": 442, "dw_at_llvm_proc": 442, "dw_at_llvm_vector_s": 442, "dw_at_loc": [442, 447, 468], "dw_at_loclists_bas": 442, "dw_at_low_pc": 605, "dw_at_mips_linkage_nam": 605, "dw_at_nam": [447, 468, 486, 605], "dw_at_rang": 605, "dw_at_return_addr": 442, "dw_at_static_link": 442, "dw_at_use_loc": 442, "dw_at_vtable_elem_loc": 442, "dw_ate_address": [442, 559], "dw_ate_boolean": [442, 559], "dw_ate_float": [559, 656], "dw_ate_hi_us": 442, "dw_ate_lo_us": 442, "dw_ate_sign": [442, 559, 605], "dw_ate_signed_char": [442, 559], "dw_ate_unsign": [442, 447, 554, 559], "dw_ate_unsigned_char": [442, 559], "dw_cfa_aspace_def_cfa": 442, "dw_cfa_def_aspace_cfa": 442, "dw_cfa_def_aspace_cfa_sf": 442, "dw_cfa_def_cfa": 442, "dw_cfa_def_cfa_express": 442, "dw_cfa_def_cfa_offset": 442, "dw_cfa_def_cfa_offset_sf": 442, "dw_cfa_def_cfa_regist": 442, "dw_cfa_def_cfa_sf": 442, "dw_cfa_express": 442, "dw_cfa_nop": 442, "dw_cfa_offset": 442, "dw_cfa_offset_extend": 442, "dw_cfa_offset_extended_sf": 442, "dw_cfa_offset_extended_uf": 442, "dw_cfa_offset_uf": 442, "dw_cfa_regist": 442, "dw_cfa_restor": 442, "dw_cfa_restore_extend": 442, "dw_cfa_same_valu": 442, "dw_cfa_undefin": 442, "dw_cfa_val_express": 442, "dw_cfa_val_offset": 442, "dw_cfa_val_offset_sf": 442, "dw_cfa_val_offset_uf": 442, "dw_form_": 605, "dw_form_addr": 605, "dw_form_block": 442, "dw_form_data1": 605, "dw_form_data2": 605, "dw_form_data4": 605, "dw_form_exprloc": 442, "dw_form_flag_pres": 605, "dw_form_line_strp": 442, "dw_form_ref1": 605, "dw_form_ref2": [442, 605], "dw_form_ref4": [442, 605], "dw_form_ref8": 605, "dw_form_ref_addr": 442, "dw_form_ref_udata": 605, "dw_form_sec_offset": [442, 468], "dw_form_strp": [442, 468, 605], "dw_form_strp_sup": 442, "dw_form_strx1": 605, "dw_form_udata": 442, "dw_form_xxx": 605, "dw_lang_c": [554, 656], "dw_lang_c99": [559, 605], "dw_lang_llvm_hip": 442, "dw_lnct_llvm_is_md5": 442, "dw_lnct_llvm_sourc": [442, 447], "dw_lnct_md5": 442, "dw_lnct_path": 442, "dw_macinfo_defin": 559, "dw_macinfo_start_fil": 559, "dw_macinfo_undef": 559, "dw_op_": 442, "dw_op_addr": [442, 447, 605], "dw_op_addrx": [442, 447], "dw_op_aspace_bref31": 442, "dw_op_aspace_breg0": 442, "dw_op_aspace_breg1": 442, "dw_op_aspace_bregx": 442, "dw_op_bit_piec": [442, 559], "dw_op_bra": 442, "dw_op_breg": [442, 559], "dw_op_breg0": 442, "dw_op_breg1": 442, "dw_op_breg31": 442, "dw_op_bregx": [442, 559], "dw_op_cal": 442, "dw_op_call2": 442, "dw_op_call4": 442, "dw_op_call_frame_cfa": 442, "dw_op_call_ref": [442, 447], "dw_op_const": 442, "dw_op_const1": 442, "dw_op_const1u": 442, "dw_op_const2": 442, "dw_op_const2u": 442, "dw_op_const4": 442, "dw_op_const4u": 442, "dw_op_const8": 442, "dw_op_const8u": 442, "dw_op_const_typ": 442, "dw_op_constu": [442, 559], "dw_op_constx": 442, "dw_op_convert": [442, 559], "dw_op_deref": [442, 559], "dw_op_deref_s": 442, "dw_op_deref_typ": [442, 447], "dw_op_drop": 442, "dw_op_dup": 442, "dw_op_entry_valu": [442, 598], "dw_op_eq": 442, "dw_op_fbreg": 442, "dw_op_form_tls_address": 442, "dw_op_g": 442, "dw_op_gt": 442, "dw_op_implicit": 442, "dw_op_implicit_point": 442, "dw_op_implicit_valu": 442, "dw_op_l": 442, "dw_op_lit": 442, "dw_op_lit0": 442, "dw_op_lit1": 442, "dw_op_lit31": 442, "dw_op_llvm_": 442, "dw_op_llvm_aspace_bregx": 442, "dw_op_llvm_aspace_implicit_point": 442, "dw_op_llvm_bit_offset": 442, "dw_op_llvm_call_frame_entry_reg": 442, "dw_op_llvm_convert": 559, "dw_op_llvm_entry_valu": 559, "dw_op_llvm_extend": [442, 447], "dw_op_llvm_form_aspace_address": [442, 447], "dw_op_llvm_frag": 559, "dw_op_llvm_implicit_aspace_point": 442, "dw_op_llvm_offset": [442, 447], "dw_op_llvm_offset_constu": 442, "dw_op_llvm_offset_uconst": 442, "dw_op_llvm_piece_end": 442, "dw_op_llvm_push_lan": [442, 447], "dw_op_llvm_select_bit_piec": [442, 447], "dw_op_llvm_tag_offset": 559, "dw_op_llvm_undefin": [442, 447], "dw_op_lt": 442, "dw_op_minu": [442, 559], "dw_op_n": 442, "dw_op_nop": 442, "dw_op_ov": 442, "dw_op_pick": 442, "dw_op_piec": 442, "dw_op_plu": [442, 559, 605], "dw_op_plus_uconst": [442, 559, 605], "dw_op_push_object_address": [442, 559], "dw_op_reg": 442, "dw_op_reg0": 442, "dw_op_reg1": 442, "dw_op_reg31": 442, "dw_op_regval_typ": [442, 447], "dw_op_regx": [442, 447], "dw_op_reinterpret": 442, "dw_op_rot": 442, "dw_op_skip": 442, "dw_op_stack_valu": [442, 447, 559, 605], "dw_op_swap": [442, 559], "dw_op_xderef": [442, 559], "dw_op_xderef_s": 442, "dw_op_xderef_typ": 442, "dw_opreg": 442, "dw_tag": 605, "dw_tag_apple_properti": 605, "dw_tag_array_typ": [559, 605], "dw_tag_atomic_typ": [559, 605], "dw_tag_base_typ": [442, 447, 559, 605], "dw_tag_call_site_paramet": 442, "dw_tag_class_typ": [559, 605], "dw_tag_compile_unit": 442, "dw_tag_const_typ": [559, 605], "dw_tag_dwarf_procedur": [442, 447], "dw_tag_entry_point": 442, "dw_tag_enumeration_typ": [559, 605], "dw_tag_file_typ": 605, "dw_tag_formal_paramet": 442, "dw_tag_friend": 559, "dw_tag_gnu_template_param_pack": 559, "dw_tag_gnu_template_template_param": 559, "dw_tag_imported_modul": 559, "dw_tag_inherit": 559, "dw_tag_inlined_subroutin": [442, 605], "dw_tag_interface_typ": 605, "dw_tag_label": 605, "dw_tag_llvm_address_class_typ": 442, "dw_tag_memb": [559, 605], "dw_tag_namelist": 605, "dw_tag_namespac": 605, "dw_tag_packed_typ": 605, "dw_tag_pointer_typ": [559, 605], "dw_tag_ptr_to_member_typ": [442, 559, 605], "dw_tag_reference_typ": [559, 605], "dw_tag_restrict_typ": [559, 605], "dw_tag_set_typ": 605, "dw_tag_shared_typ": 605, "dw_tag_string_typ": 605, "dw_tag_structure_typ": [559, 605], "dw_tag_subprogram": [442, 605], "dw_tag_subrange_typ": 605, "dw_tag_subroutine_typ": 605, "dw_tag_template_value_paramet": 559, "dw_tag_typedef": [559, 605], "dw_tag_union_typ": [559, 605], "dw_tag_unspecified_typ": [559, 605], "dw_tag_vari": [442, 605], "dw_tag_volatile_typ": [559, 605], "dw_tag_xxx": 605, "dw_virtuality_pure_virtu": 559, "dwarf": [464, 471, 495, 496, 506, 514, 515, 519, 526, 529, 554, 559, 560, 562, 575, 589, 608, 624, 626, 666], "dwarf2": 656, "dwarfdebug": 605, "dwarfdump": [468, 470, 471, 492, 598, 605], "dwarfencod": 519, "dwarfnumb": 626, "dwarfregnum": 626, "dwell": 650, "dwo": [442, 495, 529], "dwoid": 559, "dword": [9, 10, 12, 13, 14, 15, 16, 17, 19, 20, 21, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 53, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 117, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 137, 140, 141, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 233, 238, 239, 240, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 295, 296, 297, 300, 301, 302, 307, 308, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 328, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 378, 383, 384, 385, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 444, 445, 446, 447], "dwp": 506, "dx": 617, "dx10": 447, "dx10_clamp": 447, "dy": 554, "dyld": 564, "dyldinfo": 494, "dylib": [496, 573, 586, 621, 633], "dyn": [447, 500, 501, 513], "dyn_cast": [467, 552, 597, 613, 626], "dyn_cast_or_nul": 589, "dyn_switch": 467, "dynam": [442, 447, 452, 454, 458, 460, 469, 473, 474, 481, 493, 494, 496, 500, 501, 507, 513, 515, 521, 522, 524, 526, 527, 534, 545, 552, 561, 564, 573, 577, 587, 589, 590, 602, 604, 605, 606, 608, 610, 615, 622, 623, 628, 631, 651, 653, 662, 664], "dynamic_cast": [467, 552, 589, 654, 655, 656], "dynamic_shared_point": 447, "dynamiclibrari": [635, 636, 637], "dynamiclibrarysearchgener": [573, 633, 634], "dynamicsharedpoint": 447, "dynstr": 447, "dynsym": 447, "e": [442, 446, 447, 450, 451, 452, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 469, 472, 473, 480, 481, 482, 487, 493, 494, 495, 497, 500, 501, 505, 506, 509, 510, 511, 514, 517, 518, 519, 521, 523, 524, 526, 527, 528, 529, 531, 533, 534, 536, 538, 545, 546, 547, 548, 551, 552, 553, 554, 555, 558, 559, 561, 562, 563, 565, 568, 570, 571, 572, 573, 575, 576, 577, 581, 582, 584, 585, 586, 587, 588, 589, 591, 594, 596, 598, 601, 603, 605, 606, 607, 608, 609, 610, 611, 613, 615, 616, 619, 620, 621, 622, 623, 626, 627, 631, 633, 634, 635, 636, 637, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 659, 660, 661, 662, 663, 664, 665, 666], "e1": 447, "e2": 447, "e3": 493, "e_entri": 447, "e_id": 447, "e_machin": 447, "e_typ": 447, "ea_r": 464, "eabi": [473, 549], "each": [27, 28, 29, 30, 41, 42, 43, 52, 124, 125, 126, 133, 134, 139, 212, 213, 214, 215, 226, 227, 228, 232, 237, 357, 358, 359, 360, 371, 372, 373, 377, 382, 442, 445, 446, 447, 449, 450, 451, 453, 454, 455, 458, 460, 462, 463, 464, 465, 466, 467, 468, 470, 472, 473, 474, 476, 480, 481, 482, 486, 487, 488, 490, 491, 493, 494, 495, 496, 497, 498, 500, 501, 502, 504, 505, 506, 507, 509, 510, 513, 514, 516, 517, 519, 520, 522, 524, 525, 526, 527, 528, 529, 532, 533, 534, 538, 539, 540, 541, 545, 551, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 568, 569, 570, 571, 572, 573, 574, 576, 577, 579, 580, 581, 584, 585, 586, 589, 590, 591, 594, 596, 599, 600, 601, 603, 605, 606, 608, 609, 610, 611, 613, 615, 616, 617, 619, 620, 621, 622, 623, 626, 627, 628, 629, 630, 631, 633, 634, 635, 648, 649, 650, 651, 652, 653, 654, 655, 656, 659, 660, 661, 662, 663, 664, 665], "ead": 603, "eager": [573, 589, 634], "eagerli": [573, 634], "eao": 589, "earli": [510, 513, 532, 543, 549, 559, 561, 565, 572, 574, 577, 589, 606, 626, 627, 654, 665], "earlier": [442, 447, 451, 454, 466, 467, 468, 513, 514, 517, 524, 532, 539, 544, 558, 573, 581, 591, 595, 605, 606, 615, 626, 633, 650, 651], "earliest": 468, "earlyclobb": 565, "earlycs": 524, "earn": 591, "eas": [529, 547, 559, 610], "easi": [454, 458, 460, 462, 464, 467, 468, 472, 517, 526, 529, 544, 550, 552, 558, 559, 561, 566, 571, 573, 589, 591, 592, 594, 599, 603, 605, 606, 607, 613, 615, 620, 621, 627, 631, 634, 635, 648, 649, 650, 651, 652, 653, 654, 657, 658, 659, 660, 661, 662, 663, 665, 666], "easier": [442, 447, 448, 450, 451, 457, 459, 464, 465, 467, 468, 480, 512, 513, 515, 517, 520, 522, 526, 529, 550, 553, 558, 559, 563, 570, 572, 573, 587, 588, 589, 591, 594, 599, 613, 617, 621, 627, 649, 650, 654, 656, 660, 661, 665], "easiest": [451, 536, 545, 549, 551, 566, 607, 626, 627, 628, 651, 657, 666], "easili": [442, 457, 464, 479, 509, 516, 524, 526, 553, 558, 568, 570, 587, 589, 600, 605, 606, 608, 610, 611, 613, 621, 627, 631, 633, 655], "eat": [509, 648, 649, 650, 651, 652, 653, 654, 655, 656, 659, 660, 661, 662, 663, 664, 665], "eatomtypecuoffset": 605, "eatomtypedieoffset": 605, "eatomtypedietag": 605, "eatomtypenameflag": 605, "eatomtypenul": 605, "eatomtypetag": 605, "eatomtypetypeflag": 605, "eax": [464, 468, 493, 521, 559, 565, 605, 606, 615, 617, 626], "eb": 493, "ebenders_test": 515, "ebnf": 630, "ebp": [464, 519, 617], "ebx": [464, 521, 617], "ec": [497, 589, 655], "ecc": 447, "echo": [452, 472, 487, 506, 529, 532, 566, 591, 607], "eckel": 589, "ecma": 577, "econom": 465, "ecosystem": [558, 585, 589, 591], "ecsubstreams": 577, "ect": 470, "ecv": 598, "ecx": [464, 521, 559, 615, 617], "ed": [451, 457, 510, 589, 603, 606, 624], "edg": [455, 458, 464, 467, 468, 510, 516, 519, 521, 526, 528, 559, 561, 563, 591, 596, 627, 628, 629], "edi": [464, 468, 565, 606, 617], "edit": [447, 462, 471, 497, 577, 589, 594], "editor": [467, 517, 529, 566, 607], "edu": [452, 593, 606], "educ": 465, "edx": [464, 493, 559, 606, 615, 617], "ee": 446, "eeee": 493, "eeeer": 493, "ef_amdgpu_mach_amdgcn_gfx1010": 447, "ef_amdgpu_mach_amdgcn_gfx1011": 447, "ef_amdgpu_mach_amdgcn_gfx1012": 447, "ef_amdgpu_mach_amdgcn_gfx1030": 447, "ef_amdgpu_mach_amdgcn_gfx600": 447, "ef_amdgpu_mach_amdgcn_gfx601": 447, "ef_amdgpu_mach_amdgcn_gfx700": 447, "ef_amdgpu_mach_amdgcn_gfx701": 447, "ef_amdgpu_mach_amdgcn_gfx702": 447, "ef_amdgpu_mach_amdgcn_gfx703": 447, "ef_amdgpu_mach_amdgcn_gfx704": 447, "ef_amdgpu_mach_amdgcn_gfx801": 447, "ef_amdgpu_mach_amdgcn_gfx802": 447, "ef_amdgpu_mach_amdgcn_gfx803": 447, "ef_amdgpu_mach_amdgcn_gfx810": 447, "ef_amdgpu_mach_amdgcn_gfx900": 447, "ef_amdgpu_mach_amdgcn_gfx902": 447, "ef_amdgpu_mach_amdgcn_gfx904": 447, "ef_amdgpu_mach_amdgcn_gfx906": 447, "ef_amdgpu_mach_amdgcn_gfx908": 447, "ef_amdgpu_mach_amdgcn_gfx909": 447, "ef_amdgpu_mach_non": 447, "ef_amdgpu_mach_r600_bart": 447, "ef_amdgpu_mach_r600_caico": 447, "ef_amdgpu_mach_r600_cayman": 447, "ef_amdgpu_mach_r600_cedar": 447, "ef_amdgpu_mach_r600_cypress": 447, "ef_amdgpu_mach_r600_junip": 447, "ef_amdgpu_mach_r600_r600": 447, "ef_amdgpu_mach_r600_r630": 447, "ef_amdgpu_mach_r600_redwood": 447, "ef_amdgpu_mach_r600_rs880": 447, "ef_amdgpu_mach_r600_rv670": 447, "ef_amdgpu_mach_r600_rv710": 447, "ef_amdgpu_mach_r600_rv730": 447, "ef_amdgpu_mach_r600_rv770": 447, "ef_amdgpu_mach_r600_sumo": 447, "ef_amdgpu_mach_r600_turk": 447, "ef_amdgpu_mach_xxx": 447, "ef_amdgpu_sram_ecc": 447, "ef_amdgpu_xnack": 447, "effect": [442, 445, 447, 450, 454, 462, 464, 467, 468, 473, 486, 487, 493, 495, 500, 501, 509, 510, 517, 526, 529, 530, 534, 535, 547, 554, 559, 563, 567, 587, 589, 591, 596, 598, 602, 605, 606, 610, 611, 616, 621, 622, 626, 627, 628, 635, 652, 653, 663, 664], "effici": [442, 446, 447, 454, 464, 467, 517, 522, 526, 528, 529, 552, 559, 561, 567, 573, 587, 589, 596, 602, 605, 606, 610, 611, 613, 615, 621, 623, 627, 649, 651, 660, 662], "effort": [447, 467, 517, 520, 524, 554, 559, 564, 587, 605, 606, 608, 611, 628, 650, 661], "eflag": [565, 605, 615, 617], "eg": [595, 602], "egregi": [465, 517], "egrep": 529, "eh": [462, 474, 486, 513, 559, 564, 626], "eh_fram": [502, 519], "eh_label": 565, "eh_return": 519, "ehashfunctiondjb": 605, "ehcleanup": 513, "ehobj": 519, "ehptr": 519, "ehselector": 513, "ei_abivers": 447, "ei_class": 447, "ei_data": 447, "ei_osabi": 447, "eieio": 559, "eight": [464, 472, 559], "eip": 617, "either": [17, 30, 41, 43, 63, 95, 109, 195, 215, 226, 228, 292, 360, 371, 373, 393, 427, 441, 442, 445, 446, 447, 450, 451, 453, 454, 458, 460, 462, 464, 466, 467, 472, 473, 476, 480, 481, 487, 493, 495, 505, 506, 507, 509, 512, 513, 517, 519, 520, 521, 524, 526, 527, 529, 533, 534, 537, 538, 544, 545, 553, 554, 559, 560, 561, 563, 564, 565, 570, 571, 572, 573, 574, 576, 577, 579, 584, 587, 589, 591, 594, 598, 601, 605, 606, 608, 610, 615, 617, 619, 620, 621, 622, 623, 626, 627, 628, 629, 630, 648, 649, 650, 652, 656, 657, 659, 660, 662, 663, 666], "elabor": [589, 606], "elaps": 493, "elect": [466, 517], "electr": 545, "eleg": [649, 651, 652, 657, 660, 662, 663, 666], "elem0": 559, "elem_func": 605, "element": [27, 28, 29, 30, 41, 42, 43, 124, 125, 126, 133, 134, 212, 213, 214, 215, 226, 227, 228, 357, 358, 359, 360, 371, 372, 373, 442, 445, 447, 450, 453, 454, 463, 464, 468, 493, 513, 516, 520, 526, 533, 534, 538, 560, 566, 571, 572, 587, 589, 596, 598, 605, 607, 610, 613, 615, 616, 622, 623, 625, 626, 630, 631, 633], "element_s": 559, "element_typ": [661, 662, 663, 664, 665], "elementcount": 598, "elementtyp": 559, "elementwis": 534, "elf": [442, 454, 464, 494, 496, 500, 502, 504, 506, 510, 511, 529, 559, 564, 573, 598, 605, 608, 621, 628], "elf32": 495, "elf64": [495, 629], "elf64_rela": 447, "elf_cgprofil": 521, "elf_word": 521, "elf_xword": 521, "elfabiversion_amdgpu_hsa": 447, "elfabiversion_amdgpu_mesa3d": 447, "elfabiversion_amdgpu_p": 447, "elfclass32": 447, "elfclass64": 447, "elfdata2lsb": 447, "elfosabi_amdgpu_hsa": 447, "elfosabi_amdgpu_mesa3d": 447, "elfosabi_amdgpu_p": 447, "elfosabi_non": 447, "elfv2": 511, "eli": 510, "elid": [513, 526, 557, 615], "elig": [493, 513, 587], "elimin": [442, 447, 450, 458, 459, 464, 467, 473, 509, 513, 517, 522, 524, 526, 529, 536, 544, 559, 560, 565, 572, 574, 589, 605, 606, 610, 626, 635, 649, 651, 652, 653, 654, 660, 662, 663, 664, 665], "eliminatecallframepseudoinstr": 626, "eliminateframeindex": 626, "elis": 513, "els": [447, 464, 465, 466, 468, 474, 486, 487, 491, 509, 510, 513, 514, 517, 520, 531, 532, 544, 545, 548, 554, 559, 561, 563, 565, 570, 571, 572, 587, 588, 589, 591, 606, 607, 610, 611, 616, 621, 622, 625, 626, 631, 634, 635, 636, 637, 648, 649, 650, 651, 653, 654, 655, 656, 657, 659, 660, 661, 662, 664, 665, 666], "else_": [663, 664, 665], "else_bb": [663, 664, 665], "else_v": [663, 664, 665], "elsebb": [652, 653, 654, 655, 656], "elseif": 447, "elsev": [652, 653, 654, 655, 656], "elsewher": [445, 446, 509, 514, 517, 589, 610, 613, 626], "elt": [534, 559], "eltsizeparam": [454, 559], "eltti": [454, 656], "em": 549, "em_amdgpu": 447, "emac": [467, 529, 617], "email": [451, 465, 466, 512, 517, 528, 529, 546, 551, 560, 588, 601, 603, 657, 666], "emb": [442, 447, 454, 462, 470, 559, 605, 657, 666], "embargo": 603, "embed": [442, 447, 454, 470, 495, 514, 517, 525, 526, 539, 549, 559, 576, 577, 579, 585, 587, 589, 596, 605, 606, 615, 616, 652, 653, 663, 664], "embrac": 517, "emerg": [447, 515, 517, 603], "emerson": 594, "emersonconcern": 594, "emiss": [470, 526, 559, 605, 608, 626, 654, 665], "emissionkind": [554, 559, 605], "emit": [442, 447, 451, 453, 454, 458, 462, 467, 468, 470, 471, 473, 474, 486, 493, 495, 496, 497, 498, 505, 508, 509, 510, 513, 514, 515, 519, 521, 522, 524, 527, 529, 531, 553, 556, 559, 560, 564, 565, 572, 575, 577, 582, 584, 587, 589, 598, 605, 606, 608, 610, 613, 622, 626, 627, 629, 634, 649, 650, 652, 653, 654, 656, 657, 660, 661, 663, 664, 665, 666], "emit_22": 626, "emitalign": 526, "emitbyt": 626, "emitcal": 589, "emitconst": 626, "emitconstantpool": 626, "emitconstpooladdress": 626, "emitepilogu": 626, "emitexternalsymboladdress": 626, "emitfnstart": 464, "emitfunctionstub": 626, "emitglobaladdress": 626, "emitinstruct": [464, 626], "emitint32": 526, "emitjumptableaddress": 626, "emitjumptableinfo": 626, "emitlabel": 464, "emitlabelplusoffset": 526, "emitleadingf": 451, "emitloadlink": 451, "emitloc": 656, "emitmaskedatomiccmpxchgintrins": 451, "emitmaskedatomicrmwintrins": 451, "emitnam": 467, "emitobject": 564, "emitprologu": [519, 626], "emitpseudoexpansionlow": 613, "emitstacksizesect": 464, "emitstorecondit": 451, "emitsymbolattribut": 464, "emitt": [508, 515, 559, 600, 613, 615, 652, 663], "emittrailingf": 451, "emitvalu": 464, "emmc": 547, "emphas": [467, 566, 607], "emploi": [559, 589, 592, 596, 603, 606], "empti": [232, 377, 442, 447, 462, 463, 467, 472, 487, 506, 509, 513, 517, 519, 526, 529, 559, 561, 565, 571, 579, 589, 591, 602, 605, 606, 610, 615, 616, 621, 622, 626, 631, 649, 650, 652, 656, 660, 661, 663], "empty_subregsset": 626, "emul": [464, 474, 493, 520, 524, 549, 559, 573, 589, 591], "en": [462, 467, 489, 532, 559], "enabl": [232, 377, 442, 445, 446, 447, 449, 453, 460, 462, 463, 464, 467, 468, 469, 470, 472, 473, 474, 475, 476, 477, 481, 485, 487, 488, 490, 493, 495, 496, 498, 501, 505, 507, 509, 510, 512, 513, 514, 515, 517, 522, 523, 524, 525, 526, 529, 536, 537, 543, 544, 545, 549, 554, 561, 562, 563, 567, 570, 573, 574, 586, 589, 591, 594, 596, 598, 602, 604, 605, 610, 616, 617, 619, 621, 622, 625, 626, 627, 628, 629, 631, 633, 634, 635, 637, 651, 655], "enable_dx10_clamp": 447, "enable_exception_address_watch": 447, "enable_exception_fp_denorm": 447, "enable_exception_fp_denormal_sourc": 447, "enable_exception_ieee_754_fp": 447, "enable_exception_ieee_754_fp_division_by_zero": 447, "enable_exception_ieee_754_fp_inexact": 447, "enable_exception_ieee_754_fp_invalid_oper": 447, "enable_exception_ieee_754_fp_overflow": 447, "enable_exception_ieee_754_fp_underflow": 447, "enable_exception_int_divide_bi": 447, "enable_exception_int_divide_by_zero": 447, "enable_exception_memori": 447, "enable_ieee_mod": 447, "enable_if": 552, "enable_mem_ord": 447, "enable_optim": 586, "enable_sgpr_": 447, "enable_sgpr_dispatch_id": 447, "enable_sgpr_dispatch_ptr": 447, "enable_sgpr_flat_scratch": 447, "enable_sgpr_flat_scratch_init": 447, "enable_sgpr_grid": 447, "enable_sgpr_kernarg": 447, "enable_sgpr_kernarg_segment_ptr": 447, "enable_sgpr_priv": 447, "enable_sgpr_private_seg": 447, "enable_sgpr_private_segment_buff": 447, "enable_sgpr_private_segment_s": 447, "enable_sgpr_private_segment_wavefront_offset": 447, "enable_sgpr_queue_ptr": 447, "enable_sgpr_workgroup": 447, "enable_sgpr_workgroup_id": 447, "enable_sgpr_workgroup_id_i": 447, "enable_sgpr_workgroup_id_x": 447, "enable_sgpr_workgroup_id_z": 447, "enable_sgpr_workgroup_info": 447, "enable_trap_handl": 447, "enable_vgpr": 447, "enable_vgpr_workitem_id": 447, "enable_wavefront_size32": 447, "enable_wgp_mod": 447, "enablecompilecallback": 637, "encapsul": [447, 552, 555, 589, 596], "enclos": [442, 445, 447, 454, 468, 506, 513, 589, 608, 615, 621, 656], "encod": [115, 199, 347, 446, 447, 451, 453, 473, 474, 478, 483, 493, 498, 511, 513, 519, 521, 526, 533, 554, 559, 571, 585, 596, 597, 598, 605, 608, 610, 613, 617, 619, 623, 624, 626, 630, 631, 654, 656, 665], "encodecompactunwindregisterswithoutfram": 464, "encompass": [547, 555], "encount": [442, 447, 454, 464, 468, 482, 494, 519, 524, 549, 559, 576, 589, 591, 616, 626, 629, 634], "encourag": [457, 465, 466, 467, 517, 528, 529, 553, 587, 589, 591, 592, 594, 657, 658, 666], "end": [442, 446, 447, 449, 450, 453, 454, 457, 458, 459, 460, 462, 464, 465, 468, 470, 476, 477, 484, 487, 493, 495, 497, 504, 509, 510, 514, 517, 519, 521, 523, 524, 526, 529, 531, 538, 545, 547, 550, 551, 552, 560, 561, 562, 563, 566, 569, 570, 571, 573, 574, 577, 581, 587, 588, 590, 591, 598, 599, 600, 601, 603, 606, 607, 608, 611, 614, 615, 616, 617, 620, 621, 624, 625, 626, 627, 628, 629, 630, 631, 633, 634, 635, 636, 637, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666], "end_": [663, 664, 665], "end_amd_kernel_code_t": 447, "end_amdgpu_metadata": 447, "end_amdhsa_kernel": 447, "end_cond": [663, 664, 665], "endcod": 467, "endcond": [652, 653, 654, 655, 656, 665], "endexpr": [652, 653, 654, 655, 656, 665], "endforeach": 463, "endfunct": 463, "endian": [447, 454, 464, 538, 559, 585, 600, 605, 624, 626, 630], "endif": [447, 463, 467, 509, 510, 514, 545, 561, 611, 616, 633, 634, 635, 636, 637, 651, 652, 653, 654, 655, 656, 657, 666], "endl": 655, "endloop": [652, 653, 654, 655, 656, 665], "endmacro": 463, "endors": 517, "endur": 517, "enforc": [451, 464, 467, 468, 493, 509, 517, 526, 529, 539, 559, 589, 591, 601, 602, 608, 615], "engag": 517, "engin": [447, 480, 511, 516, 522, 527, 560, 561, 571, 587, 591, 594, 606, 624, 650, 652, 657, 658, 659, 662, 663, 666], "enginebuild": [564, 635, 636, 637], "english": 467, "enhanc": [467, 508, 511, 517, 598, 605, 624, 627, 650, 651, 652, 653, 654, 656, 657, 661, 662, 663, 664, 665, 666], "enjoi": 546, "enough": [442, 451, 457, 462, 464, 466, 467, 487, 493, 497, 509, 517, 524, 527, 539, 545, 554, 559, 567, 571, 589, 590, 604, 605, 608, 611, 621, 626, 627, 633, 649, 652, 656, 660, 661, 663], "enqueu": 447, "enqueue_kernel": 447, "enrich": 596, "ensu": [449, 626], "ensur": [442, 447, 450, 451, 454, 456, 461, 462, 464, 465, 466, 467, 468, 478, 480, 497, 507, 509, 512, 517, 519, 521, 522, 523, 524, 526, 529, 536, 545, 551, 554, 559, 563, 573, 584, 587, 588, 589, 591, 603, 605, 606, 608, 610, 621, 625, 626, 627, 629, 653, 654, 656, 661, 665], "enter": [442, 447, 454, 458, 462, 464, 472, 513, 519, 524, 529, 551, 559, 563, 570, 573, 588, 589, 605, 606, 629, 630, 633, 649, 650, 651, 660, 662], "entir": [442, 447, 450, 451, 453, 454, 464, 467, 468, 472, 476, 478, 481, 486, 497, 504, 509, 510, 513, 517, 524, 526, 527, 538, 539, 553, 558, 559, 561, 570, 572, 573, 574, 577, 580, 581, 582, 584, 585, 587, 589, 602, 605, 606, 610, 619, 620, 621, 622, 625, 626, 627, 631, 650, 651, 657, 661, 662, 666], "entireti": [517, 582, 603, 610], "entiti": [446, 454, 467, 559, 582, 589, 603, 608], "entranc": 559, "entri": [450, 454, 455, 462, 464, 468, 481, 484, 486, 487, 492, 493, 494, 496, 498, 500, 501, 502, 513, 519, 520, 521, 523, 524, 526, 527, 529, 534, 535, 552, 554, 557, 558, 560, 561, 563, 564, 565, 566, 570, 571, 572, 573, 579, 580, 584, 589, 591, 596, 598, 600, 603, 605, 606, 607, 610, 611, 615, 623, 626, 627, 628, 630, 631, 633, 634, 635, 636, 637, 649, 650, 651, 652, 653, 654, 655, 656, 661, 662, 663, 664, 665], "entry_arg": 630, "entry_block": 665, "entrypoint": [513, 559, 561], "entrysym": 573, "entrytoken": 464, "enum": [448, 450, 464, 467, 497, 508, 509, 519, 520, 538, 552, 554, 555, 556, 559, 576, 577, 582, 584, 589, 605, 613, 617, 626, 631, 648, 649, 650, 651, 652, 653, 654, 655, 656, 668], "enumcas": 631, "enumer": [444, 446, 454, 464, 497, 508, 509, 526, 559, 563, 571, 577, 582, 584, 589, 605, 606, 613, 615, 626, 630, 631], "env": 599, "environ": [442, 451, 462, 464, 467, 468, 472, 475, 481, 506, 509, 511, 518, 521, 526, 529, 544, 545, 586, 587, 589, 602, 603, 611, 619, 628, 629, 651], "envis": 592, "envp": 515, "eof": [468, 561, 616, 630, 648, 649, 650, 651, 652, 653, 654, 655, 656], "eor": 559, "ep_earlyasposs": 627, "ep_fulllinktimeoptimizationlast": 627, "epilog": [559, 626], "epilogu": [526, 559, 605, 622, 626], "episod": [652, 663], "epoch": 631, "epsilon": 487, "eptr": 559, "eq": [454, 513, 559, 565, 572, 615, 616], "equal": [442, 445, 446, 447, 450, 454, 455, 456, 464, 472, 497, 498, 509, 510, 519, 522, 524, 529, 533, 534, 545, 552, 559, 571, 573, 577, 580, 581, 584, 589, 606, 615, 626, 649, 652, 653, 654, 655, 656, 660, 663, 664, 665], "equal_rang": 589, "equival": [442, 447, 451, 453, 454, 462, 463, 464, 467, 468, 470, 474, 476, 481, 483, 493, 495, 496, 498, 499, 500, 501, 502, 505, 509, 510, 519, 521, 526, 527, 533, 534, 536, 538, 549, 554, 560, 565, 571, 572, 573, 575, 587, 589, 595, 598, 602, 605, 610, 615, 616, 634, 657, 666], "er": [468, 559], "eras": [451, 589, 605, 652, 653, 654, 655, 656], "erasefrompar": [589, 626, 650, 651, 652, 653, 654, 655, 656], "erasur": 589, "eref": 511, "erefrm": 511, "ericsson": 559, "erlang": 559, "erol": 619, "err": [465, 572, 573, 589, 603, 627, 635, 636, 637, 650, 651, 652, 653, 654, 655, 656], "err2": 589, "errat": 554, "errata": 511, "errc": 589, "errno": [450, 559, 625], "erron": [509, 529], "error": [442, 446, 447, 450, 458, 462, 463, 464, 468, 469, 470, 472, 473, 474, 476, 477, 478, 480, 481, 482, 485, 487, 488, 490, 493, 495, 500, 501, 502, 504, 505, 506, 507, 508, 509, 510, 517, 519, 521, 525, 526, 529, 544, 545, 549, 550, 551, 553, 554, 559, 560, 561, 562, 563, 569, 572, 573, 587, 590, 593, 597, 598, 599, 600, 613, 615, 616, 617, 621, 626, 627, 628, 633, 634, 635, 636, 637, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 659, 660, 661, 662, 663, 664, 665, 666], "error_cod": 655, "error_exitcod": 561, "errorasoutparamet": 589, "errorcodetoerror": 589, "errorhandl": 633, "errorinfo": 589, "errorlist": 589, "errorortoexpect": 589, "errortoerrorcod": 589, "escap": [450, 468, 472, 495, 505, 519, 526, 559, 562, 565, 567, 616, 621, 653, 664], "eschnett": 593, "escudo": 602, "esi": [464, 565, 606, 617], "esoter": 615, "esp": [464, 468, 617], "especi": [442, 451, 456, 462, 465, 466, 467, 472, 493, 498, 509, 510, 517, 518, 524, 529, 547, 559, 560, 563, 571, 587, 589, 590, 596, 598, 605, 606, 607, 611, 626, 633], "espresso": 620, "essenc": [517, 606], "essenti": [451, 454, 493, 507, 526, 549, 568, 571, 589, 591, 592, 605, 606, 616, 626], "establish": [464, 513, 519, 524, 526, 559, 573, 591, 606, 610, 626, 662], "estim": [455, 493, 571, 596, 625], "et": 552, "et_dyn": 447, "et_rel": 447, "etc": [46, 136, 231, 376, 447, 449, 450, 451, 454, 459, 462, 464, 467, 468, 469, 486, 493, 497, 512, 513, 517, 518, 526, 527, 528, 529, 531, 538, 548, 550, 551, 555, 559, 560, 561, 562, 563, 565, 570, 571, 573, 574, 577, 580, 586, 587, 588, 591, 597, 599, 600, 601, 602, 603, 605, 606, 611, 613, 615, 617, 619, 622, 624, 626, 627, 628, 629, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666], "ethnic": 465, "eu": 447, "eurollvm": 525, "european": 596, "evalu": [442, 446, 447, 460, 462, 463, 468, 514, 520, 526, 527, 532, 557, 559, 561, 571, 572, 573, 596, 603, 606, 616, 626, 637, 649, 650, 651, 652, 653, 654, 655, 656, 657, 660, 661, 662, 663, 664, 665, 666], "evalut": 442, "even": [442, 446, 447, 450, 452, 454, 455, 459, 460, 464, 465, 466, 467, 468, 472, 474, 483, 494, 495, 497, 505, 510, 513, 517, 518, 523, 524, 529, 533, 541, 547, 548, 552, 554, 559, 561, 562, 563, 566, 567, 571, 573, 575, 581, 582, 585, 588, 589, 591, 594, 598, 610, 611, 613, 614, 615, 617, 620, 621, 625, 627, 631, 633, 634, 635, 637, 651, 652, 653, 654, 657, 659, 662, 664, 665, 666], "event": [462, 465, 493, 561, 563, 568, 589, 601, 608, 610, 628, 629, 630, 632], "event_s": 630, "eventu": [448, 468, 517, 519, 533, 541, 552, 557, 559, 561, 570, 587, 605, 606, 610, 620, 633, 652, 663], "ever": [447, 450, 467, 517, 532, 558, 559, 580, 589, 613, 634, 635, 657, 666], "evergreen": 447, "everi": [442, 447, 450, 451, 453, 454, 455, 456, 458, 460, 463, 464, 466, 468, 472, 481, 487, 493, 495, 496, 498, 507, 509, 513, 514, 517, 519, 522, 524, 526, 528, 532, 533, 546, 547, 551, 552, 554, 558, 559, 560, 561, 563, 568, 569, 570, 571, 572, 573, 575, 576, 581, 584, 587, 589, 591, 598, 599, 602, 603, 604, 605, 606, 608, 609, 610, 611, 613, 615, 616, 617, 619, 620, 621, 623, 627, 630, 634, 649, 651, 652, 654, 656, 657, 662, 663, 665, 666], "everybodi": 466, "everyon": [517, 601, 603, 657, 666], "everyth": [451, 458, 460, 463, 464, 509, 510, 512, 527, 529, 530, 531, 544, 547, 548, 550, 551, 559, 572, 591, 621, 627, 634, 649, 650, 652, 653, 659, 660, 661, 663, 664], "everywher": [554, 570, 571, 598, 621, 631, 651, 662], "evex": 613, "evid": [594, 606], "evidenc": 527, "evil": [453, 589, 617], "evl": 559, "evlmask": 559, "evok": 598, "evolut": [563, 627], "evolutionari": 561, "evolv": [442, 457, 465, 517, 562], "evt": 533, "ex": [471, 506, 509, 517, 531, 546, 551, 556, 577, 585, 599, 621, 656], "ex2": 572, "exact": [451, 467, 468, 479, 486, 509, 519, 526, 529, 545, 558, 559, 562, 565, 574, 575, 582, 587, 605, 606, 610, 613, 620, 626, 627], "exact_artifact_path": 561, "exactli": [442, 445, 447, 450, 453, 454, 462, 467, 468, 472, 498, 509, 513, 519, 521, 526, 534, 539, 552, 554, 558, 559, 571, 577, 581, 587, 588, 589, 592, 600, 601, 605, 610, 611, 613, 615, 627, 629, 631, 651, 662], "exactmatch": 559, "examin": [442, 458, 464, 481, 497, 509, 513, 551, 559, 564, 579, 605, 606, 610, 621, 626, 633, 634], "exampl": [18, 46, 47, 52, 82, 109, 116, 136, 137, 139, 167, 195, 200, 231, 232, 233, 237, 266, 292, 348, 376, 377, 378, 382, 413, 441, 443, 444, 445, 446, 449, 450, 451, 452, 454, 455, 456, 457, 458, 460, 462, 463, 464, 466, 467, 468, 469, 483, 484, 493, 495, 497, 502, 505, 507, 509, 510, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 527, 532, 533, 535, 538, 539, 546, 547, 549, 550, 551, 552, 553, 554, 555, 557, 558, 560, 563, 565, 567, 570, 571, 572, 573, 575, 576, 577, 581, 582, 586, 587, 588, 590, 591, 592, 594, 596, 597, 598, 599, 600, 602, 603, 605, 606, 608, 610, 611, 613, 615, 616, 619, 620, 621, 622, 623, 625, 626, 628, 629, 630, 631, 633, 634, 635, 636, 637, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666], "exampletest": 472, "exce": [52, 109, 139, 195, 237, 292, 382, 441, 442, 445, 447, 467, 559, 605, 606], "exceed": 602, "exceedingli": 606, "excel": [450, 463, 522, 529, 568, 589, 626], "except": [442, 443, 444, 445, 447, 450, 451, 453, 454, 460, 462, 464, 465, 468, 472, 473, 474, 477, 478, 482, 495, 505, 509, 510, 511, 513, 517, 521, 522, 524, 527, 533, 534, 537, 545, 558, 565, 569, 571, 572, 573, 574, 577, 589, 591, 597, 605, 608, 611, 613, 615, 616, 621, 622, 626, 627, 631, 633, 634, 635, 636, 637, 650, 651, 653, 654, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666], "excerpt": 572, "excess": [467, 473, 474, 561], "exchang": [529, 589], "exchange2_": 593, "exchange2_r": 593, "excis": 559, "excit": [517, 551, 657, 666], "exclam": 559, "exclud": [442, 452, 459, 464, 468, 469, 476, 486, 493, 494, 495, 497, 498, 517, 532, 556, 559, 594, 600, 622], "exclus": [451, 464, 491, 509, 559, 573, 610, 623], "exclusionari": 465, "excp_en": 447, "excp_en_msb": 447, "exctyp": 519, "exctype1": 519, "exctypen": 519, "excus": [457, 465], "exec": [9, 10, 71, 75, 77, 78, 79, 80, 81, 83, 85, 86, 88, 89, 140, 151, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 171, 172, 174, 175, 177, 178, 238, 254, 258, 260, 261, 262, 263, 264, 265, 267, 269, 271, 272, 274, 275, 295, 296, 300, 301, 307, 308, 309, 328, 332, 333, 334, 335, 383, 392, 393, 401, 405, 407, 408, 409, 410, 411, 412, 414, 416, 418, 419, 421, 422, 445, 447, 452, 469, 561], "exec_hi": 446, "exec_lo": 446, "exec_mask_32": 447, "exec_mask_64": 447, "exec_tim": 619, "execinfo": 545, "execut": [58, 243, 388, 442, 446, 450, 451, 455, 456, 458, 461, 463, 464, 467, 469, 470, 471, 473, 476, 481, 482, 487, 493, 494, 495, 496, 498, 500, 501, 502, 504, 505, 506, 507, 509, 510, 511, 512, 513, 514, 515, 518, 519, 521, 523, 524, 526, 529, 530, 531, 532, 536, 538, 545, 549, 553, 559, 560, 561, 563, 564, 573, 574, 577, 587, 590, 596, 598, 603, 604, 605, 606, 608, 610, 611, 613, 616, 619, 620, 622, 624, 625, 626, 627, 628, 629, 630, 633, 634, 635, 636, 637, 649, 650, 651, 652, 653, 654, 656, 657, 660, 661, 662, 663, 665], "executable_format_error": 589, "executeprogramandwait": 611, "executeremoteexpr": 637, "executionengin": [464, 515, 529, 573, 589, 594, 633, 634, 635, 636, 637, 662, 663, 664, 665], "executionsess": [573, 633, 634, 635, 636, 637], "executionutil": [633, 634], "execv": 611, "execz": [9, 10, 53, 77, 78, 79, 80, 81, 83, 86, 88, 89, 140, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 171, 174, 175, 177, 238, 260, 261, 262, 263, 264, 265, 267, 271, 272, 274, 295, 296, 300, 301, 307, 308, 309, 328, 333, 334, 335, 336, 383, 407, 408, 409, 410, 411, 412, 414, 418, 419, 421], "exedepsfix": 541, "exeext": 621, "exegesi": [471, 508], "exempt": 467, "exercis": [525, 602, 610, 621, 633, 657, 666], "exhaust": [460, 464, 465, 467, 524, 526, 529, 538, 589, 602], "exhibit": [451, 458, 559, 606], "exig": 589, "exist": [442, 445, 447, 451, 454, 459, 460, 462, 463, 464, 466, 467, 468, 470, 472, 473, 476, 479, 481, 485, 487, 493, 494, 497, 498, 510, 513, 517, 519, 520, 521, 524, 526, 527, 531, 532, 538, 539, 541, 544, 546, 553, 554, 557, 558, 559, 561, 563, 565, 569, 570, 573, 577, 582, 585, 587, 588, 589, 590, 591, 593, 594, 595, 596, 598, 601, 602, 603, 605, 606, 607, 608, 610, 611, 614, 615, 617, 621, 622, 624, 626, 631, 633, 650, 651, 652, 653, 655, 656, 657, 661, 663, 664, 666], "exit": [442, 447, 455, 459, 464, 491, 496, 515, 519, 522, 524, 529, 532, 559, 561, 563, 571, 572, 573, 589, 591, 596, 605, 606, 620, 622, 627, 628, 629, 630, 636, 637, 652, 654, 655, 656, 657, 663, 666], "exit5": 572, "exitcod": 472, "exitcond": [559, 622], "exitonerr": [573, 589, 637], "exitonerror": 637, "exn": [513, 559], "exp": [82, 167, 266, 413, 456, 625], "exp0": 619, "exp1": 619, "exp2": [619, 625], "exp_cnt": [109, 195, 292, 441], "expand": [442, 448, 451, 459, 464, 467, 472, 478, 481, 500, 501, 508, 514, 517, 520, 522, 533, 554, 555, 571, 591, 594, 598, 603, 605, 615, 617, 621, 628, 631], "expandatomicrmwinir": 451, "expandinlineasm": 626, "expandop": 520, "expans": [451, 463, 464, 481, 514, 524, 555, 559, 561, 565, 616, 626], "expansionregiontag": 514, "expcnt": [109, 195, 292, 441, 447], "expcnt_sat": [109, 195, 292, 441], "expect": [94, 338, 426, 442, 446, 447, 450, 451, 452, 453, 454, 455, 457, 460, 463, 464, 466, 467, 468, 472, 479, 481, 493, 509, 513, 517, 523, 524, 526, 527, 529, 531, 534, 538, 555, 558, 561, 563, 569, 570, 571, 576, 580, 584, 587, 589, 594, 595, 598, 600, 602, 603, 604, 605, 606, 608, 609, 610, 611, 613, 615, 616, 619, 620, 621, 627, 630, 631, 633, 634, 649, 650, 651, 652, 653, 654, 655, 656, 659, 660, 661, 662, 663, 664, 665], "expected_v": 559, "expectedtoerroror": 589, "expens": [451, 460, 462, 467, 493, 509, 510, 519, 523, 535, 538, 541, 559, 561, 571, 587, 589, 606, 626, 627], "expensive_check": 467, "experi": [442, 462, 465, 466, 547, 554, 566, 570, 571, 594, 598, 605, 610, 619, 633, 634, 651, 658, 662], "experienc": 458, "experiment": [447, 461, 462, 517, 520, 546, 561, 594, 597, 598, 606], "expert": 603, "expertis": 592, "expess": 442, "expir": [591, 603], "explain": [0, 1, 2, 3, 4, 5, 6, 7, 8, 445, 446, 447, 450, 453, 462, 464, 466, 467, 468, 476, 493, 517, 518, 522, 559, 563, 571, 588, 589, 594, 603, 604, 624, 627, 628, 630, 654, 658, 659, 665], "explan": [460, 462, 518, 522, 529, 552, 559, 571, 601], "explanatori": [517, 577], "explicit": [442, 447, 451, 464, 465, 466, 467, 487, 498, 509, 516, 521, 522, 523, 526, 527, 529, 534, 538, 552, 558, 559, 560, 563, 571, 572, 589, 595, 596, 601, 606, 627, 633, 652, 653, 654, 655, 656, 657, 662, 663, 664, 665, 666], "explicitli": [442, 447, 449, 450, 462, 464, 466, 467, 468, 509, 510, 513, 517, 522, 524, 526, 527, 532, 557, 559, 561, 564, 565, 573, 587, 588, 589, 591, 598, 605, 606, 610, 615, 620, 622, 625, 650, 657, 661, 666], "exploit": [523, 596, 598, 606, 651], "explor": [487, 513, 588, 589, 603, 610, 628], "expon": [446, 559], "exponenti": [509, 534, 559, 587], "export": [82, 91, 109, 167, 179, 195, 266, 276, 292, 413, 423, 441, 445, 450, 462, 464, 496, 497, 501, 509, 529, 544, 551, 559, 562, 573, 585, 591, 599, 635, 636, 637, 651, 653], "exportsymbol": 559, "expos": [442, 447, 450, 451, 458, 464, 467, 472, 497, 509, 526, 529, 559, 562, 573, 587, 589, 598, 606, 610, 613, 627, 654, 665], "exposesreturnstwic": 565, "exposit": [559, 659], "expr": [446, 468, 488, 508, 559, 594, 615, 649, 652, 653, 654, 655, 656, 660, 661, 662, 663, 664, 665], "expr0lh": 514, "expr0rh": 514, "expr1lh": 514, "expr1rh": 514, "expr_prec": [660, 661, 662, 663, 664, 665], "expraddr": 637, "exprast": [636, 637, 649, 650, 651, 652, 653, 654, 655, 656, 660], "express": [46, 52, 109, 136, 139, 195, 231, 237, 292, 376, 382, 441, 445, 450, 456, 464, 465, 467, 468, 472, 481, 483, 486, 488, 495, 497, 505, 509, 513, 520, 522, 524, 526, 527, 529, 537, 560, 561, 563, 565, 573, 589, 594, 600, 605, 608, 613, 616, 621, 626, 627, 630, 631, 633, 637, 648, 651, 653, 654, 655, 656, 657, 659, 662, 664, 665, 666], "exprloc": 442, "exprprec": [649, 650, 651, 652, 653, 654, 655, 656], "exprproc": 442, "exprsymbol": [651, 652, 653, 654], "ext": [453, 559, 627], "extbinari": 498, "exted": 598, "extend": [442, 445, 446, 451, 461, 467, 468, 472, 487, 495, 505, 509, 516, 521, 524, 526, 529, 534, 552, 559, 573, 585, 589, 591, 596, 598, 606, 609, 610, 614, 615, 617, 624, 626, 633, 634, 648, 649, 651, 657, 658, 659, 660, 662, 666, 667], "extens": [442, 447, 461, 462, 464, 466, 467, 470, 472, 473, 481, 489, 498, 511, 517, 519, 520, 522, 524, 526, 528, 529, 533, 543, 558, 559, 566, 569, 571, 587, 589, 592, 594, 595, 597, 598, 599, 606, 608, 610, 611, 613, 625, 626, 649, 653, 654, 660, 664, 665, 668], "extent": [479, 517, 526, 527, 559, 594], "exterior": 610, "extern": [442, 447, 453, 454, 461, 462, 464, 470, 474, 476, 494, 497, 506, 510, 517, 524, 544, 545, 547, 549, 559, 561, 562, 564, 568, 571, 572, 573, 575, 586, 589, 593, 594, 599, 600, 602, 606, 610, 616, 623, 625, 626, 627, 637, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 659, 660, 661, 662, 663, 664, 665, 666], "extern_weak": [454, 559], "externallinkag": [650, 651, 652, 653, 654, 655, 656, 661], "externally_initi": [454, 559], "externallyiniti": 559, "externalstorag": 509, "extra": [442, 447, 454, 456, 462, 463, 466, 467, 497, 509, 518, 519, 524, 525, 529, 549, 550, 553, 559, 561, 563, 569, 571, 581, 587, 588, 589, 591, 594, 599, 600, 601, 604, 606, 610, 613, 615, 619], "extra_sourc": 463, "extract": [464, 468, 471, 476, 491, 495, 514, 519, 531, 534, 538, 539, 559, 589, 605, 606, 610, 613, 615, 617, 626, 628], "extract_subreg": 565, "extract_subvector": 464, "extractel": 453, "extractloop": 587, "extrem": [450, 451, 454, 458, 464, 517, 523, 529, 545, 556, 559, 561, 587, 589, 605, 615, 616, 626, 627, 635, 654, 665, 667], "exynosm3model": 626, "f": [446, 447, 451, 453, 464, 467, 468, 470, 475, 476, 477, 481, 485, 486, 488, 490, 494, 495, 496, 498, 504, 506, 507, 509, 510, 513, 515, 519, 522, 526, 527, 529, 532, 554, 557, 559, 561, 572, 574, 577, 587, 589, 591, 598, 604, 605, 606, 610, 615, 616, 623, 625, 626, 627, 629, 634, 635, 636, 637, 649, 650, 651, 652, 653, 654, 655, 656, 660, 661, 662, 663, 664, 665], "f0": [493, 559, 626], "f00ba": 532, "f1": [527, 559, 571, 572, 626], "f107": 572, "f108": 572, "f110": 572, "f128": [559, 626], "f16": [44, 48, 229, 293, 298, 303, 324, 374, 443, 445, 446, 559], "f16x2": [0, 1, 3, 4, 7, 8], "f16x4": 8, "f1f2": 571, "f2": [487, 527, 559, 571, 572, 626], "f2_1": 626, "f2_2": 626, "f3": [572, 626], "f31": [559, 626], "f32": [0, 1, 2, 3, 4, 7, 8, 45, 48, 135, 230, 293, 298, 303, 324, 375, 443, 445, 446, 464, 510, 533, 554, 559, 572, 598, 626], "f32x16": 8, "f32x2": [0, 2], "f32x32": 8, "f32x4": 8, "f3_1": 626, "f3_12": 626, "f3_2": 626, "f3_3": 626, "f4": 572, "f4rc": 464, "f5": 572, "f64": [0, 2, 445, 446, 464, 559, 572, 626], "f64x2": [0, 2], "f80": 559, "f88": 572, "f89": 572, "f90": 572, "f91": 572, "f92": 572, "f93": 572, "f934": 626, "f94": 572, "f95": 572, "f96": 572, "f97": 572, "f98": 572, "f99": 572, "fa": [446, 464], "fab": 625, "face": [467, 524, 604, 606, 611, 613, 627], "facil": [442, 450, 467, 472, 509, 522, 526, 531, 538, 568, 590, 591, 592, 605, 611, 633], "facilit": [461, 467, 517, 559, 589, 590, 596, 605, 631], "faciti": 442, "fact": [442, 450, 459, 464, 466, 467, 493, 509, 510, 513, 517, 519, 522, 524, 527, 529, 552, 558, 559, 560, 563, 570, 573, 589, 601, 606, 609, 615, 616, 627, 635, 651, 653, 654, 657, 662, 664, 665, 666], "fact0": 571, "fact1": 571, "factor": [442, 447, 464, 467, 517, 559, 579, 589, 596, 603, 615, 617, 622, 625], "factori": [467, 538, 587, 589], "fadd": [448, 464, 520, 533, 572, 626, 650, 651, 652, 654, 661, 662, 663, 665], "fail": [447, 451, 459, 462, 466, 467, 468, 469, 472, 474, 476, 498, 509, 513, 517, 519, 523, 529, 531, 532, 533, 538, 545, 547, 553, 559, 573, 589, 591, 599, 602, 603, 605, 606, 609, 611, 620, 621, 625, 633, 634, 635, 636, 637, 650], "failedisel": 539, "failmateri": 634, "failtkind": 523, "failur": [458, 459, 466, 468, 469, 472, 494, 498, 512, 517, 529, 531, 543, 546, 547, 551, 553, 559, 561, 573, 574, 589, 591, 597, 598, 599, 600, 605, 606, 620, 621, 625, 627, 631, 659, 660], "failure_ord": 451, "fairli": [450, 451, 466, 516, 522, 524, 533, 545, 558, 589, 602, 626, 649, 652, 653, 659, 660, 663, 664, 666], "faith": 519, "fake": 474, "falkormodel": 626, "falkorwr_1vxvy_2cyc": 626, "falkorwr_2vxvy_2cyc": 626, "fall": [455, 467, 468, 502, 509, 513, 526, 538, 545, 559, 573, 587, 589, 598, 603, 606, 610, 626, 651, 652, 653, 654, 655, 656, 662, 663, 664, 665], "fallback": [454, 506, 526, 538, 543, 559, 602, 606, 622], "fallible_iter": 589, "falliblechilditer": 589, "fallthrough": [461, 559, 606], "fals": [447, 450, 456, 458, 467, 469, 472, 474, 481, 487, 498, 506, 509, 513, 522, 529, 534, 545, 550, 552, 554, 556, 559, 561, 562, 563, 565, 571, 573, 574, 577, 587, 589, 602, 605, 609, 613, 626, 627, 628, 635, 636, 637, 650, 651, 652, 653, 654, 655, 656, 663], "false_branch_weight": 456, "falsebr": 605, "falsedest": 559, "famili": [447, 465, 559, 589, 605, 610, 657, 666], "familiar": [442, 447, 464, 466, 497, 510, 512, 519, 524, 529, 533, 552, 571, 572, 603, 627, 633, 652, 656, 659, 663], "fan": 548, "fanci": 620, "fancier": [566, 627], "fancyaa": 627, "fancyobject": 606, "faq": [517, 559, 657, 666], "far": [442, 450, 463, 509, 520, 558, 559, 568, 576, 577, 581, 584, 589, 592, 603, 605, 606, 627, 629, 634, 635, 649, 650, 653, 654, 657, 660, 661, 664, 665, 666], "far16": 576, "far32": 576, "farawai": 467, "farm": 472, "farpoint": 584, "farpointer32": 584, "fashion": [466, 520, 521, 559, 592, 606, 626], "fast": [464, 467, 473, 508, 510, 524, 532, 539, 541, 543, 547, 561, 566, 569, 571, 585, 589, 591, 598, 602, 605, 606, 607, 613, 626, 627, 654, 658, 665], "fast_filter_branch": 591, "fast_path": 559, "fastcal": 464, "fastcc": [454, 464, 513, 522, 559], "fastemit": 613, "faster": [442, 458, 460, 467, 476, 498, 510, 519, 525, 529, 539, 546, 547, 559, 561, 570, 571, 589, 602, 605, 606], "fastest": 546, "fastisel": 559, "fastlink": 582, "fastmath": 572, "fat": [447, 491, 510], "fatbin": 510, "fault": [447, 453, 469, 496, 517, 519, 545, 597, 606], "faultingload": 523, "faultingloadstor": 523, "faultingpcoffset": 523, "faultingstor": 523, "faultkind": 523, "faultmap": [559, 597], "favor": [442, 466, 467, 517, 554, 582, 606], "favorit": [560, 592, 652, 663], "favour": [614, 617], "fbb": 626, "fca": 560, "fcc_g": 626, "fcc_u": 626, "fcc_ug": 626, "fcc_val": 626, "fcf": 559, "fcmp": [650, 652, 654, 661, 662, 663, 664, 665], "fcmpinst": 589, "fco": 626, "fcomi": 464, "fcontext": 656, "fcoverag": [481, 514], "fcuda": 510, "fcur": 571, "fde": [442, 447, 464, 560], "fdebug": [470, 506], "fdiv": 595, "fdr": 628, "fdrpcchannel": 637, "fe": 526, "fear": 517, "feasibl": [517, 559, 605, 606, 629], "featur": [0, 1, 2, 3, 4, 5, 6, 7, 8, 442, 445, 446, 459, 460, 461, 462, 463, 466, 467, 472, 476, 509, 513, 514, 517, 521, 525, 528, 529, 535, 536, 545, 551, 552, 556, 557, 559, 562, 568, 571, 574, 581, 587, 588, 589, 590, 591, 599, 602, 605, 610, 611, 613, 617, 626, 627, 629, 630, 631, 633, 649, 651, 652, 653, 654, 655, 657, 660, 663, 664, 665, 666], "featurea": 631, "featureb": 631, "featurec": 631, "featurefparmv8": 617, "featurev8deprec": 626, "featurev9": 626, "featurevi": 626, "februari": 594, "fed": [464, 596], "fedora": 518, "fee": 568, "feed": [449, 450, 559, 561, 591, 605, 652, 663], "feedback": [442, 512, 517, 546, 551, 560, 594, 600, 601, 627, 634, 635, 636, 637], "feel": [442, 458, 459, 465, 466, 467, 512, 517, 524, 559, 568, 598, 601, 603, 629, 648, 650, 657, 659, 661, 666], "femul": 559, "fenc": [447, 451, 493, 524, 545, 570], "fermi": 464, "ferrant": 516, "fetch": [442, 445, 446, 447, 456, 464, 493, 537, 559, 591, 602, 627], "few": [449, 451, 454, 458, 460, 462, 463, 464, 465, 467, 468, 476, 493, 507, 510, 517, 518, 519, 525, 526, 532, 533, 538, 548, 549, 551, 558, 559, 563, 572, 587, 589, 590, 591, 592, 605, 606, 610, 611, 621, 625, 626, 627, 629, 630, 635, 649, 650, 651, 653, 656, 657, 660, 661, 662, 664, 666], "fewer": [447, 517, 526, 587, 594, 605, 606, 610], "fewerelementsfor": 538, "fewerelementsif": 538, "fexist": 571, "ffast": [510, 625], "ffi": [462, 522], "ffi_include_dir": 462, "ffi_library_dir": 462, "ffmpeg": 561, "ffp": 510, "fgr": 533, "fgt": 598, "fi": [0, 1, 526, 529, 591, 651, 652, 653, 654, 655, 656], "fib": [587, 648, 652, 654, 656, 659, 663, 665], "fibi": [654, 665], "fibonacci": [531, 648, 659], "fiddl": [550, 566, 589, 607], "fidel": 605, "field": [442, 447, 450, 454, 457, 463, 464, 472, 493, 494, 495, 497, 502, 505, 512, 514, 524, 526, 527, 551, 556, 559, 570, 576, 577, 581, 582, 585, 588, 589, 600, 602, 605, 606, 608, 610, 613, 615, 616, 626, 630, 631, 649, 657, 660, 666], "field_offset": 468, "fifth": [513, 559, 572, 626], "figur": [453, 458, 464, 509, 516, 553, 559, 570, 589, 603, 620, 621, 626, 627], "fiji": 447, "file": [442, 447, 448, 449, 456, 458, 459, 460, 462, 463, 469, 471, 473, 474, 476, 477, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 498, 500, 501, 502, 504, 505, 506, 507, 508, 510, 511, 512, 515, 517, 518, 520, 521, 522, 525, 528, 531, 532, 533, 544, 546, 548, 550, 551, 553, 554, 556, 558, 559, 560, 561, 564, 566, 567, 570, 571, 572, 573, 575, 576, 579, 580, 582, 584, 588, 589, 590, 591, 592, 594, 597, 598, 599, 603, 606, 607, 610, 611, 613, 614, 616, 617, 619, 620, 623, 625, 626, 627, 629, 630, 631, 633, 634, 648, 649, 650, 651, 652, 653, 654, 655, 656, 658, 659, 662, 665, 668], "file1": [447, 492], "file2": 447, "file_nam": 495, "file_path": 447, "file_uri": 447, "filecheck": [462, 469, 471, 497, 539, 554, 565, 605, 621], "filecheck_opt": 468, "fileinfosubstream": 577, "fileit": 509, "filemag": 581, "filenam": [462, 467, 468, 469, 470, 473, 474, 476, 477, 478, 480, 481, 485, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 498, 500, 501, 502, 503, 506, 507, 508, 509, 510, 514, 521, 554, 589, 600, 605, 607, 615, 617, 619, 628, 655, 656], "filename0": 514, "filename1": 514, "filenameindex0": 514, "filenameindex1": 514, "filenameoffset": 577, "filenotfound": 589, "filenumb": 521, "fileorerr": 589, "filepo": 509, "files": 503, "filesizepars": 509, "filesystem": [472, 518, 550, 655], "filetyp": [473, 531, 605, 655], "fill": [445, 446, 447, 450, 457, 467, 487, 509, 510, 518, 546, 551, 553, 559, 588, 589, 598, 605, 606, 610, 627, 629, 630, 631, 648, 649, 650, 651, 652, 653, 654, 655, 656], "filt": [481, 482], "filter": [64, 147, 247, 394, 462, 468, 472, 481, 487, 494, 498, 517, 556, 559, 598, 600, 619, 621, 629], "filterclass": 556, "final": [442, 447, 451, 454, 457, 458, 460, 461, 464, 466, 467, 472, 493, 496, 498, 509, 514, 517, 518, 519, 521, 526, 529, 548, 550, 552, 557, 559, 562, 570, 571, 575, 576, 577, 580, 582, 589, 590, 591, 596, 599, 600, 603, 605, 610, 613, 614, 615, 616, 617, 621, 626, 627, 628, 630, 633, 635, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 659, 660, 661, 663, 664, 665, 666], "finalis": 598, "finalize_statu": 628, "finalizememori": 564, "finalizeobject": [564, 656], "financi": 591, "find": [442, 447, 449, 450, 457, 458, 459, 460, 462, 464, 466, 467, 468, 469, 470, 472, 481, 484, 486, 497, 508, 509, 514, 517, 518, 519, 520, 527, 528, 529, 531, 532, 533, 534, 539, 545, 547, 549, 550, 551, 553, 558, 559, 561, 562, 563, 566, 570, 571, 573, 582, 590, 591, 597, 599, 601, 603, 605, 606, 608, 610, 611, 615, 616, 617, 619, 620, 626, 627, 628, 629, 631, 633, 636, 637, 649, 650, 651, 652, 653, 654, 655, 656, 660, 661, 662, 663, 664, 665], "find_a": 589, "find_packag": 462, "find_program": 462, "findanalysispass": 629, "finder": 597, "findings_dir": 561, "findlead": 589, "findstub": [636, 637], "findsymbol": [635, 636, 637, 651, 652, 653, 654], "fine": [453, 457, 466, 467, 497, 509, 524, 527, 529, 531, 532, 552, 559, 573, 591, 598, 611, 630, 654, 659, 665], "finer": 450, "finish": [445, 447, 449, 458, 462, 464, 467, 513, 515, 517, 518, 519, 559, 564, 566, 571, 588, 599, 607, 625, 627, 629, 650, 651, 652, 653, 654, 655, 656, 660, 661, 662, 663, 664, 665], "finishassembli": 526, "finit": [464, 559, 613], "fire": [458, 467, 509, 559], "firefox": [551, 594], "firepro": 447, "first": [14, 46, 52, 82, 112, 136, 139, 167, 196, 231, 237, 266, 313, 344, 376, 382, 413, 442, 444, 445, 446, 447, 450, 451, 453, 454, 456, 458, 459, 460, 462, 463, 464, 466, 467, 468, 470, 472, 474, 476, 481, 485, 486, 488, 491, 493, 495, 496, 506, 507, 509, 513, 514, 516, 517, 518, 519, 521, 522, 526, 529, 531, 532, 533, 534, 537, 538, 542, 546, 548, 551, 552, 553, 554, 556, 557, 560, 561, 562, 563, 564, 565, 566, 567, 570, 571, 572, 573, 579, 581, 582, 584, 587, 588, 589, 590, 591, 593, 594, 595, 596, 598, 600, 601, 602, 605, 606, 607, 608, 609, 610, 611, 615, 616, 617, 619, 620, 621, 622, 626, 627, 628, 629, 630, 631, 633, 634, 635, 636, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 659, 660, 661, 662, 663, 664, 665, 666, 667], "first_wavefront": 447, "firstcondit": 589, "firstlett": 515, "firstli": 559, "fish": 573, "fit": [447, 453, 464, 467, 509, 510, 517, 527, 534, 549, 559, 581, 587, 588, 589, 602, 605, 630, 634, 652, 663], "five": [442, 451, 464, 509, 516, 519, 533, 561, 589, 603], "fix": [94, 338, 426, 442, 443, 444, 447, 451, 455, 460, 466, 467, 468, 472, 509, 513, 517, 527, 545, 551, 553, 560, 561, 563, 566, 569, 573, 576, 577, 582, 585, 591, 592, 594, 598, 599, 600, 602, 603, 604, 606, 607, 608, 610, 613, 615, 616, 617, 622, 626, 627, 628, 631, 635, 649, 650, 651, 654, 657, 659, 660, 661, 665, 666], "fixabl": 524, "fixedt": 605, "fixedvectortyp": 598, "fixm": [468, 487, 518, 529, 601, 620, 626], "fixup": [577, 598], "fl": 571, "flag": [445, 446, 447, 449, 459, 461, 462, 463, 464, 468, 469, 480, 481, 487, 491, 493, 495, 501, 505, 506, 513, 515, 517, 518, 521, 524, 525, 526, 529, 531, 532, 544, 547, 548, 549, 550, 554, 556, 561, 569, 571, 572, 575, 576, 577, 581, 582, 589, 595, 598, 599, 600, 602, 605, 608, 610, 621, 626, 628, 629, 631, 661, 662, 663, 664, 665], "flag1": [561, 571], "flag2": [561, 571], "flagflat": 631, "flaghollow": 631, "flagpointi": 631, "flagprototyp": 656, "flaground": 631, "flagscpu1": 631, "flagscpu2": 631, "flagscpumask": 631, "flagsfeaturea": 631, "flagsfeatureb": 631, "flagsfeaturec": 631, "flagsflat": 631, "flagshollow": 631, "flagspointi": 631, "flagsround": 631, "flakypass": 472, "flame": 628, "flamegraph": 629, "flang": 532, "flat": [16, 39, 40, 62, 63, 94, 95, 114, 131, 132, 198, 224, 225, 323, 332, 338, 346, 369, 370, 392, 393, 426, 427, 446, 470, 576, 631], "flat32": 576, "flat_atom": 447, "flat_atomic_add": [0, 2, 3, 4], "flat_atomic_add_x2": [0, 2, 3, 4], "flat_atomic_and": [0, 2, 3, 4], "flat_atomic_and_x2": [0, 2, 3, 4], "flat_atomic_cmpswap": [0, 2, 3, 4, 447], "flat_atomic_cmpswap_x2": [0, 2, 3, 4], "flat_atomic_dec": [0, 2, 3, 4], "flat_atomic_dec_x2": [0, 2, 3, 4], "flat_atomic_fcmpswap": [0, 2], "flat_atomic_fcmpswap_x2": [0, 2], "flat_atomic_fmax": [0, 2], "flat_atomic_fmax_x2": [0, 2, 447], "flat_atomic_fmin": [0, 2], "flat_atomic_fmin_x2": [0, 2], "flat_atomic_inc": [0, 2, 3, 4], "flat_atomic_inc_x2": [0, 2, 3, 4], "flat_atomic_or": [0, 2, 3, 4], "flat_atomic_or_x2": [0, 2, 3, 4], "flat_atomic_smax": [0, 2, 3, 4], "flat_atomic_smax_x2": [0, 2, 3, 4], "flat_atomic_smin": [0, 2, 3, 4], "flat_atomic_smin_x2": [0, 2, 3, 4], "flat_atomic_sub": [0, 2, 3, 4], "flat_atomic_sub_x2": [0, 2, 3, 4], "flat_atomic_swap": [0, 2, 3, 4, 447], "flat_atomic_swap_x2": [0, 2, 3, 4], "flat_atomic_umax": [0, 2, 3, 4], "flat_atomic_umax_x2": [0, 2, 3, 4], "flat_atomic_umin": [0, 2, 3, 4], "flat_atomic_umin_x2": [0, 2, 3, 4], "flat_atomic_xor": [0, 2, 3, 4], "flat_atomic_xor_x2": [0, 2, 3, 4], "flat_load": 447, "flat_load_dword": [0, 2, 3, 4, 447], "flat_load_dwordx2": [0, 2, 3, 4], "flat_load_dwordx3": [0, 2, 3, 4], "flat_load_dwordx4": [0, 2, 3, 4, 444], "flat_load_sbyt": [0, 2, 3, 4], "flat_load_sbyte_d16": [0, 4], "flat_load_sbyte_d16_hi": [0, 4], "flat_load_short_d16": [0, 4], "flat_load_short_d16_hi": [0, 4], "flat_load_sshort": [0, 2, 3, 4], "flat_load_ubyt": [0, 2, 3, 4], "flat_load_ubyte_d16": [0, 4], "flat_load_ubyte_d16_hi": [0, 4], "flat_load_ushort": [0, 2, 3, 4], "flat_scratch": [21, 117, 140, 141, 150, 151, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 201, 238, 239, 249, 250, 253, 254, 255, 257, 258, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 295, 296, 300, 301, 307, 308, 309, 328, 332, 333, 334, 335, 349, 351, 362, 363, 383, 384, 385, 392, 393, 396, 397, 400, 401, 402, 404, 405, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422, 447], "flat_scratch_hi": [46, 446, 447], "flat_scratch_lo": [46, 446, 447], "flat_stor": 447, "flat_store_byt": [0, 2, 3, 4], "flat_store_byte_d16_hi": [0, 4], "flat_store_dword": [0, 2, 3, 4, 447], "flat_store_dwordx2": [0, 2, 3, 4], "flat_store_dwordx3": [0, 2, 3, 4, 447], "flat_store_dwordx4": [0, 2, 3, 4], "flat_store_short": [0, 2, 3, 4], "flat_store_short_d16_hi": [0, 4], "flatten": [464, 559, 625], "flavor": [548, 559, 589, 605, 615], "flavour": 539, "flaw": [533, 594, 606], "fldcw": 464, "fldcww": 464, "fleet": 518, "flexibl": [447, 464, 471, 472, 509, 526, 538, 539, 552, 559, 570, 589, 615, 617, 621, 627, 653, 664], "flexibli": 558, "flight": [493, 519, 559], "flip": 559, "float": [44, 45, 49, 51, 135, 138, 229, 230, 234, 236, 294, 299, 304, 306, 325, 327, 374, 375, 379, 381, 444, 445, 454, 455, 456, 464, 473, 493, 509, 510, 520, 524, 527, 533, 541, 547, 550, 571, 572, 589, 598, 605, 617, 624, 625, 626, 631, 648, 649, 650, 651, 652, 659, 660, 661, 662, 663, 664, 665], "float128": 584, "float16": 584, "float32": 584, "float32partialprecis": 584, "float48": 584, "float64": 584, "float80": 584, "float_denorm_mode_16_64": 447, "float_denorm_mode_32": 447, "float_denorm_mode_flush_dst": 447, "float_denorm_mode_flush_non": 447, "float_denorm_mode_flush_src": 447, "float_denorm_mode_flush_src_dst": 447, "float_mod": 447, "float_of_str": [659, 660, 661, 662, 663, 664, 665], "float_round_mode_16_64": 447, "float_round_mode_32": 447, "float_round_mode_minus_infin": 447, "float_round_mode_near_even": 447, "float_round_mode_plus_infin": 447, "float_round_mode_zero": 447, "floatscalarti": 559, "floattyp": 589, "floor": 625, "floorf": 625, "flow": [447, 450, 458, 464, 467, 484, 510, 513, 516, 517, 519, 523, 524, 528, 559, 560, 562, 563, 564, 566, 570, 572, 587, 589, 596, 597, 598, 605, 606, 610, 623, 624, 625, 626, 627, 649, 650, 651, 653, 654, 656, 657, 658, 659, 660, 661, 662, 664, 665, 666, 667], "floyd": 593, "flt_round": 559, "flto": [462, 544, 562, 574], "flush": [447, 467, 493, 510, 547, 559, 564, 572, 598, 628, 630, 655, 660, 661, 662, 663, 664, 665], "flush_statu": 628, "flux": 545, "flwend": 593, "fly": [464, 579, 633, 649, 651, 660, 662], "fma": [464, 510, 554, 572, 625], "fma3d": 593, "fmadd": 464, "fmaximum": 534, "fmaxnum": 534, "fmaxnum_iee": 534, "fminimum": 534, "fminnum": 534, "fminnum_iee": 534, "fmod": 559, "fmt": 468, "fmt_align": 589, "fmt_pad": 589, "fmt_repeat": 589, "fmtspec": 468, "fmul": [464, 572, 650, 651, 661, 662], "fmuladd": 625, "fn": [515, 559], "fnaddr": 513, "fnast": [636, 637, 650, 651, 652, 653, 654, 655, 656], "fnentri": 454, "fnf": 589, "fnir": [650, 651, 652, 653, 654, 655, 656], "fnloc": 656, "fnname": [649, 650, 651, 652, 653, 654, 655, 656], "fno": [449, 598, 625], "fnptrval": 559, "fnstart": 464, "fntree": 571, "fnty": 559, "focu": [464, 465, 536, 539, 562, 566, 607, 625, 633, 658], "focus": [442, 447, 464, 484, 526, 573, 589, 592, 606, 610, 621, 626, 634, 658], "fold": [450, 451, 520, 523, 524, 535, 536, 554, 559, 587, 589, 597, 598, 605, 608, 615, 627, 650], "foldabl": 535, "folder": [462, 518, 559, 651], "foldingsetnod": 589, "foldingsetnodeid": 589, "foldl": [615, 616], "foldmemoryoperand": [464, 626], "folk": [561, 588], "follow": [41, 46, 47, 52, 109, 136, 137, 139, 195, 226, 231, 232, 233, 237, 292, 371, 376, 377, 378, 382, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 457, 458, 459, 460, 462, 463, 464, 466, 467, 468, 469, 471, 472, 476, 477, 478, 481, 483, 486, 487, 489, 491, 493, 494, 495, 496, 497, 498, 501, 505, 506, 509, 510, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 528, 529, 532, 534, 536, 538, 539, 543, 544, 545, 546, 548, 549, 550, 551, 552, 553, 554, 556, 558, 559, 561, 562, 563, 565, 566, 567, 568, 569, 572, 573, 574, 575, 576, 577, 579, 580, 581, 582, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 596, 598, 599, 600, 601, 602, 603, 605, 606, 607, 608, 610, 611, 613, 615, 616, 617, 620, 621, 622, 623, 625, 626, 627, 628, 629, 630, 631, 632, 633, 635, 648, 649, 652, 653, 654, 656, 659, 660, 663, 664, 665], "followup": 622, "followup_al": 622, "followup_coincid": 622, "followup_epilogu": 622, "followup_fallback": 622, "followup_inn": 622, "followup_out": 622, "followup_remaind": 622, "followup_remainder_inn": 622, "followup_remainder_out": 622, "followup_sequenti": 622, "followup_unrol": 622, "followup_vector": 622, "fom": 587, "fomit": [464, 598], "foo": [450, 453, 455, 456, 462, 463, 464, 467, 468, 482, 483, 493, 498, 504, 506, 509, 510, 513, 514, 519, 521, 522, 526, 527, 539, 552, 553, 554, 557, 559, 561, 565, 570, 572, 573, 576, 589, 600, 605, 610, 613, 615, 616, 621, 623, 625, 631, 649, 650, 651, 652, 660, 661, 662, 663], "foo1": [544, 559, 562], "foo2": [544, 562], "foo3": [544, 562], "foo4": [544, 562], "foo_bar": 483, "foo_bodi": 573, "foo_ctor": 557, "foo_dtor": 557, "foo_in_a_cc": 456, "foo_test": 621, "foo_var": 463, "foobar": [467, 565, 631], "food": 594, "foof": 510, "foolproof": 627, "footnot": [533, 538, 563], "footprint": 533, "fopen": 592, "for_each": 467, "forbidden": 611, "forc": [442, 444, 445, 447, 449, 462, 463, 467, 474, 493, 497, 509, 510, 519, 521, 529, 547, 550, 557, 559, 573, 584, 589, 605, 606, 608, 610, 622, 625, 627, 631], "force_off": 462, "force_on": 462, "forcefulli": 527, "forcibli": 559, "fore": 622, "foreach": [463, 615, 617], "foreachdeclar": 616, "foreign": [462, 522], "forens": 471, "forese": 517, "forest": 563, "forev": 568, "forexpr": [652, 653, 654, 655, 656, 663, 664, 665], "forexprast": [652, 653, 654, 655, 656], "forget": [465, 467, 526, 532, 552, 588, 589, 656], "forgiv": 571, "forgotten": 655, "fork": [591, 594, 596, 606, 611], "form": [445, 447, 449, 450, 454, 461, 462, 463, 467, 468, 469, 479, 482, 483, 486, 496, 498, 509, 516, 517, 519, 521, 524, 525, 526, 527, 528, 529, 534, 538, 545, 548, 551, 552, 553, 556, 559, 560, 561, 562, 564, 568, 570, 571, 572, 577, 584, 588, 589, 594, 596, 597, 600, 601, 603, 605, 606, 608, 610, 613, 615, 616, 617, 619, 620, 621, 624, 626, 627, 628, 630, 631, 634, 648, 649, 650, 651, 652, 654, 655, 657, 658, 659, 660, 661, 662, 663, 665, 666], "formal": [442, 447, 486, 492, 510, 559, 571, 589, 601, 615, 617], "format": [27, 28, 61, 115, 124, 125, 146, 199, 212, 213, 219, 220, 221, 222, 246, 347, 357, 358, 391, 444, 445, 446, 453, 461, 468, 470, 473, 474, 476, 478, 479, 481, 482, 484, 487, 493, 494, 496, 497, 498, 500, 502, 504, 505, 507, 511, 512, 515, 517, 520, 521, 522, 523, 526, 529, 531, 556, 559, 561, 564, 566, 568, 572, 573, 575, 576, 577, 580, 582, 584, 587, 588, 591, 594, 596, 597, 600, 613, 615, 617, 620, 624, 626, 628, 629, 631, 656], "format_int_custom": 589, "format_provid": 589, "formatadapt": 589, "formatstr": 447, "formatt": 559, "formattedfil": 589, "formbit": 617, "former": [451, 464, 524, 538, 565, 605, 610, 623, 649, 660], "formerli": 589, "formmask": 626, "formul": [559, 611], "formula": 447, "forth": [442, 447, 451, 453, 533], "fortran": [442, 559, 593, 598], "fortun": [589, 651, 652, 654, 655, 657, 662, 663, 665, 666], "forum": [465, 517, 528, 559], "forwar": 559, "forward": [442, 447, 450, 451, 454, 464, 467, 493, 510, 519, 520, 526, 545, 554, 555, 559, 585, 587, 589, 591, 603, 605, 610, 611, 615, 616, 628, 649, 652, 659, 660, 661], "fosdem17": 542, "foster": [517, 591, 611], "fotonik3d_": 593, "fotonik3d_r": 593, "found": [0, 1, 2, 3, 4, 5, 6, 7, 8, 444, 446, 447, 450, 452, 458, 462, 464, 468, 469, 470, 472, 476, 478, 486, 487, 490, 496, 506, 509, 510, 517, 518, 519, 525, 526, 528, 529, 531, 533, 534, 543, 549, 550, 551, 553, 556, 559, 561, 562, 566, 568, 570, 571, 572, 573, 574, 577, 585, 587, 589, 590, 593, 595, 598, 599, 602, 605, 606, 610, 611, 619, 621, 625, 626, 627, 628, 631, 650, 651, 652, 653, 654, 655, 656, 661, 664, 665], "foundat": [442, 447, 465, 517, 591, 598, 601, 627], "foundfoo": 467, "four": [17, 115, 199, 347, 445, 447, 450, 451, 453, 454, 460, 464, 472, 493, 504, 509, 527, 539, 540, 548, 559, 572, 573, 626, 650, 651, 661], "fourinarow": 620, "fourteen": 603, "fourth": [513, 527, 559, 605, 608, 626, 627, 663], "foz": 506, "fp": [446, 447, 464, 473, 474, 493, 509, 522, 559, 565, 598, 604, 605, 617, 626, 651, 652, 653, 654, 656], "fp0": [615, 617], "fp1": [615, 617], "fp128": [454, 559, 571], "fp16": 447, "fp16_ovfl": 447, "fp2": [615, 617], "fp3": [615, 617], "fp4": [615, 617], "fp5": [615, 617], "fp6": [615, 617], "fp_to_sint": 626, "fpexcept": 559, "fpform": 617, "fpformat": [615, 617], "fpformbit": 617, "fpga": [442, 464], "fpic": [462, 602], "fpimmleaf": 536, "fpinst": 617, "fpm": [497, 581, 634, 635, 636, 637], "fpm1": 581, "fpm2": 581, "fpmad": 605, "fpo": [577, 585], "fpo_data": 577, "fppassmanag": 629, "fpr": 533, "fpreg": 626, "fpregsclass": 626, "fpregsregclass": 626, "fpregsregisterclass": 626, "fprintf": [649, 650, 651, 652, 653, 654, 655, 656], "fprofil": [462, 481, 514], "fptr": 656, "fptype": 559, "fpu": [550, 559], "fputc": [598, 651, 652, 653, 654, 655, 656], "fqa": 467, "fr": [559, 571], "fra": 464, "fraction": [446, 455, 552, 556, 559, 561], "fragil": [468, 591], "fragment": [464, 479, 483, 525, 526, 559, 605, 610, 615, 616, 620], "fragment1": 483, "fragment2": 483, "fragmentkind": 483, "frame": [473, 475, 486, 496, 500, 501, 506, 524, 526, 534, 557, 559, 560, 564, 565, 577, 587, 589, 598, 604, 605, 606, 608, 610, 626, 630], "frameindex": 626, "frameinfo": [565, 626], "frameless": 464, "framemap": 526, "frameptr": 513, "frames": 526, "framework": [450, 461, 464, 520, 526, 542, 543, 545, 559, 587, 589, 605, 620, 627, 632, 650, 653, 654, 659, 661, 664, 665], "francesco": 587, "frb": 464, "frc": 464, "free": [447, 450, 451, 464, 465, 466, 467, 493, 497, 511, 512, 517, 524, 526, 536, 541, 551, 559, 560, 561, 568, 573, 588, 589, 591, 598, 601, 602, 606, 610, 613, 621, 627, 629, 630, 635, 648, 650, 651, 652, 653, 654, 657, 659, 661, 662, 666], "freea": 557, "freebench": 620, "freeblockmapblock": 581, "freebsd": [452, 464, 495, 529, 603, 628], "freebsd5": 464, "freed": [442, 447, 450, 513, 569, 573, 589, 604], "freedom": [442, 459, 533, 559, 589], "freeli": [451, 517, 559], "freescal": 511, "freestand": 559, "freetyp": 561, "freez": [551, 591, 598], "frequenc": [452, 456, 559, 597, 629, 630], "frequent": [444, 447, 467, 509, 517, 526, 527, 529, 531, 559, 587, 589, 591, 597, 610, 611, 614, 634, 635, 636, 637, 656], "fresh": [559, 591], "frexp": 559, "friend": [522, 559, 589], "friendli": [465, 486, 517, 567, 591, 614, 628, 633, 649, 660], "frighten": 561, "from": [11, 15, 17, 29, 30, 34, 35, 36, 37, 38, 42, 43, 47, 82, 92, 113, 115, 126, 127, 128, 129, 130, 134, 137, 167, 180, 197, 199, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 226, 227, 228, 233, 266, 277, 310, 337, 345, 347, 359, 360, 364, 365, 366, 367, 368, 372, 373, 378, 413, 424, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 489, 491, 493, 494, 495, 496, 497, 498, 500, 501, 502, 504, 505, 506, 507, 508, 511, 512, 513, 514, 515, 516, 518, 519, 520, 521, 522, 523, 524, 525, 526, 528, 530, 531, 533, 534, 535, 536, 538, 539, 540, 541, 543, 544, 545, 546, 548, 549, 551, 552, 553, 554, 556, 557, 558, 560, 561, 562, 563, 564, 565, 568, 569, 570, 571, 572, 574, 575, 577, 580, 582, 584, 585, 586, 590, 591, 592, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 608, 609, 610, 611, 613, 615, 616, 617, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 637, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 659, 660, 661, 662, 663, 664, 665, 666, 667], "front": [464, 466, 467, 495, 517, 519, 526, 529, 531, 559, 574, 587, 589, 590, 600, 603, 624, 634, 635, 651, 652, 653, 654, 656, 657, 658, 659, 662, 663, 664, 665, 666], "frontend": [451, 484, 487, 493, 513, 514, 519, 521, 522, 523, 526, 529, 530, 557, 558, 559, 593, 598, 600, 602, 605, 610, 621, 622, 655, 667], "frontier": [447, 563, 654, 665], "frown": 517, "frozen": [515, 559], "frt": 464, "frustrat": 465, "fsanit": [461, 545, 561, 569, 602], "fsave": 625, "fsin": [473, 626], "fstack": 598, "fstream": 572, "fstrict": 559, "fsub": [654, 665], "ft": [561, 650, 651, 652, 653, 654, 655, 656, 661, 662, 663, 664, 665], "ftest": 481, "fthinlto": 559, "ftl": [559, 608], "ftoi": 626, "ftp": 529, "ftz": 572, "fucomip": 464, "fucompi": 464, "fudg": 550, "fulfil": [549, 552, 611], "full": [442, 445, 447, 450, 451, 460, 462, 463, 464, 467, 468, 476, 480, 493, 494, 496, 497, 506, 508, 510, 515, 517, 522, 529, 548, 550, 551, 552, 557, 558, 561, 565, 566, 571, 572, 573, 575, 577, 587, 588, 589, 590, 591, 594, 598, 605, 606, 607, 610, 613, 621, 622, 623, 629, 631, 648, 657, 659, 666], "full_corpus_dir": 561, "fulldebug": [554, 559, 605], "fuller": 630, "fullest": 467, "fulli": [442, 447, 449, 454, 455, 461, 462, 463, 464, 474, 493, 510, 513, 525, 527, 529, 531, 534, 536, 559, 563, 573, 575, 587, 596, 598, 605, 606, 610, 615, 617, 622, 625, 633, 634, 649, 653, 654, 657, 660, 664, 665, 666], "fun": [521, 628, 629, 657, 658, 659, 661, 662, 663, 664, 665, 666], "func": [488, 497, 514, 559, 565, 589, 627, 629, 660, 661, 662, 663, 664, 665], "func1": 447, "func_typ": 610, "funcflag": 559, "funcid": 629, "funclet": 513, "funcresolv": 589, "function": [442, 448, 450, 451, 453, 454, 455, 458, 459, 460, 461, 462, 468, 471, 473, 475, 476, 478, 481, 482, 483, 484, 486, 493, 495, 497, 498, 500, 501, 506, 507, 510, 511, 515, 517, 518, 519, 521, 524, 525, 526, 527, 529, 534, 536, 538, 539, 543, 544, 545, 552, 553, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 567, 569, 570, 573, 574, 575, 576, 577, 579, 580, 582, 586, 592, 594, 596, 598, 600, 602, 604, 608, 609, 610, 613, 615, 619, 623, 624, 626, 627, 629, 631, 633, 634, 636, 637, 648, 649, 651, 652, 653, 654, 655, 657, 658, 659, 660, 662, 663, 664, 665, 666, 667], "function1": 447, "function_entry_arg": 630, "function_entry_count": 456, "function_id": 630, "function_old": 454, "function_other_typ": 630, "function_typ": [661, 662, 663, 664, 665], "functionaddress": 523, "functionast": [636, 637, 649, 650, 651, 652, 653, 654, 655, 656], "functioncalle": 589, "functiondecl": 467, "functionend": 521, "functionfaultinfo": 523, "functionid": 521, "functionindex": 555, "functioninfo": 523, "functionlisttyp": 589, "functionnam": [526, 559], "functionnod": 571, "functionpass": [450, 574, 587, 589, 626], "functionpassctor": 627, "functionpassmanag": [634, 635, 636, 637, 651, 652, 653, 654], "functionproto": [651, 652, 653, 654, 655, 656], "functionptr": 589, "functionstart": 521, "functiontyp": [589, 650, 651, 652, 653, 654, 655, 656], "fundament": [442, 463, 464, 467, 509, 519, 524, 527, 555, 571, 589, 606, 610, 626, 627], "fundement": 442, "funnel": [559, 598], "funni": [654, 665], "furi": 447, "further": [451, 454, 457, 459, 460, 462, 466, 467, 468, 472, 487, 508, 513, 517, 519, 524, 526, 527, 531, 533, 538, 539, 545, 549, 551, 559, 561, 570, 571, 573, 574, 577, 579, 581, 589, 594, 605, 606, 619, 622, 626, 630, 633, 635, 651], "furthermor": [442, 457, 459, 468, 517, 527, 533, 545, 559, 587, 610], "furyx": 447, "fuse": [462, 474, 510, 534, 544, 549, 559, 587], "fusion": [559, 598], "futur": [442, 447, 454, 461, 462, 466, 467, 515, 517, 525, 526, 527, 529, 541, 542, 545, 555, 557, 559, 561, 565, 589, 591, 598, 599, 603, 605, 608, 609, 610, 622, 625, 630, 650, 651, 652, 659, 661, 663, 665], "fuzz": [559, 592, 597, 603], "fuzz_target": 561, "fuzzer": 597, "fuzzercli": 525, "fuzzi": 483, "fuzzing_build_mode_unsafe_for_product": 561, "fuzzinglibc": 561, "fuzzmut": 525, "fval": 605, "fwd_progress": 447, "fwdargreg": 565, "fwhole": 598, "fx": [0, 5, 6, 7, 8, 443, 447], "fxrai": [628, 629], "g": [447, 449, 450, 451, 452, 454, 457, 458, 459, 460, 461, 462, 464, 466, 467, 468, 472, 473, 480, 481, 493, 494, 495, 496, 497, 500, 501, 505, 506, 509, 510, 513, 514, 515, 517, 518, 519, 521, 524, 526, 527, 529, 531, 533, 536, 538, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 557, 559, 561, 562, 563, 565, 568, 570, 571, 572, 573, 574, 575, 576, 577, 582, 584, 585, 586, 587, 589, 591, 594, 596, 598, 601, 603, 605, 606, 607, 608, 609, 610, 611, 613, 615, 619, 620, 621, 622, 623, 627, 629, 631, 633, 634, 635, 636, 637, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 659, 660, 661, 662, 663, 664, 665, 666], "g0": 626, "g1": [559, 605, 626], "g2": [559, 605, 626], "g3": 626, "g4": 626, "g5": 626, "g6": 626, "g7": 626, "g_": 594, "g_add": [533, 535, 538, 554], "g_and": [537, 538], "g_anyext": 538, "g_ashr": 538, "g_bitcast": 538, "g_block_addr": 538, "g_build_vector": 538, "g_build_vector_trunc": 538, "g_concat_vector": 538, "g_constant": [533, 535, 537, 538, 554], "g_extract": 538, "g_fconstant": [533, 535], "g_fmul": 533, "g_fneg": 533, "g_foo": 538, "g_fpext": 538, "g_frame_index": 538, "g_icmp": 565, "g_implicit_def": 538, "g_inttoptr": 538, "g_load": [533, 538], "g_merge_valu": 538, "g_mul": 538, "g_or": 538, "g_phi": 538, "g_ptrtoint": 538, "g_sext": 538, "g_sext_inreg": 533, "g_shl": 538, "g_store": 538, "g_sub": [538, 554], "g_trunc": 538, "g_unmerge_valu": 538, "g_xor": [533, 538], "ga": [521, 571, 626], "gabi": 511, "gadget": 606, "gain": [457, 509, 517, 545, 559, 601], "galina": 546, "game": 517, "gap": [442, 493, 514, 559, 589], "gapend": 521, "gapstart": 521, "garbag": [454, 522, 560, 584, 608, 658, 659], "gather": [447, 509, 517, 519, 548, 558, 571, 589, 590, 594, 596, 598, 613, 621, 630], "gather4": 445, "gave": 540, "gazonk": 605, "gb": 529, "gc": [454, 560, 571, 591, 597], "gc_transit": 610, "gc_transition_end": 610, "gc_transition_start": 610, "gcc": [442, 451, 463, 464, 467, 469, 481, 498, 509, 510, 511, 517, 518, 519, 528, 529, 544, 545, 549, 550, 553, 559, 570, 587, 589, 598, 605, 619, 620, 625, 626, 628], "gcc_version": 529, "gcda": 481, "gcfunctioninfo": 526, "gcfunctionmetadata": [526, 608], "gcmetadaprint": 526, "gcmetadata": 526, "gcmetadataprinterregistri": 526, "gcmetataprint": 610, "gcn": 447, "gcn3": 447, "gcname": 454, "gcno": 481, "gcodeview": 605, "gcolumn": 625, "gcov": 498, "gcov_prefix": 481, "gcov_prefix_strip": 481, "gcregistri": 526, "gcroot": [526, 608, 610], "gcse": [587, 589], "gcstrategi": [526, 610], "gd": [0, 2, 3, 4, 15, 109, 113, 195, 197, 292, 345, 441, 447], "gdb": [442, 464, 486, 544, 589, 605, 624, 626, 666], "gdbinit": 589, "ge": [615, 616], "ge_missing_jmp_buf": 467, "ge_missing_sigjmp_buf": 467, "gear": [460, 462], "geforc": 572, "gemb": 447, "gen": [470, 498, 508, 536, 626, 634, 656], "gender": 465, "gendfapacket": 464, "gener": [0, 1, 2, 3, 4, 5, 6, 7, 8, 446, 447, 449, 450, 451, 453, 454, 456, 459, 461, 462, 463, 465, 467, 468, 469, 470, 471, 473, 478, 481, 486, 487, 489, 492, 493, 497, 498, 507, 509, 510, 512, 513, 514, 515, 517, 520, 523, 524, 527, 529, 530, 531, 535, 536, 538, 539, 540, 541, 542, 543, 545, 546, 548, 549, 551, 552, 554, 557, 558, 560, 561, 562, 563, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577, 581, 582, 584, 585, 588, 590, 591, 594, 596, 597, 598, 599, 600, 601, 602, 604, 605, 606, 607, 608, 610, 611, 614, 616, 617, 619, 621, 622, 623, 625, 626, 627, 628, 631, 633, 634, 649, 651, 653, 654, 655, 656, 657, 658, 659, 660, 662, 664, 665, 666, 667], "generalcategori": 509, "generalis": [653, 664], "genericvalu": [662, 663, 664, 665], "genregisternam": 464, "gensubtargetinfo": 626, "genuin": 589, "geomean": 625, "geometr": [657, 666], "geordi": 528, "gep": [522, 534, 560, 571, 587, 597, 605, 610], "gep_index": 559, "get": [24, 25, 26, 27, 28, 31, 32, 33, 54, 55, 121, 122, 123, 124, 125, 141, 205, 206, 207, 212, 213, 239, 240, 322, 354, 355, 356, 357, 358, 361, 362, 363, 384, 385, 442, 445, 447, 448, 449, 450, 451, 453, 457, 458, 462, 463, 464, 465, 466, 467, 468, 471, 493, 509, 510, 512, 513, 514, 515, 517, 518, 520, 522, 524, 526, 527, 533, 535, 537, 543, 544, 546, 548, 549, 550, 551, 552, 553, 555, 560, 562, 563, 564, 566, 568, 570, 571, 572, 573, 582, 584, 587, 588, 589, 591, 598, 599, 600, 601, 603, 605, 606, 607, 610, 611, 613, 615, 616, 617, 620, 621, 622, 624, 626, 627, 628, 631, 632, 633, 634, 635, 636, 637, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666], "get_instrinfo_named_op": 626, "get_instrinfo_operand_enum": 626, "get_instrinfo_operand_types_enum": 626, "get_matcher_implement": 613, "get_ptr": 523, "get_reginfo_target_desc": 613, "get_register_match": 613, "get_subtarget_feature_nam": 613, "getactiondefinitionsbuild": 538, "getaddress": [573, 633, 636, 637, 651, 652, 653, 654], "getaddressingmod": 626, "getadjustedanalysispoint": 450, "getanalysi": 537, "getanalysisusag": [450, 537], "getargumentlist": 589, "getattribut": 571, "getattributespellinglistindex": 613, "getbasicblock": 464, "getbasicblocklist": [589, 652, 653, 654, 655, 656], "getbinarycodeforinstr": 626, "getbinarypreced": [653, 654, 655, 656], "getbit": 509, "getbitwidth": 589, "getbuff": 631, "getcalledfunct": 589, "getcalleesavedreg": 626, "getchar": [648, 649, 650, 651, 652, 653, 654, 655, 656], "getcol": 656, "getcompilecallback": [636, 637], "getcontext": [573, 633, 634], "getdata": 467, "getdatalayout": [573, 626, 633, 634, 656], "getdatasect": 526, "getdebugloc": 605, "getdefaultdatalayoutfortarget": [633, 634], "getdefaulttargettripl": 655, "getdirectori": [605, 656], "getdoubleti": [650, 651, 652, 653, 654, 655, 656], "getehframesect": 564, "getelementptr": [450, 464, 468, 478, 513, 514, 526, 527, 557, 560, 571, 572, 589, 605, 610, 623, 657, 666], "getelementptrinst": 589, "getelementtyp": 589, "getentryblock": [589, 654, 655, 656], "getenv": 611, "getexceptionpointerregist": 519, "getexceptionselectorregist": 519, "getexecutionsess": 634, "getfil": 573, "getfilenam": [605, 656], "getfoo": 559, "getforcurrentprocess": [573, 633, 634], "getfourdatapoint": 606, "getframeinfo": [464, 626], "getframeinstruct": 565, "getframes": 526, "getfunct": [526, 574, 589, 627, 650, 651, 652, 653, 654, 655, 656], "getfunctionlist": 589, "getfunctiontyp": 589, "getglob": 626, "getgloballist": 589, "getglobalprefix": [573, 633, 634], "getimm": 626, "getindex": 626, "getiniti": 589, "getinsertblock": [652, 653, 654, 655, 656], "getinstlist": 589, "getinstralternativemap": 541, "getinstrinfo": [464, 626], "getinstrmap": 541, "getint32ti": 467, "getjitinfo": [464, 626], "getjmp_buftyp": 467, "getkei": 589, "getkind": [552, 613], "getknownbit": 537, "getlazyresolverfunct": 626, "getlin": [605, 656], "getllvmcontext": 467, "getlock": 573, "getloopanalysisusag": 627, "getloopid": 622, "getloopinfo": 627, "getmainjitdylib": [573, 633, 634], "getmbb": 626, "getmemb": 589, "getmodul": [573, 634], "getmodulematchqu": 626, "getmyobject": 606, "getnam": [522, 589, 627, 636, 637, 649, 650, 651, 652, 653, 654, 655, 656], "getnamedoperandidx": 626, "getnamewithprefix": [635, 636, 637], "getnexttoken": [649, 650, 651, 652, 653, 654, 655, 656], "getnod": [520, 626], "getnullvalu": [589, 652, 653, 654, 655, 656], "getnumel": 589, "getnumoperand": 589, "getnumparam": 589, "getnumsuccessor": 467, "getnumvirtreg": 464, "getobjfilelow": 526, "getoffset": 626, "getop": [615, 616], "getopcod": [589, 626], "getoperand": [464, 467, 537, 589, 626], "getoperationnam": 520, "getoperatornam": [653, 654, 655, 656], "getopt": 509, "getorcreatefoo": 589, "getorcreatetypearrai": 656, "getorinsertfunct": 589, "getpar": [589, 652, 653, 654, 655, 656], "getparamtyp": 589, "getpoint": 559, "getpointers": 526, "getpointertofunct": [564, 589, 656], "getpointertonamedfunct": 564, "getpredopcod": 556, "getprocaddress": 651, "getprocesstripl": 656, "getproto": [636, 637], "getrawpoint": 555, "getrawsubclassoptionaldata": 571, "getreg": [464, 537, 626], "getregclass": 464, "getreginfo": 464, "getregisterinfo": [464, 626], "getreservedreg": 626, "getreturntyp": 589, "getscev": 563, "getscevatscop": 563, "getschedclass": 626, "getsextvalu": 589, "getsigjmp_buftyp": 467, "getsourc": 529, "getsrc": 529, "getsubtarget": 626, "getsubtargetimpl": [626, 629], "getsymboladdress": [524, 637], "getsymboladdressinprocess": [635, 636, 637], "getsymbolnam": 626, "getsymbolt": 589, "gettargetlow": 626, "gettargetmachin": [635, 636, 637, 651, 652, 653, 654, 656], "gettargettripl": [635, 636, 637], "getter": [519, 559, 605, 613], "gettermin": 589, "getthesparctarget": 626, "gettingstart": [549, 588], "gettok": [648, 649, 650, 651, 652, 653, 654, 655, 656], "gettoknam": 656, "gettokpreced": [649, 650, 651, 652, 653, 654, 655, 656], "gettyp": [467, 589], "gettypenam": 589, "getunqu": 589, "getvalu": [467, 589], "getvalueid": 571, "getvaluetyp": 626, "getvaluevt": 535, "getx86regnum": 626, "getzextvalu": 589, "gfx": 447, "gfx10": [1, 444, 445, 446], "gfx1010": 447, "gfx1011": 447, "gfx1012": 447, "gfx1030": 447, "gfx600": 447, "gfx601": 447, "gfx7": [444, 445, 446, 447], "gfx700": 447, "gfx701": 447, "gfx702": 447, "gfx703": 447, "gfx704": 447, "gfx8": [208, 210, 211, 215, 219, 221, 222, 226, 228, 444, 445, 446, 447], "gfx801": 447, "gfx802": 447, "gfx803": 447, "gfx810": 447, "gfx9": [5, 6, 7, 8, 444, 445, 446, 447], "gfx900": 447, "gfx902": 447, "gfx904": 447, "gfx906": 447, "gfx908": 447, "gfx909": 447, "ghash": 501, "ghc": [464, 559], "ghostli": 589, "giant": 591, "gicomplexoperandmatch": 536, "gicomplexpatternequiv": 536, "gid": [476, 495, 505], "gif": 561, "gigabyt": 606, "gil": 596, "ginodeequiv": 536, "gird": 447, "gisel": 525, "giselknownbit": 537, "giselknownbitsanalysi": 537, "gist": 529, "git": [462, 512, 517, 518, 524, 528, 531, 544, 553, 586, 588, 598, 619, 620], "gitattribut": 529, "github": [447, 452, 517, 528, 529, 531, 559, 585, 588, 589, 593, 594, 602, 603, 619, 620, 628, 629, 667], "gitlab": [591, 593], "give": [442, 447, 449, 450, 454, 458, 464, 466, 467, 493, 509, 510, 514, 524, 529, 533, 546, 548, 550, 559, 566, 567, 570, 571, 572, 573, 577, 587, 589, 594, 600, 605, 606, 607, 610, 613, 615, 616, 622, 624, 626, 627, 628, 629, 631, 634, 635, 648, 650, 651, 653, 655, 656, 657, 658, 659, 661, 664, 666], "given": [442, 447, 450, 451, 454, 455, 456, 457, 459, 462, 463, 464, 466, 467, 470, 472, 476, 478, 479, 481, 484, 487, 493, 497, 498, 506, 507, 509, 510, 513, 516, 519, 520, 521, 522, 524, 526, 529, 531, 533, 534, 538, 541, 543, 551, 552, 558, 559, 563, 564, 570, 573, 575, 581, 584, 587, 589, 591, 594, 596, 600, 602, 605, 606, 608, 610, 611, 613, 615, 616, 619, 623, 626, 627, 629, 631, 633, 634, 635, 636, 637, 649, 650, 651, 653, 660, 661, 664], "gladli": [529, 531], "glanc": [467, 657, 666], "glasgow": 559, "glc": [0, 2, 3, 4, 24, 25, 26, 27, 28, 31, 32, 33, 39, 40, 56, 59, 121, 122, 123, 124, 125, 131, 132, 142, 144, 205, 206, 207, 212, 213, 224, 225, 241, 244, 322, 323, 329, 330, 354, 355, 356, 357, 358, 361, 362, 363, 369, 370, 386, 389, 443, 447], "glibc": [561, 598], "glibcxx_3": 529, "gline": 625, "glob": 488, "global": [62, 94, 332, 338, 392, 426, 442, 445, 446, 450, 451, 454, 459, 460, 464, 466, 467, 468, 472, 476, 478, 484, 488, 493, 494, 495, 497, 501, 509, 510, 513, 514, 515, 519, 522, 524, 525, 526, 527, 529, 534, 536, 541, 542, 560, 561, 562, 572, 573, 574, 577, 580, 582, 585, 589, 590, 594, 597, 602, 606, 609, 610, 613, 616, 623, 626, 627, 633, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 661, 662, 665, 666], "global_atom": 447, "global_atomic_add": [0, 4], "global_atomic_add_f32": 8, "global_atomic_add_x2": [0, 4], "global_atomic_and": [0, 4], "global_atomic_and_x2": [0, 4], "global_atomic_cmpswap": [0, 4], "global_atomic_cmpswap_x2": [0, 4], "global_atomic_dec": [0, 4], "global_atomic_dec_x2": [0, 4], "global_atomic_fmax": 0, "global_atomic_fmax_x2": 0, "global_atomic_fmin": 0, "global_atomic_fmin_x2": 0, "global_atomic_inc": [0, 4], "global_atomic_inc_x2": [0, 4], "global_atomic_or": [0, 4], "global_atomic_or_x2": [0, 4], "global_atomic_pk_add_f16": 8, "global_atomic_smax": [0, 4], "global_atomic_smax_x2": [0, 4], "global_atomic_smin": [0, 4], "global_atomic_smin_x2": [0, 4], "global_atomic_sub": [0, 4], "global_atomic_sub_x2": [0, 4], "global_atomic_swap": [0, 4], "global_atomic_swap_x2": [0, 4], "global_atomic_umax": [0, 4], "global_atomic_umax_x2": [0, 4], "global_atomic_umin": [0, 4], "global_atomic_umin_x2": [0, 4], "global_atomic_xor": [0, 4], "global_atomic_xor_x2": [0, 4], "global_begin": [467, 589], "global_buff": 447, "global_context": [661, 662, 663, 664, 665], "global_empti": 589, "global_end": 589, "global_iter": 589, "global_load": 447, "global_load_dword": [0, 4], "global_load_dwordx2": [0, 4], "global_load_dwordx3": [0, 4], "global_load_dwordx4": [0, 4], "global_load_sbyt": [0, 4], "global_load_sbyte_d16": [0, 4], "global_load_sbyte_d16_hi": [0, 4], "global_load_short_d16": [0, 4], "global_load_short_d16_hi": [0, 4], "global_load_sshort": [0, 4], "global_load_ubyt": [0, 4], "global_load_ubyte_d16": [0, 4], "global_load_ubyte_d16_hi": [0, 4], "global_load_ushort": [0, 4], "global_s": 589, "global_stor": 447, "global_store_byt": [0, 4], "global_store_byte_d16_hi": [0, 4], "global_store_dword": [0, 4], "global_store_dwordx2": [0, 4], "global_store_dwordx3": [0, 4], "global_store_dwordx4": [0, 4], "global_store_short": [0, 4], "global_store_short_d16_hi": [0, 4], "globalalia": 627, "globalbuff": 447, "globaldc": 589, "globalisel": [533, 535, 536, 537, 538, 539, 542, 543, 597], "globallayoutbuild": 623, "globallisttyp": 589, "globalref": 580, "globalrefss": 580, "globalsaa": 570, "globalstreamindex": 577, "globalvar": 454, "globalvari": [527, 627, 657, 666], "globalvarnam": 559, "globl": [446, 447, 521, 572, 610], "glue": [464, 522], "gmail": 588, "gmake": [620, 627], "gmir": [533, 535, 538, 539], "gninja": [619, 629], "gno": 447, "gnu": [442, 449, 462, 464, 467, 473, 475, 476, 482, 486, 487, 494, 495, 496, 499, 501, 502, 504, 505, 506, 518, 519, 521, 525, 529, 544, 545, 546, 547, 549, 559, 598, 615, 626, 627, 655], "gnu_debuglink": 495, "gnu_hash": 605, "gnueabi": 549, "gnueabihf": [549, 550], "gnuwin32": [462, 531], "go": [445, 450, 453, 456, 458, 459, 462, 463, 464, 466, 497, 516, 517, 526, 529, 533, 539, 548, 551, 553, 559, 568, 570, 571, 573, 585, 589, 591, 597, 598, 599, 600, 605, 606, 609, 611, 616, 619, 621, 627, 628, 629, 631, 636, 637, 649, 650, 651, 652, 653, 654, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666], "goal": [442, 457, 464, 466, 467, 475, 487, 493, 514, 516, 517, 519, 527, 543, 545, 558, 562, 566, 571, 579, 603, 606, 608, 611, 613, 625, 630, 633, 654, 659, 665], "goat": 467, "goe": [451, 456, 462, 464, 513, 517, 519, 522, 524, 526, 532, 548, 553, 559, 561, 567, 570, 572, 589, 591, 594, 605, 626, 631, 651, 654, 656, 665], "gofmt": 467, "goingn": 589, "gold": [462, 464, 529, 547, 574, 600, 624], "goldberg": 526, "goldberg91": 526, "golden": 467, "gone": 634, "good": [450, 457, 458, 464, 466, 467, 468, 469, 493, 509, 510, 511, 512, 517, 520, 524, 525, 529, 532, 539, 547, 548, 551, 559, 560, 565, 567, 568, 571, 572, 587, 588, 589, 592, 594, 598, 599, 602, 605, 606, 610, 611, 615, 617, 626, 627, 650, 651, 652, 653, 654, 662, 663, 664, 665], "goodby": [566, 607], "goodwil": 466, "googl": [459, 510, 517, 518, 588, 594, 602, 603, 606, 619, 621], "googleblog": 561, "googlegroup": 561, "googleprojectzero": 606, "googletest": 472, "gori": 517, "got": [447, 464, 509, 529, 532, 559, 589, 656, 662], "goto": [467, 559, 571, 625, 652, 653, 654, 655, 656, 665], "gov": 593, "govern": 559, "gpg": 529, "gpgpu": 510, "gpl": [517, 522], "gplv2": 517, "gplv3": [517, 544], "gpr": [447, 464, 519, 533, 559, 565, 567, 615], "gpr64": 565, "gpr_idx": [232, 377], "gprc": 464, "gpu": [208, 210, 211, 219, 221, 222, 442, 444, 446, 447, 464, 510, 518, 559, 572, 613, 624, 626], "gpucc": 510, "gpz": 606, "gr": 559, "gr1": 559, "gr16": 464, "gr32": [464, 605, 615, 617], "gr64": [464, 565, 605], "gr64_nosp": 605, "gr8": [464, 626], "grab": [551, 589, 599, 613, 663, 664, 665], "gracefulli": [561, 589], "grad": 512, "gradient": 593, "gradual": [533, 539], "graduat": 517, "grain": [559, 598, 630], "grammar": [463, 520, 616, 649, 653, 660, 664], "grammat": [649, 660], "grant": [459, 517, 548, 571, 633], "granular": [447, 543, 582, 606, 611], "granulated_lds_s": 447, "granulated_wavefront_sgpr_count": 447, "granulated_workitem_vgpr_count": 447, "graph": [447, 455, 458, 461, 462, 464, 486, 497, 508, 519, 529, 534, 559, 560, 563, 584, 596, 597, 605, 615, 620, 626, 627, 628, 650, 651, 652, 653, 654, 656, 661, 662, 663, 664, 665], "graphic": [561, 563, 653, 657, 664, 666], "graphviz": [496, 587, 589, 629], "gratitud": 585, "grayscal": 593, "great": [442, 449, 464, 467, 513, 517, 524, 526, 538, 548, 568, 589, 627, 653, 658, 659, 664], "greater": [442, 446, 447, 453, 454, 456, 464, 478, 481, 497, 498, 526, 527, 534, 559, 561, 563, 571, 572, 577, 579, 584, 587, 626, 637], "greatest": 442, "greatli": [524, 528, 529, 554, 559, 589, 605, 610], "greedi": [464, 473, 509, 541], "green": [591, 594], "greenedistinguish": 594, "greenegitblam": 594, "greet": 615, "gregg": 629, "grei": [539, 599], "grep": [462, 464, 468, 487, 509, 529, 547, 591, 602, 620, 621, 655], "grid": 447, "grid_siz": 447, "griddim": 572, "gridsizei": 572, "gridsizex": 572, "gridsizez": 572, "grok": [522, 650, 661], "grokabl": 467, "grosser": 596, "ground": [465, 603], "groundwork": 595, "group": [442, 445, 447, 454, 460, 464, 467, 468, 476, 486, 487, 491, 493, 500, 501, 506, 514, 516, 517, 528, 539, 558, 568, 571, 575, 577, 587, 591, 596, 601, 611, 613, 615, 617, 620, 626, 632, 649, 657, 660, 666], "group_segment_align": 447, "group_segment_fixed_s": 447, "groupsegmentfixeds": 447, "grow": [447, 464, 465, 466, 509, 517, 557, 559, 561, 567, 589, 652, 663], "grown": [459, 589, 653, 657, 664, 666], "growth": [464, 559, 589], "grpc": 561, "grpid": 454, "grunt": 509, "gs_op_cut": [52, 139, 237, 382], "gs_op_emit": [52, 139, 237, 382], "gs_op_emit_cut": [52, 139, 237, 382], "gs_op_nop": [52, 139, 237, 382], "gt": [481, 514, 572, 615, 616], "gtcasl": 593, "gte": 559, "gtu": 572, "gtx": 572, "guarante": [450, 451, 454, 464, 467, 468, 493, 509, 513, 517, 519, 521, 522, 524, 527, 529, 538, 545, 559, 560, 570, 573, 574, 582, 587, 589, 601, 605, 606, 608, 610, 613, 623, 627, 654, 665], "guaranteedtailcallopt": 559, "guard": [467, 521, 524, 561, 563, 589, 613, 627, 633], "guard_cond": [559, 563], "guard_condit": 559, "guardedpoolalloc": 545, "guelton": 603, "guess": [462, 495, 561, 594, 651], "gui": [462, 531], "guid": [442, 449, 456, 458, 460, 462, 464, 465, 472, 510, 511, 512, 514, 516, 517, 527, 528, 529, 530, 531, 547, 549, 551, 559, 582, 588, 589, 590, 594, 597, 599, 605, 626, 632, 649, 655, 660, 667], "guidanc": [459, 467, 512, 517, 524, 577], "guidelin": [517, 550, 589, 594, 606], "gunzip": [529, 531], "gv": [559, 589], "gvn": [451, 524, 560, 627, 634, 635, 636, 637, 651, 652, 653, 654], "gvneedslazyptr": 626, "gvnhoist": 570, "gvreg": [536, 538], "gwp": 597, "gwp_asan": 545, "gwp_asan_opt": 545, "gwpasanalloc": 545, "gz": [529, 531, 550, 599, 629], "gzip": [529, 629], "h": [21, 38, 130, 208, 210, 211, 219, 221, 222, 223, 351, 368, 446, 447, 448, 453, 462, 467, 470, 472, 476, 479, 482, 486, 491, 494, 495, 496, 500, 501, 502, 504, 505, 506, 509, 516, 519, 520, 525, 526, 529, 531, 537, 544, 545, 552, 559, 561, 562, 563, 571, 572, 580, 582, 590, 596, 598, 605, 611, 613, 623, 626, 627, 628, 629, 633, 634, 635, 636, 637, 649, 650, 651, 652, 653, 654, 655, 656, 662, 663, 664, 665], "h264ref": 619, "ha": [215, 226, 228, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 456, 458, 459, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 472, 476, 477, 486, 487, 489, 491, 493, 495, 496, 497, 498, 500, 501, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 532, 533, 534, 535, 537, 538, 539, 541, 543, 545, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 570, 571, 572, 573, 574, 575, 577, 579, 580, 581, 582, 584, 585, 587, 588, 589, 591, 592, 593, 594, 595, 596, 598, 600, 601, 602, 603, 604, 605, 606, 608, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 621, 622, 623, 625, 626, 627, 628, 629, 630, 631, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 659, 660, 661, 662, 663, 664, 665, 666], "habit": [467, 587], "hac": 606, "hack": [584, 588, 591, 627, 656, 657, 658, 659, 666], "hackabl": 659, "hackathon": 568, "hacker": [512, 517], "had": [442, 447, 453, 456, 466, 478, 493, 517, 533, 559, 566, 568, 572, 589, 591, 596, 605, 607, 608, 610, 611, 627, 631], "hainan": 447, "half": [445, 447, 454, 464, 467, 481, 497, 534, 561, 566, 589, 598, 607, 626, 634], "halfton": 593, "halfwai": 559, "halt": [447, 606], "halv": 520, "han": 551, "hand": [442, 451, 464, 467, 510, 516, 526, 527, 532, 552, 555, 559, 563, 565, 570, 571, 573, 576, 587, 589, 599, 601, 606, 611, 613, 617, 626, 631, 649, 650, 651, 653, 658, 659, 660, 661, 662, 664, 666], "handi": [573, 589, 607, 650, 661], "handili": 467, "handl": [47, 115, 137, 199, 233, 347, 378, 442, 445, 446, 447, 448, 451, 453, 462, 468, 474, 489, 509, 511, 513, 517, 518, 521, 524, 525, 526, 534, 536, 538, 545, 552, 554, 555, 557, 558, 562, 563, 565, 572, 573, 574, 581, 584, 591, 596, 597, 598, 601, 603, 605, 606, 608, 610, 611, 615, 616, 625, 626, 627, 628, 633, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 659, 660, 661, 663, 664, 665, 666], "handle_extens": 627, "handleallerror": 589, "handleattr": 467, "handledefinit": [649, 650, 651, 652, 653, 654, 655, 656], "handleerror": 589, "handleextern": [649, 650, 651, 652, 653, 654, 655, 656], "handlefunctiondecl": 467, "handlelazycompilefailur": 573, "handleon": 637, "handleotherdecl": 467, "handler": [446, 451, 464, 467, 513, 519, 523, 545, 559, 573, 630, 633], "handler0": 559, "handler1": 559, "handler2": 559, "handlerpcoffset": 523, "handletoplevelexpress": [649, 650, 651, 652, 653, 654, 655, 656], "handlevardecl": 467, "hang": 534, "hao": 596, "happen": [442, 446, 447, 448, 451, 457, 458, 464, 465, 467, 468, 469, 513, 517, 523, 526, 532, 533, 534, 535, 538, 539, 554, 559, 561, 563, 564, 568, 570, 571, 573, 577, 582, 587, 588, 589, 591, 592, 594, 605, 606, 608, 609, 610, 613, 627, 631, 634, 649, 650, 651, 652, 656, 660, 661, 662, 663], "happi": [588, 589, 590, 591, 654, 665], "happili": 651, "har": 590, "harass": 465, "hard": [458, 464, 467, 495, 517, 519, 522, 524, 532, 547, 549, 550, 559, 584, 586, 588, 590, 594, 605, 611, 614, 617, 631, 653, 655, 659, 664], "hardcod": [554, 556, 626], "hardcodedsmalls": 589, "harddriv": 547, "harden": [545, 559, 569, 597, 603], "harder": [467, 522, 559, 561, 587, 606, 610, 611, 619, 649, 660], "hardwar": [46, 136, 231, 376, 442, 447, 451, 462, 464, 466, 474, 487, 493, 510, 517, 524, 560, 569, 572, 602, 606, 626], "hardwareassistedaddresssanit": 569, "hardwareloop": 559, "harfbuzz": 561, "harm": [464, 467], "harmless": [548, 587], "harri": 593, "harvard": 559, "has_asmpars": 558, "has_asmprint": 558, "has_disassembl": 558, "has_jit": 558, "hasactivevectorlength": 559, "hasadsizeprefix": 617, "hasard": 526, "hasconflictingtyp": 577, "hasctrldep": [615, 617], "hasdelayslot": 617, "haserror": 600, "hasexternallinkag": 589, "hasfp": 626, "hasfparmv8": 617, "hasgc": 571, "hash": [447, 450, 464, 470, 481, 497, 500, 501, 514, 517, 518, 559, 561, 571, 575, 582, 584, 585, 589, 591, 619, 631, 657, 666], "hash_data_count": 605, "hash_funct": 605, "hash_map": 589, "hash_set": 589, "hashadjbufferlength": 584, "hashadjbufferoffset": 584, "hashauxstreamindex": 584, "hashbufferlength": 584, "hashdata": 605, "hashes_count": 605, "hashfunctiontyp": 605, "hashkeys": 584, "hashstreamindex": 584, "hashtbl": [660, 661, 662, 663, 664, 665], "hashvaluebufferlength": 584, "hashvaluebufferoffset": 584, "hasiniti": 589, "hasinternallinkag": 589, "hasjit": 626, "haskel": [559, 657, 666], "hasn": [466, 527, 589, 603, 627], "hasnam": 589, "hasoneus": 467, "hasopsizeprefix": 617, "hasrex_wprefix": 617, "hassideeffect": [493, 617], "hassse2": 615, "hassse3": 615, "haswel": 487, "hat": 631, "hatsiz": 631, "have": [46, 52, 94, 109, 136, 139, 195, 231, 237, 292, 338, 376, 382, 426, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 472, 476, 478, 481, 484, 487, 493, 494, 495, 497, 506, 507, 509, 510, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 528, 529, 531, 532, 533, 534, 535, 536, 538, 539, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 582, 584, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 610, 611, 613, 614, 615, 616, 617, 620, 621, 622, 624, 626, 627, 628, 629, 630, 631, 633, 634, 635, 636, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666], "haveactivevectorlength": 595, "haven": [467, 531, 535, 559, 603, 626, 627, 628, 629, 636, 637], "havoq": 593, "hawaii": 447, "hazard": [560, 606], "hblcnsviw": 509, "hd": [447, 510], "hd2xxx": 447, "hd6xxx": 447, "hdl": 513, "head": [449, 467, 512, 526, 529, 532, 542, 559, 566, 588, 591, 607, 615, 616], "headach": 599, "header": [451, 454, 462, 480, 489, 495, 496, 497, 500, 501, 505, 509, 510, 516, 517, 518, 521, 522, 523, 524, 528, 529, 531, 537, 550, 552, 558, 559, 563, 564, 565, 576, 587, 589, 590, 598, 600, 608, 613, 620, 622, 626, 628, 629, 633, 635, 652, 653, 654, 655, 656, 663, 664, 665, 668], "header0": 559, "header_data": 605, "header_data_len": 605, "headerblock": 585, "headerdata": 605, "headers": 584, "headlight": 467, "heal": 523, "heap": [450, 545, 559, 560, 597, 602, 604, 606, 608, 610, 631, 654, 657, 665, 666], "heard": [510, 518, 592], "heart": [479, 610], "heartble": 561, "heartfelt": 585, "heartwal": 593, "heavi": [589, 610, 634], "heavili": [447, 497, 526, 589, 605, 606, 624, 657, 666], "heavyweight": 589, "heffernan": 510, "held": [442, 453, 517, 559, 588], "hello": [463, 514, 529, 531, 559, 598, 613, 615, 659], "hello_world": 447, "hellooooooooooooooo": 545, "helloworld": [463, 549], "help": [442, 446, 447, 448, 450, 451, 453, 457, 458, 459, 460, 462, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 482, 485, 486, 487, 488, 490, 491, 493, 494, 495, 496, 498, 500, 501, 502, 504, 505, 506, 507, 508, 513, 516, 517, 518, 520, 524, 526, 529, 530, 538, 539, 545, 546, 547, 548, 551, 553, 555, 558, 559, 561, 562, 567, 570, 588, 591, 592, 593, 594, 599, 601, 602, 603, 605, 606, 607, 609, 610, 611, 615, 617, 619, 621, 627, 629, 630, 631, 633, 655, 656, 657, 659, 666], "helper": [450, 467, 472, 509, 511, 525, 545, 559, 564, 571, 574, 589, 595, 605, 613, 621, 626, 649, 650, 651, 652, 653, 654, 655, 656, 659, 660, 661, 664, 665], "henc": [447, 467, 509, 513, 529, 559, 562, 608, 616], "henceforth": [580, 584, 604], "henderson": 594, "henderson2002": 526, "hendersonprefix": 594, "henrik": 611, "her": 571, "here": [0, 1, 2, 3, 4, 5, 6, 7, 8, 44, 45, 135, 229, 230, 374, 375, 442, 445, 446, 447, 449, 450, 451, 457, 458, 462, 463, 464, 467, 468, 475, 476, 493, 497, 498, 509, 510, 514, 515, 517, 518, 519, 522, 524, 526, 527, 528, 529, 531, 532, 533, 537, 539, 545, 546, 547, 548, 549, 551, 552, 554, 556, 559, 560, 561, 562, 563, 564, 565, 568, 570, 571, 572, 573, 576, 577, 582, 585, 588, 589, 591, 594, 598, 601, 602, 604, 605, 606, 608, 610, 611, 613, 614, 615, 616, 617, 619, 620, 622, 624, 626, 627, 629, 630, 631, 633, 634, 635, 636, 637, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 660, 661, 662, 663, 664, 665, 666, 668], "herebi": 467, "hertz": 630, "heterog": 442, "heterogen": [447, 624], "heurist": [464, 559, 587, 598, 622, 628, 630, 654, 665], "hex": [468, 493, 494, 495, 496, 497, 500, 501, 502, 559, 561], "hex16": 631, "hex32": 631, "hex64": 631, "hex8": 631, "hex_numb": 447, "hex_valu": 487, "hexadecim": [446, 447, 475, 491, 494, 497, 500, 501, 502, 504, 509, 559, 615, 631], "hexagon": [464, 529, 559, 594, 613], "hexidecim": 447, "hexinteg": 616, "hfc": 523, "hh": 446, "hh567368": 467, "hi": [446, 526, 533, 561, 562, 589], "hi16": 464, "hidden": [442, 447, 454, 464, 467, 471, 481, 495, 509, 555, 557, 559, 577, 589, 591, 598, 605, 622, 623, 627], "hidden_completion_act": 447, "hidden_default_queu": 447, "hidden_global_offset_i": 447, "hidden_global_offset_x": 447, "hidden_global_offset_z": 447, "hidden_hostcall_buff": 447, "hidden_multigrid_sync_arg": 447, "hidden_non": 447, "hidden_printf_buff": 447, "hiddencompletionact": 447, "hiddendefaultqueu": 447, "hiddenglobaloffseti": 447, "hiddenglobaloffsetx": 447, "hiddenglobaloffsetz": 447, "hiddenhostcallbuff": 447, "hiddenmultigridsyncarg": 447, "hiddennon": 447, "hiddenprintfbuff": 447, "hide": [487, 513, 591, 610], "hideaki": 464, "hierarch": [454, 516, 587, 596], "hierarchi": [472, 493, 520, 529, 553, 559, 596, 597, 623, 650], "hiet": 603, "high": [0, 3, 4, 109, 215, 226, 228, 441, 442, 446, 447, 449, 450, 452, 454, 459, 466, 493, 497, 510, 512, 513, 515, 517, 518, 519, 520, 522, 524, 526, 527, 528, 534, 545, 548, 551, 564, 568, 570, 571, 572, 573, 581, 584, 587, 589, 590, 597, 605, 610, 615, 621, 622, 623, 625, 626, 628, 630, 632, 635, 654, 657, 658, 665, 666], "higher": [442, 446, 447, 450, 456, 462, 464, 466, 487, 517, 525, 528, 531, 539, 559, 569, 570, 574, 587, 589, 608, 610, 622, 625, 633, 635, 649, 657, 660, 666], "highest": [442, 447, 453, 534, 559, 649, 650, 651, 652, 653, 654, 655, 656, 660, 661, 662, 663, 664, 665], "highli": [447, 464, 466, 510, 517, 524, 526, 548, 559, 561, 568, 589, 590, 602, 606, 622, 635, 654, 665], "highlight": [463, 464, 493, 514, 524, 529, 533, 566, 589, 607, 613, 629, 650, 656], "highproduct": 593, "hihihi": 589, "him": 571, "hint": [458, 467, 496, 506, 524, 527, 598, 622, 650, 661], "hip": [442, 447], "hipe": [464, 559], "hiraditya": 593, "histogram": [492, 493, 500, 501, 593], "histor": [449, 463, 467, 527, 559, 589, 610, 621], "histori": [517, 529, 532, 585, 588], "hit": [455, 493, 561, 570, 589, 606, 636, 637], "hitherto": 454, "hmmer": 619, "hoc": [442, 464, 587, 589], "hoist": [447, 450, 451, 467, 554, 559, 563, 570, 587, 589, 608, 622, 627], "hoistcommoncodeinsucc": 554, "hold": [442, 446, 447, 449, 464, 465, 509, 517, 519, 521, 526, 529, 558, 559, 561, 564, 565, 571, 584, 587, 589, 590, 596, 600, 602, 605, 606, 613, 615, 617, 621, 626, 627, 630, 648, 649, 650, 651, 652, 653, 654, 655, 656, 660, 661, 662, 663, 664, 665], "holder": [442, 517], "hole": [509, 559, 592, 606, 610], "holidai": 466, "hollow": 631, "home": [515, 524, 529, 547, 589, 593, 605, 620, 621], "homeless": 589, "homepag": [529, 531], "honour": 521, "hood": 514, "hook": [442, 451, 458, 464, 519, 535, 559, 588, 590, 591, 598, 652], "hope": [466, 517, 526, 571, 586], "hopefulli": [450, 454, 467, 509, 510, 587, 627, 634, 651, 662], "horizont": [468, 493, 559], "hork": 615, "horn": 606, "horribl": 650, "host": [447, 449, 460, 462, 464, 467, 474, 476, 482, 487, 493, 517, 526, 528, 548, 550, 559, 564, 572, 573, 588, 589, 591, 593, 603, 619, 621, 633, 655, 656], "host_fn": 510, "host_install_dir": 549, "host_onli": 510, "hosta": 572, "hostb": 572, "hostc": 572, "hostcal": 447, "hostnam": 619, "hot": [455, 524, 559, 600, 606, 610], "hotfix": 591, "hotspot3d": 593, "hotter": 455, "hottest": [498, 559], "hour": [449, 466, 532, 601], "how": [52, 139, 237, 382, 442, 445, 447, 451, 452, 453, 454, 455, 456, 458, 459, 460, 462, 463, 467, 468, 471, 472, 479, 497, 506, 509, 510, 513, 514, 515, 516, 517, 518, 519, 520, 524, 526, 528, 529, 530, 531, 532, 538, 540, 558, 559, 560, 563, 565, 566, 570, 572, 574, 577, 585, 587, 588, 589, 590, 591, 592, 594, 596, 597, 601, 606, 608, 610, 614, 615, 616, 617, 620, 621, 622, 623, 624, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667], "howev": [442, 447, 448, 450, 451, 453, 454, 458, 463, 464, 466, 467, 468, 472, 476, 493, 509, 510, 513, 516, 517, 519, 521, 522, 523, 526, 527, 529, 533, 535, 538, 544, 550, 551, 552, 554, 556, 557, 558, 559, 561, 563, 564, 565, 566, 573, 576, 584, 586, 588, 589, 591, 592, 594, 596, 604, 605, 606, 607, 608, 609, 610, 611, 613, 615, 617, 620, 621, 623, 625, 627, 635, 650, 651, 652, 653, 654, 657, 662, 663, 664, 665, 666], "howto": [550, 566, 607, 613, 667], "howtosubmitabug": 529, "howtousejit": 480, "howtouselljit": 573, "hpc": 442, "hpgmg": 593, "hpp": 519, "hresult": 584, "hrf": 447, "hsa": 442, "hsatext": 447, "hsl": 593, "ht206167": 561, "htm": 593, "html": [462, 467, 481, 487, 514, 520, 529, 549, 550, 551, 561, 563, 572, 588, 591, 593, 594, 595, 599, 600, 606, 613, 619, 620, 633], "hton": 637, "http": [452, 462, 466, 467, 489, 491, 495, 496, 502, 504, 505, 514, 525, 528, 529, 531, 532, 546, 549, 550, 551, 552, 559, 561, 563, 588, 591, 593, 594, 595, 599, 602, 606, 619, 620, 628, 633, 634, 635, 636, 637, 667], "huge": [467, 517, 529, 561, 576, 584, 613, 617, 621], "huge16": 576, "hugepoint": 584, "human": [461, 465, 467, 477, 478, 481, 485, 486, 490, 492, 498, 506, 529, 545, 559, 565, 587, 606, 617, 627, 631], "hundr": 524, "hundt": 510, "hung": 589, "hunger": 666, "hunt": 603, "hurdl": 522, "hurt": 467, "hw": [447, 559], "hw_reg_flat_scr_hi": 46, "hw_reg_flat_scr_lo": 46, "hw_reg_gpr_alloc": [46, 136, 231, 376], "hw_reg_hw_id": [46, 136, 231, 376], "hw_reg_ib_st": [46, 136, 231, 376], "hw_reg_lds_alloc": [46, 136, 231, 376], "hw_reg_mod": [46, 136, 231, 376], "hw_reg_pops_pack": 46, "hw_reg_sh_mem_bas": [46, 376], "hw_reg_statu": [46, 136, 231, 376], "hw_reg_tba_hi": 46, "hw_reg_tba_lo": 46, "hw_reg_tma_hi": 46, "hw_reg_tma_lo": 46, "hw_reg_trapst": [46, 136, 231, 376], "hw_reg_xnack_mask": 46, "hwaddresssanit": 559, "hwreg": [0, 2, 3, 4], "hwreg_enc": [46, 136, 231, 376], "hybrid": 606, "hydra": 449, "hydro": 593, "hyper": 594, "hypersparc": 626, "hyphen": 626, "hypothes": 580, "hypothet": [464, 519, 533, 571, 573, 581, 589, 610, 627], "h\u00e4hnle": 594, "h\u00e4hnledistinguish": 594, "i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 14, 17, 21, 23, 24, 25, 26, 27, 28, 31, 32, 33, 38, 39, 40, 44, 45, 47, 48, 52, 55, 56, 58, 59, 61, 64, 82, 94, 96, 109, 110, 111, 112, 120, 121, 122, 123, 124, 125, 130, 131, 132, 135, 137, 139, 141, 142, 144, 146, 147, 167, 195, 196, 204, 205, 206, 207, 212, 213, 215, 223, 224, 225, 226, 228, 229, 230, 232, 233, 237, 241, 243, 244, 246, 247, 266, 292, 293, 298, 303, 313, 322, 323, 324, 329, 330, 338, 344, 351, 353, 354, 355, 356, 357, 358, 361, 362, 363, 368, 369, 370, 374, 375, 377, 378, 382, 385, 386, 388, 389, 394, 413, 426, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 465, 468, 469, 470, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 519, 520, 521, 523, 525, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 579, 580, 581, 582, 584, 585, 586, 587, 588, 589, 590, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 604, 607, 608, 609, 610, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 628, 629, 630, 632, 633, 634, 635, 636, 637, 648, 649, 650, 651, 652, 653, 655, 657, 658, 659, 660, 661, 662, 663, 664, 666, 667], "i0": 626, "i1": [455, 464, 513, 522, 523, 533, 559, 563, 570, 572, 605, 622, 623, 626, 650, 652, 654, 661, 663, 665], "i16": [0, 3, 4, 446, 464, 554, 559, 572, 598, 626], "i16x2": [1, 7, 8], "i17": 533, "i1942652": 559, "i2": [464, 559, 563, 626], "i20": 559, "i24": 559, "i256": 559, "i29": 559, "i3": [464, 626], "i32": [0, 1, 2, 3, 4, 7, 8, 446, 453, 455, 456, 464, 468, 513, 514, 519, 522, 523, 526, 533, 534, 535, 537, 538, 554, 556, 557, 559, 563, 565, 566, 571, 572, 587, 589, 605, 607, 608, 610, 617, 621, 623, 626, 628, 654, 657, 665, 666], "i32imm": [615, 626], "i32mem": 615, "i32x16": 8, "i32x32": 8, "i32x4": 8, "i386": [464, 495, 506, 559, 602], "i4": [559, 626], "i48": 559, "i4x8": [1, 7, 8], "i5": 626, "i6": 626, "i64": [0, 2, 3, 4, 446, 453, 456, 464, 468, 513, 514, 527, 559, 572, 608, 610, 617, 623, 626], "i64imm": 626, "i65": 559, "i67": 559, "i686": [464, 468, 602, 621], "i7": [546, 559, 626], "i8": [451, 453, 464, 468, 513, 514, 519, 526, 533, 535, 554, 557, 559, 570, 572, 598, 605, 608, 610, 617, 623, 626], "i8086": 655, "i8mem": 464, "i8x4": [1, 7, 8], "iN": [451, 559], "i_intr_llvm_ptrmask": 534, "ia": 511, "iaca": 493, "iaddroff": 464, "iamcu": 495, "ibm": 516, "ic": [458, 529, 560, 594], "icc": [529, 605, 625], "icc_": 626, "icc_g": 626, "icc_n": 626, "icc_val": 626, "iceland": 447, "icmp": [454, 513, 523, 563, 589, 605], "icmp_eq": 565, "icmpinst": 589, "icon": 588, "iconst": [87, 158, 163, 166, 171, 173, 270, 417], "icu": 561, "id": [46, 52, 136, 139, 231, 237, 376, 382, 442, 445, 450, 462, 463, 464, 468, 487, 493, 495, 496, 497, 521, 531, 552, 565, 571, 572, 577, 589, 591, 598, 602, 608, 610, 616, 626, 627, 629, 630, 649, 650, 651, 652, 653, 654, 655, 656, 659, 660, 661, 662, 663, 664, 665], "idata": 494, "idea": [449, 454, 455, 467, 493, 509, 513, 516, 517, 519, 520, 524, 532, 547, 559, 568, 571, 587, 593, 594, 599, 605, 606, 615, 629, 633, 649, 650, 651, 652, 654, 657, 658, 660, 661, 662, 663, 665, 666], "ideal": [493, 517, 532, 558, 561, 568, 589, 610, 626], "ident": [442, 447, 449, 453, 464, 465, 467, 468, 476, 483, 513, 526, 538, 550, 554, 559, 560, 565, 571, 577, 584, 587, 589, 601, 605, 613, 621, 623, 629, 651, 652, 654, 659, 660, 661, 662, 663, 664, 665], "ident_t": 559, "identif": [529, 550, 559, 605], "identifi": [52, 139, 237, 382, 442, 454, 458, 459, 461, 462, 464, 465, 466, 467, 468, 472, 493, 509, 513, 516, 519, 521, 527, 539, 545, 552, 554, 560, 565, 567, 572, 577, 582, 584, 587, 589, 591, 594, 596, 599, 600, 605, 606, 608, 610, 613, 616, 622, 623, 625, 626, 627, 628, 633, 634, 635, 636, 637, 648, 649, 650, 651, 652, 653, 654, 655, 656, 659, 660, 661, 662, 663, 664, 665], "identifierexpr": [649, 650, 651, 652, 653, 654, 655, 656, 660, 661, 662, 663, 664, 665], "identifierstr": [648, 649, 650, 651, 652, 653, 654, 655, 656], "identifycudaprefer": 510, "identitytransform": 634, "idiom": [509, 510, 513, 552, 589, 596, 606, 650, 661], "idiomat": [467, 589, 596, 621], "idiv": 464, "idnam": [649, 650, 651, 652, 653, 654, 655, 656], "idx": [467, 487, 527, 559, 565, 629, 650, 651, 652, 653, 654, 655, 656], "idx0": 559, "idx1": [527, 559], "idx2": 527, "idx3": 527, "idxen": [0, 2, 3, 4, 8, 14, 112, 196, 313, 344, 447], "idxmask": 559, "ie": [509, 559, 570], "ieee": [447, 473, 510, 524, 534, 559, 613], "ieee754": 559, "ieee_mod": 447, "if_1_then": 447, "ifbodi": 616, "ifcond": [652, 653, 654, 655, 656, 663, 664, 665], "ifcont": [652, 653, 654, 655, 656, 663, 664, 665], "ifconvers": 626, "ifconvert": 626, "ifdef": [509, 510, 514, 545, 561, 611, 616, 651, 652, 653, 654, 655, 656, 657, 666], "ifequ": 559, "ifexpr": [652, 653, 654, 655, 656, 663, 664, 665], "ifexprast": [652, 653, 654, 655, 656, 663], "iff": [538, 559], "iffals": 559, "ific": 509, "ifloc": 656, "ifndef": [510, 633, 634, 635, 636, 637], "ifstream": 572, "iftmp": [652, 653, 654, 655, 656, 663, 664, 665], "iftru": 559, "ifunc": 454, "ifuncti": 559, "ifunequ": 559, "ignor": [21, 38, 130, 141, 223, 351, 368, 442, 446, 447, 450, 454, 455, 464, 468, 475, 476, 478, 481, 483, 484, 486, 487, 489, 492, 493, 495, 496, 497, 502, 504, 505, 509, 513, 516, 517, 523, 528, 529, 532, 558, 559, 561, 567, 571, 577, 582, 589, 594, 605, 622, 625, 626, 634, 648, 649, 650, 651, 652, 653, 654, 655, 656, 659, 660, 661, 662, 663, 664, 665], "ignore_crash": 561, "ignore_oom": 561, "ignore_remaining_arg": 525, "ignore_timeout": 561, "ihex": 495, "ii": [559, 589], "ii32": 615, "il": 497, "ilbdc": 593, "ill": [442, 476, 545, 559], "illeg": [112, 442, 447, 464, 509, 522, 527, 538, 539, 559, 572, 587, 589, 591, 610, 625], "illinoi": [517, 593], "illustr": [447, 453, 506, 509, 513, 516, 559, 562, 563, 589, 591, 605, 627, 648, 649, 650, 654, 659, 660, 661, 662, 665], "ilp": [493, 598, 625], "ilp32": [657, 666], "im": 559, "imac": 625, "imag": [17, 27, 28, 29, 30, 41, 42, 43, 61, 64, 115, 124, 125, 126, 133, 134, 146, 147, 199, 212, 213, 214, 215, 226, 227, 228, 246, 247, 347, 357, 358, 359, 360, 371, 372, 373, 391, 394, 445, 446, 464, 492, 494, 495, 496, 497, 521, 559, 564, 582, 613, 653, 664], "image_atomic_add": [0, 2, 3, 4], "image_atomic_and": [0, 2, 3, 4], "image_atomic_cmpswap": [0, 2, 3, 4], "image_atomic_dec": [0, 2, 3, 4], "image_atomic_inc": [0, 2, 3, 4], "image_atomic_or": [0, 2, 3, 4], "image_atomic_smax": [0, 2, 3, 4], "image_atomic_smin": [0, 2, 3, 4], "image_atomic_sub": [0, 2, 3, 4], "image_atomic_swap": [0, 2, 3, 4], "image_atomic_umax": [0, 2, 3, 4], "image_atomic_umin": [0, 2, 3, 4], "image_atomic_xor": [0, 2, 3, 4], "image_comdat_select_associ": 559, "image_comdat_select_largest": 559, "image_debug_directori": 582, "image_debug_type_codeview": 582, "image_debug_type_except": 577, "image_debug_type_fixup": 577, "image_debug_type_fpo": 577, "image_debug_type_omap_from_src": 577, "image_debug_type_omap_to_src": 577, "image_file_32bit_machin": 668, "image_file_aggressive_ws_trim": 668, "image_file_bytes_reversed_hi": 668, "image_file_bytes_reversed_lo": 668, "image_file_debug_strip": 668, "image_file_dl": 668, "image_file_executable_imag": 668, "image_file_large_address_awar": 668, "image_file_line_nums_strip": 668, "image_file_local_syms_strip": 668, "image_file_machine_am33": 668, "image_file_machine_amd64": 668, "image_file_machine_arm": 668, "image_file_machine_arm64": 668, "image_file_machine_armnt": 668, "image_file_machine_ebc": 668, "image_file_machine_i386": 668, "image_file_machine_ia64": 668, "image_file_machine_m32r": 668, "image_file_machine_mips16": 668, "image_file_machine_mipsfpu": 668, "image_file_machine_mipsfpu16": 668, "image_file_machine_powerpc": 668, "image_file_machine_powerpcfp": 668, "image_file_machine_r4000": 668, "image_file_machine_sh3": 668, "image_file_machine_sh3dsp": 668, "image_file_machine_sh4": 668, "image_file_machine_sh5": 668, "image_file_machine_thumb": 668, "image_file_machine_unknown": 668, "image_file_machine_wcemipsv2": 668, "image_file_net_run_from_swap": 668, "image_file_relocs_strip": 668, "image_file_removable_run_from_swap": 668, "image_file_system": 668, "image_file_up_system_onli": 668, "image_gather4": [0, 2, 3, 4, 41, 133, 226, 371], "image_gather4_b": [0, 2, 3, 4], "image_gather4_b_cl": [0, 2, 3, 4], "image_gather4_b_cl_o": [0, 2, 3, 4], "image_gather4_b_o": [0, 2, 3, 4], "image_gather4_c": [0, 2, 3, 4], "image_gather4_c_b": [0, 2, 3, 4], "image_gather4_c_b_cl": [0, 2, 3, 4], "image_gather4_c_b_cl_o": [0, 2, 3, 4], "image_gather4_c_b_o": [0, 2, 3, 4], "image_gather4_c_cl": [0, 2, 3, 4], "image_gather4_c_cl_o": [0, 2, 3, 4], "image_gather4_c_l": [0, 2, 3, 4], "image_gather4_c_l_o": [0, 2, 3, 4], "image_gather4_c_lz": [0, 2, 3, 4], "image_gather4_c_lz_o": [0, 2, 3, 4], "image_gather4_c_o": [0, 2, 3, 4], "image_gather4_cl": [0, 2, 3, 4], "image_gather4_cl_o": [0, 2, 3, 4], "image_gather4_l": [0, 2, 3, 4], "image_gather4_l_o": [0, 2, 3, 4], "image_gather4_lz": [0, 2, 3, 4], "image_gather4_lz_o": [0, 2, 3, 4], "image_gather4_o": [0, 2, 3, 4], "image_get_lod": [0, 2, 3, 4], "image_get_resinfo": [0, 2, 3, 4], "image_load": [0, 2, 3, 4], "image_load_mip": [0, 2, 3, 4], "image_load_mip_pck": [0, 2, 3, 4], "image_load_mip_pck_sgn": [0, 2, 3, 4], "image_load_pck": [0, 2, 3, 4], "image_load_pck_sgn": [0, 2, 3, 4], "image_rel_amd64_addr32nb": 521, "image_rel_amd64_secrel": 521, "image_rel_amd64_sect": 521, "image_rel_arm64_secrel_high12a": 521, "image_rel_arm64_secrel_low12a": 521, "image_rel_arm64_secrel_low12l": 521, "image_rel_i386_dir32nb": 521, "image_rel_i386_secrel": 521, "image_rel_i386_sect": 521, "image_sampl": [0, 2, 3, 4], "image_sample_b": [0, 2, 3, 4], "image_sample_b_cl": [0, 2, 3, 4], "image_sample_b_cl_o": [0, 2, 3, 4], "image_sample_b_o": [0, 2, 3, 4], "image_sample_c": [0, 2, 3, 4], "image_sample_c_b": [0, 2, 3, 4], "image_sample_c_b_cl": [0, 2, 3, 4], "image_sample_c_b_cl_o": [0, 2, 3, 4], "image_sample_c_b_o": [0, 2, 3, 4], "image_sample_c_cd": [0, 2, 3, 4], "image_sample_c_cd_cl": [0, 2, 3, 4], "image_sample_c_cd_cl_o": [0, 2, 3, 4], "image_sample_c_cd_o": [0, 2, 3, 4], "image_sample_c_cl": [0, 2, 3, 4], "image_sample_c_cl_o": [0, 2, 3, 4], "image_sample_c_d": [0, 2, 3, 4], "image_sample_c_d_cl": [0, 2, 3, 4], "image_sample_c_d_cl_o": [0, 2, 3, 4], "image_sample_c_d_o": [0, 2, 3, 4], "image_sample_c_l": [0, 2, 3, 4], "image_sample_c_l_o": [0, 2, 3, 4], "image_sample_c_lz": [0, 2, 3, 4], "image_sample_c_lz_o": [0, 2, 3, 4], "image_sample_c_o": [0, 2, 3, 4], "image_sample_cd": [0, 2, 3, 4], "image_sample_cd_cl": [0, 2, 3, 4], "image_sample_cd_cl_o": [0, 2, 3, 4], "image_sample_cd_o": [0, 2, 3, 4], "image_sample_cl": [0, 2, 3, 4], "image_sample_cl_o": [0, 2, 3, 4], "image_sample_d": [0, 2, 3, 4], "image_sample_d_cl": [0, 2, 3, 4], "image_sample_d_cl_o": [0, 2, 3, 4], "image_sample_d_o": [0, 2, 3, 4], "image_sample_l": [0, 2, 3, 4], "image_sample_l_o": [0, 2, 3, 4], "image_sample_lz": [0, 2, 3, 4], "image_sample_lz_o": [0, 2, 3, 4], "image_sample_o": [0, 2, 3, 4], "image_scn_align_1024byt": 668, "image_scn_align_128byt": 668, "image_scn_align_16byt": 668, "image_scn_align_1byt": 668, "image_scn_align_2048byt": 668, "image_scn_align_256byt": 668, "image_scn_align_2byt": 668, "image_scn_align_32byt": 668, "image_scn_align_4096byt": 668, "image_scn_align_4byt": 668, "image_scn_align_512byt": 668, "image_scn_align_64byt": 668, "image_scn_align_8192byt": 668, "image_scn_align_8byt": 668, "image_scn_cnt_cod": [495, 668], "image_scn_cnt_initialized_data": [495, 521, 668], "image_scn_cnt_uninitialized_data": [495, 521, 668], "image_scn_gprel": 668, "image_scn_lnk_comdat": 668, "image_scn_lnk_info": [494, 668], "image_scn_lnk_nreloc_ovfl": 668, "image_scn_lnk_oth": 668, "image_scn_lnk_remov": [495, 521, 668], "image_scn_mem_16bit": 668, "image_scn_mem_discard": [495, 521, 668], "image_scn_mem_execut": [495, 668], "image_scn_mem_lock": 668, "image_scn_mem_not_cach": 668, "image_scn_mem_not_pag": 668, "image_scn_mem_preload": 668, "image_scn_mem_purg": 668, "image_scn_mem_read": [495, 668], "image_scn_mem_shar": [495, 668], "image_scn_mem_writ": [495, 668], "image_scn_type_no_pad": 668, "image_section_head": 577, "image_stor": [0, 2, 3, 4, 29, 30, 126, 214, 215, 359, 360], "image_store_mip": [0, 2, 3, 4], "image_store_mip_pck": [0, 2, 3, 4], "image_store_pck": [0, 2, 3, 4], "image_sym_class_argu": 668, "image_sym_class_automat": 668, "image_sym_class_bit_field": 668, "image_sym_class_block": 668, "image_sym_class_clr_token": 668, "image_sym_class_end_of_funct": 668, "image_sym_class_end_of_struct": 668, "image_sym_class_enum_tag": 668, "image_sym_class_extern": 668, "image_sym_class_external_def": 668, "image_sym_class_fil": 668, "image_sym_class_funct": 668, "image_sym_class_label": 668, "image_sym_class_member_of_enum": 668, "image_sym_class_member_of_struct": 668, "image_sym_class_member_of_union": 668, "image_sym_class_nul": 668, "image_sym_class_regist": 668, "image_sym_class_register_param": 668, "image_sym_class_sect": 668, "image_sym_class_stat": 668, "image_sym_class_struct_tag": 668, "image_sym_class_type_definit": 668, "image_sym_class_undefined_label": 668, "image_sym_class_undefined_stat": 668, "image_sym_class_union_tag": 668, "image_sym_class_weak_extern": 668, "image_sym_dtype_arrai": 668, "image_sym_dtype_funct": 668, "image_sym_dtype_nul": 668, "image_sym_dtype_point": 668, "image_sym_type_byt": 668, "image_sym_type_char": 668, "image_sym_type_doubl": 668, "image_sym_type_dword": 668, "image_sym_type_enum": 668, "image_sym_type_float": 668, "image_sym_type_int": 668, "image_sym_type_long": 668, "image_sym_type_mo": 668, "image_sym_type_nul": 668, "image_sym_type_short": 668, "image_sym_type_struct": 668, "image_sym_type_uint": 668, "image_sym_type_union": 668, "image_sym_type_void": 668, "image_sym_type_word": 668, "imagick": 593, "imagin": [571, 573, 605], "imaginari": 539, "imagmag": [653, 664], "imagstart": [653, 664], "imask": [3, 4], "imbu": 628, "imcp": 559, "imgrel": 521, "imit": [566, 607, 616], "imm": [464, 468, 493, 496, 497, 567, 615, 626], "imm16": [0, 2, 3, 4], "imm3": [0, 3, 4], "imm32": [0, 2, 3, 4, 464], "imm_eq0": 617, "immarg": [454, 520, 559], "immateri": 571, "immedi": [55, 385, 442, 445, 447, 450, 451, 454, 461, 464, 467, 468, 481, 487, 493, 496, 497, 513, 519, 520, 521, 522, 533, 534, 535, 536, 538, 554, 559, 561, 564, 567, 570, 572, 573, 577, 581, 587, 589, 591, 594, 598, 601, 605, 606, 608, 610, 615, 626, 630, 635, 636, 637, 651, 654, 657, 662, 665, 666], "immediatepar": 559, "immigr": 465, "immin": 551, "immleaf": 536, "immsext16": 464, "immsubreg": 626, "immt": 617, "immtyp": 617, "immtypebit": 617, "immun": 606, "immut": [555, 559, 589, 616, 622, 627], "immutablepass": 450, "impact": [447, 460, 461, 463, 466, 467, 493, 524, 526, 545, 554, 559, 589, 593, 594, 596, 598, 605, 606], "imped": 559, "imper": [467, 526, 605, 652, 654, 663, 665], "impl": [508, 589, 627, 636, 637], "implement": [442, 447, 448, 451, 460, 461, 463, 466, 468, 472, 473, 476, 479, 493, 495, 500, 501, 505, 508, 509, 510, 513, 515, 517, 519, 520, 521, 525, 527, 528, 529, 534, 535, 536, 538, 540, 544, 545, 552, 557, 558, 560, 561, 563, 567, 570, 572, 576, 584, 587, 588, 589, 591, 592, 594, 595, 597, 598, 599, 602, 605, 608, 609, 610, 613, 616, 623, 624, 628, 629, 630, 631, 633, 634, 635, 636, 637, 648, 650, 651, 652, 653, 654, 655, 656, 658, 659, 661, 662, 663, 664, 665], "implementor": [526, 617, 651, 652, 662, 663], "impli": [11, 92, 180, 277, 310, 337, 424, 442, 443, 444, 447, 450, 464, 468, 472, 496, 497, 506, 509, 510, 517, 519, 526, 527, 559, 561, 563, 570, 577, 589, 591, 594, 598, 608, 611, 616, 626], "implic": [461, 464, 563, 577, 591, 602, 606], "implicit": [464, 467, 468, 519, 534, 559, 563, 565, 589, 597, 598, 605, 606, 613, 615, 616, 626, 629, 652, 663], "implicit_def": [554, 598], "implicitarg": 447, "implicitcod": 605, "implicitdef": 464, "implicitdefin": 565, "implicitli": [442, 447, 454, 463, 464, 467, 509, 517, 521, 534, 559, 573, 589, 591, 606, 608, 615, 616, 625, 631, 633, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 659, 660, 661, 662, 663, 664, 665, 666], "implicitus": 464, "import": [450, 451, 453, 454, 456, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 472, 484, 493, 497, 498, 501, 509, 512, 517, 524, 526, 528, 529, 530, 531, 547, 548, 550, 551, 553, 556, 559, 561, 563, 571, 573, 575, 577, 580, 581, 582, 587, 598, 599, 602, 605, 606, 608, 625, 626, 627, 628, 631, 634, 649, 650, 651, 652, 653, 656, 657, 660, 661, 662, 663, 664, 666], "importantli": [450, 467, 517, 652, 663], "impos": [464, 517, 559, 565, 589, 601, 608], "imposs": [450, 451, 453, 538, 559, 606, 626, 633, 657, 666], "impract": [517, 545, 574, 575, 589, 606], "improv": [442, 447, 450, 459, 460, 466, 467, 472, 519, 524, 526, 529, 535, 539, 543, 551, 559, 561, 563, 571, 573, 587, 588, 589, 591, 594, 598, 603, 605, 606, 610, 626, 627, 633, 635, 651, 657, 662, 666], "impur": 605, "imul": 464, "imul16rmi": 464, "imul16rmi8": 464, "in0": 559, "in1": [464, 559], "in2": 464, "in32bitmod": 464, "in64bitmod": 464, "inaccess": 545, "inaccessiblemem_or_argmemonli": 559, "inaccessiblememonli": [454, 559], "inaccessiblememonly_or_argmemonli": 454, "inaccur": [463, 493], "inaccuraci": 559, "inact": [442, 445, 447, 559], "inaddr_ani": 637, "inadvert": [468, 554, 611, 622], "inadvis": 527, "inakkuraci": 447, "inalloca": [454, 513, 559, 597], "inapplic": [457, 547, 606], "inappropri": 601, "inbound": [513, 514, 524, 527, 559], "inc": [464, 467, 487, 513, 529, 556, 565, 589, 603, 611, 613, 626, 627], "inc32r": [565, 605], "inc4": 468, "incant": 510, "incap": [442, 454, 657, 666], "incarn": 520, "incid": 601, "includ": [17, 46, 115, 136, 199, 231, 232, 347, 376, 377, 442, 444, 445, 446, 447, 448, 449, 450, 451, 453, 456, 458, 460, 461, 462, 463, 464, 465, 466, 468, 469, 472, 473, 476, 478, 480, 481, 489, 490, 491, 496, 497, 502, 506, 507, 508, 509, 510, 511, 512, 513, 514, 517, 518, 519, 520, 521, 524, 525, 526, 527, 528, 530, 531, 537, 540, 544, 545, 547, 549, 550, 551, 552, 554, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 567, 570, 572, 573, 574, 575, 576, 577, 581, 582, 585, 587, 588, 589, 590, 591, 593, 594, 596, 597, 598, 600, 601, 602, 603, 605, 606, 608, 609, 610, 613, 615, 616, 617, 619, 620, 621, 622, 625, 626, 627, 628, 629, 630, 633, 634, 635, 636, 637, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 662, 663, 664, 665, 666], "include_directori": 462, "includedir": 480, "inclus": [442, 445, 446, 447, 456, 467, 481, 493, 508, 517, 521, 559, 590, 603, 611, 626, 633], "incom": [447, 464, 517, 534, 543, 559, 589, 603, 606, 626, 652, 654, 663, 664, 665], "incompat": [495, 505, 519, 545, 559, 586, 613], "incomplet": [442, 447, 518, 522, 589, 606, 634, 635, 636, 637], "inconsist": [467, 487, 527, 594, 605], "inconveni": [561, 654, 665], "inconvertibleerrorcod": 589, "incorpor": [442, 464, 466, 552, 589, 658], "incorrect": [447, 456, 517, 559, 574, 588, 605, 606, 650, 651, 652, 653, 654, 655, 656, 661, 662, 663, 664, 665], "incorrectli": [447, 549, 559, 594, 606, 648, 650, 661], "incq": 468, "incr": 495, "increas": [442, 447, 460, 466, 467, 474, 493, 496, 513, 517, 524, 533, 538, 539, 553, 554, 559, 561, 562, 587, 591, 600, 602, 605, 606, 613, 614, 617, 622, 625, 650, 661], "incredibli": [517, 548, 591], "increment": [442, 447, 458, 463, 464, 467, 493, 526, 529, 561, 577, 581, 582, 584, 587, 589, 595, 604, 652, 654, 655, 656, 663, 665], "incur": 569, "ind": 656, "ind1": 559, "ind4": 559, "indefinit": 561, "indemn": 517, "indent": [496, 566, 589, 607, 631, 656], "independ": [442, 447, 451, 466, 468, 474, 509, 512, 516, 517, 524, 527, 529, 533, 538, 550, 555, 557, 558, 559, 562, 567, 569, 573, 589, 592, 595, 598, 600, 606, 608, 611, 617, 624, 625, 626, 627, 629, 630], "index": [14, 112, 196, 232, 313, 344, 377, 445, 446, 447, 450, 453, 454, 464, 471, 476, 486, 487, 493, 497, 498, 500, 501, 509, 513, 514, 519, 521, 524, 526, 529, 534, 538, 551, 555, 577, 580, 581, 582, 584, 585, 589, 593, 600, 605, 606, 608, 609, 610, 613, 626, 631, 632, 656], "index2": 606, "index2virtreg": 464, "indexedmap": 464, "indexloc": 589, "indexoffsetbufferlength": 584, "indexoffsetbufferoffset": 584, "indexreg": 464, "indic": [27, 28, 46, 58, 82, 94, 124, 125, 136, 167, 212, 213, 231, 243, 266, 338, 357, 358, 376, 388, 413, 426, 442, 443, 444, 445, 446, 447, 450, 453, 454, 455, 456, 457, 462, 464, 467, 468, 472, 476, 478, 483, 493, 506, 509, 513, 514, 517, 519, 520, 521, 526, 537, 538, 539, 550, 552, 555, 558, 559, 560, 561, 572, 574, 575, 576, 577, 579, 582, 585, 587, 588, 589, 591, 596, 602, 605, 606, 608, 610, 613, 615, 616, 617, 620, 625, 626, 627, 629, 630, 649, 650, 652, 656, 660, 661, 663], "indir": 559, "indireclti": 570, "indirect": [442, 447, 461, 464, 495, 496, 501, 513, 521, 522, 534, 561, 581, 598, 605, 608, 610, 626, 635, 636, 637], "indirectionutil": [636, 637], "indirectli": [451, 467, 472, 559, 570, 615], "indirectstubmanag": [635, 636], "indirectstubsmanag": [636, 637], "indirectstubsmgr": [636, 637], "indirectstubsmgrbuild": 636, "individu": [442, 444, 447, 453, 454, 458, 464, 467, 468, 472, 476, 478, 481, 495, 497, 502, 505, 516, 520, 524, 531, 534, 543, 549, 551, 558, 559, 561, 567, 570, 574, 577, 585, 587, 591, 592, 594, 601, 603, 606, 610, 615, 621, 656, 658], "indivis": 557, "induc": [545, 596, 597], "induct": [450, 524, 529, 559, 563, 627, 650, 652, 654, 661, 663, 665], "industri": [442, 517, 632], "indvar": [559, 589, 627], "indx": 631, "ineffect": [513, 606], "ineffici": [454, 464, 524, 561, 589, 609, 625, 654, 665], "ineg": 464, "inequ": [446, 464, 589], "inevit": [493, 594], "inexact": [447, 559], "inf": [447, 473, 474, 509, 559, 605], "infeas": [560, 606], "infecti": 589, "infer": [442, 453, 461, 464, 467, 468, 473, 474, 479, 510, 524, 526, 552, 559, 574, 610, 616, 619, 627, 631], "inferattr": 627, "inferenc": 464, "inferior": 515, "inferlibfuncattribut": 598, "infin": [447, 493, 559], "infinit": [442, 450, 464, 538, 559, 561, 563, 587], "influenc": [453, 459, 559, 560, 603, 605, 622, 627], "info": [447, 454, 460, 462, 464, 470, 472, 486, 487, 491, 493, 496, 497, 498, 500, 501, 506, 508, 511, 515, 517, 519, 526, 529, 541, 548, 550, 559, 560, 561, 562, 565, 574, 576, 580, 585, 591, 600, 601, 613, 625, 627, 630, 631, 648, 653, 654, 656, 657, 658, 659, 662, 663, 664, 665, 666], "inform": [444, 445, 446, 448, 450, 454, 456, 457, 460, 461, 462, 465, 468, 469, 470, 471, 472, 476, 478, 479, 487, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 506, 507, 508, 509, 510, 513, 514, 515, 519, 521, 522, 523, 524, 526, 527, 528, 529, 530, 531, 533, 535, 537, 538, 541, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 558, 560, 561, 562, 563, 564, 565, 566, 567, 571, 572, 575, 577, 579, 581, 582, 584, 585, 588, 590, 591, 594, 596, 597, 599, 600, 601, 602, 603, 606, 607, 608, 609, 610, 611, 613, 615, 617, 619, 622, 624, 625, 626, 627, 628, 629, 630, 631, 633, 634, 635, 636, 637, 649, 650, 651, 653, 654, 655, 657, 658, 661, 662, 664, 665, 666], "informativemailnotifi": 546, "infrastructur": [442, 458, 462, 464, 497, 512, 517, 520, 526, 528, 529, 530, 547, 559, 573, 574, 589, 590, 591, 596, 597, 600, 603, 605, 610, 619, 624, 625, 627, 632, 651], "infrequ": 627, "infring": 517, "ing": [467, 512, 563, 587, 650, 654, 661, 662, 665], "ingredi": 596, "inher": [463, 522, 559, 582, 589, 606], "inherit": [447, 450, 464, 467, 509, 516, 552, 573, 586, 589, 611, 613, 615, 616, 617, 622, 623, 627, 634], "inhibit": [498, 559, 610, 615], "ini": 558, "init": [447, 488, 509, 561, 591, 598, 627, 637, 654, 655, 656, 665], "init_v": 665, "initact": 448, "initi": [442, 454, 455, 462, 466, 472, 474, 478, 493, 497, 509, 513, 519, 520, 522, 529, 543, 552, 559, 563, 564, 570, 571, 572, 573, 587, 588, 591, 592, 594, 596, 598, 601, 602, 603, 604, 606, 609, 613, 615, 616, 626, 627, 628, 631, 633, 634, 635, 636, 637, 650, 651, 652, 654, 655, 656, 661, 662, 663, 664, 665], "initial_instruct": [442, 447], "initial_loc": 442, "initialexec": [454, 559], "initialis": [509, 617, 628, 655], "initialize_ag_pass": 627, "initialize_native_target": [662, 663, 664, 665], "initialize_pass_begin": 537, "initialize_pass_depend": [537, 627], "initialize_pass_end": 537, "initializealiasanalysi": 450, "initializeallasmpars": 655, "initializeallasmprint": 655, "initializealltarget": 655, "initializealltargetinfo": 655, "initializealltargetmc": 655, "initializemodul": 656, "initializemoduleandpassmanag": [651, 652, 653, 654, 655], "initializenativetarget": [637, 651, 652, 653, 654, 656], "initializenativetargetasmpars": [637, 651, 652, 653, 654, 656], "initializenativetargetasmprint": [637, 651, 652, 653, 654, 656], "initializepass": 450, "initializerconst": 559, "initializi": 616, "initialse": 503, "initid": 454, "initsynclibcal": 451, "initv": [654, 655, 656], "inject": [467, 513, 554, 598, 606], "inlin": [442, 447, 451, 456, 461, 475, 481, 493, 494, 506, 507, 509, 510, 513, 517, 519, 521, 522, 524, 529, 554, 565, 572, 574, 580, 588, 589, 591, 598, 600, 605, 606, 608, 610, 627, 631, 634, 648, 651, 652, 657, 662, 663, 666], "inline": [497, 559, 605], "inline_hd1": 510, "inline_hd2": 510, "inlineasm": 571, "inlinebit": 559, "inlined_at": 521, "inlinedat": [468, 559], "inlinedinfo": 494, "inlinehint": [454, 559], "inner": [460, 463, 469, 519, 554, 557, 559, 561, 563, 587, 589, 596, 615, 616, 622, 624, 631], "inner_a": 559, "innerloop": 596, "innerloopvector": 594, "innermost": [596, 625], "innerstructti": 559, "innoc": [652, 663], "innov": 517, "inoperandlist": [617, 626], "inplac": 470, "inpredsens": 556, "input": [9, 10, 13, 24, 25, 26, 27, 28, 31, 32, 33, 59, 65, 66, 67, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 97, 98, 99, 100, 105, 106, 107, 108, 111, 121, 122, 123, 124, 125, 144, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 183, 184, 185, 186, 191, 192, 193, 194, 205, 206, 207, 212, 213, 244, 248, 249, 250, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 280, 281, 282, 283, 288, 289, 290, 291, 295, 296, 300, 301, 307, 308, 309, 312, 318, 319, 320, 321, 322, 330, 333, 334, 335, 336, 339, 340, 341, 343, 354, 355, 356, 357, 358, 361, 362, 363, 389, 395, 396, 397, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422, 429, 430, 431, 432, 437, 438, 439, 440, 442, 443, 445, 446, 447, 448, 450, 452, 458, 459, 463, 464, 467, 468, 469, 470, 472, 473, 474, 476, 477, 478, 481, 482, 484, 485, 486, 487, 488, 491, 492, 493, 494, 496, 497, 500, 501, 502, 504, 505, 506, 507, 508, 509, 510, 516, 522, 529, 534, 535, 538, 539, 543, 551, 556, 560, 561, 562, 565, 572, 577, 587, 589, 596, 598, 600, 603, 605, 606, 610, 613, 615, 617, 619, 621, 625, 626, 627, 629, 633, 634, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 659, 661, 662, 663, 665, 666, 668], "input_vector": 559, "inputcont": 631, "inputfilenam": 509, "inrang": 559, "inreg": [447, 454, 464, 559, 626], "inresumepart": 513, "ins": [453, 464, 556, 615, 617, 626], "insan": 467, "insensit": [450, 468, 486], "insert": [447, 450, 451, 453, 458, 467, 468, 472, 476, 509, 513, 526, 534, 539, 545, 554, 559, 563, 571, 576, 587, 598, 605, 606, 607, 611, 626, 627, 628, 650, 651, 652, 653, 654, 655, 656, 661, 662, 663, 664, 665], "insert_subreg": 565, "insert_subvector": 464, "insertbefor": 589, "insertbranch": 626, "insertbyt": 561, "insertdeclar": 656, "insertel": [453, 468], "insertion_block": [663, 664, 665], "insertvalu": 513, "insid": [454, 460, 462, 463, 464, 467, 468, 472, 476, 479, 514, 515, 516, 518, 519, 526, 528, 529, 539, 550, 552, 559, 561, 563, 570, 571, 577, 584, 587, 589, 596, 599, 605, 606, 609, 610, 613, 615, 616, 620, 621, 622, 623, 627, 631, 636, 637, 651], "insidebundl": 464, "insight": [442, 514, 559, 600, 629], "insignific": [473, 484, 559, 608], "insn": 496, "inspect": [447, 454, 461, 464, 487, 524, 527, 559, 591, 605, 627, 649], "inspir": [493, 559, 587, 605, 629], "inst": [554, 559, 587, 589, 615, 626], "inst_begin": 589, "inst_cal": 454, "inst_end": 589, "inst_invok": 454, "inst_iter": 589, "instal": [447, 449, 462, 463, 480, 510, 512, 518, 520, 525, 529, 531, 544, 545, 546, 547, 549, 551, 558, 561, 572, 586, 589, 590, 591, 599, 617, 619, 620, 627, 628, 649, 650, 651, 652, 653, 654, 655, 656, 660, 661, 662, 663, 664, 665], "instalia": 464, "instalias": 464, "install_gwp_asan_stub": 545, "install_prefix": 462, "installeddir": 518, "installsignalhandl": 545, "instanc": [442, 447, 448, 462, 464, 467, 468, 472, 476, 509, 513, 518, 526, 528, 533, 536, 543, 552, 557, 559, 564, 565, 571, 573, 574, 579, 588, 589, 591, 599, 605, 608, 613, 616, 619, 621, 622, 626, 627, 628, 631, 633, 634, 649, 650, 657, 660, 661, 666], "instanceof": [589, 613], "instanti": [472, 481, 509, 510, 552, 564, 589, 596, 613, 615, 616, 617, 626, 627, 631], "instantiatetemplateattribut": 613, "instantli": 589, "instcombin": [458, 525, 563, 589, 634, 635, 636, 637, 651, 652, 653, 654], "instead": [21, 54, 55, 351, 384, 385, 442, 443, 450, 451, 454, 458, 462, 463, 464, 465, 467, 468, 470, 472, 474, 475, 476, 479, 481, 486, 487, 488, 490, 493, 494, 497, 506, 507, 509, 510, 513, 514, 515, 519, 521, 522, 524, 525, 527, 528, 529, 533, 538, 539, 543, 545, 546, 547, 548, 551, 552, 556, 557, 558, 559, 560, 561, 565, 571, 572, 573, 577, 587, 589, 591, 596, 598, 601, 604, 605, 606, 608, 610, 611, 615, 616, 619, 621, 624, 626, 627, 628, 629, 630, 631, 634, 635, 649, 650, 651, 653, 654, 657, 658, 659, 660, 661, 662, 664, 665, 666], "instinct": 447, "institer": 589, "instlisttyp": 589, "instnam": 458, "instprint": 613, "instr": [447, 462, 464, 481, 498, 508, 514, 615], "instr0": 571, "instr1": 571, "instr2": 571, "instr_begin": 665, "instr_iter": 464, "instr_map": 629, "instrinfo": [464, 565, 626], "instritinclass": 617, "instrmap": 626, "instrprofvaluekind": 559, "instrsch": 589, "instrsdrm": 615, "instrssrr": 615, "instruct": [9, 10, 12, 13, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46, 48, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 115, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 199, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 231, 232, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 300, 301, 302, 303, 307, 308, 309, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 333, 334, 335, 336, 339, 340, 341, 342, 343, 347, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 376, 377, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 448, 450, 454, 458, 459, 461, 462, 467, 468, 471, 473, 474, 476, 478, 496, 497, 498, 503, 508, 510, 511, 512, 513, 516, 517, 518, 521, 523, 524, 525, 526, 528, 529, 534, 535, 536, 538, 539, 540, 541, 542, 544, 549, 551, 553, 557, 560, 563, 569, 570, 571, 572, 574, 588, 591, 596, 597, 598, 600, 601, 604, 608, 610, 613, 615, 617, 621, 622, 623, 624, 625, 627, 628, 650, 651, 652, 653, 654, 655, 656, 657, 661, 662, 663, 665, 666], "instruction_list_end": 487, "instructioncount": 600, "instructionselect": [535, 538, 543], "instructionselector": 540, "instructor": 626, "instrument": [449, 456, 462, 481, 498, 514, 527, 548, 559, 561, 574, 577, 587, 597, 609, 619, 630], "instrumentationmap": 628, "instsp": 626, "insttoreplac": 589, "instvisitor": [520, 589], "insuffici": [510, 513, 547, 559, 605, 611, 626], "insul": 606, "insult": 465, "int": [450, 451, 453, 458, 464, 467, 468, 469, 482, 493, 506, 509, 510, 513, 514, 515, 516, 519, 522, 526, 527, 529, 531, 544, 545, 556, 557, 559, 561, 562, 563, 565, 566, 571, 572, 573, 584, 589, 605, 606, 607, 610, 613, 615, 616, 617, 622, 625, 626, 628, 629, 631, 633, 637, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 660, 661, 662, 663, 664, 665, 666, 668], "int128": 584, "int128oct": 584, "int16": 584, "int16_t": [626, 631], "int16short": 584, "int2006": 619, "int32": [584, 608], "int32_t": [526, 577, 584, 631], "int32long": 584, "int32ti": 589, "int32x4_t": 453, "int64": 584, "int64_t": [589, 631], "int64quad": 584, "int8_t": 631, "int_get_dynamic_area_offset": 559, "int_of_float": [664, 665], "intd": 468, "integ": [46, 47, 50, 52, 109, 136, 137, 139, 195, 231, 233, 235, 237, 292, 305, 326, 376, 378, 380, 382, 441, 442, 444, 445, 447, 451, 455, 464, 467, 468, 472, 478, 493, 498, 509, 510, 513, 514, 519, 520, 521, 524, 526, 533, 541, 561, 563, 565, 571, 573, 577, 582, 584, 589, 591, 593, 598, 600, 605, 610, 613, 615, 616, 621, 625, 626, 631, 650, 661], "integer_numb": [22, 23, 44, 45, 46, 47, 52, 58, 76, 93, 109, 119, 120, 135, 136, 137, 139, 156, 181, 195, 203, 204, 229, 230, 231, 232, 233, 237, 243, 259, 278, 292, 352, 353, 374, 375, 376, 377, 378, 382, 388, 406, 425, 441], "integertyp": 589, "integr": [442, 447, 461, 462, 471, 479, 509, 510, 512, 517, 526, 529, 561, 562, 566, 574, 589, 591, 593, 595, 605, 610, 623, 624, 628, 667], "intel": [451, 462, 474, 493, 496, 511, 550, 559, 596, 598, 602, 606, 621, 625, 655], "intel_pst": 452, "intel_syntax": 493, "inteldialect": 559, "intellig": [559, 589, 606], "intend": [442, 447, 449, 450, 451, 460, 462, 463, 464, 465, 466, 467, 468, 484, 489, 502, 504, 509, 517, 519, 520, 524, 526, 529, 533, 539, 541, 543, 559, 562, 564, 567, 574, 582, 587, 589, 591, 601, 602, 606, 607, 608, 611, 616, 624, 626, 627], "intendend": 559, "intens": [460, 524, 589], "intent": [442, 453, 463, 464, 467, 517, 559, 562, 574, 594, 603, 616, 654, 665], "intention": [467, 517, 559, 606, 627, 649, 660], "inter": [447, 450, 456, 467, 517, 524, 559, 560, 573, 609, 611], "interact": [445, 451, 458, 462, 464, 482, 509, 513, 519, 526, 548, 559, 564, 570, 588, 591, 600, 601, 605, 610, 626, 633, 649, 656, 657, 660, 666], "intercept": 561, "interchang": [464, 467], "interest": [447, 450, 451, 453, 459, 460, 464, 466, 467, 468, 469, 471, 472, 478, 493, 509, 512, 514, 517, 519, 522, 524, 525, 526, 529, 531, 546, 552, 559, 561, 563, 564, 565, 568, 582, 587, 589, 592, 594, 603, 605, 606, 610, 620, 624, 627, 629, 631, 634, 648, 649, 650, 651, 652, 653, 654, 656, 657, 659, 660, 661, 662, 663, 664, 665, 666], "interf": 605, "interfac": [447, 462, 464, 467, 472, 476, 501, 509, 511, 512, 515, 517, 518, 519, 525, 526, 528, 529, 544, 552, 555, 556, 558, 559, 561, 562, 563, 571, 572, 573, 587, 597, 598, 600, 605, 608, 613, 615, 624, 626, 627, 634, 635, 648, 649, 650, 657, 659, 660, 661, 662, 666], "interfer": [493, 519, 524, 527, 559], "interim": [461, 517], "interior": [526, 552, 560, 610], "interleav": [442, 447, 496, 591, 596, 625], "interleave_count": 625, "intermedi": [454, 462, 488, 490, 507, 510, 512, 518, 519, 522, 526, 529, 533, 534, 538, 543, 555, 557, 559, 565, 589, 597, 599, 600, 605, 610, 619, 624, 626, 649, 660], "intermediari": 589, "intermingl": 559, "intermitt": 529, "intermix": 447, "intermodular": [562, 624], "intern": [450, 454, 462, 463, 464, 468, 469, 472, 493, 495, 497, 506, 510, 512, 513, 514, 517, 518, 519, 522, 524, 527, 528, 529, 534, 545, 559, 560, 562, 563, 564, 565, 572, 573, 574, 575, 581, 585, 589, 592, 610, 611, 613, 615, 617, 619, 620, 623, 626, 627, 631, 633, 650, 654, 656, 661, 665], "internallinkag": 589, "internalread": 565, "internet": [511, 591], "interoper": [451, 519, 526, 559, 585, 633, 657, 666], "interpol": [18, 57, 116, 143, 200, 242, 348, 387], "interpret": [442, 453, 454, 462, 464, 466, 469, 472, 474, 475, 480, 484, 497, 498, 509, 510, 514, 521, 525, 529, 533, 558, 559, 573, 586, 598, 605, 608, 610, 616, 617, 621, 622, 649, 650, 651, 652, 653, 654, 655, 656, 657, 660, 661, 662, 663, 664, 665, 666], "interprocedur": [450, 559, 562, 574, 627, 634], "interrupt": [467, 472, 523, 559, 561, 606, 611], "intersect": 563, "interspers": 630, "intertwin": 560, "interv": [447, 581, 589], "interven": [447, 454, 493, 591, 608], "intim": 467, "intimid": 517, "intimmleaf": 536, "intpr": 565, "intptr_t": [625, 651, 652, 653, 654, 656], "intptrsiz": 526, "intra": [450, 609], "intraprocedur": [458, 570], "intreg": [556, 626], "intregsclass": 626, "intregsregclass": 626, "intregsregclassid": 626, "intregsregisterclass": 626, "intregssubclass": 626, "intregssubregclass": 626, "intregssuperclass": 626, "intregssuperregclass": 626, "intregsvt": 626, "intrepid": [649, 660], "intric": 518, "intrins": [451, 466, 498, 508, 511, 524, 534, 539, 554, 560, 565, 589, 598, 604, 623, 624, 625, 626], "intrinsicsnvvm": 572, "intrnodupl": 559, "intro": [511, 512, 632, 654, 665], "introduc": [450, 451, 452, 464, 467, 468, 493, 513, 514, 521, 533, 536, 538, 539, 541, 543, 551, 552, 557, 559, 563, 570, 571, 581, 587, 589, 591, 595, 596, 600, 605, 606, 608, 610, 615, 617, 623, 626, 633, 634, 636, 637, 652, 653, 654, 658, 663, 664, 665], "introduct": [466, 508, 512, 529, 530, 531, 632, 667], "introductori": 632, "introspect": [555, 559, 562, 567, 610], "intrus": [559, 589], "intscalarti": 559, "intti": 559, "inttoptr": [524, 608, 610], "inttyp": 559, "intuit": [559, 570], "invalid": [442, 445, 446, 447, 450, 451, 467, 472, 487, 495, 498, 505, 507, 509, 513, 519, 527, 529, 534, 559, 560, 561, 563, 564, 577, 587, 589, 602, 605, 606, 608, 610, 626, 627, 631, 649, 650, 651, 652, 653, 654, 655, 656, 660, 661, 662, 663, 664, 665], "invari": [450, 524, 529, 539, 554, 560, 563, 589, 610, 622, 627], "invas": [517, 631], "invent": [585, 613], "invers": [445, 487, 559, 587], "inverse_throughput": 487, "invert": [524, 533, 559, 621], "invest": [520, 603], "investig": [497, 538, 594, 603, 606, 633, 657, 666], "invidu": 603, "invis": 592, "invit": [634, 635, 636, 637], "invoc": [442, 447, 449, 458, 462, 464, 468, 469, 498, 513, 518, 525, 529, 544, 548, 549, 554, 559, 561, 574, 594, 619, 627, 628, 629, 630], "invok": [447, 450, 454, 456, 458, 462, 463, 464, 467, 468, 481, 506, 509, 513, 519, 524, 526, 529, 544, 557, 561, 562, 564, 565, 571, 573, 574, 589, 608, 610, 619, 621, 626, 627, 630, 634, 649, 654, 660, 662, 665], "invoke": 559, "invoke_normal_weight": 456, "invoke_unwind_weight": 456, "invol": 519, "involv": [442, 447, 450, 451, 455, 462, 464, 493, 516, 520, 524, 526, 527, 535, 539, 551, 556, 559, 573, 587, 589, 591, 596, 601, 602, 606, 610, 611, 616, 626, 629, 631, 632, 649, 652, 654, 656, 660, 663, 665], "io": [529, 559, 593, 594, 619, 631], "iommu": 447, "iostream": [545, 572, 629, 655], "ip": 617, "ipa": 560, "ipc": [493, 611], "iphoneo": 619, "ipi": [497, 575, 576, 582, 585], "ipo": [560, 571, 627], "ipra": 447, "ipsk_covmap": 514, "iptr": [533, 559], "ipv": 442, "ir": [450, 455, 456, 458, 459, 464, 474, 509, 512, 513, 516, 519, 520, 523, 529, 530, 534, 535, 538, 539, 543, 544, 548, 557, 559, 560, 563, 566, 570, 571, 572, 573, 574, 590, 596, 600, 605, 607, 608, 610, 621, 622, 623, 626, 627, 628, 629, 633, 634, 635, 636, 637, 649, 651, 653, 654, 655, 656, 658, 659, 660, 662, 665, 667], "irbuild": [554, 589, 650, 651, 652, 653, 654, 655, 656, 661, 662, 663], "irc": [465, 466, 512, 524, 588, 601], "ircompil": 633, "ircompilelay": [573, 633, 634, 635, 636, 637], "irgen": [524, 636, 637], "irgenandtakeownership": [636, 637], "irlay": 634, "irpath": 573, "irread": 462, "irreduc": [559, 587, 626], "irrelev": [450, 527, 559], "irrespect": 462, "irtest": 462, "irtransformlay": [635, 636, 637], "irtransl": [539, 543], "is64bitmod": 626, "is_base_of": 552, "is_const": 447, "is_dynamic_callstack": 447, "is_nul": 523, "is_open": 572, "is_pip": 447, "is_ptr64": 447, "is_restrict": 447, "is_stmt": 521, "is_trivially_copy": 589, "is_volatil": 447, "is_zero_undef": 559, "isa": [447, 451, 464, 467, 511, 517, 524, 526, 552, 559, 595, 597, 598, 615, 616, 626], "isa_and_nonnul": 589, "isa_impl": 552, "isabsoluteaddress": 577, "isaddresstaken": 565, "isalnum": [648, 649, 650, 651, 652, 653, 654, 655, 656], "isalpha": [648, 649, 650, 651, 652, 653, 654, 655, 656], "isascii": [649, 650, 651, 652, 653, 654, 655, 656], "isatleastorstrongerthan": 451, "isbarri": [615, 617], "isbasewithconstantoffset": 536, "isbinaryop": [653, 654, 655, 656], "isbranch": 617, "iscal": [615, 617], "iscommut": 617, "isconst": [447, 454, 589], "isconstantpoolindex": 626, "isconvertibletothreeaddress": 617, "iscxxclass": 605, "isd": [448, 451, 464, 519, 520, 626], "isdeclar": 589, "isdef": 464, "isdefinit": [554, 559, 605], "isdigit": [648, 649, 650, 651, 652, 653, 654, 655, 656], "isdopcod": [448, 464, 520], "isdoubl": 615, "isectcoff": 577, "isel": [464, 508, 543, 560, 605, 615, 626], "iseldagtodag": 613, "isellow": [451, 613], "isempti": 589, "isextern": 605, "isexternalsymbol": 626, "isfirstclasstyp": 571, "isfloatingpointti": 589, "isfoo": 467, "isfunct": 605, "isglobaladdress": 626, "isgroup": [509, 577], "ish": [653, 664], "isimm": 534, "isimmedi": 626, "isimplicitcod": 605, "isimplicitdef": 617, "isindirectbranch": 617, "isinlin": 605, "isintegerti": 589, "isjumptableindex": 626, "island": 447, "islandingpad": 565, "islazi": 626, "isload": 464, "isloadfromstackslot": 626, "isloc": [554, 559, 605], "isloopinvari": 589, "islvalu": 467, "ismod": 615, "isn": [449, 451, 459, 463, 464, 465, 467, 468, 498, 506, 510, 517, 522, 527, 539, 540, 549, 559, 565, 570, 587, 589, 601, 605, 607, 611, 627, 648, 649, 650, 651, 652, 655, 656, 659, 660, 661, 662, 663], "isnan": 598, "isnotduplic": 617, "isnul": 467, "isnullvalu": 571, "isobjcclass": 605, "isobviouslysafetofold": 536, "isol": [452, 455, 458, 462, 464, 493, 512, 516, 518, 559, 610, 615, 621, 633, 636, 654, 665, 667], "isomorph": 522, "isoper": [653, 654, 655, 656], "isoperandimmequ": 536, "isopt": 509, "isoptim": [554, 559, 605], "isosdarwin": 656, "ispack": 454, "isphysicalregist": 464, "isphysreg": 589, "ispic": 626, "ispip": 447, "ispoint": 571, "ispointertyp": 467, "ispredic": 617, "isprefix": 509, "isprint": 561, "isproto": 454, "isref": 615, "isregist": 464, "isrematerializ": 617, "isrestrict": 447, "isreturn": [615, 617], "issafetospecul": 610, "isselector": 577, "isset": 509, "issimpl": 451, "issiz": 589, "isspac": [561, 648, 649, 650, 651, 652, 653, 654, 655, 656], "isstor": 464, "isstoretostackslot": 626, "isstrongerthan": 451, "issu": [442, 447, 451, 453, 457, 463, 464, 465, 466, 468, 472, 486, 495, 509, 510, 517, 521, 524, 525, 529, 539, 543, 545, 547, 551, 553, 559, 589, 591, 593, 602, 605, 606, 610, 613, 621, 627, 631, 632, 651, 652, 654, 657, 659, 662, 663, 665, 666], "issuedset": 493, "issuewidth": 493, "istargetspecif": 565, "istermin": [467, 615, 617], "istreambuf_iter": 572, "istruncatingstor": 626, "isunaryop": [653, 654, 655, 656], "isunord": 451, "isunpredicatedtermin": 626, "isus": 464, "isv9": 626, "isvararg": 589, "isvector": 622, "isvi": 626, "isvolatil": [447, 559], "ital": 442, "itanium": [482, 483, 521, 525, 623], "itanium_abi_tripl": 621, "item": [442, 453, 454, 463, 478, 509, 519, 521, 524, 558, 559, 561, 571, 589, 591, 594, 598, 605, 610, 615, 631, 654, 665], "iter": [450, 455, 458, 462, 463, 464, 466, 467, 487, 493, 509, 513, 517, 526, 538, 541, 543, 560, 561, 562, 563, 564, 571, 581, 587, 596, 615, 616, 626, 628, 631, 649, 652, 653, 654, 658, 660, 663, 664, 665], "iterator_rang": 589, "iteri": [661, 662, 663, 664, 665], "ith": 589, "iti": 545, "itinerari": [464, 617, 626], "its": [46, 52, 61, 136, 139, 146, 231, 237, 246, 376, 382, 391, 442, 445, 446, 447, 449, 450, 453, 454, 455, 456, 458, 460, 462, 463, 464, 465, 467, 468, 469, 470, 472, 473, 476, 477, 478, 484, 485, 486, 488, 490, 492, 493, 494, 496, 498, 502, 507, 508, 509, 510, 512, 513, 514, 516, 517, 518, 519, 520, 524, 525, 526, 527, 528, 529, 538, 539, 544, 545, 546, 551, 552, 554, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 569, 570, 571, 573, 576, 587, 589, 591, 593, 594, 596, 600, 601, 602, 603, 605, 606, 607, 608, 610, 611, 613, 615, 616, 617, 618, 620, 621, 622, 623, 624, 625, 626, 627, 633, 635, 637, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666], "itself": [442, 449, 450, 453, 454, 462, 464, 467, 468, 469, 472, 479, 481, 509, 513, 516, 517, 519, 520, 522, 524, 525, 526, 527, 529, 531, 538, 548, 550, 552, 553, 557, 558, 559, 561, 562, 563, 571, 581, 589, 591, 593, 594, 596, 598, 599, 600, 601, 602, 605, 606, 607, 608, 609, 610, 613, 615, 616, 617, 621, 622, 627, 631, 633, 634, 636, 637, 649, 650, 651, 652, 653, 654, 655, 656, 657, 660, 661, 662, 663, 664, 665, 666], "iuml": 464, "ivanov": 594, "ivanovicdistinguish": 594, "ivar": 605, "j": [464, 467, 470, 472, 481, 494, 495, 496, 498, 516, 517, 529, 546, 559, 563, 573, 587, 589, 605, 619, 622, 629, 633], "j1": 619, "j2": 529, "j4": [548, 599], "jacqu": 510, "jag": 581, "jaguar": 493, "jalu0": 493, "jalu01": 493, "jalu1": 493, "jam": [559, 596, 598], "jame": 594, "jan": 596, "jann": 606, "jarvi": 593, "java": [451, 523, 526, 559, 587, 589, 610, 657, 666], "javascript": [559, 608, 657, 666], "jazz": 590, "jb_1": 605, "jd": [573, 594, 634], "jd1": 573, "jd2": 573, "jdiv": 493, "jdoe": [517, 588], "je": 606, "jeff": 611, "jessi": 550, "jf": 603, "jfpa": 493, "jfpm": 493, "jfpu0": 493, "jfpu01": 493, "jfpu1": 493, "jfpuprf": 493, "jg": 604, "jingl": 596, "jingyu": 510, "jintegerprf": 493, "jit": [458, 462, 469, 474, 480, 487, 517, 522, 526, 529, 531, 553, 558, 559, 572, 573, 586, 608, 610, 632, 648, 650, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 663, 664, 665, 666], "jit_serv": 637, "jitcompilecallbackmanag": [635, 636, 637], "jitcompilerfn": 626, "jitcompilerfunct": 626, "jitdylib": [598, 633, 634], "jite": [515, 624, 633, 635, 636, 667], "jitevaluatedsymbol": [633, 634], "jiteventlisten": 573, "jitfail": 573, "jitstack": 573, "jitsymbol": [633, 634, 635, 636, 637], "jitsymbolflag": [573, 635, 636, 637], "jittargetaddress": [635, 636, 637], "jittargetmachinebuild": [633, 634], "jlagu": 493, "jlsagu": 493, "jmp": [559, 606], "jmp_1": 605, "jmpq": 606, "jmul": 493, "jn": [547, 550], "jne": [464, 606], "job": [462, 529, 552, 561, 570, 573, 611, 627, 634], "joe": 516, "joerg": 591, "john": [467, 517, 588], "join": [447, 474, 528, 559, 561, 568, 589, 627, 629], "joke": 465, "jonathan2251": 667, "jone": [594, 596], "jonesdistinguish": 594, "josh": 603, "journal": 596, "journei": [654, 665], "jpg": 561, "jsagu": 493, "json": [481, 486, 508, 617, 619], "jsonnrevnum": 591, "jstc": 493, "jtmb": [633, 634], "judg": 486, "judgement": [517, 606], "juggl": 510, "juli": [526, 591, 628], "julia": 573, "jump": [446, 454, 461, 509, 513, 519, 521, 534, 553, 554, 559, 563, 573, 589, 590, 598, 606, 623, 626, 635, 652, 656, 663], "jumpi": 554, "jumptabl": [454, 559, 565], "junip": 447, "junk": [660, 661, 662, 663, 664, 665], "jurisdict": 517, "just": [442, 449, 450, 451, 452, 453, 454, 455, 458, 459, 460, 463, 464, 466, 467, 468, 470, 472, 474, 476, 478, 481, 484, 493, 494, 496, 497, 506, 509, 510, 513, 514, 517, 521, 522, 527, 529, 531, 532, 533, 537, 538, 544, 547, 550, 551, 552, 553, 554, 558, 559, 561, 563, 565, 566, 568, 570, 571, 572, 573, 587, 588, 589, 590, 591, 592, 599, 604, 605, 606, 608, 610, 611, 613, 615, 617, 619, 620, 621, 626, 627, 631, 633, 634, 635, 636, 637, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 659, 660, 661, 662, 663, 664, 665, 666], "justifi": 562, "justin": 542, "jvalu0": 493, "jvalu1": 493, "jvimul": 493, "jvm": [573, 657, 666], "jyknight": 591, "k": [446, 452, 464, 495, 505, 506, 509, 516, 552, 559, 563, 579, 606, 625, 634, 635, 636, 637, 656], "kabini": 447, "kaleidoscop": [571, 573, 589, 633, 634, 635, 636, 637, 658], "kaleidoscopejit": [634, 635, 636, 637, 651, 652, 653, 654, 656, 667], "kaveri": 447, "kawahito": 464, "kb": [537, 602], "kd": 447, "kdtree": 593, "keep": [450, 464, 468, 488, 495, 505, 509, 510, 513, 517, 518, 522, 526, 545, 552, 559, 562, 563, 565, 568, 569, 570, 571, 587, 589, 595, 596, 600, 602, 605, 617, 621, 624, 625, 627, 628, 635, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 664, 665, 666], "kei": [447, 454, 460, 464, 467, 486, 487, 517, 545, 552, 556, 559, 565, 571, 573, 579, 582, 584, 589, 600, 603, 606, 610, 613, 617, 627, 635], "kele": 542, "kept": [447, 450, 513, 517, 560, 600, 601, 605, 627], "kern0": 447, "kern1": 447, "kernarg": 447, "kernarg_address": 447, "kernarg_segment_align": 447, "kernarg_segment_s": 447, "kernargsegmentalign": 447, "kernargsegments": 447, "kernel": [451, 452, 464, 474, 493, 510, 518, 547, 559, 561, 593, 606, 624, 625, 626, 657, 666], "kernel1": 447, "kernel_code_entry_byte_offset": 447, "kernel_param_0": 572, "kernel_param_1": 572, "kernel_param_2": 572, "kernelparam": 572, "kevin": 464, "keycol": 556, "keyr": 529, "keystrok": 467, "keyt": 589, "keytyp": 605, "keyword": [450, 457, 464, 509, 512, 514, 525, 527, 559, 561, 594, 605, 613, 615, 616, 617, 621, 625, 627, 648, 652, 653, 654, 655, 656, 659, 663, 664, 665], "kib": 509, "kick": 517, "kill": [458, 464, 469, 560, 561, 565, 605, 627], "killal": 561, "kind": [442, 444, 445, 446, 447, 451, 454, 456, 464, 465, 466, 467, 468, 472, 473, 476, 478, 509, 514, 515, 519, 520, 522, 523, 525, 528, 552, 554, 555, 558, 559, 560, 561, 562, 565, 570, 571, 575, 576, 577, 584, 587, 589, 591, 601, 605, 606, 607, 608, 613, 623, 629, 630, 632, 633, 653, 654, 655, 656, 664, 665], "kistanova": 546, "klabnik": 603, "klau": 591, "klimek": 588, "kmean": 593, "knl": 598, "knock": 467, "know": [442, 447, 450, 451, 453, 457, 458, 462, 463, 464, 466, 467, 472, 493, 509, 512, 513, 514, 515, 517, 519, 522, 524, 526, 529, 531, 532, 546, 552, 553, 559, 561, 562, 563, 566, 572, 581, 585, 588, 589, 591, 594, 601, 603, 605, 606, 607, 609, 610, 621, 623, 625, 626, 627, 631, 634, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 660, 661, 662, 663, 664, 665, 666], "knowledg": [454, 464, 466, 467, 514, 526, 535, 559, 566, 567, 574, 585, 587, 607, 621, 622, 657, 666], "known": [442, 447, 450, 451, 454, 462, 464, 467, 469, 476, 495, 510, 513, 516, 519, 524, 526, 527, 528, 529, 531, 543, 551, 552, 559, 572, 587, 589, 590, 594, 599, 604, 606, 610, 615, 620, 621, 623, 626, 627, 631, 648, 649, 650, 651, 652, 653, 654, 655, 656, 659, 660, 661, 662, 663, 664, 665], "knownbit": [537, 559], "knownsafevalu": 589, "koblenz": 596, "kocher": 606, "komatsu": 464, "kripk": 593, "kristof": [594, 603], "kruskal": 593, "kryomodel": 626, "kryowrite_2cyc_xy_norsv_67ln": 626, "kryowrite_2cyc_xy_xy_150ln": 626, "krzysztof": 594, "ksdbginfo": 656, "kuck": 516, "kuhn": 516, "kw1": 561, "kw2": 561, "kw3": 561, "kwalifi": 668, "kwd": [659, 660, 661, 662, 663, 664, 665], "l": [442, 464, 476, 480, 481, 495, 496, 497, 500, 501, 502, 505, 509, 510, 529, 549, 550, 559, 561, 571, 573, 574, 589, 590, 591, 594, 602, 617, 650, 651, 652, 653, 654, 655, 656], "l0": [442, 447, 626], "l1": [442, 447, 464, 493, 626], "l10": 629, "l1d": 493, "l2": [447, 626], "l3": 626, "l4": 626, "l5": 626, "l6": 626, "l7": 626, "la": 573, "lab": [528, 546], "label": [0, 2, 3, 4, 442, 446, 447, 454, 455, 464, 512, 513, 519, 522, 523, 526, 554, 557, 563, 570, 571, 572, 587, 589, 598, 605, 622, 626, 629, 652, 654, 663, 665], "label0": 559, "label_1": [47, 137, 233, 378], "label_2": [47, 137, 233, 378], "label_3": [47, 137, 233, 378], "label_4": [47, 137, 233, 378], "label_branch_weight": 456, "labeltyp": 589, "labf": 509, "labor": 509, "labori": 589, "lack": [461, 464, 465, 493, 526, 527, 538, 559, 586, 598, 602, 606, 614, 615, 616, 617, 662], "lad": 509, "laden": [657, 666], "lagho": 593, "lah": 619, "lahf": 606, "lai": [464, 467, 527, 559, 560, 589, 623, 656, 662, 663, 664, 665], "laid": [453, 464, 517, 559, 580, 581, 585, 589, 595, 662], "lako": 467, "lambda": [447, 536, 573, 589, 594, 633, 636, 637], "lambdaresolv": [635, 636, 637], "lammp": 593, "lanai": 594, "lanczo": 593, "land": [466, 513, 517, 519, 557, 559, 565, 588, 598, 603, 610], "landingpad": [513, 519, 587], "landscap": 591, "lane": [442, 445, 533, 534, 598], "lang": [460, 509, 594, 619], "langref": [448, 451, 520, 524, 572, 595], "languag": [451, 462, 463, 464, 465, 466, 468, 473, 477, 485, 488, 490, 507, 509, 510, 511, 512, 513, 517, 518, 519, 521, 523, 525, 526, 527, 529, 530, 533, 535, 549, 554, 560, 561, 565, 572, 573, 587, 589, 592, 593, 596, 597, 603, 608, 610, 613, 614, 617, 621, 625, 626, 630, 631, 633, 634, 649, 650, 651, 655, 656, 660, 661, 662], "language_vers": 447, "languagevers": 447, "larg": [442, 451, 454, 458, 462, 464, 467, 469, 472, 474, 478, 487, 493, 509, 510, 517, 518, 521, 526, 529, 532, 533, 539, 545, 548, 551, 556, 557, 559, 561, 569, 570, 572, 573, 575, 579, 581, 585, 587, 589, 590, 592, 593, 594, 605, 608, 610, 613, 617, 619, 621, 626, 628, 630, 635, 651, 662], "largeconst": 608, "larger": [442, 447, 454, 460, 464, 466, 478, 487, 488, 493, 516, 518, 520, 521, 534, 538, 548, 559, 561, 577, 589, 593, 594, 598, 602, 605, 610, 626], "largest": [109, 195, 292, 441, 442, 445, 447, 464, 468, 470, 521, 524, 538, 559, 577], "last": [442, 445, 447, 451, 454, 456, 464, 467, 468, 472, 476, 493, 509, 512, 513, 517, 519, 529, 531, 532, 551, 552, 554, 559, 563, 566, 570, 574, 581, 584, 588, 589, 591, 598, 603, 607, 610, 615, 616, 621, 622, 625, 626, 627, 630, 633, 648, 651, 653, 656, 661, 664], "lastchar": [648, 649, 650, 651, 652, 653, 654, 655, 656], "lastinst": 626, "lastli": [555, 621, 627, 656], "lastopc": 626, "latch": [559, 563], "late": [451, 513, 524, 559, 615, 626], "latenc": [464, 474, 487, 493, 559, 606, 629], "later": [442, 446, 447, 449, 456, 461, 462, 463, 464, 467, 468, 481, 513, 514, 517, 519, 524, 529, 531, 532, 538, 539, 559, 561, 564, 565, 566, 571, 581, 587, 588, 589, 590, 591, 596, 600, 602, 603, 605, 607, 608, 610, 615, 621, 622, 626, 627, 628, 633, 649, 650, 651, 652, 653, 654, 656, 658, 660, 661, 662, 663, 664, 665], "latest": [462, 468, 470, 518, 529, 531, 542, 591, 598, 599, 619], "latter": [446, 451, 464, 513, 538, 541, 559, 563, 571, 589, 594, 605, 610, 615, 622, 626, 649, 660], "lattner": [591, 594, 666], "lattneracronym": 594, "lattneragre": 594, "lattnerfunct": 594, "lattnerlow": 594, "lattnerrevnum": 591, "lattnertransit": 594, "launch": [447, 460, 467, 510, 572, 635], "lava": 593, "lavamd": 593, "law": [467, 601], "lawsuit": 517, "lawyer": 517, "layer": [450, 525, 539, 565, 573, 581, 591, 598, 600, 633, 635, 636, 657, 666, 667], "layout": [453, 460, 462, 463, 497, 510, 512, 524, 526, 527, 530, 550, 573, 576, 577, 579, 582, 584, 591, 598, 610, 626, 627, 630, 651, 655], "lazi": [450, 496, 559, 633, 634, 651, 667], "lazier": 634, "lazili": [454, 537, 562, 589, 598, 633, 634, 635, 636, 637, 662], "lazyemittinglay": 573, "lazyreexport": 573, "lazyresolverfn": 626, "lb": [573, 594], "lbar": 464, "lbb0_1": 606, "lbb0_2": [604, 606], "lbb0_3": 606, "lbb0_4": 606, "lbb0_5": 606, "lbb0_n": 606, "lbd": 667, "lbl": 593, "lclang1": 591, "lclang2": 591, "lcov": 481, "lcovmap": 514, "lcpi0_0": 621, "lcssa": 560, "lcuda": 572, "lcudart": 510, "lcudart_stat": 510, "ld": [0, 2, 3, 4, 15, 38, 46, 109, 113, 130, 136, 195, 197, 223, 231, 292, 345, 368, 376, 441, 446, 447, 462, 509, 525, 529, 544, 547, 549, 572, 626], "ld64": [514, 574], "ld_preload": 602, "ldflag": [480, 544, 633, 634, 635, 636, 637, 650, 651, 652, 653, 654, 655, 656], "ldl": 510, "ldm": 559, "ldpxi": 565, "ldpxpost": 565, "ldr": [521, 567, 617], "ldrd": 451, "ldrex": 451, "ldri": 626, "ldrr": 626, "lds_direct": [9, 78, 80, 88, 107, 157, 158, 160, 162, 174, 193, 260, 262, 290, 295, 300, 307, 308, 333, 334, 407, 409, 439], "lds_size": 447, "ldststoreupd": 464, "le": [526, 572, 598, 615, 616], "lea": [464, 487, 606, 617], "lead": [451, 463, 464, 468, 472, 482, 487, 495, 496, 509, 513, 517, 527, 534, 535, 544, 549, 554, 559, 561, 587, 589, 594, 605, 606, 609, 631, 635, 649, 656, 660], "leader": [466, 467, 594], "leaf": [473, 519, 575, 629], "leak": [472, 521, 526, 557, 559, 604, 606, 621, 659], "leaki": 561, "leaksanit": [561, 598], "leap": 588, "leaq": 604, "leari": 510, "learn": [465, 467, 529, 559, 561, 566, 571, 585, 588, 589, 593, 594, 607, 632, 634, 654, 657, 665, 666], "least": [442, 447, 450, 451, 452, 453, 454, 460, 464, 466, 467, 472, 476, 487, 491, 493, 496, 497, 509, 513, 517, 519, 525, 533, 538, 547, 548, 550, 559, 561, 563, 568, 570, 575, 587, 589, 591, 594, 599, 603, 606, 608, 610, 613, 615, 616, 626, 628, 630, 649, 650, 651, 652, 653, 654, 655, 656, 660, 661, 662, 663, 664, 665], "leasur": 516, "leav": [442, 447, 452, 457, 459, 466, 472, 495, 505, 509, 513, 517, 522, 526, 529, 534, 544, 553, 559, 561, 563, 571, 572, 573, 587, 588, 591, 596, 605, 606, 610, 626, 634], "leb": 514, "leb128": [442, 464, 473], "left": [442, 445, 446, 447, 454, 458, 463, 464, 467, 517, 524, 532, 534, 545, 559, 571, 587, 589, 615, 616, 617, 620, 625, 626, 631, 633, 649, 650, 652, 656, 660, 661, 663], "left_op": 559, "leftr": 571, "legaci": [454, 459, 462, 468, 526, 559, 573, 598, 622, 627, 629, 633, 634, 635, 636, 637, 651, 652, 653, 654, 655], "legacycompileondemandlay": 635, "legacyircompilelay": [635, 636, 637], "legacyirtransformlay": [635, 636, 637], "legacypassmanag": [627, 629, 634, 635, 636, 637, 651, 652, 653, 654, 655, 656], "legacyrtdyldobjectlinkinglay": [635, 636, 637], "legal": [442, 447, 448, 451, 510, 517, 519, 520, 527, 534, 536, 539, 540, 543, 554, 559, 565, 567, 570, 572, 575, 589, 595, 596, 598, 610, 616, 621], "legalact": 626, "legalfor": 538, "legalforcartesianproduct": 538, "legalfortypeswithmems": 538, "legalif": 538, "legalitypred": 538, "legalityqueri": 538, "legaliz": 538, "legalizeact": 626, "legalizedag": [448, 520], "legalizeop": [448, 520], "legalizerhelpertest": 539, "legalizerinfo": 540, "len": 559, "len_control": 561, "length": [442, 447, 453, 454, 464, 472, 481, 483, 504, 509, 511, 514, 527, 559, 561, 575, 576, 577, 580, 581, 582, 584, 587, 589, 595, 598, 603, 605, 606, 607, 610, 613, 615, 621, 625, 661, 662, 663, 664, 665], "lengthen": 487, "less": [442, 446, 447, 452, 453, 454, 459, 464, 467, 468, 472, 481, 493, 509, 514, 517, 522, 524, 526, 529, 533, 534, 547, 557, 559, 561, 566, 571, 584, 587, 589, 591, 594, 596, 599, 605, 610, 617, 621, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666], "lesser": [453, 559], "let": [449, 459, 464, 468, 498, 509, 510, 512, 513, 514, 527, 533, 539, 546, 552, 553, 556, 559, 562, 563, 566, 570, 571, 572, 573, 581, 586, 588, 589, 591, 601, 605, 606, 607, 609, 610, 617, 620, 626, 627, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666], "letitem": 616, "letlist": 616, "letter": [454, 467, 501, 509, 559, 594, 603, 626, 653, 654, 655, 656, 664, 665], "leukocyt": 593, "level": [442, 445, 447, 449, 450, 451, 454, 456, 457, 460, 462, 465, 468, 473, 478, 479, 493, 496, 497, 500, 501, 510, 511, 512, 513, 515, 517, 519, 523, 524, 525, 526, 527, 529, 539, 541, 548, 557, 558, 560, 563, 564, 570, 571, 572, 574, 581, 585, 589, 590, 591, 597, 598, 608, 610, 615, 620, 621, 622, 623, 624, 625, 626, 627, 628, 630, 631, 632, 633, 635, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 659, 660, 661, 662, 663, 664, 665, 666], "leverag": [466, 517, 519, 526, 529, 539, 589, 630], "lex": [616, 648, 656, 659, 660, 661, 662, 663, 664, 665], "lex_1_1_els": 447, "lex_1_1_end": 447, "lex_1_1_start": 447, "lex_1_1_then": 447, "lex_1_els": 447, "lex_1_end": 447, "lex_1_start": 447, "lex_1_then": 447, "lex_com": [659, 660, 661, 662, 663, 664, 665], "lex_end": 447, "lex_id": [659, 660, 661, 662, 663, 664, 665], "lex_numb": [659, 660, 661, 662, 663, 664, 665], "lex_start": 447, "lexer": [525, 629, 649, 650, 651, 653, 654, 655, 656, 657, 658, 660, 661, 662, 664, 665, 666, 667], "lexic": [442, 464, 467, 522, 559, 605, 610, 649, 651, 656, 660, 662], "lexicalblock": 656, "lexicograph": [467, 571], "lexidentifi": [520, 629], "lexloc": 656, "lf_arglist": 584, "lf_arrai": 584, "lf_bitfield": 584, "lf_buildinfo": 584, "lf_class": 584, "lf_endprecomp": 584, "lf_enum": 584, "lf_fieldlist": 584, "lf_func_id": 584, "lf_interfac": 584, "lf_label": 584, "lf_methodlist": 584, "lf_mfunc_id": 584, "lf_mfunction": 584, "lf_modifi": 584, "lf_pad0": 576, "lf_pointer": 584, "lf_precomp": 584, "lf_procedur": 584, "lf_string_id": 584, "lf_structur": 584, "lf_substr_list": 584, "lf_typeserver2": [584, 605], "lf_udt_mod_src_lin": 584, "lf_udt_src_lin": 584, "lf_union": 584, "lf_vftabl": 584, "lf_vtshape": 584, "lfoo": 464, "lfunc1_end": 447, "lfunc_end0": 447, "lgkm_cnt": [109, 195, 292, 441], "lgkmcnt": [109, 195, 292, 441, 447], "lgkmcnt_sat": [109, 195, 292, 441], "lgtm": [512, 560, 588], "lh": [467, 559, 571, 589, 619, 649, 650, 651, 652, 653, 654, 655, 656, 660, 661, 662, 663, 664, 665], "lhs_val": [661, 662, 663, 664, 665], "lhse": [654, 655, 656], "li": [464, 467, 526, 559, 594, 608, 627], "lib": [447, 448, 462, 464, 467, 471, 478, 480, 487, 497, 500, 501, 509, 510, 515, 518, 520, 521, 526, 531, 544, 545, 550, 565, 571, 573, 589, 590, 591, 594, 598, 600, 602, 605, 611, 613, 624, 626, 627, 633, 634, 635, 636, 637, 650, 651, 652, 653, 654, 655, 656], "lib64": [462, 510, 529], "liba": 573, "libb": 573, "libc": [462, 467, 483, 510, 517, 519, 528, 529, 545, 549, 559, 561, 589, 602, 657, 666], "libcal": [538, 598, 620], "libcallfor": 538, "libcallif": 538, "libclang_rt": [548, 628], "libclc": [462, 517, 591], "libcmt": 531, "libcuda": 572, "libcxx": [460, 462, 529, 591, 594, 598, 599], "libcxxabi": [460, 462, 529, 591, 598], "libdir": 480, "libffi": [462, 586], "libfil": 480, "libfoo": 573, "libfuzz": 525, "libgcc": [519, 604], "libgcc1": 550, "libit": 509, "libllvm": [460, 462, 529, 586], "libllvmcor": 589, "libllvmir": 589, "liblto": [544, 594], "liblzma": 550, "libm": [650, 651, 661, 662], "libnam": [480, 627], "libomp": 599, "libopag": 586, "libpartit": 521, "libpath": [489, 521], "libpfm": 462, "libpo": 509, "librari": [442, 450, 451, 452, 454, 462, 463, 469, 471, 474, 476, 478, 479, 480, 481, 490, 494, 496, 497, 500, 501, 507, 508, 511, 515, 517, 518, 522, 524, 526, 527, 528, 531, 539, 545, 548, 549, 550, 553, 558, 562, 572, 574, 580, 587, 597, 598, 600, 605, 606, 619, 621, 624, 625, 626, 629, 631, 633, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 664, 666], "library_nam": 558, "librarygroup": 558, "librarynam": [526, 590], "libremark": 600, "librt": 592, "libsampl": 590, "libscudo": 602, "libsfgcc1": 550, "libstdc": [462, 483, 510, 518, 519, 529, 550], "libsupport": 591, "libthread_db": 515, "libtinfo": 550, "libunwind": [460, 462, 519, 529, 591, 594, 598], "libxml": 561, "libxml2": [550, 561], "libxxx": 550, "libz": 559, "lic": 587, "licens": [467, 529, 551, 592, 593, 627, 633, 634, 635, 636, 637], "license": 517, "licm": [451, 524, 554, 560, 563, 589, 627], "lie": [509, 610], "life": [487, 510, 517, 524, 528, 561, 569, 573, 598], "lifelong": 632, "lifetim": [442, 464, 513, 517, 524, 526, 545, 569, 573, 589, 627, 628, 633, 635], "lift": [524, 596, 603, 634], "light": [467, 559], "lightli": [559, 592, 599, 633], "lightweight": [467, 472, 518, 589], "like": [442, 447, 449, 450, 451, 454, 456, 458, 460, 462, 464, 466, 468, 474, 484, 487, 492, 493, 497, 509, 510, 512, 513, 514, 517, 518, 519, 520, 523, 524, 525, 526, 527, 529, 531, 532, 533, 536, 537, 538, 539, 547, 548, 550, 552, 554, 558, 559, 561, 562, 563, 564, 565, 566, 567, 570, 571, 572, 573, 574, 575, 576, 577, 581, 582, 585, 586, 587, 588, 591, 592, 593, 594, 596, 599, 600, 602, 603, 604, 605, 606, 607, 608, 610, 611, 613, 615, 616, 617, 619, 620, 621, 622, 623, 626, 627, 628, 629, 631, 633, 634, 635, 636, 637, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666], "likeli": [456, 559], "likewis": 559, "lim": 561, "limit": [17, 52, 82, 115, 139, 167, 199, 237, 266, 347, 382, 413, 442, 445, 446, 447, 451, 458, 460, 464, 465, 466, 467, 469, 472, 476, 479, 493, 495, 497, 505, 509, 516, 517, 521, 524, 526, 527, 528, 529, 533, 538, 555, 559, 561, 570, 575, 577, 587, 589, 591, 594, 597, 598, 601, 602, 603, 604, 605, 606, 608, 615, 631, 651, 652, 653, 656, 662, 663, 664], "linaro": [547, 549], "line": [449, 451, 458, 462, 463, 464, 467, 468, 469, 472, 473, 474, 476, 477, 478, 481, 482, 483, 485, 486, 487, 488, 490, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 504, 505, 506, 507, 508, 510, 514, 515, 517, 519, 521, 525, 526, 528, 529, 531, 544, 545, 549, 553, 554, 555, 558, 559, 560, 561, 565, 566, 570, 573, 574, 577, 580, 585, 586, 589, 590, 591, 594, 598, 599, 600, 602, 605, 606, 607, 615, 617, 619, 620, 621, 624, 626, 627, 629, 631, 633, 637, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666], "linear": [442, 447, 450, 464, 467, 473, 474, 527, 529, 532, 559, 577, 584, 589, 591, 596, 627], "linearscan": [464, 474, 627], "linebegin": 616, "lineend": 616, "lineno": 656, "linger": 610, "link": [442, 443, 444, 447, 450, 451, 452, 458, 460, 462, 464, 467, 469, 470, 471, 476, 480, 481, 489, 494, 495, 496, 505, 506, 507, 509, 510, 514, 517, 521, 525, 526, 530, 545, 549, 550, 551, 553, 558, 560, 561, 566, 569, 570, 571, 573, 574, 575, 577, 582, 584, 586, 587, 588, 589, 590, 591, 598, 599, 601, 602, 604, 605, 606, 610, 612, 618, 619, 621, 623, 624, 626, 627, 628, 629, 634, 635, 649, 650, 651, 653, 655, 659, 661, 662, 663, 664, 665, 666], "link_compon": 590, "linkabl": [442, 447], "linkag": [454, 464, 484, 506, 524, 529, 545, 571, 572, 575, 589, 623, 650, 656, 661], "linkagenam": [554, 559], "linkagetyp": 589, "linkallcodegencompon": 627, "linker": [47, 137, 233, 378, 446, 447, 458, 460, 461, 462, 464, 467, 471, 473, 480, 496, 500, 501, 509, 514, 525, 526, 528, 529, 544, 549, 550, 558, 572, 573, 574, 577, 582, 584, 589, 600, 602, 605, 619, 621, 624, 626, 633, 653], "linkinfo": 585, "linkonc": [454, 529, 559, 572, 589], "linkonce_odr": [454, 514, 524, 559, 572], "linkonceanylinkag": 589, "linkonceodrlinkag": 589, "linpack": [619, 625], "lint": 594, "linux": [447, 451, 462, 464, 487, 510, 515, 518, 519, 525, 529, 544, 545, 547, 548, 549, 550, 559, 561, 569, 573, 592, 598, 606, 608, 619, 621, 624, 628, 650, 651, 655], "lipo": [462, 471, 562], "liquid": 447, "lisp": [526, 657, 666], "list": [232, 377, 446, 447, 449, 450, 451, 454, 456, 458, 459, 460, 462, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 476, 478, 479, 480, 481, 482, 483, 484, 486, 487, 495, 496, 497, 498, 500, 501, 502, 504, 506, 507, 508, 512, 513, 514, 515, 517, 518, 519, 520, 522, 524, 525, 526, 529, 530, 532, 533, 535, 538, 550, 551, 552, 553, 555, 556, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 571, 572, 573, 579, 581, 582, 586, 587, 588, 590, 591, 594, 599, 600, 601, 602, 603, 604, 605, 608, 610, 613, 615, 616, 617, 619, 621, 624, 625, 626, 627, 628, 629, 632, 648, 657, 659, 666], "list_nam": 463, "list_of_list": 463, "list_property_nam": 558, "listconcat": [615, 616], "listen": 637, "listsplat": [615, 616], "lit": [449, 462, 468, 471, 531, 539, 548, 554, 590, 591, 605, 609, 619, 621], "lit_arg": 621, "lit_config": 472, "lit_filt": 472, "lit_num_shard": 472, "lit_opt": 472, "lit_run_shard": 472, "litconfig": 472, "liter": [9, 10, 78, 79, 81, 83, 88, 89, 157, 159, 164, 168, 171, 174, 175, 260, 261, 264, 267, 272, 307, 333, 407, 408, 411, 414, 419, 447, 454, 463, 466, 467, 468, 475, 493, 509, 523, 559, 565, 567, 589, 598, 613, 615, 616, 631, 648, 649, 650, 651, 652, 653, 654, 655, 656, 659, 660, 661, 662, 663, 664, 665], "literatur": 464, "lithium": 459, "litloc": 656, "litter": 517, "littl": [447, 453, 454, 464, 509, 516, 518, 522, 526, 527, 538, 539, 543, 547, 559, 563, 566, 571, 574, 585, 587, 589, 600, 605, 607, 611, 623, 626, 627, 630, 634, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 664, 665, 666], "littleaarch64": 495, "littlearm": 495, "littleriscv": 495, "litvalu": 454, "live": [442, 447, 450, 453, 462, 467, 487, 510, 519, 526, 529, 531, 535, 553, 557, 560, 562, 563, 568, 569, 587, 589, 596, 605, 606, 608, 610, 627, 650, 651, 654, 661, 665], "live_begin": 526, "live_end": 526, "live_iter": 526, "live_s": 526, "livecount": 526, "livedebugvalu": 559, "livedebugvari": 605, "livein": [487, 565, 605], "liveinterv": [464, 474], "liveintervalanalysi": 464, "liveli": 487, "liveoffset": 526, "liveonentri": 570, "liveout": [608, 610], "ljti0_0": 606, "lkern0_end": 447, "lkern1_end": 447, "lkkmcnt": 447, "ll": [451, 458, 459, 463, 464, 467, 468, 469, 471, 473, 477, 484, 485, 507, 509, 510, 512, 515, 517, 520, 522, 524, 525, 526, 527, 529, 531, 532, 533, 538, 539, 546, 547, 548, 549, 550, 551, 552, 554, 559, 565, 570, 572, 574, 587, 588, 589, 591, 599, 601, 603, 605, 610, 611, 621, 627, 628, 629, 631, 633, 634, 635, 648, 649, 650, 651, 652, 653, 654, 655, 656, 658, 659, 660, 661, 662, 663, 664, 665, 666], "llazyjitbuild": 573, "llbuilder": 665, "llc": [458, 464, 468, 469, 471, 474, 523, 525, 526, 529, 531, 548, 553, 554, 559, 565, 572, 574, 600, 605, 610, 621, 626, 627, 629, 655], "lld": [447, 462, 467, 489, 529, 548, 549, 574, 591, 594, 598, 600], "lldb": [462, 467, 515, 517, 529, 558, 568, 573, 589, 591, 594, 605], "llgo": [591, 598], "lli": [469, 471, 473, 515, 529, 531, 553, 574, 627], "llibnam": 509, "lljit": 598, "lljitbuild": 573, "lljitexampl": 573, "lljitwithlazyreexport": 573, "lllazyjitbuild": 573, "llld1": 591, "llld2": 591, "lllexer": [520, 629], "lllvm1": 591, "lllvm2": 591, "llnl": 593, "llocat": 545, "llparser": [520, 629], "llt": 533, "lltok": 520, "llvalu": [661, 662, 663, 664, 665], "llvm": [442, 448, 449, 461, 468, 469, 470, 508, 509, 510, 515, 523, 524, 528, 530, 534, 535, 537, 538, 539, 540, 542, 543, 545, 549, 555, 557, 558, 564, 565, 566, 569, 570, 571, 573, 574, 575, 576, 577, 581, 582, 584, 585, 588, 593, 594, 599, 601, 602, 606, 607, 615, 616, 617, 619, 620, 622, 623, 631, 633, 634, 635, 636, 637, 648, 649, 653, 655, 656, 659, 660, 664], "llvm1": 591, "llvm2": 591, "llvm_": [463, 627], "llvm_abi_breaking_check": 462, "llvm_addr2line_opt": 475, "llvm_addrsig": 502, "llvm_all_target": [529, 626], "llvm_analysi": [661, 662, 663, 664, 665], "llvm_ani": 520, "llvm_append_vc_rev": 462, "llvm_attribute_weak": 627, "llvm_build_32_bit": 462, "llvm_build_benchmark": 462, "llvm_build_dir": 529, "llvm_build_doc": 462, "llvm_build_exampl": 462, "llvm_build_instrumented_coverag": 462, "llvm_build_llvm_dylib": [460, 462, 529], "llvm_build_root": 462, "llvm_build_test": 462, "llvm_build_tool": 462, "llvm_ccache_build": 462, "llvm_ccache_dir": 462, "llvm_ccache_maxs": 462, "llvm_cmake_dir": 462, "llvm_compiler_job": 462, "llvm_create_xcode_toolchain": 462, "llvm_debug": [458, 507, 509], "llvm_definit": 462, "llvm_dependent_librari": 521, "llvm_dir": [462, 571], "llvm_distribution_compon": 460, "llvm_doxygen_qch_filenam": 462, "llvm_doxygen_qhelpgenerator_path": 462, "llvm_doxygen_qhp_cust_filter_nam": 462, "llvm_doxygen_qhp_namespac": 462, "llvm_doxygen_svg": 462, "llvm_dylib_compon": [460, 462, 529], "llvm_enable_abi_breaking_check": 589, "llvm_enable_assert": [462, 589], "llvm_enable_bind": 462, "llvm_enable_dia_sdk": 462, "llvm_enable_doxygen": [462, 529], "llvm_enable_doxygen_qt_help": 462, "llvm_enable_eh": 462, "llvm_enable_expensive_check": 462, "llvm_enable_ffi": 462, "llvm_enable_id": 462, "llvm_enable_libcxx": 462, "llvm_enable_libpfm": 462, "llvm_enable_lld": 462, "llvm_enable_lto": [460, 462], "llvm_enable_p": 462, "llvm_enable_pedant": 462, "llvm_enable_project": [460, 462, 529, 621], "llvm_enable_rtti": 462, "llvm_enable_runtim": 460, "llvm_enable_sphinx": [462, 529], "llvm_enable_thread": 462, "llvm_enable_unwind_t": 462, "llvm_enable_warn": 462, "llvm_enable_werror": 462, "llvm_enable_z3_solv": 462, "llvm_enable_zlib": 462, "llvm_executionengin": [662, 663, 664, 665], "llvm_executionengine_orc_kaleidoscopejit_h": [633, 634, 635, 636, 637], "llvm_external_": 462, "llvm_external_project": 462, "llvm_force_use_old_toolchain": 462, "llvm_gc_root_chain": 526, "llvm_gcc_dir": 620, "llvm_include_benchmark": 462, "llvm_include_dir": 462, "llvm_include_exampl": 462, "llvm_include_test": 462, "llvm_include_tool": 462, "llvm_install_binutils_symlink": 462, "llvm_install_cctools_symlink": 462, "llvm_install_doxygen_html_dir": 462, "llvm_install_ocamldoc_html_dir": 462, "llvm_install_sphinx_html_dir": 462, "llvm_install_toolchain_onli": 460, "llvm_install_util": 462, "llvm_lib": 462, "llvm_libdir_suffix": 462, "llvm_library_vis": 526, "llvm_link_llvm_dylib": [460, 462], "llvm_linker_opt": 521, "llvm_lit_arg": 462, "llvm_lit_tools_dir": [462, 531], "llvm_map_components_to_libnam": 462, "llvm_map_components_to_librari": 462, "llvm_obj_root": [590, 620, 621], "llvm_on_unix": 611, "llvm_on_xyz": 611, "llvm_optimized_tablegen": [462, 529], "llvm_package_vers": 462, "llvm_parallel_compile_job": 462, "llvm_parallel_link_job": 462, "llvm_profdata_fil": [449, 462], "llvm_project": 573, "llvm_reverse_iter": 462, "llvm_revis": 462, "llvm_runtime_distribution_compon": 460, "llvm_scalar_opt": [662, 663, 664, 665], "llvm_site_config": [531, 621], "llvm_source_prefix": 462, "llvm_src_dir": 547, "llvm_src_root": [590, 620], "llvm_stackmap": 608, "llvm_static_link_cxx_stdlib": 462, "llvm_svn_rw": 515, "llvm_symbolizer_opt": [475, 506], "llvm_sympart": 521, "llvm_tablegen": 462, "llvm_target": [662, 663, 664, 665], "llvm_target_arch": 462, "llvm_target_definit": 626, "llvm_targets_to_build": [460, 462, 518, 529, 531], "llvm_temporarily_allow_old_toolchain": 462, "llvm_tools_binary_dir": 462, "llvm_tripl": 487, "llvm_unreach": [467, 571, 589], "llvm_use_intel_jitev": 462, "llvm_use_link": 462, "llvm_use_newpm": 462, "llvm_use_oprofil": 462, "llvm_use_perf": 462, "llvm_use_relative_paths_in_debug_info": 462, "llvm_use_relative_paths_in_fil": 462, "llvm_use_sanit": 462, "llvm_yaml_is_document_list_vector": 631, "llvm_yaml_is_flow_sequence_vector": 631, "llvm_yaml_is_sequence_vector": 631, "llvm_yaml_strong_typedef": 631, "llvmanalysi": 590, "llvmasmpars": 590, "llvmbb": 528, "llvmbc": 454, "llvmbitcod": 520, "llvmbitread": 590, "llvmbuild": [467, 479, 528], "llvmbuilder": 662, "llvmcfiverifi": 461, "llvmconfig": 462, "llvmcontext": [559, 573, 574, 600, 629, 633, 634, 650, 651, 652, 653, 654, 655, 656], "llvmcontextimpl": 629, "llvmcore": [551, 590, 599], "llvmcreatedisasm": 567, "llvmcreatesimplemcjitmemorymanag": 608, "llvmdevmeet": 542, "llvmdisasminstruct": 567, "llvmdisassembler_option_usemarkup": 567, "llvmdummi": 626, "llvmdummyasmprint": 626, "llvmdummycodegen": 626, "llvmfoldingbuild": 662, "llvmfuzzeriniti": 561, "llvmfuzzertestoneinput": 561, "llvmgccdir": 620, "llvmgetpassplugininfo": 627, "llvmgettypekind": 520, "llvmgold": 544, "llvmgrep": 529, "llvmhello": 627, "llvminitializesparcasmprint": 626, "llvminitializesparctargetinfo": 626, "llvmlab": 591, "llvmlib": 590, "llvmlibthin": 489, "llvmmemorymanagerallocatedatasectioncallback": 608, "llvmorg": [529, 568, 591], "llvmpassnam": 462, "llvmpush": 591, "llvmremarkentrydispos": 600, "llvmremarkentryref": 600, "llvmremarkparsercreateyaml": 600, "llvmremarkparserdispos": 600, "llvmremarkparsergetnext": 600, "llvmremarkparserhaserror": 600, "llvmremarkparserref": 600, "llvmrock": 467, "llvmscalaropt": 590, "llvmsetdisasmopt": 567, "llvmsupport": [529, 590], "llvmtarget": 590, "llvmtargetmachin": 626, "llvmtop": 627, "llvmtransformutil": 590, "llvmtypekind": 520, "llvmtyperef": 520, "llvmweekli": 568, "lma": [496, 629], "lmalloc": 509, "lmerg": 591, "lmyproj1": 591, "ln": [464, 529, 544, 547, 550], "lnt": [550, 591, 599], "lo": [447, 533, 559], "lo12": 521, "lo16": 464, "load": [41, 42, 43, 133, 134, 226, 227, 228, 371, 372, 373, 442, 445, 450, 451, 452, 453, 454, 458, 462, 467, 468, 469, 472, 473, 474, 476, 479, 484, 495, 497, 498, 501, 507, 509, 513, 515, 517, 519, 521, 523, 526, 527, 533, 534, 538, 539, 541, 545, 553, 554, 558, 560, 561, 562, 563, 565, 567, 570, 571, 572, 573, 579, 587, 589, 591, 595, 596, 597, 598, 602, 605, 608, 609, 610, 621, 623, 626, 628, 629, 637, 654, 655, 656, 665], "loadabl": [495, 526], "loadable_modul": 526, "loaded1": 605, "loaded2": 605, "loader": [447, 529, 565, 606, 651], "loadinst": 467, "loadlal": 559, "loadlibraryperman": [635, 636, 637], "loadmodul": 573, "loadmoduleoncontext": 573, "loadobject": 564, "loadregfromaddr": 626, "loadregfromstackslot": [464, 626], "loadsdnod": 589, "loc": [486, 521, 605, 610, 626, 656], "loc0": 608, "loc1": 608, "local": [442, 447, 450, 454, 455, 464, 467, 468, 473, 474, 481, 484, 486, 492, 494, 495, 505, 509, 510, 513, 517, 519, 522, 526, 535, 547, 548, 549, 554, 560, 564, 565, 569, 571, 572, 575, 587, 589, 594, 596, 602, 605, 606, 609, 610, 613, 616, 621, 624, 627, 631, 650, 651, 658, 659, 661, 662], "local_buff": 606, "local_release_x": 591, "local_unnamed_addr": [454, 521, 559], "localaddress": 559, "localdynam": [454, 559], "localescap": 519, "localexec": [454, 559], "localrecov": 519, "localrepo": 591, "locat": [17, 48, 61, 115, 146, 199, 246, 293, 298, 303, 324, 347, 391, 445, 447, 450, 451, 460, 462, 464, 467, 470, 471, 472, 475, 476, 479, 493, 496, 497, 509, 510, 514, 519, 521, 523, 524, 526, 527, 528, 535, 550, 553, 559, 560, 564, 565, 567, 572, 575, 582, 587, 589, 590, 597, 599, 600, 601, 602, 607, 608, 610, 611, 621, 625, 626, 631, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 653, 654, 664, 665], "lock": [451, 524, 559, 573, 589, 591, 602, 627], "lockstep": 591, "loclist": [442, 486], "loclistproc": 442, "loclistsptr": 442, "loclistsptrproc": 442, "locstat": 471, "lod": 445, "lodg": 573, "log": [448, 450, 458, 468, 472, 517, 529, 532, 554, 561, 573, 584, 587, 588, 589, 591, 606, 620, 625, 628, 629, 630, 634], "log10": 625, "log2": 625, "log_arg1": 628, "log_detail": 573, "log_fast": 573, "logallunhandlederror": [636, 637], "logarithm": [454, 559, 589], "logcount": 577, "logerror": [649, 650, 651, 652, 653, 654, 655, 656], "logerrorp": [649, 650, 651, 652, 653, 654, 655, 656], "logerrorv": [650, 651, 652, 653, 654, 655, 656], "logfil": 628, "logger": [448, 601], "logic": [446, 447, 464, 467, 468, 472, 493, 513, 517, 527, 536, 552, 558, 559, 571, 577, 587, 589, 596, 606, 633, 649, 652, 653, 654, 661, 663, 664, 665], "long": [442, 449, 450, 451, 456, 458, 459, 463, 464, 466, 467, 469, 472, 478, 481, 493, 498, 511, 517, 519, 521, 522, 524, 525, 527, 529, 532, 535, 539, 545, 552, 559, 569, 581, 585, 588, 589, 599, 601, 605, 606, 607, 610, 611, 616, 621, 626, 627, 631, 634, 637, 650, 651, 657, 661, 666], "longer": [442, 447, 451, 457, 460, 464, 466, 498, 510, 522, 524, 526, 529, 534, 535, 548, 555, 559, 561, 566, 573, 587, 589, 590, 591, 594, 598, 603, 627, 634, 651, 654, 665], "longjmp": [559, 657, 666], "look": [448, 450, 451, 454, 462, 463, 464, 466, 467, 468, 472, 486, 493, 497, 504, 506, 509, 510, 512, 513, 514, 515, 517, 519, 520, 521, 526, 527, 529, 531, 532, 533, 538, 544, 551, 552, 558, 559, 560, 562, 563, 565, 566, 568, 570, 571, 572, 573, 574, 577, 581, 582, 585, 587, 588, 589, 590, 591, 592, 594, 600, 604, 605, 606, 607, 608, 610, 613, 615, 616, 621, 623, 624, 626, 627, 628, 629, 630, 631, 633, 634, 635, 649, 650, 651, 652, 653, 654, 655, 656, 660, 661, 662, 663, 664, 665, 666], "lookup": [467, 486, 506, 529, 559, 571, 573, 575, 584, 585, 587, 589, 613, 615, 626, 630, 633, 634, 650, 653, 657, 661, 664, 665, 666], "lookup_funct": [661, 662, 663, 664, 665], "lookupflag": [635, 636, 637], "lookuptarget": 655, "loooong": 591, "loop": [447, 450, 451, 464, 468, 487, 493, 510, 513, 516, 524, 526, 528, 529, 538, 554, 560, 561, 570, 571, 574, 589, 596, 598, 610, 616, 619, 624, 626, 648, 649, 650, 651, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 664, 665, 666], "loop_bb": [663, 664, 665], "loop_end_bb": [663, 664, 665], "loop_header_weight": 559, "loopanalysi": 516, "loopbb": [652, 653, 654, 655, 656], "loopcond": [652, 653, 654, 655, 656, 663, 664, 665], "loopdistribut": 622, "loopend": [652, 653, 654, 655, 656, 665], "loopendbb": [652, 653, 654, 655, 656], "loopfullunrol": 622, "loophead": [559, 652, 653], "loopid": 622, "loopinfo": [594, 627], "loopinfobas": 589, "loopinfowrapperpass": 627, "loopinterchang": 622, "looppass": [563, 574], "looppassmanag": 563, "looprerol": 619, "looprot": 563, "loopsimplifi": 563, "loopstrengthreduc": 598, "loopunrol": 622, "loopunrollandjam": 622, "loopunswitch": [524, 587], "looputil": 627, "loopvector": [596, 622], "loopvectorizationplann": 596, "loos": [533, 617], "lore": 449, "lose": [467, 543, 591, 605, 606, 613, 627, 657, 666], "loss": [446, 526, 554, 589, 591, 606], "losslessli": 571, "lost": [446, 519, 522, 554, 559, 605, 606, 622, 657, 666], "lot": [449, 458, 459, 463, 464, 467, 509, 517, 520, 522, 526, 527, 529, 533, 539, 547, 552, 555, 559, 565, 586, 587, 589, 591, 605, 606, 617, 620, 626, 627, 628, 631, 635, 649, 650, 651, 653, 654, 656, 657, 659, 660, 661, 662, 664, 665, 666], "love": 589, "low": [58, 109, 215, 226, 228, 243, 388, 441, 442, 445, 446, 447, 452, 454, 464, 478, 493, 497, 500, 501, 509, 513, 520, 526, 527, 528, 529, 538, 541, 545, 559, 569, 571, 572, 581, 589, 596, 606, 610, 611, 615, 626, 630, 649, 653, 654, 660, 664, 665], "lower": [442, 445, 450, 451, 453, 464, 467, 493, 494, 508, 510, 519, 520, 522, 524, 534, 535, 538, 540, 557, 565, 569, 573, 584, 594, 595, 598, 602, 606, 608, 613, 625, 626, 649, 653, 654, 657, 660, 664, 665, 666], "lower16": 521, "lower_bound": 589, "lower_cas": 594, "loweralloc": 627, "lowerbound": 559, "lowercal": 629, "lowercas": [626, 651, 662], "lowerfor": 538, "lowerfp_to_sint": 626, "lowerif": 538, "loweroper": 626, "lowertypetest": 623, "lowest": [442, 447, 451, 453, 514, 534, 559, 649, 650, 651, 652, 653, 654, 655, 656, 660, 661, 662, 663, 664, 665], "lpad": [513, 519, 559], "lpae": 451, "lpc0": 565, "lpechacek": 452, "lpm": 627, "lq": 493, "lqueue": 493, "lr": [464, 559, 565], "lrt": 510, "lsampl": 590, "lsb": [141, 464, 630], "lsb_extract": 559, "lsda": 560, "lsl": 521, "lst": 615, "lsunit": 493, "lt": [476, 481, 517, 529, 572, 615, 616], "ltmp": 521, "ltmp1": [565, 610], "lto": [454, 460, 513, 560, 562, 574, 598, 600, 622, 623], "lto2": 559, "lto_codegen_add_modul": 562, "lto_codegen_add_must_preserve_symbol": 562, "lto_codegen_compil": 562, "lto_codegen_cr": 562, "lto_codegen_set_debug_model": 562, "lto_codegen_set_pic_model": 562, "lto_module_cr": 562, "lto_module_create_from_memori": 562, "lto_module_dispos": 562, "lto_module_get_macho_cputyp": 562, "lto_module_get_num_symbol": 562, "lto_module_get_symbol_attribut": 562, "lto_module_get_symbol_nam": 562, "lto_module_is_object_fil": 562, "lto_module_is_object_file_for_target": 562, "lto_module_is_object_file_in_memori": 562, "lto_module_is_object_file_in_memory_for_target": 562, "ltopostlink": 559, "ltovis": 598, "lua": 526, "luckili": 526, "lud": 593, "lui": 598, "lv": [571, 595], "lvalu": 589, "lvaluerefer": 576, "lvaluerefthispoint": 576, "lvl": [594, 629], "lvm": 656, "lwe": [0, 2, 3, 4], "ly": 560, "lz": 559, "m": [0, 2, 3, 4, 5, 6, 7, 8, 442, 443, 447, 450, 464, 466, 467, 472, 476, 494, 496, 502, 509, 511, 514, 516, 519, 521, 529, 559, 561, 571, 573, 574, 579, 589, 594, 596, 598, 605, 610, 619, 622, 626, 627, 629, 633, 634, 635, 636, 637], "m0": [9, 10, 53, 54, 55, 71, 77, 78, 79, 80, 83, 85, 86, 87, 88, 140, 151, 157, 158, 159, 160, 161, 162, 163, 168, 169, 171, 172, 173, 174, 238, 239, 240, 254, 260, 261, 262, 263, 267, 269, 270, 271, 295, 296, 300, 301, 307, 308, 309, 328, 333, 334, 335, 383, 384, 385, 401, 407, 408, 409, 410, 414, 416, 417, 418], "m1": [559, 573, 591], "m2": [559, 573], "m35qpb": 629, "m3writenmisc1": 626, "m55": 598, "m64": 518, "m7170": 447, "m_": 594, "m_func": 589, "m_op_sel": [0, 5, 6, 7, 8, 48, 293, 298, 303, 324], "m_op_sel_hi": [0, 5, 6, 7, 8, 48, 293, 298, 303, 324, 443], "mac": 467, "mach": [454, 482, 491, 495, 502, 511, 559], "mach_universal_binari": 506, "machin": [442, 447, 453, 461, 462, 468, 471, 472, 473, 474, 476, 481, 486, 489, 508, 510, 515, 517, 518, 526, 529, 531, 532, 536, 538, 543, 546, 547, 549, 550, 554, 559, 560, 561, 564, 571, 572, 573, 577, 589, 591, 594, 597, 598, 605, 613, 619, 624, 625, 627, 630, 637, 651, 656, 657, 662, 666, 668], "machinebasicblock": [565, 589, 626], "machineblockfrequencyinfo": 455, "machinecodeemitt": 626, "machinecombin": 598, "machineconstantpool": [464, 565], "machineconstantpoolvalu": 565, "machineframeinfo": 464, "machinefunct": [535, 536, 537, 541, 565, 589, 594, 605], "machinefunctioninfo": [464, 565], "machinefunctionpass": [574, 626, 629], "machineinstr": [473, 474, 523, 533, 535, 536, 537, 594, 613, 621, 626], "machineinstrbuild": 533, "machineir": [533, 598], "machineirbuild": 533, "machinememoperand": [451, 534, 538], "machinemoduleinfo": 565, "machineoperand": [464, 534, 594, 626], "machinepassregistri": 627, "machinepassregistrynod": 627, "machineregisterinfo": [464, 533, 543, 594], "machineri": [552, 620], "macho": [454, 464, 473, 495, 496, 501, 502, 564, 573, 600, 608], "macho2": 502, "machoobjectfil": 589, "macinfo": 559, "maco": [462, 510, 515, 529, 561, 574, 589, 599, 619, 621, 627], "macosx10": 559, "macosx_deployment_target": 599, "macport": 586, "macro": [462, 467, 472, 481, 486, 507, 509, 510, 514, 519, 559, 561, 613, 617, 626, 627, 651, 662], "macrofus": 598, "macronam": 616, "made": [442, 447, 450, 453, 454, 457, 461, 464, 467, 510, 516, 517, 519, 522, 523, 524, 527, 528, 545, 548, 551, 552, 559, 566, 570, 571, 573, 576, 587, 589, 590, 591, 594, 598, 600, 602, 603, 604, 605, 606, 610, 613, 614, 617, 623, 627, 631, 651, 652, 654, 657, 663, 665, 666], "mag": 559, "magic": [451, 529, 559, 561, 581, 589, 600, 605, 653, 664], "magnif": [648, 653, 659, 664], "magnitud": [534, 559], "mai": [0, 1, 2, 3, 4, 5, 6, 7, 8, 14, 17, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 42, 43, 46, 47, 49, 50, 51, 52, 59, 109, 112, 115, 121, 122, 123, 124, 125, 126, 134, 136, 137, 138, 139, 144, 195, 196, 199, 205, 206, 207, 212, 213, 214, 215, 227, 228, 231, 232, 233, 234, 235, 236, 237, 244, 292, 294, 299, 304, 305, 306, 313, 322, 325, 326, 327, 330, 344, 347, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 372, 373, 376, 377, 378, 379, 380, 381, 382, 389, 441, 442, 443, 444, 445, 446, 447, 448, 451, 453, 454, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 476, 481, 486, 487, 488, 493, 494, 495, 496, 498, 500, 501, 505, 509, 510, 512, 513, 514, 515, 516, 517, 519, 520, 521, 522, 524, 525, 526, 527, 529, 531, 533, 534, 535, 538, 539, 544, 545, 546, 547, 548, 549, 551, 552, 554, 555, 557, 558, 559, 560, 561, 562, 563, 564, 565, 568, 569, 570, 572, 573, 574, 575, 577, 581, 582, 584, 585, 587, 588, 589, 590, 591, 592, 594, 596, 598, 601, 602, 603, 605, 606, 608, 609, 610, 611, 615, 616, 617, 619, 620, 621, 622, 623, 625, 626, 627, 628, 629, 630, 631, 634, 635, 636, 637, 650, 651, 652, 653, 654, 655, 656, 657, 659, 661, 663, 664, 665, 666], "mail": [465, 466, 512, 517, 525, 529, 546, 551, 560, 561, 566, 568, 588, 590, 598, 599, 601, 603, 610, 628, 629, 632, 657, 666], "mailer": 517, "main": [442, 453, 455, 457, 459, 460, 462, 464, 467, 481, 487, 493, 495, 500, 501, 504, 506, 509, 513, 514, 515, 516, 517, 519, 525, 528, 529, 530, 531, 532, 533, 537, 539, 544, 545, 546, 549, 551, 557, 558, 559, 561, 562, 563, 566, 572, 573, 587, 589, 591, 594, 598, 600, 605, 607, 615, 617, 621, 623, 624, 626, 627, 628, 629, 633, 634, 637, 649, 650, 651, 652, 653, 654, 655, 656, 657, 660, 661, 662, 663, 664, 665, 666], "main_loop": [660, 661, 662, 663, 664, 665], "mainfun": 637, "mainjd": [573, 633, 634], "mainli": [459, 493, 510, 516, 533, 559, 563, 571, 590, 613], "mainlin": [517, 551, 591], "mainloop": [649, 650, 651, 652, 653, 654, 655, 656], "mainsym": 573, "mainsymbolnam": 573, "maintain": [442, 447, 450, 451, 454, 457, 459, 462, 463, 464, 466, 467, 468, 476, 509, 510, 512, 513, 517, 518, 520, 526, 538, 551, 559, 571, 573, 579, 581, 589, 591, 594, 598, 602, 603, 605, 608, 611, 617, 627, 630], "mainten": [467, 517, 556, 562, 598], "maj": 599, "major": [442, 450, 464, 466, 467, 468, 514, 519, 522, 524, 529, 531, 539, 540, 543, 545, 551, 563, 571, 573, 574, 575, 577, 586, 587, 589, 591, 592, 596, 598, 603, 605, 617, 621, 626, 654, 665], "majorvers": 577, "make": [442, 445, 447, 448, 449, 450, 451, 453, 454, 457, 458, 459, 461, 462, 463, 464, 465, 468, 469, 472, 473, 475, 476, 479, 480, 481, 487, 492, 493, 495, 508, 509, 510, 512, 513, 514, 515, 518, 519, 524, 525, 526, 527, 528, 529, 530, 531, 532, 534, 537, 538, 539, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 557, 558, 559, 560, 561, 562, 563, 566, 568, 570, 571, 572, 573, 574, 577, 584, 586, 587, 588, 590, 591, 592, 594, 596, 597, 598, 599, 601, 602, 603, 605, 607, 608, 609, 610, 611, 614, 615, 617, 619, 620, 621, 622, 625, 626, 627, 629, 630, 631, 633, 634, 635, 636, 637, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666], "make_error": 589, "make_error_cod": 589, "make_fallible_end": 589, "make_fallible_itr": 589, "make_pair": [571, 654, 655, 656], "make_rang": 589, "make_shar": [635, 636], "make_uniqu": [573, 633, 634, 635, 636, 637, 649, 650, 651, 652, 653, 654, 655, 656], "makefil": [462, 464, 479, 480, 526, 528, 529, 553, 562, 621, 649, 650, 661], "makelight": 467, "maken": 637, "makestruct": 510, "maketir": 467, "makeup": 589, "makevehicl": 467, "malform": [458, 510, 561, 584, 587, 589], "malici": [603, 606], "malloc": [513, 526, 545, 561, 569, 589, 597, 602, 627, 657, 666], "malloc_limit_mb": 561, "mallocbench": 620, "malyutin": 594, "malyutindistinguish": 594, "man": [462, 509, 597, 621], "manag": [442, 447, 458, 462, 465, 468, 469, 493, 510, 512, 522, 523, 525, 526, 527, 529, 531, 545, 546, 551, 559, 560, 563, 564, 572, 574, 589, 599, 603, 608, 610, 622, 626, 627, 633, 634, 635, 636, 637, 651, 652, 653, 654, 657, 665, 666], "mandat": [464, 559, 591], "mandatori": [445, 468, 524, 531, 533, 538, 559, 589, 600, 626], "mandel": [653, 664], "mandelbrot": [648, 653, 659, 664], "mandelconverg": [653, 664], "mandelhelp": [653, 664], "mangl": [468, 471, 482, 496, 506, 517, 559, 573, 575, 600, 605, 633, 634, 636, 637], "mangleandintern": [573, 633, 634], "manglednam": [635, 636, 637], "manglednamestream": [635, 636, 637], "mangler": [626, 633, 635, 636, 637], "mani": [442, 449, 450, 451, 452, 453, 454, 455, 456, 458, 460, 463, 464, 466, 467, 468, 484, 487, 493, 495, 505, 509, 510, 519, 520, 522, 523, 525, 526, 527, 529, 531, 533, 534, 535, 537, 538, 539, 549, 550, 552, 553, 554, 557, 558, 559, 561, 563, 570, 572, 573, 577, 581, 587, 588, 589, 591, 593, 594, 598, 599, 605, 606, 608, 610, 611, 620, 621, 625, 626, 627, 628, 630, 631, 633, 649, 650, 651, 652, 653, 654, 657, 659, 660, 661, 662, 663, 664, 665, 666], "manifest": 559, "manifesto": 517, "manipul": [442, 447, 464, 467, 471, 476, 479, 495, 497, 522, 555, 569, 589, 596, 598, 602, 623, 654, 665], "manner": [442, 445, 447, 451, 464, 465, 468, 476, 514, 517, 519, 527, 559, 570, 574, 589, 592, 606, 610, 626], "manpag": 463, "manual": [447, 458, 461, 462, 464, 467, 507, 512, 517, 524, 526, 527, 529, 530, 532, 535, 546, 551, 552, 573, 585, 588, 591, 597, 605, 606, 610, 617, 619, 621, 624, 625, 626, 627, 628, 633, 666], "map": [442, 450, 454, 467, 470, 472, 481, 483, 493, 496, 497, 500, 501, 509, 520, 521, 533, 534, 536, 540, 541, 545, 560, 564, 570, 571, 572, 573, 575, 580, 584, 585, 591, 597, 598, 602, 605, 606, 613, 623, 624, 625, 628, 629, 630, 635, 636, 637, 649, 650, 651, 652, 653, 654, 655, 656, 661, 662, 663, 664, 665, 668], "mapopt": 631, "mappingnorm": 631, "mappingnormalizationheap": 631, "mappingtrait": 631, "maprequir": 631, "mapsectionaddress": 564, "maptag": 631, "mapvector": 467, "march": [468, 473, 474, 493, 549, 550, 553, 569, 596, 605, 606, 655], "margin": 606, "mark": [442, 447, 449, 451, 454, 461, 464, 467, 472, 487, 493, 495, 498, 510, 513, 514, 515, 519, 521, 523, 524, 526, 529, 532, 551, 559, 566, 567, 571, 576, 587, 589, 606, 608, 610, 617, 621, 623, 626, 628, 630], "markdown": 607, "markdownquickstarttempl": 566, "marker": [464, 467, 472, 509, 517, 589, 610, 630], "markup": [447, 467, 561, 566, 607], "marshal": 608, "mask": [58, 232, 243, 377, 388, 442, 445, 446, 447, 451, 464, 467, 468, 524, 533, 534, 555, 596, 606, 613, 626, 630, 631], "maskedbitset": 631, "maskedbitsetcas": 631, "maskedir": 595, "maski": 559, "maski64": 559, "maskipopcnt": 559, "masm": [577, 584], "mass": 517, "massag": 548, "massiv": [484, 528, 561, 613], "mast": 603, "master": [517, 528, 529, 532, 546, 585, 588, 590, 591, 593], "match": [442, 445, 446, 447, 448, 451, 454, 456, 458, 460, 463, 467, 469, 471, 472, 476, 481, 483, 484, 486, 488, 493, 495, 497, 498, 505, 509, 510, 513, 514, 519, 520, 525, 526, 527, 529, 533, 534, 538, 552, 558, 559, 561, 562, 565, 569, 575, 577, 585, 587, 589, 591, 595, 598, 600, 602, 605, 610, 613, 615, 616, 621, 626, 627, 629, 630, 631, 648, 650, 651, 659, 660, 661, 662, 663, 664, 665], "matcher": [464, 468, 508, 561, 595, 613], "matchinstructionimpl": 464, "materi": [465, 533, 535, 571, 573, 596, 605], "materialis": 598, "materializationrespons": [573, 634], "materializationunit": [573, 634], "math": [463, 467, 473, 474, 509, 524, 572, 598, 605, 624, 625, 648, 651, 653, 659, 664], "mathemat": [522, 559, 571, 572, 649, 660], "matplotlib": 492, "matrix": [526, 598], "matt": 594, "matter": [451, 468, 495, 505, 517, 520, 537, 559, 603, 608, 627, 662], "matthew": [591, 603], "matthewsrevnum": 591, "mattr": [468, 473, 474, 496, 626, 655], "matur": [509, 524, 526, 603, 606], "max": [447, 468, 472, 487, 493, 498, 509, 510, 514, 559, 561, 598, 606, 619, 629], "max_dx10": 447, "max_flat_workgroup_s": 447, "max_fp16": 447, "max_int_bit": 589, "max_len": [525, 561], "max_total_tim": 561, "max_vgpr": 447, "maxatomicsizeinbitssupport": 451, "maxflatworkgroups": 447, "maxim": [454, 460, 474, 516, 559, 561, 563, 573, 659], "maximum": [447, 450, 451, 455, 462, 464, 470, 472, 478, 486, 487, 493, 509, 534, 538, 545, 561, 571, 589, 602], "maximum_operations_per_instruct": 447, "maxscalar": 538, "maxsimultaneousalloc": 545, "maxsiz": 467, "may_throw": 519, "mayalia": [450, 559], "mayb": [520, 532, 561, 606, 613, 628, 657, 666], "maybe_instru": 628, "maybeoverridden": 571, "maybevalu": 509, "mayfail": 589, "mayfail2": 589, "mayload": [493, 617], "maynot": 510, "mayreadfrommemori": 451, "maystor": [493, 617], "maytrap": 559, "maywritetomemori": [451, 589], "mb": [561, 593, 631], "mbb": [464, 626], "mbbi": 464, "mc": [447, 515, 521, 529, 560, 564, 565, 598, 621], "mca": 471, "mcasmpars": 464, "mcasmstream": 464, "mccfiinstruct": 565, "mccodeemitt": [464, 613], "mcdesc": 626, "mcdisassembl": 464, "mce": 626, "mcexpr": 464, "mcinst": [493, 613], "mcinstlow": 464, "mcinstrdesc": 533, "mcjit": [524, 573, 624, 633, 651, 652, 653, 654, 656], "mclabel": 464, "mcmodel": 521, "mcobjectstream": 464, "mcoperand": 464, "mcountinhibit": 598, "mcpu": [447, 473, 474, 487, 493, 496, 547, 550, 572, 621, 626], "mcregaliasiter": 464, "mcsectioncoff": 464, "mcsectionelf": 464, "mcsectionmacho": 464, "mcstreamer": 526, "mcsymbol": 526, "mctargetdesc": 613, "mctargetstream": 464, "md": [526, 559, 561, 566, 593], "md5": [442, 481, 498, 514], "md_prof": 456, "mdnode": [456, 559, 622], "mdstring": [456, 559], "mdtupl": 559, "me": [466, 467, 512, 517, 560, 566, 607, 651, 652, 655, 662, 663], "meabi": 473, "mean": [46, 52, 109, 136, 139, 195, 215, 226, 228, 231, 232, 237, 292, 376, 377, 382, 441, 442, 443, 445, 446, 447, 450, 452, 453, 454, 456, 457, 460, 462, 463, 464, 465, 466, 467, 468, 472, 476, 487, 493, 494, 495, 498, 505, 509, 513, 517, 519, 521, 524, 526, 527, 529, 533, 534, 538, 539, 544, 550, 551, 552, 557, 559, 561, 562, 563, 565, 569, 570, 571, 573, 574, 577, 580, 581, 582, 584, 587, 588, 589, 590, 591, 592, 594, 595, 598, 601, 602, 605, 606, 610, 611, 613, 614, 615, 616, 617, 619, 622, 623, 626, 627, 631, 634, 648, 650, 651, 652, 654, 656, 657, 659, 661, 662, 663, 665, 666], "meaning": [442, 447, 459, 467, 474, 495, 498, 507, 510, 526, 527, 559, 566, 589, 592, 607, 610, 613, 630], "meaningless": 589, "meant": [467, 507, 514, 528, 529, 531, 548, 554, 559, 566, 570, 589, 599, 601, 602, 607, 615, 616], "measur": [452, 460, 462, 487, 493, 589, 606, 619, 630], "meat": 662, "mechan": [447, 454, 461, 464, 472, 517, 519, 524, 526, 544, 545, 558, 559, 560, 564, 572, 573, 589, 592, 601, 605, 606, 610, 611, 616, 620, 623, 625, 627, 661], "med": 629, "median": 606, "mediat": [450, 517, 601], "medium": [474, 559], "meet": [442, 447, 464, 465, 466, 517, 528, 529, 538, 563, 569, 571, 596, 601, 603, 627], "meetup": 632, "megabyt": 469, "mehdi": 594, "meltdown": 606, "mem": [513, 567, 587, 622, 660, 661, 662, 663, 664, 665], "mem2ref": 610, "mem2reg": [524, 526, 589, 605, 654, 665], "mem_address": 464, "mem_not_nul": 513, "mem_ord": 447, "memalign": 602, "memarg": 557, "member": [442, 447, 463, 464, 465, 466, 467, 476, 489, 495, 496, 497, 502, 505, 510, 517, 521, 552, 559, 562, 564, 573, 575, 584, 587, 594, 598, 615, 619, 623, 625, 626, 630, 631, 633, 634, 635], "memberlist": 626, "membership": [519, 589], "memcheck": [472, 621], "memcpi": [450, 451, 598, 606], "memcpyopt": 451, "memdep": 450, "memfenc": 447, "memmov": 598, "memop": 498, "memor": 467, "memori": [15, 19, 20, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 36, 37, 38, 46, 54, 55, 60, 61, 109, 113, 117, 118, 121, 122, 123, 124, 125, 127, 128, 129, 130, 141, 145, 146, 195, 197, 201, 202, 205, 206, 207, 212, 213, 216, 217, 218, 219, 220, 221, 222, 223, 239, 240, 245, 246, 292, 322, 331, 345, 349, 350, 354, 355, 356, 357, 358, 361, 362, 363, 364, 365, 366, 367, 368, 376, 384, 385, 390, 391, 441, 445, 446, 451, 453, 462, 464, 469, 470, 472, 484, 487, 495, 496, 498, 510, 513, 515, 516, 519, 520, 522, 523, 526, 527, 529, 533, 545, 547, 553, 554, 557, 560, 561, 562, 564, 565, 567, 569, 570, 572, 573, 574, 597, 600, 602, 604, 605, 606, 608, 609, 610, 613, 623, 625, 626, 627, 628, 630, 631, 633, 634, 635, 636, 637, 649, 650, 651, 652, 653, 655, 656, 657, 659, 666], "memory_order_acq_rel": [451, 559], "memory_order_acquir": [451, 559], "memory_order_consum": 451, "memory_order_relax": [451, 559], "memory_order_releas": [451, 559], "memory_order_seq_cst": [451, 559], "memory_uri": 447, "memoryaccess": 570, "memorybuff": [467, 573], "memorydef": 570, "memorydependenceanalysi": 570, "memorydependencyanalysi": 451, "memoryphi": 570, "memorysanit": [559, 561, 598], "memoryssa": [450, 624], "memoryssawalk": 570, "memoryus": 570, "memorywithorigin": 462, "memri": [464, 626], "memrr": 626, "memset": [451, 587, 598, 637], "memtag": 569, "memtagsanit": [559, 597], "mental": [460, 465, 589], "mention": [442, 447, 453, 454, 462, 464, 467, 468, 509, 516, 529, 534, 548, 552, 558, 559, 563, 568, 571, 575, 580, 589, 591, 601, 604, 605, 610, 615], "mentorship": 466, "menu": 598, "mere": [527, 531, 559, 587, 588, 606, 610, 650, 661], "merg": [449, 450, 462, 464, 468, 481, 495, 501, 510, 514, 517, 521, 526, 529, 532, 541, 548, 559, 562, 570, 588, 589, 599, 600, 605, 606, 619, 624, 625, 649, 650, 651, 652, 653, 654, 655, 656, 660, 661, 662, 663, 664, 665], "mergabl": 587, "merge_bb": [663, 664, 665], "merge_control_fil": 561, "mergebb": [652, 653, 654, 655, 656], "mergedloadstoremot": 554, "mergefunct": 624, "merger": 571, "mesa": 447, "mesa3d": 447, "mess": 587, "messag": [52, 109, 139, 195, 237, 292, 382, 441, 447, 458, 462, 463, 466, 468, 472, 476, 487, 490, 493, 509, 519, 528, 529, 549, 553, 560, 561, 574, 588, 589, 591, 602, 613, 617, 627, 631, 655], "messi": 464, "met": [464, 526, 559, 571, 602], "meta": [464, 496, 526, 551, 559, 589, 600, 605, 608, 613, 617], "metadata": [454, 455, 459, 464, 473, 517, 524, 526, 527, 535, 545, 554, 560, 565, 571, 587, 588, 597, 598, 621, 648, 656, 659], "metadatarecord": 630, "metal": [549, 559], "metarenam": 458, "metasyntact": 458, "metatada": 456, "method": [442, 458, 460, 461, 463, 464, 468, 509, 516, 517, 520, 526, 527, 529, 536, 541, 545, 549, 551, 552, 553, 555, 557, 559, 560, 564, 571, 573, 588, 598, 605, 606, 608, 610, 613, 620, 626, 631, 633, 634, 635, 649, 650, 651, 652, 654, 661, 662, 663, 665], "methodbodi": 626, "methodologi": 519, "methodproto": 626, "metric": [455, 486, 539, 551, 561, 606, 619, 627, 629], "mexec": 598, "meyer": 467, "mf": [464, 509, 537, 574, 594], "mfc": 577, "mfctypeserverindex": 577, "mfenc": 451, "mfloat": [549, 550], "mflop": 625, "mfpu": 549, "mft": 585, "mgrid331": 593, "mi": [447, 464, 469, 536, 537, 553, 565, 594, 606, 626], "mi25": 447, "mi50": 447, "mi6": 447, "mi60": 447, "mi8": 447, "mib": 521, "michigan": 516, "micro": [442, 447, 467, 493, 593, 606], "microbenchmark": [606, 619], "microcod": 447, "microcontrol": 511, "microopbuffers": 493, "microphon": 568, "microprocessor": [464, 559, 626], "microsecond": 630, "microsoft": [464, 467, 489, 497, 509, 511, 521, 530, 546, 557, 559, 577, 581, 584, 585, 597, 603, 605], "mid": [524, 557, 559, 605], "middl": [463, 467, 517, 526, 557, 559, 581, 610], "might": [442, 450, 451, 452, 456, 457, 458, 462, 464, 465, 466, 467, 468, 476, 483, 487, 493, 509, 517, 518, 522, 524, 525, 526, 529, 531, 536, 550, 551, 552, 558, 559, 560, 561, 566, 567, 571, 573, 581, 582, 584, 588, 589, 590, 591, 593, 602, 603, 605, 606, 607, 610, 611, 613, 614, 622, 623, 625, 626, 631, 652, 655, 657, 663, 664, 665, 666], "migrat": [447, 450, 468, 517, 526, 598], "mileag": 568, "mileston": 571, "mill": 509, "million": [559, 589], "millisecond": 629, "mimic": [443, 467, 500, 501, 591], "min": [109, 195, 292, 441, 447, 468, 487, 497, 498, 501, 510, 559, 561, 598, 599, 606, 619, 629], "min_dx10": 447, "min_int_bit": 589, "mind": [466, 467, 517, 589, 592, 602, 649, 654, 660, 665], "mingw": [462, 464, 531, 598], "mingw32": [464, 546, 621], "mingw32msvc": 464, "mingw64": 529, "mini": 568, "minim": [447, 449, 451, 459, 460, 464, 467, 470, 474, 476, 487, 514, 527, 533, 539, 559, 561, 562, 573, 589, 590, 605, 606, 608, 623, 627, 630, 649, 653, 660, 664], "minimaldebuginfo": 582, "minimis": 598, "minimize_crash": 561, "minimum": [447, 462, 469, 504, 517, 520, 529, 534, 551, 553, 592, 600, 603, 605, 606, 608, 619, 626, 629, 635, 649, 660], "minimum_instruction_length": 447, "minor": [442, 464, 466, 467, 517, 551, 571, 577, 586, 589, 657, 666], "minor_process": 606, "minorvers": 577, "minscalar": 538, "minscalarsamea": 538, "minsiz": [454, 559], "minsizerel": [460, 462, 529], "minu": [442, 446, 447, 456, 559, 604], "minut": [529, 532], "mioperandinfo": 626, "mip": [451, 464, 524, 529, 533, 538, 550, 559, 594, 602, 626, 628], "mips16": 451, "mips32": 451, "mips64": 628, "mips64el": 628, "mipsel": 628, "mir": [447, 533, 536, 539, 540, 543, 559, 597], "mirdebugifi": 554, "mirror": [445, 525, 526, 652, 653, 663, 664], "mirstripdebugifi": 554, "misalign": 602, "misattribut": 554, "misbehav": 599, "miscellan": [559, 598], "miscommun": 517, "miscompil": [457, 469, 517, 529, 559, 593], "misinterpret": [445, 458], "mislead": [467, 554, 605], "mismatch": [447, 453, 467, 498, 548, 549, 559, 567, 602, 650, 651, 652, 653, 654, 655, 656, 661, 662, 663, 664, 665], "misnam": 464, "misoptim": 456, "mispredict": 606, "misrepres": [554, 605], "miss": [451, 458, 467, 493, 524, 544, 549, 550, 554, 559, 573, 589, 593, 594, 600, 605, 609, 610, 616, 620, 622, 625, 649, 653, 654, 660, 664, 665], "mission": 517, "misspecul": 606, "mistak": [465, 467, 524], "mistaken": [651, 662], "misunderstood": [522, 597], "misus": 621, "mit": [517, 606], "mitig": [493, 526, 535, 559, 569, 591, 594, 597, 598, 602, 603], "mitr": 603, "mix": [442, 451, 463, 464, 467, 468, 527, 533, 544, 558, 559, 562, 573, 589, 592, 596, 605, 606, 615], "mixtur": [442, 506, 539, 606, 615], "mkdir": [462, 529, 544, 561, 591, 619, 621, 629], "ml": [442, 526, 593, 660, 661, 662, 663, 664, 665], "mli": 662, "mlimit": 469, "mlir": 532, "mllvm": [493, 574, 625], "mm0": [464, 615, 617], "mm1": [615, 617], "mm2": [615, 617], "mm3": [615, 617], "mm4": [615, 617], "mm5": [615, 617], "mm6": [615, 617], "mm7": [615, 617], "mmi": 565, "mmio": 559, "mmx": [464, 559, 626], "mnemon": [598, 626, 628], "mnemonicalia": 464, "mno": 447, "mo": 605, "mo1": 626, "mo_cimmedi": 565, "mo_registermask": 464, "mobil": 447, "mock": [589, 621], "mod": [450, 497, 559, 562, 615, 626], "mode": [46, 62, 94, 136, 231, 232, 332, 338, 376, 377, 392, 426, 445, 446, 452, 454, 456, 462, 468, 472, 476, 480, 481, 487, 490, 495, 497, 498, 505, 509, 510, 517, 525, 526, 539, 547, 549, 559, 569, 576, 584, 589, 598, 599, 602, 606, 616, 617, 619, 621, 624, 626, 629, 630, 654, 655, 665], "model": [442, 451, 454, 457, 463, 464, 472, 474, 487, 509, 513, 517, 518, 519, 522, 526, 527, 528, 533, 553, 556, 557, 562, 573, 589, 595, 596, 597, 598, 603, 605, 613, 622, 625, 626, 631, 649, 650, 654, 655, 660, 661, 665], "moder": [467, 517, 588, 589, 601], "modern": [463, 467, 510, 511, 515, 522, 547, 568, 575, 576, 577, 580, 582, 589, 595, 606, 625, 657, 659, 666], "modest": [442, 467], "modfilecount": 577, "modfilecountarrai": 577, "modi": [497, 580], "modif": [447, 458, 461, 476, 495, 498, 505, 509, 518, 559, 571, 606, 626, 637, 656], "modifi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 14, 48, 49, 50, 51, 82, 112, 138, 167, 196, 215, 226, 228, 234, 235, 236, 266, 293, 294, 298, 299, 303, 304, 305, 306, 313, 324, 325, 326, 327, 344, 379, 380, 381, 413, 442, 448, 450, 451, 458, 462, 463, 464, 467, 495, 505, 512, 513, 519, 520, 529, 531, 532, 536, 539, 552, 554, 556, 558, 561, 567, 570, 572, 574, 576, 581, 584, 587, 588, 589, 591, 593, 596, 605, 606, 610, 613, 619, 620, 626, 627, 629, 633, 637, 651, 654, 665], "modifier0": [444, 447], "modifier1": [444, 447], "modindic": 577, "modinfo": 577, "modinfos": 577, "modistream": 580, "modr": 464, "modref": [450, 451, 615], "modrefresult": 450, "modrefv": 615, "modul": [450, 454, 458, 462, 464, 467, 470, 471, 472, 478, 484, 493, 507, 522, 524, 526, 529, 551, 554, 560, 561, 562, 564, 571, 572, 573, 574, 585, 593, 598, 605, 608, 609, 610, 613, 619, 620, 621, 623, 626, 629, 633, 635, 636, 637, 650, 651, 652, 653, 654, 656, 661, 662, 663, 664, 665], "modular": [450, 459, 507, 543, 558, 573, 592, 606, 627], "modulehandl": 635, "modulehandlet": 635, "moduleid": [621, 650, 661], "moduleindex": 577, "modulelevelpass": 627, "modulenam": 577, "modulepass": [450, 574], "modulepath": 573, "modulesummaryindex": 559, "modulesymstream": 577, "modulo": [442, 464, 559, 605], "moment": [493, 513, 526, 559, 565, 610, 635, 661], "monitor": [450, 559, 591, 598, 619], "mono": 517, "monolith": [517, 591, 592, 604], "monorepo": [588, 627], "monospac": [566, 607], "monoton": [447, 551, 559, 591], "month": [517, 528, 551, 561, 603], "more": [133, 442, 443, 444, 445, 446, 447, 450, 451, 454, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 468, 469, 472, 473, 476, 478, 481, 486, 487, 492, 493, 497, 498, 500, 501, 504, 507, 509, 510, 512, 513, 514, 517, 518, 519, 520, 522, 523, 524, 525, 526, 527, 529, 531, 533, 535, 537, 538, 539, 541, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 557, 558, 559, 560, 562, 565, 566, 567, 568, 570, 571, 572, 573, 577, 581, 584, 585, 586, 587, 588, 590, 591, 592, 593, 594, 596, 598, 599, 600, 601, 603, 604, 605, 606, 607, 608, 610, 611, 613, 614, 615, 616, 617, 619, 621, 622, 623, 624, 625, 626, 627, 629, 630, 631, 632, 633, 634, 635, 648, 649, 650, 651, 652, 653, 654, 656, 657, 659, 660, 661, 662, 663, 664, 665, 666], "moreelementsfor": 538, "moreelementsif": 538, "moreelementstonextmultipl": 538, "moreelementstonextpow2": 538, "moreov": [446, 464, 466, 468, 559, 587, 592], "most": [442, 444, 447, 448, 449, 450, 451, 453, 457, 459, 460, 462, 463, 464, 466, 467, 468, 472, 478, 480, 493, 495, 497, 502, 505, 507, 508, 509, 510, 512, 513, 515, 516, 517, 519, 520, 522, 524, 525, 526, 527, 528, 529, 533, 536, 538, 541, 545, 547, 548, 549, 550, 551, 552, 553, 555, 558, 559, 561, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 577, 584, 586, 588, 589, 590, 591, 592, 593, 594, 597, 599, 602, 603, 605, 606, 607, 608, 610, 611, 613, 616, 617, 619, 620, 622, 626, 627, 629, 630, 634, 649, 650, 651, 652, 653, 654, 656, 657, 660, 661, 663, 664, 665, 666], "mostli": [451, 464, 493, 509, 510, 529, 532, 541, 560, 570, 571, 587, 588, 605, 610, 619, 626, 630, 652, 656, 657, 663, 666], "motion": [450, 529, 559, 560, 563, 570, 627], "motiv": [556, 559, 568, 634, 652, 654, 663, 665], "motohiro": 464, "mount": [452, 518, 529], "mous": 629, "moutlin": 598, "mov": [451, 464, 468, 521, 559, 572], "mov32mr": 565, "mov32r0": 605, "mov32ri": [464, 565], "mov32rm": [565, 605], "mov64ri": [565, 626], "mov64rm": 565, "movabsq": [604, 608], "movapd": 468, "move": [442, 447, 450, 451, 452, 457, 462, 464, 467, 468, 476, 493, 513, 517, 525, 526, 528, 529, 541, 551, 554, 559, 563, 573, 587, 589, 596, 598, 605, 606, 608, 610, 614, 617, 627, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 649, 650, 651, 652, 653, 654, 655, 656, 657, 663, 666], "movhpd": 468, "movl": [468, 559, 606, 608, 610], "movmskb": 598, "movnt": 559, "movq": [606, 608, 610], "movsd": 468, "movslq": 608, "movsq": 464, "movsx": 464, "movsx16rm8w": 464, "movsx16rr8w": 464, "movsx32rm16": 464, "movsx32rr16": 464, "movsx32rr8": 464, "movsx64rr16": 464, "movsx64rr32": [464, 487, 605], "movsx64rr8": 464, "movt": 521, "movw": [521, 559], "movz": [453, 559], "mozilla": 594, "mppassmanag": 629, "mr": 615, "mri": [464, 533, 594], "mrm0m": 626, "mrm0r": 626, "mrm1m": 626, "mrm1r": 626, "mrm2m": [615, 626], "mrm2r": [615, 626], "mrm3m": 626, "mrm3r": 626, "mrm4m": 626, "mrm4r": 626, "mrm5m": 626, "mrm5r": 626, "mrm6m": 626, "mrm6r": 626, "mrm7m": 626, "mrm7r": 626, "mrmdestmem": 626, "mrmdestreg": [617, 626], "mrminitreg": 626, "mrmsrcmem": 626, "mrmsrcreg": 626, "mrt": [91, 179, 276, 423], "mrtz": [82, 91, 167, 179, 266, 276, 413, 423], "ms_abi_tripl": 621, "msa": [533, 538, 559], "msan": [561, 598], "msb": [446, 464, 630], "msb_extract": 559, "msbuild": [462, 531], "msdn": [467, 489], "msec": 625, "msf": [577, 582], "msg": [0, 2, 3, 4, 559], "msg_g": [52, 139, 237, 382], "msg_get_doorbel": [52, 382], "msg_gs_alloc_req": [52, 382], "msg_gs_done": [52, 139, 237, 382], "msg_interrupt": [52, 139, 237, 382, 447], "msg_sysmsg": [52, 139, 237, 382], "msgpack": 447, "msp430": [464, 529, 559], "mspdb": 577, "mspdbsrv": 577, "mspdbxxxx": 577, "msr": 606, "msse4": 602, "msvc": [462, 464, 467, 519, 521, 559, 577, 589, 605, 606], "mte": [559, 569], "mthumb": 549, "mtripl": [468, 473, 474, 493, 525, 559, 565, 605], "mtype": 447, "mu": 591, "much": [442, 447, 450, 451, 452, 458, 459, 460, 464, 467, 478, 489, 497, 509, 510, 517, 518, 520, 522, 524, 529, 535, 538, 544, 546, 548, 550, 552, 553, 554, 557, 559, 562, 566, 569, 570, 572, 573, 574, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 599, 601, 605, 606, 607, 608, 610, 611, 616, 617, 621, 626, 627, 628, 629, 631, 634, 649, 650, 651, 654, 657, 660, 661, 662, 665, 666], "mul": [445, 468, 527, 554, 572, 587, 615, 616, 650, 661], "mul_ri": 615, "mul_rr": 615, "mullin": 447, "multi": [445, 447, 467, 500, 509, 518, 543, 561, 585, 589, 615, 632], "multi_v": 509, "multiarch": [549, 550], "multiclass": [617, 626], "multiclassid": 616, "multiclassobject": 616, "multicor": 451, "multidef": 615, "multidimension": 559, "multilib": [518, 550], "multilin": [472, 615, 616], "multimap": 589, "multipl": [442, 446, 447, 448, 450, 451, 452, 454, 455, 459, 463, 464, 466, 467, 468, 470, 481, 483, 486, 488, 493, 494, 495, 505, 506, 509, 510, 512, 516, 517, 521, 524, 527, 529, 534, 535, 538, 541, 546, 552, 554, 557, 558, 559, 561, 563, 564, 565, 570, 571, 573, 577, 585, 587, 588, 590, 596, 598, 600, 605, 606, 608, 610, 611, 613, 615, 616, 617, 619, 621, 622, 623, 625, 626, 627, 628, 629, 631, 649, 650, 651, 652, 653, 656, 660, 661, 662, 663, 664], "multipli": [445, 447, 455, 464, 493, 498, 510, 520, 534, 560, 587, 589, 598, 605, 606], "multiplicand": 559, "multiprocessor": [526, 627], "multirepo": 591, "multiset": 589, "multisourc": [517, 553, 593, 605, 619, 620], "multithread": [526, 589, 629], "multmp": [650, 651, 652, 653, 654, 655, 656, 661, 662, 663, 664, 665], "multmp1": [650, 661], "multmp2": [650, 661], "multmp3": [650, 661], "multmp4": [651, 662], "mummergpu": 593, "mung": [527, 587], "munger_struct": 527, "musl": [561, 598], "must": [14, 22, 39, 40, 46, 47, 52, 56, 58, 62, 63, 76, 82, 93, 95, 109, 112, 119, 131, 132, 136, 137, 139, 142, 156, 167, 181, 195, 196, 203, 224, 225, 231, 232, 233, 237, 241, 243, 259, 266, 278, 292, 313, 323, 329, 332, 344, 352, 369, 370, 376, 377, 378, 382, 386, 388, 392, 393, 406, 413, 425, 427, 441, 442, 445, 446, 447, 448, 449, 451, 453, 454, 456, 462, 464, 467, 468, 472, 476, 481, 487, 493, 495, 510, 513, 517, 519, 520, 521, 522, 525, 526, 527, 529, 533, 534, 538, 539, 545, 549, 550, 551, 552, 553, 554, 557, 558, 559, 560, 561, 562, 563, 564, 565, 570, 571, 572, 573, 574, 581, 582, 587, 588, 589, 590, 591, 594, 596, 599, 602, 603, 605, 606, 607, 608, 610, 611, 613, 615, 616, 617, 620, 621, 622, 623, 626, 627, 630, 631, 633, 634, 650, 651, 652, 653, 654, 655, 656, 661, 663, 664, 665], "mustalia": [450, 559], "mustquot": 631, "musttail": 559, "mutabl": [559, 652, 653, 655, 656, 658, 659, 663, 664, 667], "mutat": [448, 467, 526, 536, 587, 589, 634, 653, 655, 656, 664], "mutatestrictfptofp": 448, "mutex": [451, 633], "mutual": [442, 491, 509, 610, 648, 659, 661], "mv": 529, "mve": 598, "mvt": [464, 533, 598, 626], "mxnack": 447, "my": [450, 517, 526, 529, 572, 591, 619, 627, 650, 651, 652, 653, 654, 655, 656, 661, 662, 663, 664, 665, 667], "my86_64flag": 631, "my86flag": 631, "my_addit": 605, "my_build_dir": 600, "my_fil": 574, "my_fmad": 572, "my_funct": 572, "my_function_fast": 572, "my_function_precis": 572, "my_fuzz": 561, "my_gwp_asan_error": 545, "my_kei": 467, "my_kernel": 572, "my_list": 463, "my_list_of_numb": 463, "my_local_branch": 591, "my_local_tag": 591, "my_opt_diff": 600, "my_opt_yaml1": 600, "my_opt_yaml2": 600, "my_other_fil": 574, "my_project": 591, "my_str": 463, "my_valu": 467, "my_yaml_fil": 600, "myalloc": 513, "myapp": 573, "myawesomeproject": 559, "mybarflag": 631, "mybison": 620, "myblock": 565, "myboolean": 605, "mybranch": 591, "mybuilddir": 462, "mycustomtyp": 631, "mydevic": 619, "mydoclist": 631, "mydoclisttyp": 631, "mydoctyp": 631, "myflag": 631, "myfoobar": 589, "myfooflag": 631, "myfunct": 572, "mygc": 526, "mygcprint": 526, "myglob": 605, "myinitprng": 561, "mylist": 631, "mylistel": 631, "mymachinefunctionpass": 574, "mymaptyp": 631, "mynewpass": 469, "myobject": 605, "myocamlbuild": [661, 662, 663, 664, 665], "myocyt": 593, "myownp3sett": 605, "mypass": [537, 589, 627], "mypassnam": 589, "mypassopt": 627, "mypatch": 588, "myproj": 591, "myregalloc": 627, "myregisteralloc": 627, "myremot": 637, "myrepo": 591, "myseq": 631, "myseqel": 631, "myservert": 637, "myset": 467, "mysteri": 527, "mystic": [657, 666], "mystringtyp": 631, "mystruct": 527, "mytarget": 561, "mytyp": 559, "mytype1": 631, "mytype2": 631, "myvar": 527, "n": [109, 195, 292, 441, 442, 445, 446, 447, 449, 450, 451, 452, 453, 454, 458, 464, 466, 467, 468, 470, 472, 476, 481, 482, 486, 487, 493, 494, 495, 498, 500, 501, 504, 505, 506, 508, 509, 513, 514, 515, 516, 519, 521, 526, 527, 529, 531, 532, 533, 544, 545, 551, 555, 559, 561, 562, 563, 569, 570, 572, 575, 579, 581, 584, 587, 589, 605, 610, 615, 616, 622, 625, 626, 627, 629, 637, 648, 649, 650, 651, 652, 653, 654, 655, 656, 659, 660, 661, 662, 663, 664, 665], "n1": [452, 591, 626], "n16": 572, "n2": [452, 605, 626], "n32": 559, "n4absl11string_view": 483, "n8": 559, "n_bucket": 605, "n_hash": 605, "n_stab": 494, "na": 464, "nab": 593, "naddit": 509, "nail": [652, 663], "naiv": [487, 587, 606], "nakatani": 464, "nake": [454, 559], "name": [46, 52, 136, 139, 231, 237, 376, 382, 443, 446, 448, 449, 451, 454, 456, 458, 459, 460, 462, 463, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 484, 485, 486, 487, 488, 490, 493, 494, 495, 496, 497, 498, 500, 501, 504, 505, 506, 508, 510, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 525, 526, 527, 528, 529, 531, 534, 539, 546, 548, 550, 551, 552, 554, 556, 558, 560, 561, 562, 565, 566, 567, 571, 572, 573, 574, 575, 577, 585, 588, 589, 590, 591, 598, 599, 600, 601, 602, 608, 610, 611, 613, 615, 616, 617, 620, 621, 623, 627, 628, 629, 630, 631, 633, 634, 635, 636, 637, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 659, 660, 661, 662, 663, 664, 665, 666, 668], "name1": 615, "name2": 615, "name3": 615, "named_valu": [661, 662, 663, 664, 665], "namedindex": 626, "namedvalu": [650, 651, 652, 653, 654, 655, 656], "namedvar": 656, "nameflag": 605, "namesbuff": 577, "namespac": [442, 454, 462, 486, 509, 510, 518, 526, 559, 589, 605, 617, 626, 627, 629, 633, 634, 635, 636, 637, 649, 650, 651, 652, 653, 654, 655, 656], "nan": [446, 447, 473, 474, 534, 559, 605], "nand": 559, "nandakumar": 542, "nano": 447, "narrow": [450, 451, 458, 469, 520, 527, 529, 534, 538, 553, 554, 561, 589, 606], "narrowaddr": 559, "narrowcharact": 584, "narrowscalarfor": 538, "narrowscalarforcartesianproduct": 538, "narrowscalarfortypeswithmems": 538, "narrowscalarif": 538, "nasa": 593, "nation": 465, "nativ": [442, 444, 447, 451, 458, 460, 462, 463, 469, 473, 476, 480, 518, 519, 520, 522, 524, 527, 529, 531, 544, 550, 553, 558, 559, 562, 572, 591, 595, 605, 608, 626, 631, 633, 634, 635, 636, 637, 650, 651, 652, 653, 654, 655, 656, 657, 661, 662, 663, 664, 665, 666], "nativeptrt": 637, "natur": [442, 447, 451, 466, 467, 468, 498, 509, 516, 517, 519, 524, 526, 527, 529, 552, 559, 562, 566, 584, 589, 591, 592, 594, 599, 605, 606, 607, 611, 615, 627, 631, 650, 652, 654, 661, 663, 665], "natvi": 585, "naveen": 587, "navig": [509, 558, 588, 629], "na\u00efv": 594, "nbsp": 464, "nc": 447, "nc_nv": 447, "ncsa": 517, "nctaid": 572, "nd": 626, "ndebug": [462, 509, 586], "ne": [513, 559, 615, 616], "near16": 576, "near32": 576, "near64": 576, "nearbi": [523, 532, 568], "nearbyint": 625, "nearest": [534, 545, 559, 570, 656], "nearli": 467, "nearpoint": 584, "nearpointer128": 584, "nearpointer32": 584, "nearpointer64": 584, "neat": 634, "neatli": 634, "nec": 595, "necess": 442, "necessari": [442, 447, 450, 451, 453, 455, 462, 464, 466, 467, 468, 481, 509, 513, 515, 517, 519, 520, 524, 526, 529, 533, 536, 538, 541, 548, 549, 550, 551, 553, 554, 555, 559, 560, 561, 562, 564, 565, 566, 573, 582, 584, 585, 588, 589, 592, 594, 602, 603, 605, 606, 607, 608, 610, 611, 613, 615, 619, 621, 623, 624, 626, 627, 629, 650, 655, 656, 658], "necessarili": [467, 474, 510, 517, 522, 527, 529, 538, 559, 563, 575, 581, 585, 589, 599, 602, 603, 605, 606, 610, 630, 656], "need": [442, 446, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 460, 462, 463, 464, 466, 467, 468, 473, 474, 476, 479, 480, 481, 487, 500, 501, 507, 508, 509, 510, 513, 515, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 528, 529, 531, 532, 533, 535, 536, 538, 539, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 555, 556, 557, 558, 559, 561, 562, 563, 565, 567, 569, 570, 571, 572, 573, 575, 577, 581, 582, 587, 588, 589, 590, 591, 592, 596, 598, 599, 601, 603, 604, 605, 606, 607, 608, 610, 611, 613, 615, 616, 617, 619, 620, 621, 623, 624, 626, 627, 628, 629, 631, 633, 634, 635, 636, 637, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666], "needlessli": 554, "needstub": 626, "neelakantam": 587, "neg": [49, 51, 138, 234, 236, 294, 299, 304, 306, 325, 327, 379, 381, 442, 446, 447, 454, 467, 468, 472, 493, 513, 517, 519, 524, 559, 565, 596, 602, 605, 606, 615, 626], "neg_hi": [0, 1, 4, 7, 8], "neg_lo": [0, 1, 4, 7, 8], "negat": [445, 446, 447, 454, 464, 495, 505, 533, 534, 559, 615, 653, 664], "negeightkind": 559, "neglect": 620, "neglig": [523, 561], "negoti": 603, "neighbor": 445, "neighbour": 487, "neither": [442, 450, 453, 454, 506, 519, 524, 531, 559, 561, 571, 577, 587, 608], "nekbon": 593, "nemanja": 594, "neon": [464, 511, 533, 538, 550, 559, 595, 598, 613, 624], "ness": 459, "nest": [442, 447, 450, 454, 462, 463, 464, 467, 472, 493, 516, 519, 526, 558, 559, 563, 566, 574, 577, 589, 591, 596, 598, 606, 615, 622, 625, 626, 627, 649, 652, 660, 663], "nestabl": [615, 616], "net": [447, 512, 523, 528, 546, 551, 593], "netbsd": [529, 628], "netinet": 637, "network": [464, 561, 589], "neumann": 559, "neural": 620, "neutral": 442, "never": [447, 450, 451, 453, 460, 464, 467, 468, 476, 481, 493, 510, 513, 514, 518, 522, 523, 526, 527, 532, 533, 543, 544, 552, 559, 562, 563, 571, 573, 574, 575, 576, 582, 587, 589, 591, 600, 605, 606, 613, 616, 622, 626, 627, 628, 629, 631, 633, 635, 657, 662, 666], "never_instru": 628, "nevertheless": 467, "new": [442, 448, 449, 451, 454, 457, 458, 460, 462, 463, 464, 466, 467, 468, 469, 472, 476, 479, 487, 495, 507, 509, 512, 515, 518, 524, 525, 526, 528, 529, 530, 534, 539, 543, 544, 550, 551, 552, 553, 555, 556, 557, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 577, 581, 584, 588, 591, 594, 596, 597, 598, 600, 602, 604, 608, 610, 611, 613, 615, 616, 622, 624, 626, 631, 632, 633, 634, 635, 636, 637, 649, 650, 651, 652, 653, 655, 656, 657, 660, 661, 662, 663, 664, 666], "new_cond": 559, "new_corpus_dir": 561, "new_else_bb": [663, 664, 665], "new_guard_cond": 559, "new_potentially_interesting_inputs_dir": 561, "new_then_bb": [663, 664, 665], "newabbrevlen": 454, "newaddr": 534, "newcom": [614, 617, 654, 665], "newer": [451, 510, 515, 517, 529, 531, 576, 593, 619], "newest": [521, 651], "newinst": 589, "newli": [457, 467, 534, 544, 561, 573, 587, 589, 594, 610, 634, 650, 651, 652, 653, 656, 661, 662, 663, 664], "newlin": [454, 467, 472, 481, 498, 653, 664], "newoffset": 559, "newptr": 559, "newptr2": 559, "newsockfd": 637, "newti": 559, "newtoset": 467, "newversionformat": 577, "next": [442, 445, 447, 449, 454, 457, 458, 467, 493, 495, 505, 509, 513, 517, 519, 526, 527, 529, 531, 538, 543, 548, 551, 552, 556, 559, 562, 563, 564, 568, 571, 574, 575, 581, 589, 596, 599, 603, 605, 606, 616, 621, 623, 626, 627, 633, 634, 635, 636, 648, 649, 650, 651, 652, 653, 654, 655, 656, 659, 660, 661, 662, 663, 664, 665], "next_prec": [660, 661, 662, 663, 664, 665], "next_var": [663, 664, 665], "nextindvar": 559, "nextprec": [649, 650, 651, 652, 653, 654, 655, 656], "nextvar": [652, 653, 654, 655, 656, 663, 664, 665], "nextvari": [652, 653], "nfc": [517, 560], "ni": 559, "nice": [468, 509, 529, 533, 548, 570, 587, 589, 615, 627, 648, 649, 650, 651, 652, 653, 654, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666], "nicer": [509, 589, 631, 656], "nicknam": 601, "nicolai": 594, "nifti": [627, 652, 657, 663, 666], "nightli": [517, 528, 551, 620, 621], "nineti": 603, "ninf": 559, "ninja": [449, 460, 462, 529, 532, 536, 547, 548, 549, 550, 561, 588, 591, 593, 619, 629], "nm": [471, 482, 496, 500, 501, 544, 549, 598], "nmake": 462, "nn": [529, 593], "nnan": 559, "nnnn": 517, "nnnnnn": [457, 464], "no_dead_strip": 559, "no_merg": 454, "no_switch": 625, "no_turbo": 452, "noalia": [450, 454, 493, 513, 524, 527, 570], "nobodi": 593, "nobuiltin": [454, 559], "nocaptur": [454, 559, 587], "nocf_check": [454, 559], "node": [450, 455, 456, 464, 478, 516, 519, 523, 534, 552, 560, 563, 570, 571, 572, 589, 596, 597, 605, 610, 613, 615, 622, 623, 625, 626, 627, 631, 649, 650, 651, 652, 653, 654, 655, 656, 660, 661, 662, 663, 664, 665], "nodebuginfo": 509, "nodefinit": 600, "nodetail": 478, "nodetyp": [448, 626], "nodupl": [454, 559], "noencod": 464, "noexcept": 519, "nofre": [454, 559], "nohup": 599, "noimm": 617, "noimplicitfloat": [454, 559], "noinlin": [454, 515, 555, 559, 600], "nois": [452, 467, 588], "noisi": [517, 587, 589], "noitin": 474, "noitinerari": [617, 626], "nolink": 509, "noload": 495, "nologo": 489, "nomenclatur": 449, "nomerg": 559, "nomine": 603, "nomodref": 450, "non": [442, 445, 446, 448, 450, 451, 454, 458, 460, 461, 462, 463, 464, 468, 469, 472, 473, 474, 476, 477, 478, 479, 480, 481, 482, 484, 485, 487, 488, 490, 491, 493, 494, 495, 496, 497, 498, 500, 501, 502, 504, 505, 506, 507, 508, 509, 510, 511, 513, 514, 517, 519, 520, 523, 524, 527, 529, 533, 534, 535, 538, 544, 547, 552, 554, 556, 557, 561, 562, 563, 564, 565, 568, 569, 571, 572, 573, 576, 577, 582, 589, 591, 592, 594, 599, 603, 605, 606, 608, 615, 616, 621, 622, 623, 626, 627, 630, 631, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 662, 663, 665, 666], "non_recurs": 605, "nonatom": 605, "nondot": 457, "none": [14, 112, 196, 313, 344, 442, 447, 452, 464, 472, 473, 474, 476, 497, 506, 509, 513, 517, 519, 526, 527, 528, 529, 548, 549, 553, 556, 559, 574, 576, 584, 589, 600, 603, 606, 610, 611, 615, 627, 660, 661, 662, 663, 664, 665], "nonempti": 559, "nonetheless": [442, 559, 634, 635, 636, 637], "nongnu": 593, "nonintuit": 624, "nonlazybind": [454, 559], "nonneg": 559, "nonnul": [454, 519, 524, 559], "nonsens": [566, 607, 654, 665], "nonstop": 629, "nonstop_tsc": 630, "nontempl": 509, "nontempor": [447, 559], "nonzero": [454, 459, 615], "noop": 559, "nop": [521, 559, 608, 610, 628], "nopic": 598, "nor": [442, 454, 464, 519, 522, 526, 527, 531, 559, 561, 571, 577, 587, 608, 611], "norecurs": [454, 559], "noredzon": [454, 559], "noreg": [447, 554, 565, 605], "noreturn": [454, 524, 559], "norm": [442, 601, 615, 616], "normal": [442, 444, 445, 447, 451, 453, 454, 462, 464, 467, 468, 472, 476, 477, 481, 485, 488, 490, 494, 495, 497, 500, 501, 507, 509, 510, 517, 518, 519, 523, 524, 526, 529, 532, 533, 534, 545, 548, 551, 554, 559, 562, 563, 567, 574, 576, 588, 589, 592, 603, 604, 605, 606, 608, 610, 611, 613, 615, 621, 623, 625, 627, 629, 653, 664], "normalformat": 509, "normalizedpolar": 631, "norman": 464, "northern": 447, "northov": 542, "nosync": [454, 559], "not_found": [660, 661, 662, 663, 664, 665], "not_inline_hd": 510, "not_mangl": 482, "not_nul": 523, "notabl": [462, 464, 510, 520, 527, 538, 545, 548, 559, 568, 589, 605, 606], "notail": 559, "notat": [445, 446, 447, 509, 559, 615, 631], "note": [17, 27, 28, 38, 115, 124, 125, 130, 199, 212, 213, 223, 347, 357, 358, 368, 442, 444, 445, 446, 450, 451, 452, 453, 454, 458, 459, 462, 466, 467, 468, 469, 471, 472, 473, 476, 478, 487, 493, 495, 500, 501, 502, 505, 509, 510, 512, 513, 515, 516, 517, 518, 519, 520, 521, 523, 524, 525, 526, 527, 528, 529, 531, 537, 538, 539, 541, 543, 544, 545, 548, 549, 550, 551, 552, 553, 554, 555, 556, 558, 559, 561, 562, 563, 564, 569, 570, 571, 572, 573, 575, 576, 577, 581, 582, 584, 587, 588, 589, 590, 591, 593, 596, 603, 605, 606, 608, 610, 611, 613, 615, 616, 617, 619, 620, 623, 624, 625, 626, 627, 628, 629, 633, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 659, 660, 661, 662, 663, 664, 665, 666], "noteligibletoimport": 559, "notfp": 615, "noth": [91, 179, 276, 423, 447, 464, 468, 513, 517, 526, 527, 532, 538, 551, 559, 573, 587, 589, 591, 601, 611, 621, 627, 654, 659, 665], "nothidden": 509, "nothrow": 451, "notic": [462, 463, 464, 466, 510, 516, 517, 522, 524, 527, 552, 554, 559, 563, 571, 572, 650, 654, 661, 665], "notif": [450, 546, 588, 603], "notifi": [447, 450, 457, 493, 546, 551, 573, 601, 603, 625], "notion": [464, 467, 517, 552, 559, 575, 605, 627, 651, 652, 662, 663], "notori": 611, "nottransl": 584, "notw": 468, "notwithstand": 517, "notypemerg": 582, "noun": [467, 594], "noundef": [454, 559, 598], "nounwind": [454, 468, 519, 524, 559, 572, 605, 621, 623], "novel": [526, 559, 589], "novic": 462, "now": [442, 447, 458, 462, 464, 465, 467, 468, 472, 509, 510, 514, 517, 518, 519, 520, 529, 533, 548, 550, 551, 552, 554, 557, 559, 561, 563, 565, 570, 571, 572, 573, 581, 584, 588, 589, 591, 593, 598, 602, 605, 606, 608, 610, 618, 620, 623, 627, 629, 631, 632, 633, 634, 635, 649, 650, 651, 652, 653, 654, 655, 656, 657, 660, 661, 662, 663, 664, 665, 666], "nowadai": [550, 591], "nozero": 474, "npb": 593, "npb3": 593, "nproc": 529, "nsa": [17, 446], "nsstring": 605, "nsw": [513, 517, 524, 527, 559, 563], "nsz": 559, "nt": [476, 550, 599], "nt_amd_amdgpu_hsa_metadata": 447, "nt_amd_amdgpu_metadata": 447, "nt_amdgpu_metadata": 447, "nth": [467, 481], "ntid": 572, "ntohl": 464, "ntradbigmip": 495, "ntradlittlemip": 495, "nuisanc": 517, "nul": [589, 653, 664], "null": [32, 53, 54, 55, 62, 63, 66, 70, 71, 83, 84, 85, 91, 179, 276, 423, 442, 447, 450, 454, 464, 467, 473, 474, 513, 519, 521, 523, 524, 545, 554, 559, 565, 571, 572, 573, 574, 577, 582, 587, 589, 600, 605, 608, 610, 613, 626, 627, 631, 634, 649, 650, 651, 652, 653, 654, 655, 656, 663], "null_pointer_is_valid": [454, 559], "nullari": [649, 660], "nullpointerexcept": 523, "nullptr": [467, 559, 635, 636, 637, 649, 650, 651, 652, 653, 654, 655, 656], "nullptr_t": 584, "nullunknown": 559, "num": [446, 447, 468, 470, 472, 481, 487, 498, 526, 559, 591, 610, 626], "num_arg": 559, "num_repetit": 487, "numabbrevop": 454, "numarg": [608, 656], "number": [46, 52, 58, 82, 109, 136, 139, 167, 195, 231, 237, 243, 266, 292, 376, 382, 388, 413, 441, 445, 450, 451, 453, 455, 456, 457, 458, 462, 463, 464, 466, 467, 468, 470, 472, 476, 478, 480, 481, 486, 487, 491, 492, 493, 495, 496, 497, 498, 504, 505, 506, 508, 510, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 533, 534, 538, 545, 547, 550, 551, 554, 555, 558, 559, 560, 561, 562, 563, 565, 566, 570, 571, 573, 574, 576, 577, 579, 581, 582, 584, 585, 586, 588, 589, 590, 596, 598, 600, 604, 605, 606, 607, 608, 610, 613, 615, 616, 617, 620, 621, 622, 625, 626, 627, 628, 630, 631, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 659, 660, 661, 662, 663, 664, 665, 666], "number1": 571, "number2": 571, "numberexpr": [649, 650, 651, 652, 653, 654, 655, 656, 660, 661, 662, 663, 664, 665], "numberexprast": [649, 650, 651, 652, 653, 654, 655, 656], "numberofauxsymbol": 668, "numberofcpucor": 561, "numbit": 589, "numblock": 581, "numbyt": 608, "numconst": 608, "numdirectorybyt": 581, "numel": 559, "numelt": 454, "numeltsparam": [454, 559], "numentri": 454, "numer": [46, 52, 136, 139, 231, 237, 376, 382, 445, 458, 459, 493, 494, 496, 509, 524, 531, 559, 565, 584, 585, 589, 598, 613, 614, 616, 617, 626, 628, 630, 648, 649, 650, 651, 652, 653, 654, 655, 656, 659, 660, 661, 662, 663, 664, 665], "numerical_limit": 606, "numexpress": 514, "numfaultingpc": 523, "numfilenam": 514, "numfunct": [523, 608], "numfunctionsinmodul": 573, "numhashbucket": 584, "numindic": 514, "numlin": 514, "numliveout": 608, "numloc": 608, "nummemb": 589, "nummeta": 526, "nummodul": 577, "nummodulevalu": 454, "numop": [454, 626], "numpoint": 487, "numrecord": 608, "numregion": 514, "numregionarrai": 514, "numroot": 526, "numsgpr": 447, "numshadowbyt": 608, "numsourcefil": 577, "numspilledsgpr": 447, "numspilledvgpr": 447, "numstr": [648, 649, 650, 651, 652, 653, 654, 655, 656], "numstream": 581, "numthread": 573, "numval": [648, 649, 650, 651, 652, 653, 654, 655, 656], "numvar": 468, "numvgpr": 447, "numword": 600, "numxform": 589, "nutshel": 589, "nuw": [524, 559], "nuzman": [596, 625], "nval": 559, "nvcall": 461, "nvcc": 464, "nvcl": 572, "nvidia": [442, 464, 510, 518, 572], "nvptx": [529, 559, 594, 624], "nvptx64": 572, "nvt": 626, "nvvm": 559, "nvvmreflect": 572, "nw": 593, "nxv16i1": 559, "nxv46i32": 559, "nxv4i32": 559, "o": [450, 451, 452, 454, 460, 467, 468, 470, 473, 476, 477, 480, 481, 482, 483, 485, 486, 488, 490, 491, 493, 495, 498, 502, 503, 504, 505, 507, 508, 509, 510, 511, 520, 521, 526, 529, 531, 532, 539, 544, 547, 551, 553, 554, 559, 561, 562, 565, 572, 573, 574, 575, 584, 587, 589, 590, 597, 598, 600, 602, 606, 619, 621, 626, 627, 629, 633, 634, 635, 636, 637, 650, 651, 652, 653, 654, 655, 656, 658, 662, 663, 664, 665], "o0": [447, 473, 481, 509, 515, 525, 535, 541, 553, 605, 622, 626, 666], "o1": [473, 509, 541, 553, 554, 561, 626], "o2": [450, 451, 460, 473, 493, 506, 509, 524, 525, 529, 554, 559, 572, 574, 586, 602, 626], "o3": [460, 473, 509, 524, 525, 529, 553, 572, 605, 619, 625, 626, 629, 633, 634, 635, 636, 637, 649, 650, 651, 652, 653, 654, 655, 656], "o4": 626, "o5": 626, "o6": 626, "o7": 626, "obei": 559, "obit": 559, "obj": [470, 473, 480, 502, 506, 519, 526, 531, 559, 599, 605, 610, 619, 620], "obj_root": 529, "objc": [486, 496, 566, 605, 607, 624], "objc_autoreleas": 559, "objc_autoreleasepoolpop": 559, "objc_autoreleasepoolpush": 559, "objc_autoreleasereturnvalu": 559, "objc_copyweak": 559, "objc_destroyweak": 559, "objc_initweak": 559, "objc_loadweak": 559, "objc_loadweakretain": 559, "objc_moveweak": 559, "objc_properti": 605, "objc_releas": 559, "objc_retain": 559, "objc_retainautoreleas": 559, "objc_retainautoreleasedreturnvalu": 559, "objc_retainautoreleasereturnvalu": 559, "objc_retainblock": 559, "objc_storestrong": 559, "objc_storeweak": 559, "objcopi": [471, 505], "objdump": [471, 494, 500, 501, 598, 629], "object": [442, 450, 451, 453, 458, 460, 464, 466, 467, 469, 470, 471, 472, 473, 474, 476, 480, 481, 486, 487, 489, 491, 497, 504, 506, 507, 509, 511, 513, 514, 515, 517, 519, 521, 522, 523, 525, 526, 531, 533, 534, 536, 544, 549, 550, 552, 553, 555, 557, 560, 561, 562, 565, 571, 572, 573, 574, 576, 577, 580, 582, 584, 585, 591, 598, 602, 603, 606, 608, 611, 613, 615, 616, 619, 620, 623, 626, 627, 630, 631, 633, 634, 649, 650, 652, 654, 656, 657, 658, 659, 660, 661, 662, 663, 665, 666, 668], "object_addr": 526, "object_error": 589, "objectbodi": 616, "objectbuff": 564, "objectbufferstream": 564, "objectcach": 564, "objectfil": 564, "objectimag": 564, "objectivec": 559, "objectlay": [633, 634, 635, 636, 637], "objectlinkinglay": 634, "objfilenam": 577, "objlinkinglay": 573, "objptr": 559, "oblivi": 453, "obscur": [559, 589], "observ": [451, 464, 467, 493, 559, 561, 563, 576, 577, 580, 582, 584, 605, 606, 610, 629, 657, 666], "obsolet": [457, 576], "obstacl": 594, "obtain": [442, 447, 459, 464, 513, 514, 529, 536, 549, 553, 559, 563, 564, 569, 570, 577, 587, 589, 603, 611, 615, 626, 629, 630, 651], "obtus": 527, "obviat": 590, "obviou": [450, 451, 453, 458, 464, 467, 516, 517, 522, 559, 571, 582, 587, 591, 602, 605, 606, 608, 613, 649, 651, 653, 657, 662, 664, 666], "obvious": [450, 464, 509, 517, 520, 527, 551, 559, 571, 577, 587, 589, 599, 615, 627, 649, 659, 660], "ocaml": [462, 659, 660, 661, 662, 663, 664, 665], "ocaml_lib": [661, 662, 663, 664, 665], "ocamlbuild": [660, 661, 662, 663, 664, 665], "ocamlbuild_plugin": [661, 662, 663, 664, 665], "ocamldoc": 462, "occas": [467, 579], "occasion": [454, 510, 526, 535, 584], "occup": 447, "occupi": [27, 28, 29, 30, 41, 42, 43, 124, 125, 126, 133, 134, 212, 213, 214, 215, 226, 227, 228, 357, 358, 359, 360, 371, 372, 373, 445, 447, 497, 559, 581], "occur": [442, 445, 447, 454, 456, 464, 467, 468, 469, 472, 473, 476, 477, 478, 480, 485, 488, 490, 493, 507, 508, 517, 519, 526, 527, 536, 539, 545, 553, 554, 559, 560, 573, 587, 589, 590, 591, 601, 602, 603, 605, 606, 608, 610, 611, 615, 616, 621, 622, 627, 649, 655, 660], "occurr": [454, 468, 533], "oct": [502, 569, 591], "octal": [446, 447, 494, 502, 504, 509], "octal_numb": 447, "octopu": 591, "odd": [442, 509, 517, 553, 559], "odr": [470, 559], "oeq": 559, "of_channel": [660, 661, 662, 663, 664, 665], "of_list": [660, 661, 662, 663, 664, 665], "of_non": 655, "off": [14, 62, 63, 82, 94, 95, 112, 167, 196, 266, 313, 332, 338, 344, 392, 393, 413, 426, 427, 445, 447, 458, 460, 462, 464, 467, 476, 496, 497, 510, 517, 525, 529, 535, 547, 548, 549, 559, 570, 572, 573, 586, 589, 601, 606, 610, 617, 619, 621, 629, 630, 633, 634, 650, 651, 652, 653, 654, 655, 656, 657, 659, 661, 662, 663, 664, 665, 666], "offen": [0, 2, 3, 4, 8, 14, 112, 196, 313, 344, 447], "offens": 603, "offer": [442, 451, 526, 554, 589, 591, 592, 610, 631], "offici": [463, 464, 510, 517, 518, 544, 568, 571, 585, 588, 593, 598, 599, 601, 619, 650, 654, 665], "offlin": [464, 466, 572], "offload": 602, "offset": [14, 15, 46, 47, 53, 54, 55, 63, 94, 95, 112, 113, 136, 137, 140, 141, 196, 197, 231, 233, 238, 239, 240, 313, 328, 338, 344, 345, 376, 378, 383, 384, 385, 393, 426, 427, 442, 444, 445, 446, 447, 454, 464, 468, 476, 486, 496, 497, 502, 504, 506, 513, 519, 526, 527, 534, 536, 545, 565, 569, 571, 575, 577, 581, 582, 584, 589, 598, 602, 604, 605, 608, 610, 617, 621, 626, 657, 666], "offset0": 447, "offset1": [447, 559], "offset11": 0, "offset12": [0, 2, 3, 4, 8, 94], "offset13": [4, 8, 338, 426], "offset16": [0, 2, 3, 4], "offset2": 559, "offset8": [0, 2, 3, 4], "ofstream": 509, "oftc": [512, 528], "often": [447, 448, 450, 451, 453, 458, 462, 464, 466, 467, 468, 509, 510, 517, 519, 520, 522, 524, 526, 529, 532, 538, 545, 548, 549, 552, 553, 554, 559, 561, 565, 572, 587, 589, 591, 597, 600, 603, 605, 606, 610, 615, 621, 626, 629, 631, 634, 649, 651, 654, 657, 660, 662, 665, 666], "og": 559, "ogt": 559, "oh": [652, 663], "ok": [445, 446, 458, 467, 510, 517, 539, 547, 559, 561, 571, 650, 652, 661], "okai": [467, 527, 559, 560, 588, 611, 649, 650, 651, 652, 653, 654, 655, 656, 660, 661, 662, 663, 664, 665], "ol": [559, 584], "oland": 447, "old": [442, 450, 451, 457, 468, 481, 495, 515, 517, 526, 529, 555, 559, 576, 584, 585, 589, 591, 594, 598, 600, 603, 605, 619, 622, 632, 654, 655, 656, 657, 665, 666], "old_bind": 665, "old_val": [663, 664, 665], "old_valu": 665, "oldbind": [654, 655, 656, 665], "older": [447, 451, 493, 509, 511, 517, 524, 526, 529, 538, 547, 559, 561, 567, 626], "oldest": [447, 493, 651], "oldval": [559, 652, 653, 654, 655, 656], "oliv": 603, "olt": 559, "omap": 577, "omiss": [447, 467, 517, 559], "omit": [442, 443, 444, 447, 464, 467, 473, 477, 478, 483, 485, 488, 493, 494, 496, 497, 498, 500, 501, 506, 507, 510, 554, 559, 561, 573, 587, 598, 600, 605, 608, 623, 627, 649, 652, 660, 663], "omod": [0, 2, 3, 4, 7, 8], "omp": [587, 593, 622], "onc": [232, 377, 446, 447, 450, 454, 458, 459, 462, 463, 464, 466, 467, 469, 470, 472, 481, 486, 488, 498, 507, 509, 510, 512, 517, 519, 520, 522, 523, 526, 527, 528, 529, 531, 532, 538, 539, 544, 549, 551, 553, 554, 559, 560, 561, 562, 563, 564, 566, 571, 573, 574, 577, 584, 588, 589, 591, 592, 596, 599, 601, 602, 603, 605, 606, 607, 610, 611, 615, 616, 617, 620, 623, 626, 627, 628, 629, 631, 633, 635, 636, 637, 649, 650, 651, 652, 654, 657, 660, 661, 662, 663, 665, 666], "one": [17, 41, 46, 47, 52, 109, 115, 133, 136, 137, 139, 195, 199, 219, 221, 222, 226, 231, 232, 233, 237, 292, 347, 371, 376, 377, 378, 382, 441, 442, 444, 445, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 468, 469, 472, 476, 481, 483, 484, 486, 487, 488, 491, 493, 494, 496, 497, 498, 500, 501, 509, 510, 513, 514, 516, 517, 518, 519, 520, 524, 525, 526, 528, 529, 532, 533, 534, 537, 538, 539, 541, 544, 545, 546, 548, 549, 551, 552, 553, 554, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 580, 581, 584, 585, 588, 589, 590, 591, 592, 593, 594, 596, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 610, 611, 613, 615, 616, 617, 619, 620, 621, 622, 623, 626, 627, 628, 629, 630, 631, 633, 634, 635, 637, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 659, 660, 661, 662, 663, 664, 665, 666], "one_onli": 521, "oneargfp": 615, "oneargfprw": 615, "onelin": 529, "oneormor": 509, "ones": [447, 458, 459, 462, 463, 464, 467, 469, 509, 510, 517, 519, 524, 526, 539, 550, 551, 552, 559, 571, 587, 595, 605, 606, 610, 611, 613, 617, 621, 626, 634], "ongo": [517, 573, 598, 601, 610, 628], "onli": [14, 39, 40, 46, 52, 54, 55, 56, 58, 112, 131, 132, 136, 139, 142, 196, 224, 225, 231, 232, 237, 241, 243, 313, 323, 329, 344, 369, 370, 376, 377, 382, 384, 385, 386, 388, 442, 445, 446, 447, 449, 450, 451, 453, 454, 456, 457, 458, 459, 461, 462, 463, 464, 466, 467, 468, 470, 472, 473, 474, 476, 478, 479, 481, 483, 484, 486, 487, 489, 492, 493, 494, 495, 497, 498, 500, 501, 502, 505, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 523, 524, 525, 526, 527, 529, 531, 532, 533, 534, 536, 537, 538, 545, 547, 548, 549, 550, 551, 552, 556, 557, 558, 559, 560, 561, 562, 563, 565, 568, 569, 570, 571, 572, 573, 575, 576, 577, 579, 580, 581, 582, 584, 590, 592, 593, 594, 595, 596, 598, 600, 601, 602, 603, 605, 606, 608, 610, 611, 615, 616, 617, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 630, 631, 633, 634, 635, 648, 649, 650, 652, 653, 654, 655, 656, 657, 659, 660, 661, 662, 663, 664, 665, 666], "onlin": [442, 447, 452, 462, 463, 654, 665], "only_ascii": 561, "onlyfailsforsomexvalu": 589, "onlyfailsforsomexvalues2": 589, "onon": 559, "ons": 599, "onto": [442, 447, 464, 517, 526, 529, 540, 551, 559, 589, 605, 623], "ontwo": 559, "onward": [447, 462, 548], "onzero": 559, "oom": 561, "oop": 610, "op": [52, 139, 237, 382, 464, 468, 472, 476, 513, 559, 565, 573, 606, 610, 613, 615, 626, 634, 649, 650, 651, 652, 653, 654, 655, 656, 661, 662, 663, 664, 665], "op0": [454, 600], "op1": [454, 559, 600], "op2": [559, 600], "op3": [559, 600, 626], "op3val": 626, "op4": 600, "op_begin": 589, "op_end": 589, "op_iter": 589, "op_sel": [0, 4], "op_sel_hi": [0, 4], "opaqu": [453, 454, 521, 533, 573, 587, 589, 610, 634, 650], "opc": [615, 653, 654, 655, 656], "opcod": [11, 17, 92, 115, 180, 199, 277, 310, 337, 347, 424, 442, 445, 447, 451, 464, 467, 487, 493, 538, 543, 552, 556, 559, 565, 571, 589, 596, 615, 617, 626, 649, 650, 653, 654, 655, 656, 660, 661, 664], "opcode_nam": 487, "opcstr": 626, "open": [442, 457, 462, 464, 467, 469, 510, 512, 517, 528, 531, 543, 549, 559, 560, 566, 571, 588, 589, 591, 600, 603, 607, 608, 610, 611, 613, 615, 629, 632, 651, 652, 653, 654, 655, 656, 661, 662, 663, 664, 665], "openbsd": 628, "opencl": [442, 572], "openfil": 467, "openfileforwrit": 611, "openformattedfil": 589, "opengl": [657, 666], "openmp": [442, 447, 462, 468, 517, 559, 591, 594, 622], "openmp4": 596, "openorcreatefileforwrit": 611, "openpow": 511, "opensourc": 561, "openssl": 561, "openwork": 610, "oper": [19, 20, 24, 25, 26, 27, 28, 31, 32, 33, 52, 109, 117, 118, 121, 122, 123, 124, 125, 139, 195, 201, 202, 205, 206, 207, 212, 213, 237, 292, 322, 349, 350, 354, 355, 356, 357, 358, 361, 362, 363, 382, 441, 444, 445, 450, 451, 453, 454, 456, 459, 461, 462, 464, 467, 468, 473, 474, 479, 492, 493, 495, 500, 501, 505, 510, 511, 513, 514, 519, 520, 522, 523, 526, 527, 529, 533, 539, 541, 543, 545, 554, 561, 570, 571, 572, 573, 574, 587, 591, 595, 596, 598, 600, 602, 605, 610, 611, 613, 615, 616, 617, 623, 625, 626, 627, 628, 629, 631, 633, 634, 648, 649, 650, 651, 652, 655, 656, 657, 658, 659, 660, 661, 662, 663, 666, 667], "operand": [9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 448, 454, 456, 464, 467, 468, 478, 493, 496, 519, 520, 521, 527, 533, 534, 535, 536, 538, 540, 541, 554, 570, 571, 587, 589, 594, 596, 605, 613, 615, 650, 653, 654, 655, 656, 661, 664, 665], "operand0": [444, 447], "operand1": [444, 447], "operand_type_list_end": 626, "operandlist": 615, "operandmap": 626, "operandti": 464, "operandtyp": 626, "operandv": [653, 654, 655, 656], "operating_system": 559, "opnam": 626, "opnod": 626, "opportun": [449, 460, 513, 516, 524, 539, 543, 559, 573, 587, 591, 592, 594, 625, 626, 634, 651, 662], "oppos": [467, 509, 521, 529, 533, 538, 551, 559, 560, 580, 590, 594, 616, 663], "opposit": [467, 476, 560, 589, 594, 605, 613, 628, 631], "oprofil": [462, 586], "opt": [0, 2, 3, 4, 8, 443, 450, 451, 458, 467, 469, 471, 496, 517, 522, 526, 529, 531, 550, 553, 554, 559, 570, 572, 587, 589, 597, 598, 606, 610, 620, 621, 625, 634, 637, 651, 652, 654, 655, 662, 663, 665], "opt1": 496, "opt2": 496, "opta": 509, "optb": 509, "optbisect": 574, "optforfuzz": [454, 559], "optim": [442, 444, 449, 450, 453, 454, 456, 458, 459, 462, 467, 468, 469, 470, 471, 473, 474, 481, 493, 496, 498, 509, 511, 513, 514, 516, 517, 519, 520, 521, 523, 524, 525, 526, 527, 529, 530, 531, 534, 539, 541, 542, 543, 546, 552, 554, 556, 557, 558, 560, 563, 571, 572, 573, 586, 589, 590, 594, 595, 596, 597, 598, 608, 609, 610, 620, 621, 622, 623, 625, 626, 627, 630, 632, 633, 635, 636, 637, 650, 652, 653, 654, 655, 656, 658, 659, 661, 663, 664, 665, 667], "optimis": [559, 587, 598, 623, 662], "optimist": [493, 543, 559], "optimizationbit": 509, "optimizationlevel": 509, "optimizationlist": 509, "optimizationremarkemitt": 594, "optimizefunct": [635, 636, 637], "optimizelay": [634, 635, 636, 637], "optimizemodul": [634, 635, 636, 637], "option": [14, 24, 25, 26, 27, 28, 31, 32, 33, 39, 40, 52, 56, 59, 62, 63, 64, 82, 95, 109, 112, 121, 122, 123, 124, 125, 131, 132, 139, 142, 144, 147, 167, 195, 196, 205, 206, 207, 212, 213, 224, 225, 237, 241, 244, 247, 266, 292, 313, 322, 323, 329, 330, 332, 344, 354, 355, 356, 357, 358, 361, 362, 363, 369, 370, 382, 386, 389, 392, 393, 394, 413, 427, 441, 442, 443, 444, 445, 449, 450, 453, 454, 456, 458, 463, 464, 467, 471, 475, 484, 489, 491, 499, 510, 513, 514, 515, 518, 522, 525, 526, 531, 536, 537, 539, 544, 547, 548, 549, 550, 553, 555, 558, 559, 560, 562, 564, 565, 571, 573, 574, 586, 587, 590, 591, 592, 595, 596, 597, 598, 599, 600, 605, 606, 608, 610, 613, 615, 616, 617, 622, 625, 626, 627, 628, 629, 631, 649, 650, 651, 652, 653, 654, 655, 656, 661, 663, 664, 665], "optional_dir": 590, "optionaldbgheaders": 577, "options_pars": 545, "optlevel": 509, "optnon": [454, 559, 574], "optnum": 509, "optsiz": [454, 536, 559], "optyp": 626, "optzn": [553, 651, 652, 653, 654, 662, 663, 664, 665], "opval": 626, "orbit": [653, 664], "orc": [597, 598, 633, 635, 636, 637, 651, 652, 653, 654, 656, 667], "orcabisupport": 637, "orcjit": [633, 634, 635, 636, 637], "orcremotetargetcli": 637, "orcremotetargetserv": 637, "orcv1": 597, "orcv2": [597, 598], "orcv2exampl": 598, "orcx86_64_sysv": 637, "ord": 559, "order": [109, 195, 292, 441, 442, 443, 444, 450, 454, 459, 460, 462, 464, 466, 468, 472, 479, 484, 493, 494, 495, 497, 505, 507, 509, 512, 513, 514, 515, 517, 518, 519, 520, 521, 522, 525, 526, 527, 529, 531, 534, 538, 545, 552, 554, 556, 558, 560, 561, 562, 565, 570, 571, 573, 574, 577, 581, 582, 585, 587, 589, 590, 591, 594, 596, 600, 602, 605, 606, 607, 608, 610, 611, 613, 615, 620, 621, 623, 626, 627, 635, 649, 650, 651, 652, 654, 658, 659, 660, 661, 662, 663, 665], "ordered_append_term": 447, "ordered_fadd": 559, "ordered_fmul": 559, "ordin": 509, "ordinari": [442, 513, 514, 559, 573, 631], "org": [457, 462, 465, 467, 491, 495, 496, 502, 504, 505, 514, 517, 525, 528, 529, 544, 546, 549, 550, 551, 552, 561, 563, 565, 568, 588, 591, 594, 595, 599, 601, 619, 631, 633, 634, 635, 636, 637, 650], "organ": [442, 445, 447, 463, 517, 519, 528, 568, 571, 584, 590, 601, 603, 605, 610, 651, 662], "ori": 464, "orient": [465, 467, 552, 589, 593, 605, 607, 657, 666], "orig": 559, "origin": [442, 446, 459, 464, 465, 466, 467, 468, 479, 481, 497, 513, 517, 519, 527, 529, 532, 554, 559, 573, 577, 582, 588, 589, 591, 594, 596, 601, 603, 605, 606, 607, 610, 611, 614, 616, 617, 622, 623, 628, 633, 634, 656], "originput": 509, "orl": 606, "orq": 606, "orr": 559, "ors": 560, "orthogon": [451, 573], "os": 598, "oscil": 630, "oso": 470, "oss": [525, 551, 561, 591], "ostream": [467, 589], "osuosl": 546, "other": [0, 1, 2, 3, 4, 5, 6, 7, 8, 17, 109, 112, 115, 195, 199, 292, 347, 441, 444, 445, 446, 447, 448, 449, 451, 453, 454, 455, 457, 458, 459, 460, 462, 464, 465, 466, 467, 468, 470, 472, 473, 474, 481, 483, 484, 487, 493, 494, 495, 496, 502, 504, 505, 506, 507, 508, 510, 512, 513, 514, 516, 517, 518, 519, 520, 521, 526, 528, 529, 531, 533, 536, 537, 538, 539, 541, 543, 544, 545, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566, 568, 569, 570, 571, 573, 574, 575, 576, 577, 580, 581, 582, 584, 585, 587, 588, 590, 591, 592, 593, 594, 596, 598, 599, 600, 601, 602, 603, 605, 606, 607, 609, 610, 611, 613, 614, 615, 616, 617, 619, 620, 622, 623, 625, 626, 627, 628, 629, 630, 631, 633, 634, 635, 636, 637, 649, 650, 651, 652, 653, 654, 655, 656, 658, 659, 660, 661, 662, 663, 664, 665, 667], "other_funct": 606, "otherspecialsquar": 552, "othervt": 626, "otherwis": [110, 111, 442, 447, 449, 451, 454, 455, 457, 458, 459, 462, 466, 467, 468, 469, 470, 472, 473, 474, 476, 477, 478, 479, 480, 481, 484, 485, 486, 487, 488, 490, 492, 493, 495, 496, 500, 501, 502, 504, 505, 507, 508, 509, 510, 513, 514, 517, 519, 524, 526, 544, 546, 547, 550, 551, 552, 553, 559, 560, 562, 563, 571, 573, 574, 577, 579, 585, 587, 588, 589, 591, 598, 601, 605, 606, 610, 615, 616, 622, 627, 631, 648, 649, 650, 651, 652, 653, 654, 655, 656, 659, 660, 661, 662, 663, 664, 665], "otp": 559, "ottenstein": 516, "ought": 467, "our": [449, 460, 462, 463, 464, 465, 466, 467, 509, 510, 513, 517, 518, 526, 529, 553, 562, 571, 572, 573, 582, 585, 586, 589, 591, 601, 602, 603, 605, 606, 610, 625, 627, 629, 633, 634, 635, 636, 637, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 659, 660, 661, 662, 663, 664, 665, 666], "ourfpm": 656, "ourfunctionpass": 589, "ourselv": [467, 572, 585, 605, 633], "out": [442, 447, 449, 450, 451, 452, 453, 454, 457, 458, 463, 464, 466, 467, 468, 470, 472, 474, 476, 478, 479, 481, 486, 487, 489, 492, 493, 494, 496, 502, 509, 510, 513, 516, 517, 518, 519, 520, 525, 526, 529, 531, 532, 534, 538, 545, 547, 548, 549, 550, 551, 553, 554, 556, 559, 560, 561, 563, 565, 570, 571, 573, 580, 581, 585, 587, 588, 589, 591, 595, 596, 598, 599, 601, 602, 603, 605, 606, 609, 610, 611, 613, 614, 615, 616, 617, 619, 620, 621, 622, 623, 626, 627, 628, 629, 630, 631, 634, 635, 636, 637, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667], "out_cpusubtyp": 562, "out_cputyp": 562, "out_of_bound": 463, "outcom": [554, 603], "outdat": [550, 620], "outer": [447, 467, 519, 557, 559, 561, 563, 576, 587, 596, 615, 616, 622, 627, 631, 652, 654, 655, 656, 663, 665], "outercolumn": 559, "outermost": [442, 559], "outerrow": 559, "outerstructti": 559, "outfil": 503, "outgo": [455, 559], "outli": 519, "outlin": [461, 464, 513, 517, 519, 598, 606, 627, 631], "outliv": [559, 561, 587], "outloop": [652, 653, 654, 655, 656, 665], "outoperandlist": [617, 626], "output": [12, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 36, 37, 38, 68, 69, 70, 71, 72, 73, 74, 75, 101, 102, 103, 104, 110, 121, 122, 123, 124, 125, 127, 128, 129, 130, 148, 149, 150, 151, 152, 153, 154, 155, 187, 188, 189, 190, 205, 206, 207, 212, 213, 216, 217, 218, 219, 220, 221, 222, 223, 251, 252, 253, 254, 255, 256, 257, 258, 284, 285, 286, 287, 297, 302, 311, 314, 315, 316, 317, 322, 342, 354, 355, 356, 357, 358, 361, 362, 363, 364, 365, 366, 367, 368, 398, 399, 400, 401, 402, 403, 404, 405, 433, 434, 435, 436, 445, 447, 449, 450, 452, 455, 458, 461, 462, 464, 467, 468, 469, 470, 473, 474, 475, 476, 477, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, 516, 520, 521, 526, 529, 531, 532, 534, 538, 545, 548, 553, 554, 556, 565, 566, 570, 572, 587, 589, 596, 597, 599, 600, 602, 605, 607, 613, 617, 619, 621, 622, 626, 627, 628, 629, 630, 634, 649, 651, 652, 653, 654, 655, 656, 660, 662, 663, 664, 665, 668], "outputdebuginfo": 509, "outputfilenam": 509, "outright": 527, "outsid": [447, 450, 465, 467, 509, 513, 517, 521, 527, 528, 544, 545, 549, 559, 560, 561, 563, 570, 571, 587, 589, 591, 596, 599, 605, 606, 608, 610, 611, 615, 620, 623, 634, 650, 661], "outstand": [46, 109, 136, 195, 231, 292, 376, 441, 466], "outstream": 526, "outweigh": 594, "over": [442, 447, 450, 453, 454, 457, 458, 459, 463, 464, 468, 487, 493, 497, 510, 513, 516, 517, 527, 538, 539, 545, 548, 552, 559, 560, 561, 562, 563, 568, 570, 587, 588, 591, 603, 605, 606, 609, 610, 615, 616, 631, 634, 635, 636, 637, 648, 650, 652, 653, 654, 656, 657, 658, 659, 661, 663, 664, 665, 666], "overal": [457, 460, 464, 466, 496, 516, 517, 519, 526, 527, 548, 559, 585, 588, 606, 613, 652, 663], "overboard": 467, "overestim": 559, "overflow": [442, 446, 447, 468, 517, 524, 561, 563, 602, 606, 630], "overhaul": 551, "overhead": [522, 526, 545, 556, 559, 569, 573, 589, 591, 596, 630, 635, 651, 662], "overlai": [447, 518, 577], "overlaid": 570, "overlap": [442, 450, 463, 464, 468, 493, 557, 559, 605, 608, 625, 627], "overli": [447, 517, 594], "overload": [467, 520, 552, 559, 572, 589, 610, 626, 627, 653, 664], "overrid": [447, 451, 460, 462, 463, 464, 472, 473, 474, 481, 485, 495, 509, 510, 516, 536, 545, 552, 559, 561, 571, 572, 587, 589, 602, 605, 606, 613, 615, 616, 626, 627, 634, 650, 651, 652, 653, 654, 655, 656], "overridden": [450, 468, 509, 529, 559, 561, 600, 626], "overrod": 615, "overrun": 545, "overs": 589, "overview": [443, 461, 462, 493, 509, 511, 512, 528, 532, 540, 564, 566, 569, 627, 652, 663], "overwhelm": [459, 658, 659], "overwrit": [509, 590, 606, 608, 628], "overwritten": [464, 519, 559, 602, 608], "ovl": 577, "own": [442, 447, 454, 455, 462, 463, 464, 466, 467, 476, 509, 510, 514, 516, 517, 518, 519, 520, 526, 529, 544, 545, 549, 551, 552, 554, 558, 559, 561, 564, 570, 573, 575, 576, 585, 587, 588, 590, 591, 594, 596, 600, 601, 603, 605, 608, 611, 613, 618, 620, 621, 626, 627, 650, 651, 653, 654, 657, 659, 664, 665, 666], "owner": [464, 466, 476, 512, 551, 588, 591], "ownership": [517, 573, 589, 636, 637, 651, 652, 653, 654, 655, 656], "oxid": 603, "p": [442, 445, 447, 450, 453, 462, 464, 467, 468, 472, 476, 481, 486, 487, 494, 495, 496, 500, 501, 505, 506, 507, 515, 518, 527, 545, 556, 559, 563, 572, 589, 591, 610, 615, 623, 626, 629, 637, 651, 652, 653, 654, 655, 656, 660, 661, 662, 663, 664, 665], "p0": [57, 143, 242, 387, 533, 534, 538, 559], "p0928": 606, "p0a10s_union": 559, "p0f_isvoidf": 610, "p0i32": 468, "p0i64": 468, "p0i8": [559, 572], "p0s_struct": 559, "p0s_union": 559, "p0v16f32": 559, "p0v2f64": 559, "p0v4i32": 559, "p0v4p0f_i32f": 559, "p0v8f64": 559, "p0v8i32": 559, "p0v8p0f64": 559, "p0v8p0f_i32f": 559, "p1": [534, 538, 559, 570, 572, 605], "p10": [57, 143, 242, 387], "p15": [559, 572], "p16": 572, "p17": 572, "p18": 572, "p19": 572, "p1i8": [572, 610], "p2": [468, 533, 559, 570, 572, 605], "p20": [57, 143, 242, 387, 572], "p2align": [447, 606], "p3": [468, 570, 572, 605], "p3i8": 572, "p4": 572, "p4i8": 572, "p5": 572, "p5i8": 572, "p7": 559, "p_arch": 510, "p_reg": 464, "pa": 589, "pack": [30, 41, 43, 208, 210, 211, 215, 219, 221, 222, 226, 228, 360, 371, 373, 444, 445, 447, 454, 464, 493, 513, 514, 524, 551, 559, 591, 596, 599, 650, 661], "packag": [455, 460, 462, 510, 512, 517, 518, 528, 529, 546, 547, 549, 550, 551, 590, 592, 599, 603, 619, 624], "package_str": 462, "packet": [447, 508, 613], "pact": 596, "pad": [445, 447, 454, 497, 513, 514, 519, 533, 535, 557, 559, 565, 577, 608, 630], "padding1": 577, "padding2": 577, "padparam": 519, "padua": 516, "page": [447, 449, 460, 462, 467, 471, 497, 509, 511, 512, 517, 521, 523, 526, 529, 531, 545, 563, 564, 569, 581, 585, 588, 589, 591, 594, 597, 598, 600, 605, 606, 610, 612, 618, 621, 625, 632, 650], "pai": [467, 517, 537, 606, 621, 626], "pain": [509, 510, 515, 517, 588, 589], "painlessli": 509, "pair": [442, 445, 446, 447, 450, 451, 452, 453, 464, 467, 468, 473, 483, 486, 488, 493, 500, 501, 502, 519, 521, 534, 554, 555, 559, 561, 570, 571, 573, 584, 587, 589, 591, 598, 603, 605, 606, 610, 626, 630, 631, 635, 649, 652, 654, 655, 656, 660, 663], "pairwis": 450, "pamela": 593, "pan": 606, "panda": 619, "pandaboard": 547, "pane": 588, "paper": [452, 464, 467, 510, 511, 516, 570, 589, 606, 632], "papertrail": 470, "par": [593, 595], "paradigm": [527, 589], "paragraph": [467, 517, 566, 571, 607], "parallel": [442, 462, 464, 468, 472, 487, 493, 529, 546, 559, 560, 570, 586, 590, 591, 594, 596, 622, 625], "parallel_dir": 590, "parallel_loop_access": 622, "param": [0, 2, 3, 4, 91, 179, 276, 423, 447, 467, 472, 486, 526, 531, 546, 572, 661, 662, 663, 664, 665], "param1": 589, "param2": 589, "paramattr": 454, "parament": 559, "paramet": [57, 91, 143, 179, 242, 276, 387, 423, 442, 445, 447, 454, 456, 459, 462, 463, 464, 467, 472, 476, 486, 487, 492, 509, 510, 513, 519, 521, 526, 527, 555, 561, 564, 571, 587, 589, 595, 598, 602, 605, 610, 613, 616, 617, 626, 627, 630, 631, 650, 661], "parameter": [536, 615, 616], "parameterless": 565, "paramidx": 454, "paramidx0": 454, "paramidx1": 454, "paramti": 454, "parenexpr": [649, 650, 651, 652, 653, 654, 655, 656, 660, 661, 662, 663, 664, 665], "parent": [447, 455, 463, 467, 472, 486, 532, 552, 558, 559, 563, 589, 591, 603, 652, 663], "parent_scop": 463, "parenthandl": 559, "parenthes": [445, 468, 472, 559, 649, 660], "parenthesi": [467, 613, 649, 660], "parentti": 559, "pariti": 545, "parlanc": [463, 570, 623, 648, 659], "pars": [442, 454, 463, 468, 472, 475, 486, 492, 493, 506, 510, 520, 522, 525, 545, 556, 559, 560, 561, 562, 564, 565, 589, 598, 600, 602, 605, 608, 610, 613, 616, 617, 624, 626, 630, 631, 650, 651, 652, 653, 654, 655, 656, 658, 659, 661, 662, 663, 664, 665], "parsabl": [498, 610], "parse_arg": [660, 661, 662, 663, 664, 665], "parse_bin_rh": [660, 661, 662, 663, 664, 665], "parse_binary_preced": [664, 665], "parse_definit": [660, 661, 662, 663, 664, 665], "parse_expr": [660, 661, 662, 663, 664, 665], "parse_extern": [660, 661, 662, 663, 664, 665], "parse_fail": 589, "parse_id": [660, 661, 662, 663, 664, 665], "parse_oper": [664, 665], "parse_primari": [660, 661, 662, 663, 664, 665], "parse_prototyp": [660, 661, 662, 663, 664, 665], "parse_toplevel": [660, 661, 662, 663, 664, 665], "parse_unari": [664, 665], "parse_var_init": 665, "parse_var_nam": 665, "parseabl": [559, 610], "parsebinoprh": [649, 650, 651, 652, 653, 654, 655, 656], "parsecommandlineopt": [629, 637], "parsedattrinfo": 613, "parsedefinit": [649, 650, 651, 652, 653, 654, 655, 656], "parseexpress": [649, 650, 651, 652, 653, 654, 655, 656], "parseextern": [649, 650, 651, 652, 653, 654, 655, 656], "parseforexpr": [652, 653, 654, 655, 656], "parseidentifierexpr": [649, 650, 651, 652, 653, 654, 655, 656], "parseifexpr": [652, 653, 654, 655, 656], "parsenumberexpr": [649, 650, 651, 652, 653, 654, 655, 656], "parseparenexpr": [649, 650, 651, 652, 653, 654, 655, 656], "parsepasspipelin": 525, "parsepath": 573, "parseprimari": [649, 650, 651, 652, 653, 654, 655, 656, 664], "parseprototyp": [649, 650, 651, 652, 653, 654, 655, 656], "parser": [460, 493, 496, 508, 522, 525, 529, 558, 559, 561, 565, 598, 600, 613, 648, 650, 651, 653, 654, 655, 656, 657, 658, 659, 661, 662, 664, 665, 666, 667], "parserclass": 509, "parsesubtargetfeatur": 626, "parsetoplevelexpr": [649, 650, 651, 652, 653, 654, 655, 656], "parsetypetyp": 520, "parseunari": [653, 654, 655, 656, 664], "parsevalid": 629, "parsevarexpr": [654, 655, 656], "part": [442, 445, 446, 447, 448, 450, 451, 453, 454, 457, 458, 460, 461, 462, 463, 464, 467, 468, 469, 470, 472, 482, 493, 509, 510, 513, 514, 516, 517, 519, 524, 525, 526, 527, 529, 531, 535, 536, 545, 548, 549, 552, 558, 559, 561, 562, 563, 568, 569, 571, 573, 576, 581, 582, 587, 589, 591, 592, 593, 596, 598, 601, 603, 605, 606, 609, 610, 613, 616, 617, 619, 621, 622, 623, 626, 627, 628, 629, 631, 633, 634, 635, 636, 637, 649, 650, 651, 652, 653, 654, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666], "parti": [442, 467, 517, 524, 529, 590, 592, 598, 601, 603, 610], "partial": [442, 445, 447, 464, 498, 508, 559, 560, 561, 589, 593, 598, 602, 605, 608, 622, 630, 631], "partialalia": 450, "particip": [447, 465, 466, 516, 517, 559, 588, 589, 591, 592, 603, 621], "particlefilt": 593, "particular": [442, 445, 450, 451, 452, 454, 457, 458, 462, 464, 466, 467, 472, 481, 497, 509, 510, 513, 514, 517, 519, 524, 526, 527, 529, 532, 533, 536, 538, 539, 548, 552, 553, 554, 557, 558, 559, 561, 563, 564, 570, 571, 572, 573, 576, 577, 579, 581, 582, 587, 589, 591, 593, 596, 598, 600, 601, 603, 605, 606, 608, 610, 613, 615, 616, 617, 621, 623, 626, 627, 628, 630, 649, 651, 654, 660, 662, 665], "particularli": [442, 451, 467, 468, 486, 524, 529, 534, 536, 539, 546, 559, 584, 589, 591, 603, 606, 610, 626, 627, 628, 630], "partit": [458, 464, 472, 473, 495, 547, 560, 570, 635], "partner": 589, "partwai": 467, "parzyszek": 594, "parzyszekacronym": 594, "parzyszekacronym2": 594, "parzyszekdistinguish": 594, "pascal": 559, "pass": [442, 447, 449, 451, 452, 453, 455, 458, 459, 463, 464, 466, 467, 468, 469, 471, 472, 473, 474, 476, 481, 484, 487, 493, 496, 498, 507, 509, 510, 512, 515, 517, 518, 519, 520, 521, 522, 525, 526, 527, 529, 531, 532, 535, 536, 537, 538, 539, 540, 541, 543, 544, 548, 551, 552, 553, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 567, 570, 572, 573, 577, 584, 590, 591, 594, 596, 597, 598, 599, 600, 602, 604, 605, 608, 609, 613, 617, 619, 620, 621, 623, 624, 626, 629, 631, 633, 634, 635, 636, 637, 649, 650, 652, 653, 654, 655, 656, 657, 660, 661, 663, 664, 665, 666], "passag": 467, "passbuild": [525, 627], "passcon": 513, "passiv": 574, "passmanag": [509, 564, 589, 629, 634, 651, 655, 662, 663, 664, 665], "passmanagerbas": [626, 627], "passmanagerbuild": [572, 627], "passmanagerimpl": 629, "passnam": [507, 589], "passopt": 627, "passpluginlibraryinfo": 627, "passthru": 559, "password": [546, 591, 603], "past": [442, 447, 467, 527, 542, 559, 588, 589, 591, 596, 605, 610, 615, 626, 630, 653, 656, 664], "pat": [464, 617, 626], "patch": [452, 467, 496, 523, 524, 526, 528, 531, 546, 548, 559, 560, 573, 588, 589, 595, 597, 598, 603, 610, 621, 628, 629, 630, 651, 656, 662], "patch_premain": [628, 629], "patch_statu": 628, "patchabl": [526, 559, 608, 610], "patcher": 608, "patchpoint": [559, 610], "patfrag": 626, "path": [442, 448, 449, 450, 451, 459, 460, 462, 463, 467, 469, 470, 472, 473, 474, 476, 479, 480, 481, 486, 487, 489, 495, 498, 506, 508, 510, 517, 519, 521, 523, 524, 526, 529, 531, 544, 547, 548, 549, 550, 561, 572, 573, 577, 587, 589, 590, 591, 600, 605, 606, 610, 611, 619, 620, 621, 629, 654, 665], "path_to_clang": 449, "path_to_llvm": 529, "pathnam": [480, 529], "patholog": 589, "pathsep": [472, 621], "patient": [465, 627], "patleaf": 626, "pattern": [0, 2, 3, 4, 442, 449, 451, 453, 463, 464, 471, 472, 481, 487, 495, 505, 509, 513, 516, 520, 527, 533, 536, 538, 539, 545, 559, 572, 581, 589, 596, 598, 602, 605, 606, 613, 615, 617, 621, 626, 629, 635, 650, 659, 660], "patternmatch": 595, "paul": [594, 603, 606], "paus": [450, 526, 591, 634], "payload": [464, 514, 559, 630], "pb": [589, 627], "pbqp": [464, 473], "pc": [47, 137, 233, 378, 442, 446, 447, 464, 492, 519, 523, 559, 561, 598, 604, 606, 619, 621, 625, 626], "pc_32": 447, "pc_64": 447, "pch": 605, "pcre": 561, "pcre2": 561, "pct": 497, "pd": 615, "pdata": [521, 577], "pdb": [462, 471, 575, 576, 580, 581, 597, 605], "pdbdllrbld": 577, "pdbdllversion": 577, "pdbfilepathnameindex": 577, "pdbraw_featuresig": 582, "pdbstreamhead": 582, "pdbstreamvers": 582, "pdbutil": 471, "pdf": [452, 606], "pdg": 516, "pdgbuilder": 516, "pe": [511, 526, 577, 582], "peculiar": 616, "pedant": 462, "peek": [660, 661, 662, 663, 664, 665], "peephol": [464, 520, 554, 589, 598, 651, 652, 653, 654, 662, 663, 664, 665], "peform": 453, "penalti": [460, 559, 589], "pend": [512, 515, 529, 603, 649, 650, 651, 652, 653, 654, 655, 656, 660, 661, 662, 663, 664, 665], "pennant": 593, "pentium": [529, 626], "penultim": 626, "peopl": [457, 460, 464, 465, 466, 467, 509, 512, 517, 520, 522, 527, 528, 529, 551, 559, 568, 588, 591, 599, 603, 606, 611, 627, 633, 657, 659, 666], "pep": 594, "per": [27, 28, 46, 124, 125, 136, 212, 213, 231, 357, 358, 376, 442, 446, 447, 451, 454, 455, 462, 464, 478, 481, 483, 487, 493, 494, 497, 509, 513, 514, 519, 526, 533, 534, 541, 545, 551, 552, 558, 559, 561, 562, 565, 569, 570, 572, 588, 589, 591, 600, 602, 605, 606, 608, 610, 613, 616, 620, 621, 629, 631, 633, 634, 651, 662, 667], "perceiv": [516, 657, 666], "percent": 450, "percentag": [478, 492, 497, 498, 545, 589], "perf": [449, 452, 462, 619], "perf_test": 593, "perfect": [453, 498, 517, 589], "perfectli": [464, 466, 467, 468, 497, 522, 527, 545, 559, 605, 649, 660], "perfectlyrightalign": 545, "perforc": 442, "perform": [442, 446, 447, 449, 450, 451, 452, 453, 458, 459, 460, 461, 462, 463, 464, 466, 467, 472, 473, 476, 483, 487, 495, 496, 498, 506, 507, 509, 513, 517, 518, 519, 520, 523, 525, 526, 527, 529, 530, 533, 534, 538, 539, 543, 545, 547, 548, 551, 552, 557, 558, 559, 560, 561, 562, 563, 564, 565, 571, 572, 573, 574, 577, 587, 589, 590, 591, 592, 594, 596, 598, 599, 600, 602, 603, 605, 609, 610, 611, 613, 615, 619, 621, 622, 623, 626, 627, 628, 633, 634, 635, 650, 654, 655, 657, 658, 661, 665, 666], "perfunctionst": 629, "perhap": [442, 450, 526, 541, 559, 571, 582, 589, 591, 605], "period": [458, 461, 466, 467, 517, 526, 559, 561, 603, 621, 628], "perl": 526, "perldoc": 529, "perman": [442, 538, 601, 603, 635], "permiss": [58, 243, 388, 476, 517, 529, 546, 564, 601, 633], "permit": [464, 468, 473, 502, 521, 526, 534, 538, 559, 560, 589, 594, 615, 621, 654, 655, 656, 665], "permut": [445, 559, 598], "perpetu": [517, 628], "persist": [463, 465, 513, 518, 559, 561, 589], "person": [454, 465, 466, 517, 519, 553, 560, 566, 588, 601, 603, 607, 631, 634], "personalityfn": 454, "personlist": 631, "perspect": [450, 465, 513, 519, 552, 559, 601, 610, 627], "pertain": [442, 517, 519, 559, 603, 605], "pervas": [552, 589, 658], "pervert": [614, 617], "pessim": [523, 587, 589], "peter": 603, "pf0": 571, "pf1": 571, "pf_inet": 637, "pg0": 571, "pg1": 571, "pgo": [460, 498, 585, 600, 606, 624], "ph": 559, "phab": 591, "phabric": [466, 512, 517, 528, 529, 591, 594, 595], "phase": [469, 473, 519, 526, 538, 551, 559, 574, 589, 592, 595, 599, 634, 649, 653, 660, 664], "phase3": [551, 599], "phi": [454, 464, 467, 478, 513, 519, 533, 554, 563, 587, 605, 625, 652, 653, 654, 655, 656, 663, 664, 665], "phid": 467, "phielimin": 464, "phieliminationid": 464, "philip": [594, 603], "philosophi": [554, 558, 592, 624], "phinod": [467, 570, 652, 653, 654, 655, 656], "phoronix": 593, "php": [588, 593], "phrase": [463, 467], "physic": [442, 447, 460, 465, 493, 533, 535, 559, 565, 577, 589, 601, 605, 610, 615, 626], "physreg": 464, "pi": [446, 516, 526, 589], "pi8": 623, "pic": [464, 474, 550, 553, 565, 598, 605, 626], "pick": [442, 453, 462, 464, 467, 474, 487, 493, 526, 527, 532, 541, 549, 550, 553, 559, 588, 591, 592, 610, 619, 626, 662], "pictur": [527, 585, 630, 650, 661], "picu": [542, 594], "picusacronym": 594, "pid": 447, "pie": 602, "piec": [442, 454, 458, 460, 463, 464, 466, 467, 487, 517, 524, 527, 531, 548, 551, 553, 558, 559, 592, 605, 610, 615, 621, 649, 650, 652, 653, 654, 656, 658, 659, 660, 661, 663, 664, 665], "pienaar": 510, "pietro": 603, "pifft": 620, "pin": 559, "ping": [466, 512, 571], "pinpoint": 591, "pinsrd": 468, "pinsrd_1": 468, "pinst": 589, "pip": 619, "pipe": [447, 468, 472, 493, 611, 621, 629], "pipefail": 472, "pipelin": [447, 454, 472, 478, 493, 513, 524, 525, 533, 535, 540, 543, 554, 559, 568, 572, 587, 600, 610, 621, 622, 626, 627, 634, 662, 663, 664, 665], "pipermail": [591, 594], "pitcairn": 447, "pixel": [27, 28, 91, 124, 125, 179, 212, 213, 276, 357, 358, 423], "pl": [442, 629, 631], "place": [442, 447, 448, 449, 452, 453, 458, 464, 466, 467, 470, 472, 474, 476, 493, 495, 505, 509, 513, 514, 517, 518, 519, 520, 521, 524, 526, 527, 529, 535, 538, 539, 544, 546, 549, 558, 559, 565, 570, 571, 573, 587, 588, 589, 590, 591, 596, 598, 599, 600, 605, 606, 607, 608, 610, 615, 617, 619, 621, 622, 625, 626, 627, 631, 649, 650, 651, 653, 654, 657, 658, 659, 661, 662, 664, 665, 666], "placehold": [476, 518, 519], "placement": [447, 521, 524, 605], "placesafepoint": 526, "plai": [563, 571, 589, 616, 627, 657, 659, 666], "plain": [468, 565, 566, 576, 589, 598, 607, 627, 633], "plan": [442, 464, 517, 526, 528, 548, 557, 561, 569, 572, 573, 589, 592, 603, 605, 609, 610, 617, 625], "plane": [628, 653, 664], "plant": 627, "plate": [509, 589], "platform": [442, 447, 449, 451, 463, 464, 482, 497, 513, 517, 519, 526, 529, 530, 546, 547, 548, 550, 551, 558, 559, 562, 573, 582, 585, 586, 589, 598, 602, 606, 608, 611, 627, 630, 633, 637, 651, 653, 662], "plausibl": 457, "playground": 659, "pldi": [526, 596], "pleas": [449, 450, 451, 457, 462, 464, 465, 466, 467, 491, 493, 495, 496, 502, 504, 505, 508, 512, 517, 524, 526, 528, 529, 531, 545, 546, 547, 548, 550, 551, 553, 556, 558, 559, 566, 568, 569, 572, 573, 588, 589, 598, 599, 601, 602, 607, 610, 612, 615, 616, 618, 621, 626, 629, 650, 657, 661, 666, 667], "plethora": [459, 522, 529, 589], "plist": 496, "plot": [492, 653, 664], "plotter": [653, 664], "plu": [442, 446, 447, 453, 454, 468, 517, 519, 526, 559, 577, 589, 603, 605, 626, 634, 649, 652, 660, 663], "plug": [574, 592, 650, 661], "plugin": [469, 474, 476, 507, 548, 559, 574, 600, 624], "plugin_tool": 627, "pluginfilenam": 474, "plugininfo": 627, "plusten": 605, "plx": 442, "pm": [626, 627], "pmbuilder": 572, "pmdatamanag": 629, "pmtoplevelmanag": 629, "pn": [467, 533, 652, 653, 654, 655, 656], "png": [462, 561], "pni8": 519, "po": [91, 179, 276, 423, 559], "point": [49, 51, 138, 234, 236, 294, 299, 304, 306, 325, 327, 379, 381, 442, 444, 445, 450, 451, 454, 455, 456, 457, 458, 461, 462, 464, 467, 468, 473, 481, 487, 493, 497, 509, 510, 518, 519, 520, 524, 527, 529, 533, 536, 539, 541, 546, 549, 550, 551, 552, 554, 557, 560, 562, 564, 570, 571, 572, 573, 577, 581, 584, 589, 591, 592, 597, 598, 599, 600, 603, 605, 606, 610, 611, 614, 617, 623, 624, 625, 626, 627, 628, 629, 630, 631, 634, 635, 636, 637, 648, 649, 650, 651, 652, 653, 654, 655, 656, 659, 660, 661, 662, 663, 664, 665], "point_numb": [44, 45, 135, 229, 230, 374, 375], "pointcount": 526, "pointe": [447, 454, 559], "pointee_align": 447, "pointeealign": 447, "pointer": [442, 446, 451, 454, 464, 473, 510, 513, 519, 522, 523, 524, 526, 533, 534, 557, 560, 562, 564, 565, 569, 571, 572, 573, 576, 584, 587, 598, 602, 605, 608, 613, 623, 626, 627, 630, 631, 633, 635, 636, 637, 649, 651, 652, 654, 656, 657, 658, 659, 660, 662, 663, 664, 665, 666], "pointer1": 606, "pointer2": 606, "pointer_offset": 610, "pointerflag": 576, "pointerkind": 576, "pointermod": 576, "pointermodifi": 576, "pointertodatamemb": 576, "pointertojittargetaddress": 573, "pointertomemberfunct": 576, "pointertyp": 589, "pointi": 631, "pointless": [519, 570, 610], "pointstoconstantmemori": 559, "pointtoconstantmemori": 450, "poison": [598, 606], "poison2": 559, "poison3": 559, "poison4": 559, "poison_yet_again": 559, "poke": 454, "polar": 631, "polaris10": 447, "polaris11": 447, "polici": [445, 447, 450, 454, 467, 512, 528, 529, 589, 591, 594, 598], "polit": [464, 465, 466], "poll": [526, 568, 610], "polli": [462, 517, 529, 591, 594, 596, 622], "pollut": 467, "polyhedr": 596, "polymorph": [461, 608], "pong": 571, "pool": [447, 454, 464, 478, 573, 598, 608, 626, 627, 633], "poolalloc": 450, "poor": [465, 467, 610, 652, 663], "poorli": [455, 467], "pop": [442, 446, 449, 454, 464, 526, 559, 589, 630, 652, 654, 655, 656, 663, 665], "pop2_": 593, "pop_back": [509, 589, 656], "popcnt": 561, "popf": 606, "popfq": 606, "popq": [606, 608, 610], "pops_exiting_wave_id": 446, "pops_pack": 46, "popul": [472, 519, 520, 529, 559, 572, 574, 603, 606, 613, 650], "popular": [450, 463, 464, 518, 529, 547, 559, 658], "pornin": 606, "porpoda": 596, "port": [464, 487, 522, 536, 538, 543, 546, 592, 606, 611, 625, 628, 637, 657, 666], "portabl": [442, 460, 462, 464, 472, 494, 526, 559, 573, 589, 624, 633], "portion": [442, 458, 460, 463, 464, 469, 493, 509, 514, 517, 519, 529, 535, 539, 559, 565, 567, 570, 587, 593, 605, 606, 626, 630, 634, 651, 662], "portugues": 602, "pos1": 509, "pos2": 509, "pose": [526, 560, 606], "posit": [17, 46, 52, 91, 115, 136, 139, 179, 199, 231, 237, 276, 347, 376, 382, 423, 442, 445, 446, 447, 454, 464, 468, 474, 476, 498, 506, 510, 513, 517, 519, 521, 529, 534, 550, 556, 559, 561, 562, 565, 577, 589, 596, 598, 603, 605, 606, 608, 610, 615, 631, 652, 653, 660, 663, 664], "position_at_end": [661, 662, 663, 664, 665], "positionaleatsarg": 509, "posix": [462, 468, 494, 495, 505, 518, 592, 600], "possess": [514, 589], "possibl": [442, 446, 447, 450, 451, 452, 453, 454, 458, 461, 462, 464, 466, 472, 487, 493, 495, 497, 510, 513, 514, 516, 517, 520, 521, 524, 526, 527, 529, 538, 539, 541, 544, 545, 546, 549, 552, 554, 557, 559, 561, 562, 564, 565, 566, 567, 568, 569, 570, 572, 573, 575, 577, 581, 587, 588, 589, 591, 592, 594, 596, 598, 599, 601, 604, 605, 606, 607, 610, 611, 613, 615, 619, 621, 622, 627, 630, 631, 648, 649, 651, 652, 654, 656, 657, 659, 660, 662, 663, 665, 666], "possibli": [442, 447, 451, 454, 464, 513, 522, 526, 527, 533, 536, 541, 550, 553, 554, 559, 563, 573, 587, 589, 591, 596, 599, 605, 627], "post": [464, 465, 466, 474, 512, 517, 528, 534, 543, 565, 568, 588, 590, 598, 600, 601, 602, 603, 605, 606, 610], "poster": 465, "postfix": 442, "postincr": 467, "postiv": 559, "postord": 560, "postrapseudo": 565, "postscript": 587, "potenti": [442, 445, 450, 457, 458, 464, 467, 472, 493, 509, 517, 519, 522, 524, 526, 529, 533, 548, 559, 561, 568, 570, 587, 589, 594, 595, 596, 601, 602, 605, 606, 608, 610, 622, 623, 629, 648, 649, 652, 659, 660, 663], "pound": 631, "povray31": 620, "pow": [572, 625], "power": [442, 447, 450, 460, 464, 468, 491, 509, 511, 534, 538, 545, 547, 557, 559, 562, 565, 587, 588, 589, 607, 614, 615, 617, 630, 649, 650, 651, 652, 653, 654, 659, 660, 661, 662, 663, 664, 665], "power10": 598, "power8": [511, 598], "power9": [511, 598], "powerpc": [451, 462, 495, 520, 529, 559, 560, 594, 608, 621, 626, 631], "powerpc64": [511, 559], "powerpc64l": 628, "powerpcl": 495, "pp": [446, 584, 660, 661, 662, 663, 664, 665], "ppa": 529, "ppc32": 464, "ppc64": 464, "ppc_fp128": [454, 559, 571], "ppcf128": 559, "ppcinstrinfo": 520, "ppcisellow": 520, "pr": [517, 560, 605, 621], "pr26161": 535, "pr26576": 533, "pr34636": 525, "practic": [442, 451, 455, 460, 467, 509, 512, 517, 522, 523, 526, 527, 528, 533, 552, 559, 560, 561, 563, 576, 580, 582, 584, 587, 589, 591, 592, 605, 606, 607, 608, 610, 615, 622, 624, 634, 650, 651, 652, 658, 659, 661, 662, 663], "pragma": [442, 510, 587, 622], "pre": [445, 464, 466, 474, 517, 520, 534, 551, 553, 560, 573, 587, 588, 589, 590, 591, 595, 605, 613, 617, 622, 661], "pre_stor": 464, "prealloc": [454, 589], "prebuilt": 518, "prec": [653, 654, 655, 656, 664, 665], "precaut": [589, 603], "preced": [442, 447, 450, 454, 467, 468, 472, 479, 494, 506, 513, 536, 559, 563, 570, 587, 589, 602, 605, 608, 610, 616, 621, 630, 633, 649, 650, 651, 652, 653, 654, 655, 656, 658, 659, 660, 661, 662, 663, 664, 665], "preceed": 467, "precis": [442, 446, 447, 450, 451, 464, 468, 473, 474, 526, 529, 533, 552, 554, 565, 598, 605, 608, 613, 626, 648, 649, 650, 659, 660, 661], "preclud": [453, 606, 610], "precompil": [572, 633], "precomput": 450, "precondit": 467, "precursor": 517, "pred": [519, 559, 572, 589, 605, 652, 654, 663, 665], "predecessor": [455, 464, 524, 554, 559, 563, 587, 596, 605, 652, 663], "predefin": [464, 468, 472, 525, 610, 619, 627, 653, 664], "predetermin": 450, "predic": [451, 453, 528, 533, 556, 573, 589, 596, 613, 615, 617, 626], "predicate_st": 606, "predicate_stor": 626, "predicatedbinaryoper": 595, "predicatedinstruct": 595, "predicateinfo": 559, "predict": [456, 467, 493, 524, 589, 597, 606, 627], "predictor": 606, "predreg": 556, "predrel": 556, "predsens": 556, "preemptabl": 561, "preemptibl": 587, "preemption": 454, "preemptionspecifi": [454, 559], "preexist": [467, 587], "pref": 559, "prefac": 463, "prefer": [450, 451, 463, 466, 493, 506, 510, 517, 519, 529, 546, 547, 548, 552, 554, 559, 565, 568, 571, 588, 589, 594, 598, 599, 605, 611, 617, 626, 629, 659], "prefetch": 511, "prefix": [442, 447, 448, 454, 460, 462, 464, 467, 470, 472, 475, 480, 481, 483, 495, 506, 509, 519, 529, 544, 561, 565, 573, 574, 575, 576, 582, 590, 591, 594, 605, 610, 615, 617, 619, 621, 653, 664, 665], "prefix1": 468, "prefix2": 468, "prefixdata": 454, "preformat": [566, 607], "preg": 464, "prehead": [554, 559, 563, 587, 652, 663], "preheader_bb": [663, 664], "preheaderbb": [652, 653], "preinstal": 518, "preorder": 552, "prepar": [481, 513, 519, 527, 528, 550, 559, 568, 571, 581, 584, 587, 588, 591, 599, 601, 605, 610, 651], "prepass": 464, "prepdefin": 616, "prepels": 616, "prepend": [470, 481, 554, 559, 589, 594, 605, 616, 619], "prependif": 616, "prepifdef": 616, "prepregcontentexcept": 616, "prepregion": 616, "preprocess": [522, 553], "preprocessor": [462, 481, 509, 510, 514, 522, 589, 616, 626, 651, 657, 662, 666], "prerequisit": [467, 627], "prescrib": 533, "presenc": [451, 464, 468, 493, 519, 552, 554, 559, 574, 582, 589, 605, 626, 630], "present": [442, 447, 454, 459, 461, 464, 466, 468, 472, 474, 481, 482, 491, 493, 497, 504, 506, 509, 510, 513, 514, 519, 521, 523, 526, 527, 529, 533, 542, 549, 553, 559, 574, 576, 577, 580, 581, 582, 584, 589, 591, 593, 600, 605, 606, 610, 616, 622, 632, 652, 653, 654, 655, 656, 663, 664, 665], "preserv": [442, 445, 447, 450, 453, 464, 467, 479, 481, 488, 495, 505, 509, 513, 519, 527, 529, 537, 539, 561, 563, 591, 598, 605, 608, 622, 627, 630, 657, 666], "preserve_allcc": [454, 559], "preserve_mostcc": [454, 559], "preserveal": 559, "preservedanalys": 594, "preservedanalysescheck": 594, "preservemost": 559, "press": 655, "pressur": [464, 493, 529, 606, 625], "presum": [442, 559, 577, 582, 584, 591], "pretti": [452, 492, 506, 527, 555, 561, 566, 567, 570, 571, 587, 589, 606, 607, 611, 615, 616, 620, 627, 648, 649, 650, 651, 652, 653, 654, 659, 660, 661, 662, 663, 664, 665], "prettyprint": 589, "prev": 589, "prevail": 476, "prevent": [447, 450, 464, 466, 468, 495, 505, 509, 510, 513, 516, 517, 522, 526, 535, 539, 554, 559, 573, 577, 587, 589, 591, 602, 603, 604, 605, 606, 608, 610, 611, 621, 625, 627, 636, 637, 650, 654, 655, 656, 661, 665], "previou": [442, 447, 451, 453, 454, 464, 467, 468, 476, 493, 498, 513, 514, 517, 520, 529, 545, 548, 551, 554, 558, 559, 563, 566, 571, 572, 575, 585, 588, 589, 598, 599, 604, 606, 610, 616, 626, 627, 630, 631, 633, 635, 650, 651, 652, 653, 654, 655, 656, 658, 660, 661, 663, 664, 665], "previous": [442, 447, 454, 462, 466, 468, 481, 495, 509, 517, 519, 521, 545, 551, 559, 561, 580, 584, 588, 591, 598, 606, 610, 616, 620, 626, 651, 652, 661], "prf": 493, "prim": [91, 593], "primari": [450, 463, 464, 465, 517, 519, 526, 559, 561, 569, 574, 577, 587, 589, 602, 606, 609, 648, 649, 650, 651, 652, 653, 654, 655, 656, 659, 660, 661, 662, 663, 664, 665], "primarili": [464, 472, 479, 484, 488, 506, 513, 526, 529, 547, 557, 558, 561, 565, 587, 589, 606, 615, 653, 664], "primaryexpr": [446, 649, 660], "primaryfunctionid": 521, "prime": [649, 650, 651, 652, 653, 654, 655, 656, 660, 661, 662, 663, 664, 665], "primer": [460, 462, 607], "primit": [91, 451, 467, 509, 527, 559, 565, 571, 576, 589, 602, 606, 630, 653, 657, 664, 666], "princeton": 593, "principl": [511, 549, 571, 589, 594, 605, 611, 658, 659], "print": [463, 464, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481, 482, 485, 486, 487, 488, 490, 492, 493, 494, 495, 496, 498, 505, 506, 507, 508, 509, 513, 520, 522, 526, 529, 531, 548, 551, 553, 559, 561, 565, 567, 570, 574, 589, 598, 605, 613, 615, 617, 619, 620, 625, 626, 631, 649, 650, 651, 652, 653, 654, 655, 656, 658, 660, 661, 662, 663, 664, 665], "print_endlin": [660, 661, 662, 663, 664, 665], "print_final_stat": 561, "print_float": [662, 663, 664, 665], "print_list": 463, "print_newlin": [662, 663, 664, 665], "print_pc": 561, "print_str": [660, 661, 662, 663, 664, 665], "printabl": [504, 559, 565, 613, 626], "printccoperand": 626, "printd": [651, 652, 653, 654, 655, 656, 657, 664, 665, 666], "printdatadirect": 626, "printdeclar": 626, "printdens": [653, 664], "printer": [464, 526, 558, 567, 589, 600, 613, 627, 655], "printexprresult": 637, "printf": [447, 458, 468, 514, 522, 529, 531, 544, 559, 562, 573, 589, 598, 605, 637, 651, 652, 653, 654, 655, 656, 664, 665], "printformattedfil": 589, "printfunctionpass": 587, "printimplicitdef": 626, "printinformationalmessag": 509, "printinlineasm": 626, "printinstruct": [613, 626], "printlabel": 626, "printmemoperand": 626, "printmethod": 626, "printnextinstruct": 589, "printoperand": 626, "printout": [507, 589], "printstar": [652, 663], "printsth": 587, "prior": [442, 447, 454, 464, 472, 495, 509, 513, 514, 517, 519, 529, 557, 558, 559, 594, 606, 622, 627], "priorit": 493, "prioriti": [446, 447, 497, 510, 527, 551, 559, 598, 601, 605], "priority_queu": 589, "priv": 447, "privat": [442, 446, 454, 496, 513, 517, 524, 546, 552, 558, 559, 571, 572, 577, 589, 601, 603, 605, 606, 613, 626, 633, 634, 635, 636, 637], "private_bas": 446, "private_limit": 446, "private_segment_align": 447, "private_segment_fixed_s": 447, "privatesegmentfixeds": 447, "privileg": [447, 559, 606, 611, 633], "prng": 561, "pro": [447, 453], "proactiv": [458, 517], "prob": 559, "probabilist": 545, "probabl": [447, 464, 466, 467, 478, 481, 493, 509, 510, 517, 518, 522, 526, 527, 545, 547, 565, 589, 590, 591, 593, 609, 610, 649, 652, 657, 660, 663, 666], "probe": [464, 559, 589, 598], "problem": [442, 447, 450, 457, 458, 459, 464, 466, 467, 468, 469, 509, 517, 522, 524, 525, 526, 527, 532, 539, 543, 547, 549, 550, 551, 553, 554, 557, 559, 560, 563, 574, 577, 582, 586, 587, 589, 591, 592, 594, 602, 605, 610, 611, 621, 650, 652, 653, 657, 661, 663, 664, 666], "problemat": [467, 493, 517, 591], "proc": [442, 452, 529, 547, 626], "proce": [462, 513, 519, 526, 533, 551, 560, 571, 589, 596, 599, 606], "procedur": [442, 447, 453, 456, 509, 511, 524, 551, 559, 560, 571, 589, 590, 606, 609, 648, 659], "proceed": [447, 464, 466, 510, 526], "process": [442, 447, 449, 450, 451, 452, 455, 458, 459, 460, 462, 463, 466, 467, 468, 470, 486, 492, 493, 496, 497, 498, 508, 509, 510, 511, 512, 514, 515, 517, 518, 519, 521, 526, 529, 539, 545, 547, 548, 553, 556, 558, 559, 561, 562, 564, 574, 575, 587, 588, 589, 591, 594, 597, 600, 602, 605, 606, 610, 611, 617, 621, 625, 626, 627, 628, 631, 632, 633, 635, 636, 648, 649, 651, 657, 659, 660, 662, 666, 667], "process_id": 447, "processformattedfil": 589, "processor": [442, 453, 462, 464, 474, 493, 509, 526, 529, 533, 559, 605, 613, 617, 625, 626, 655], "processrelocationref": 564, "procnoitin": 617, "procsym": 521, "produc": [442, 445, 446, 447, 451, 452, 453, 454, 458, 459, 462, 464, 467, 468, 469, 470, 472, 473, 478, 481, 483, 484, 487, 493, 495, 497, 502, 506, 507, 513, 514, 517, 518, 519, 522, 525, 526, 527, 529, 534, 538, 544, 550, 553, 554, 557, 558, 559, 561, 567, 570, 571, 573, 577, 579, 581, 582, 584, 587, 589, 596, 598, 600, 605, 609, 610, 611, 613, 615, 619, 621, 625, 626, 627, 630, 631, 633, 634, 650, 651, 652, 654, 656, 661, 662, 663, 665, 666], "product": [447, 455, 464, 465, 468, 470, 493, 498, 517, 526, 545, 551, 559, 569, 571, 597, 598, 600, 603, 616, 627, 635, 649, 653, 660, 664], "prof": [455, 456, 498, 548], "profdata": [449, 462, 471, 481, 548, 559, 619], "profession": [466, 512], "profil": [447, 449, 456, 460, 462, 471, 481, 487, 500, 501, 506, 514, 523, 524, 549, 565, 588, 590, 598, 600, 605, 624, 630], "profiledata": 559, "profit": [464, 510, 523, 524, 559, 568, 587, 606, 622, 625], "profraw": [449, 481, 548], "progbit": [521, 606], "program": [446, 447, 450, 451, 452, 458, 459, 462, 463, 467, 468, 469, 471, 472, 473, 476, 479, 481, 488, 491, 493, 495, 497, 500, 501, 502, 504, 505, 506, 507, 508, 509, 510, 511, 514, 515, 517, 518, 519, 523, 524, 525, 526, 527, 528, 529, 531, 533, 544, 545, 549, 551, 552, 553, 554, 559, 560, 561, 562, 563, 569, 572, 573, 575, 577, 582, 584, 585, 586, 587, 589, 593, 597, 600, 602, 605, 606, 608, 609, 610, 611, 613, 619, 620, 621, 622, 623, 624, 625, 626, 627, 629, 630, 631, 632, 633, 634, 635, 637, 649, 651, 652, 654, 655, 656, 657, 659, 660, 662, 663, 665, 666], "programm": [447, 451, 458, 464, 467, 507, 509, 510, 511, 512, 526, 530, 552, 606, 616, 622, 625, 627, 633, 653, 656, 664, 666], "programmat": [464, 498, 526, 572, 615, 628, 631, 653, 664], "programmersmanu": [467, 633], "progress": [447, 448, 451, 462, 464, 472, 493, 511, 513, 517, 526, 551, 559, 560, 565, 589, 594, 628, 659], "prohibit": [451, 562, 570, 606], "proj": 551, "proj_install_root": 590, "proj_obj_root": 590, "proj_src_root": 590, "project": [442, 449, 460, 465, 466, 467, 471, 472, 511, 512, 513, 518, 520, 522, 524, 525, 528, 531, 532, 548, 549, 550, 551, 560, 561, 573, 588, 589, 592, 593, 594, 600, 601, 602, 603, 605, 606, 608, 610, 619, 620, 621, 627, 628, 632, 633, 634, 635, 636, 637, 658, 659], "project_nam": 590, "projector": 568, "prolang": 620, "prolifer": 594, "prolog": [559, 560, 606, 626], "prologepilog": 600, "prologu": [447, 454, 464, 473, 526, 604, 605, 626, 656], "prologue_end": 521, "prologuedata": 454, "promin": 619, "promis": [466, 517, 628], "promot": [442, 450, 464, 510, 517, 520, 524, 559, 560, 574, 589, 596, 605, 654, 656, 665], "promoteloopaccessestoscalar": 554, "promoteop": 520, "promptli": [466, 517, 603], "prone": [464, 509, 547, 589, 617], "proof": [456, 565, 606], "propag": [447, 462, 464, 509, 510, 519, 529, 534, 559, 560, 565, 574, 588, 600, 605, 609, 610, 611], "proper": [451, 467, 472, 510, 514, 536, 552, 554, 559, 589, 626, 656], "properli": [446, 448, 450, 451, 457, 458, 461, 464, 470, 509, 510, 512, 521, 528, 529, 558, 559, 588, 598, 651, 654, 665], "properti": [442, 443, 448, 450, 451, 453, 454, 459, 464, 467, 470, 472, 493, 495, 509, 513, 514, 517, 520, 526, 531, 537, 539, 556, 558, 559, 562, 563, 565, 570, 571, 577, 584, 587, 588, 589, 591, 603, 606, 608, 609, 610, 613, 617, 622, 626, 651, 654, 665], "property_nam": 558, "property_valu": 558, "propoal": 447, "propon": 594, "proport": [498, 509, 536], "propos": [447, 455, 466, 468, 517, 524, 542, 560, 561, 592, 594, 595, 596, 598, 603, 606, 624, 629, 632], "prose": 467, "prospect": 517, "protect": [451, 454, 461, 464, 467, 495, 517, 559, 561, 591, 598, 601, 611, 626], "protectfilecheckoutput": 621, "protector": [559, 605], "proto": [636, 637, 649, 650, 651, 652, 653, 654, 655, 656, 660, 661, 662, 663, 664, 665], "protoast": [650, 651, 652, 653, 654, 655, 656], "protobuf": 525, "protocol": [513, 525, 559, 591, 610], "prototyp": [442, 467, 488, 513, 520, 524, 545, 559, 595, 597, 602, 626, 627, 649, 650, 651, 652, 653, 654, 655, 656, 660, 661, 662, 663, 664, 665], "prototypeast": [636, 637, 649, 650, 651, 652, 653, 654, 655, 656], "prove": [450, 517, 524, 545, 557, 559, 563, 571, 587, 606], "proven": [447, 494, 517, 524, 539, 559, 569, 587, 610, 654, 665], "provid": [20, 118, 202, 350, 442, 443, 446, 447, 448, 449, 450, 451, 454, 456, 459, 460, 461, 462, 463, 464, 466, 468, 469, 472, 478, 479, 481, 486, 487, 492, 493, 495, 498, 501, 506, 507, 509, 510, 512, 513, 514, 515, 516, 517, 518, 519, 521, 524, 526, 527, 528, 529, 531, 533, 536, 541, 543, 545, 546, 547, 549, 552, 558, 559, 560, 561, 562, 563, 564, 567, 568, 569, 570, 572, 573, 574, 579, 584, 585, 587, 589, 590, 591, 592, 597, 598, 600, 601, 602, 603, 605, 606, 608, 610, 611, 613, 615, 616, 620, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 649, 650, 651, 652, 653, 654, 655, 656, 657, 660, 661, 662, 665, 666], "provis": 517, "provision": [442, 447], "proviso": 517, "proxi": 464, "proxyapp": 593, "prune": [459, 570, 591, 596, 603, 628], "pruneexpir": 591, "psabi": 511, "pse": 594, "pseudo": [447, 453, 455, 464, 508, 513, 536, 558, 559, 565, 573, 589, 598, 605, 606, 613, 626, 627], "pseudocod": [545, 559, 626], "pseudonym": 601, "psl": 442, "pstl": [462, 591], "psubu": 621, "psubusw": 621, "pt": 593, "ptest": 598, "pthread": [510, 559, 592, 602], "pthread_attr_t": 559, "pthread_creat": 559, "ptr": [447, 451, 467, 513, 523, 576, 589, 608, 623, 626], "ptr0": [534, 559], "ptr1": 559, "ptr2": 559, "ptr3": 559, "ptr64": 447, "ptr7": 559, "ptr_is_nul": 523, "ptr_rc": 464, "ptra": 572, "ptrb": 572, "ptrc": 572, "ptrloc": [526, 559], "ptroff": 464, "ptrreg": 464, "ptrtoint": [524, 610], "ptrtoreplacedint": 589, "ptrty": 559, "ptrval": 559, "ptx": [464, 510, 511], "ptx30": 464, "ptx31": 464, "ptxa": 510, "ptxstring": 572, "pty": 559, "pty2": 559, "pub": 605, "public": [460, 463, 467, 497, 509, 517, 525, 526, 528, 529, 546, 552, 558, 572, 577, 585, 593, 599, 601, 603, 605, 606, 623, 626, 627, 631, 633, 634, 635, 636, 637, 649, 650, 651, 652, 653, 654, 655, 656], "publicli": [517, 589, 601, 603, 605], "publicstreamindex": 577, "publish": [510, 585, 589, 594, 599, 603], "pubnam": [486, 605], "pubtyp": [486, 605], "pugixml": 561, "pull": [445, 451, 457, 464, 529, 588, 591, 603], "puls": 561, "punctuat": [467, 559, 616], "pure": [451, 458, 464, 517, 558, 560, 563, 587, 596, 605, 610, 616, 626, 650, 661], "purifi": 553, "purpos": [442, 447, 453, 460, 464, 467, 468, 493, 495, 497, 509, 510, 513, 516, 517, 519, 524, 527, 529, 533, 536, 554, 559, 571, 572, 573, 574, 577, 581, 582, 587, 589, 594, 598, 599, 602, 606, 609, 610, 611, 613, 614, 617, 627, 630, 633, 650, 651, 656], "pursu": 606, "push": [442, 447, 458, 461, 464, 467, 526, 559, 588, 591, 656], "push_back": [467, 589, 626, 631, 649, 650, 651, 652, 653, 654, 655, 656], "pushf": [464, 606], "pushfl": 464, "pushfq": [464, 606], "pushq": [606, 610], "put": [442, 447, 450, 451, 452, 458, 464, 465, 467, 468, 509, 514, 515, 518, 519, 523, 526, 529, 533, 534, 535, 549, 551, 559, 566, 571, 573, 587, 588, 589, 591, 603, 605, 606, 621, 627, 631, 651, 652, 654, 656, 657, 659, 663, 665, 666], "putchar": [651, 652, 653, 654, 655, 656, 662, 663, 664, 665], "putchard": [651, 652, 653, 654, 655, 656, 657, 662, 663, 664, 665, 666], "puzzl": 553, "pv": 513, "pwd": [506, 529, 550, 602], "py": [472, 512, 529, 546, 548, 589, 591, 619, 626], "pygment": 650, "pynam": 593, "python": [472, 513, 526, 529, 531, 550, 561, 589, 591, 594, 598, 599, 607, 613, 616, 619, 621, 657, 666], "python2": 547, "python_execut": 529, "q": [472, 476, 509, 544, 559, 598], "q0": [453, 559], "q1": 517, "q15": 559, "q2": 517, "q3": [517, 559], "q31": 559, "q7": 559, "qch": 462, "qeaa": 519, "qemu": 561, "qhelpgener": 462, "qmcpack": 593, "qnan": 559, "qp": 606, "qpx": [559, 598], "qspectr": 606, "qt": [462, 594], "qt_coding_styl": 594, "quad": [445, 446, 447, 559, 598, 606, 610, 626], "quad_perm": [445, 447], "quadrant": 447, "quadrat": [464, 473, 570, 589], "qualif": 563, "qualifi": [447, 464, 466, 527, 551, 559, 575, 576, 605], "qualiti": [459, 464, 466, 486, 493, 524, 539, 547, 551, 559, 598, 621, 627, 633, 635], "qualtyp": 467, "quantiti": [493, 559], "quarantin": 602, "quarantinechunksuptos": 602, "quarantinesizekb": 602, "quartil": 606, "quentin": 542, "queri": [442, 447, 450, 451, 464, 467, 493, 497, 509, 513, 524, 543, 555, 556, 559, 570, 573, 574, 585, 589, 605, 625, 626, 627, 629, 634, 657, 666], "query_sampl": 447, "question": [442, 450, 457, 466, 512, 517, 524, 527, 528, 529, 531, 533, 552, 559, 561, 566, 571, 588, 589, 590, 592, 594, 597, 598, 605, 607, 614, 622, 649, 652, 654, 657, 660, 663, 665, 666], "queu": 447, "queue": [493, 573, 589, 626, 627, 628], "queue_ptr": 447, "quick": [450, 458, 466, 467, 476, 493, 524, 527, 550, 569, 587, 588, 599, 605, 651, 657, 662, 666], "quicker": [547, 570, 601, 634], "quickest": 545, "quickli": [450, 458, 464, 466, 467, 476, 509, 512, 519, 529, 530, 531, 553, 559, 561, 570, 575, 586, 589, 594, 605, 611, 621, 628, 634], "quicksilv": 593, "quickstart": [528, 550], "quiet": [447, 472, 486, 509, 515, 534, 554, 559], "quiet2": 509, "quieta": 509, "quirk": [463, 610], "quit": [450, 464, 468, 510, 515, 520, 524, 526, 527, 529, 559, 566, 571, 589, 606, 607, 608, 611, 632, 635, 650, 652, 657, 661, 663, 666], "quot": [447, 462, 509, 529, 558, 559, 561, 565, 605, 615, 621, 631], "quotient": [468, 559], "quotingtyp": 631, "quux": 467, "qux": 559, "qx": 453, "r": [442, 452, 464, 468, 476, 483, 486, 493, 494, 495, 496, 498, 500, 501, 505, 515, 516, 521, 526, 546, 551, 552, 559, 571, 572, 576, 581, 589, 591, 610, 615, 616, 626, 634, 635, 648, 649, 650, 651, 652, 653, 654, 655, 656, 659, 660, 661, 662, 663, 664, 665], "r0": [464, 468, 559, 565, 567, 598, 615, 626], "r1": [442, 464, 468, 559, 565, 572, 589, 591, 615, 626], "r10": [464, 487, 572, 604, 617], "r10b": 617, "r10d": 617, "r10w": 617, "r11": [559, 604, 608, 617], "r11b": 617, "r11d": 617, "r11w": 617, "r12": [464, 521, 559, 617], "r1234": 591, "r12345": 551, "r123456": 591, "r128": [61, 146, 246], "r12b": 617, "r12d": 617, "r12w": 617, "r13": [464, 617], "r13b": 617, "r13d": 617, "r13w": 617, "r14": [464, 559, 617], "r14b": 617, "r14d": 617, "r14w": 617, "r15": [464, 559, 565, 617], "r15b": 617, "r15d": 617, "r15w": 617, "r173931": 613, "r2": [442, 464, 468, 559, 565, 589, 591, 615], "r258109": 591, "r285": 447, "r3": [464, 468, 559, 572, 591, 615], "r31": [464, 559], "r341082": 561, "r390": 447, "r390x": 447, "r4": [464, 468, 521], "r5": [464, 468], "r6": [464, 468], "r600": 447, "r630": 447, "r6xx": 447, "r7": [447, 464, 468, 559], "r700": 447, "r7xx": 447, "r8": [464, 487, 559, 606, 608, 617], "r8b": 617, "r8d": 617, "r8w": 617, "r9": [447, 464, 572, 608, 617], "r9b": 617, "r9d": 617, "r9w": 617, "r_386_8": 521, "r_amdgpu_abs32": 447, "r_amdgpu_abs32_hi": 447, "r_amdgpu_abs32_lo": 447, "r_amdgpu_abs64": 447, "r_amdgpu_gotpcrel": 447, "r_amdgpu_gotpcrel32_hi": 447, "r_amdgpu_gotpcrel32_lo": 447, "r_amdgpu_non": 447, "r_amdgpu_rel32": 447, "r_amdgpu_rel32_hi": 447, "r_amdgpu_rel32_lo": 447, "r_amdgpu_rel64": 447, "r_amdgpu_relative64": 447, "r_arm_thm_movw_abs_nc": 550, "r_offset": 447, "r_x86_64_8": 521, "ra": [447, 474, 598, 605], "race": [447, 451, 465, 513, 559, 589, 602, 621], "racist": 465, "radamsa": 561, "radare2": 561, "radeon": [442, 447], "radic": [464, 543], "radiu": 552, "radix": [464, 467, 494, 502, 504, 559], "rage": 478, "raii": 513, "rais": [442, 457, 458, 519, 526, 534, 559, 587, 589, 591, 603, 606, 610, 659, 660, 661, 662, 663, 664, 665], "rajaperf": 593, "ralia": 488, "ram": [546, 561], "ramif": 527, "ramp": 513, "ramsei": 464, "ran": [481, 532, 606, 627], "rand": 561, "random": [452, 458, 467, 469, 471, 472, 517, 559, 561, 569, 589, 593], "randomize_va_spac": 452, "randomli": [467, 503, 545, 628], "rang": [17, 22, 46, 47, 52, 76, 93, 109, 115, 119, 136, 137, 139, 156, 181, 195, 199, 203, 231, 232, 233, 237, 259, 278, 292, 347, 352, 376, 377, 378, 382, 406, 425, 441, 442, 445, 446, 447, 450, 455, 456, 458, 464, 465, 472, 473, 486, 492, 493, 497, 498, 509, 513, 516, 519, 521, 524, 526, 527, 532, 535, 552, 573, 596, 598, 605, 610, 615, 625, 627, 632, 651, 653, 658, 659, 662, 664], "range_specifi": 447, "rangeend": 521, "rangelist": 616, "rangepiec": 616, "rangestart": 521, "rank": 587, "ranlib": [471, 476, 529, 544, 549], "rapaport": 596, "rapid": [517, 606], "rare": [454, 464, 465, 467, 468, 519, 523, 524, 526, 533, 550, 559, 584, 589, 606, 615, 626], "rarer": 535, "rat": 493, "rate": [454, 466, 478, 493, 512, 545, 561, 591], "rather": [442, 447, 450, 454, 455, 459, 464, 465, 467, 468, 470, 472, 476, 481, 504, 506, 510, 517, 518, 522, 524, 526, 527, 529, 531, 533, 538, 545, 547, 559, 561, 563, 573, 574, 577, 579, 587, 589, 591, 592, 596, 598, 599, 605, 606, 610, 616, 621, 626, 633, 634, 635, 649, 650, 656, 660], "ratifi": 598, "ratio": [455, 606], "rational": [464, 517, 533, 603, 624], "rauw": [554, 560, 571, 589], "raw": [464, 477, 481, 485, 488, 490, 493, 495, 496, 497, 500, 501, 507, 509, 513, 521, 548, 555, 559, 564, 567, 613, 620, 629, 650], "raw_fd_ostream": 655, "raw_ostream": [464, 520, 589, 627, 629, 631, 635, 636, 637, 655, 656], "raw_string_ostream": [635, 636, 637], "rawfrm": [615, 626], "rax": [464, 559, 565, 606, 608, 610, 617, 626], "rbp": [464, 617], "rbx": [464, 617], "rc": [551, 598, 599], "rc1": 599, "rc2": 599, "rcn": [551, 599], "rcp_iflag_f32": 447, "rcu": 493, "rcx": [464, 559, 606, 617], "rd": [521, 626], "rdi": [464, 487, 521, 559, 565, 605, 606, 608, 617], "rdna": 447, "rdtsc": 559, "rdx": [464, 606, 608, 610, 617], "rdynam": [651, 653, 664, 665], "re": [442, 450, 453, 457, 462, 463, 464, 465, 466, 467, 468, 469, 472, 509, 510, 512, 517, 519, 522, 524, 525, 526, 529, 532, 533, 537, 543, 544, 545, 547, 548, 550, 551, 553, 559, 561, 563, 564, 570, 571, 573, 582, 586, 588, 589, 591, 596, 599, 600, 603, 605, 606, 607, 610, 611, 613, 614, 616, 617, 620, 621, 627, 628, 629, 633, 635, 636, 637, 650, 651, 652, 654, 655, 656, 657, 659, 661, 662, 663, 665, 666], "reach": [442, 467, 472, 493, 513, 517, 519, 523, 551, 558, 559, 561, 563, 568, 570, 571, 573, 574, 587, 589, 596, 601, 606, 608, 626], "reachabl": [462, 526, 532, 559, 560, 563, 606, 610], "react": 457, "reactor": 598, "read": [34, 35, 36, 37, 38, 46, 57, 58, 64, 127, 128, 129, 130, 136, 143, 147, 216, 217, 218, 219, 220, 221, 222, 223, 231, 242, 243, 247, 364, 365, 366, 367, 368, 376, 387, 388, 394, 442, 445, 446, 447, 450, 451, 453, 454, 458, 462, 463, 464, 467, 468, 473, 474, 476, 477, 478, 481, 482, 484, 485, 486, 487, 488, 493, 494, 495, 496, 497, 498, 500, 501, 502, 504, 505, 506, 507, 508, 509, 511, 513, 515, 517, 518, 520, 521, 522, 523, 528, 529, 531, 548, 553, 559, 561, 565, 566, 571, 577, 579, 585, 587, 588, 589, 605, 606, 607, 608, 609, 610, 616, 617, 621, 625, 628, 630, 631, 634, 648, 649, 650, 651, 652, 653, 654, 655, 656, 659, 661, 662, 664, 665, 666], "read_async": 513, "read_onli": 447, "read_regist": 559, "read_volatile_regist": 559, "read_writ": 447, "readabl": [446, 448, 451, 461, 464, 466, 477, 478, 481, 485, 486, 490, 492, 498, 506, 521, 529, 545, 559, 565, 566, 577, 587, 589, 594, 605, 627, 631, 650], "readandmaybemodifi": 561, "readattribut": 613, "readelf": [471, 494, 496], "reader": [442, 454, 467, 471, 494, 497, 498, 520, 522, 559, 571, 577, 594, 613, 630, 631, 633, 634, 649, 660], "readi": [466, 493, 509, 512, 513, 517, 544, 551, 564, 568, 571, 605, 627, 649, 650, 651, 652, 653, 654, 655, 656, 658, 659, 660, 661, 662, 663, 664, 665], "readili": [539, 603], "readjust": 464, "readm": [517, 529, 566, 591, 594, 607, 619, 621], "readnon": [454, 524, 559, 572, 587, 605, 610, 623], "readobj": [471, 494, 496, 500, 589, 605], "readonli": [447, 454, 487, 495, 524, 559, 570, 587, 605, 608, 610, 629], "readtscp": 630, "readwrit": 447, "readyset": 493, "real": [442, 443, 447, 450, 452, 468, 487, 493, 495, 505, 509, 521, 533, 559, 561, 572, 577, 584, 589, 601, 605, 617, 626, 648, 653, 658, 664], "realign": [447, 534, 559], "realist": [526, 606, 615, 649, 660], "realiti": [442, 551], "realiz": [517, 520, 653, 662, 664], "realli": [447, 449, 451, 462, 467, 509, 510, 517, 520, 522, 527, 529, 531, 533, 559, 561, 566, 570, 582, 584, 587, 588, 589, 605, 607, 615, 616, 620, 621, 648, 650, 651, 652, 653, 654, 656, 657, 659, 661, 662, 663, 664, 665, 666], "realloc": [450, 545, 589], "reallyhidden": 509, "realmag": [653, 664], "realpr": 559, "realstart": [653, 664], "ream": [594, 603], "reamesconcern": 594, "reappli": 517, "rearrang": 560, "reason": [442, 447, 448, 450, 451, 456, 457, 460, 462, 463, 464, 466, 467, 468, 509, 513, 517, 519, 520, 523, 524, 526, 527, 529, 536, 538, 539, 543, 545, 550, 552, 558, 559, 561, 563, 566, 569, 570, 571, 573, 576, 579, 588, 589, 592, 593, 600, 601, 602, 603, 604, 605, 606, 607, 610, 611, 613, 615, 621, 622, 627, 633, 635, 649, 650, 651, 652, 654, 656, 659, 660, 661, 662, 663, 665], "reassoc": 559, "reassoci": [559, 560, 651, 652, 653, 654, 662, 663, 664, 665], "reassur": 561, "rebas": [496, 529, 588, 591], "rebuild": [449, 462, 470, 548, 608, 629], "rec": [659, 660, 661, 662, 663, 664, 665], "recal": [571, 631, 650, 651, 652, 661, 662], "recap": 453, "receipt": 601, "receiv": [446, 454, 463, 464, 466, 512, 519, 524, 525, 546, 559, 561, 564, 589, 601, 606, 617, 622, 635, 660], "receivedtermin": 637, "recent": [442, 462, 466, 476, 512, 517, 518, 519, 526, 529, 559, 561, 568, 584, 588, 599, 602, 603, 606, 631, 651], "recept": 517, "recheck": [571, 587], "recip": [549, 591, 596], "recipi": 517, "reciproc": [493, 559], "reclaim": [559, 560, 573], "recogn": [452, 464, 468, 506, 509, 559, 562, 571, 587, 589, 606, 616, 620, 648, 652, 656, 659, 663], "recognis": [589, 598], "recognit": 598, "recombin": 633, "recommend": [442, 460, 462, 463, 464, 467, 468, 472, 493, 510, 517, 524, 526, 527, 529, 538, 540, 544, 545, 548, 549, 557, 559, 561, 568, 572, 586, 588, 598, 603, 606, 610, 621, 622, 627, 649, 651, 654, 655, 660, 662, 665], "recommit": 466, "recommonmark": 566, "recompil": [450, 453, 523, 573, 608, 635, 652, 663], "recomput": [450, 589, 627], "reconfigur": [546, 558], "reconstitut": [538, 554, 559], "reconstruct": [442, 476, 497, 527, 579, 605, 628, 630], "record": [442, 448, 457, 473, 474, 494, 498, 501, 507, 508, 517, 545, 559, 568, 577, 580, 581, 582, 585, 588, 596, 600, 601, 603, 605, 608, 613, 615, 616, 617, 625, 629, 650, 651, 652, 653, 654, 655, 656, 657, 666], "record_kind": 630, "record_meta_container_info": 600, "record_meta_external_fil": 600, "record_meta_remark_vers": 600, "record_meta_strtab": 600, "record_remark_arg_with_debugloc": 600, "record_remark_arg_without_debugloc": 600, "record_remark_debug_loc": 600, "record_remark_head": 600, "record_remark_hot": 600, "recordhead": 576, "recordid": 454, "recordkind": 576, "recordlen": 576, "recoup": 454, "recov": [442, 468, 519, 523, 545, 559, 598, 605, 608], "recover": [442, 467], "recoveri": [589, 649, 650, 651, 652, 653, 654, 655, 656, 660, 661, 662, 663, 664, 665], "recreat": [559, 631], "recur": 552, "recurr": [516, 587, 596], "recurs": [447, 467, 468, 472, 486, 488, 497, 526, 545, 559, 587, 589, 605, 606, 610, 613, 648, 649, 650, 652, 653, 654, 658, 659, 660, 661, 663, 664, 665, 666], "recursiveexpansionlimit": 472, "recycl": [464, 602, 628], "red": [559, 606], "redefin": [495, 615, 650, 653, 654, 661, 664, 665], "redefinit": [510, 633, 650, 654, 661, 662, 663, 664, 665], "redesign": 528, "redhat": [586, 603], "redirect": [469, 486, 487, 545, 551, 559, 561, 621, 623, 656], "rediscov": [657, 666], "redistribut": 517, "redo": 571, "reduc": [447, 452, 458, 459, 461, 462, 463, 464, 467, 469, 488, 509, 510, 513, 514, 517, 518, 527, 529, 538, 553, 556, 560, 561, 571, 572, 573, 589, 591, 596, 597, 599, 602, 606, 617, 627, 633, 636, 651, 656, 658, 662], "reduce_input": 561, "reduct": [447, 458, 467, 471, 474, 598], "redund": [464, 470, 509, 510, 524, 533, 535, 554, 560, 563, 574, 589, 591, 598, 605, 610, 635, 651, 662], "redwin": 464, "redwood": 447, "reentri": 573, "reevalu": 616, "reexamin": 466, "reexportedflag": 573, "reexportflag": 573, "reextern": [661, 662, 663, 664, 665], "ref": [442, 450, 572, 576, 577, 580, 591, 610, 615, 619, 649, 650, 651, 652, 653, 654, 655, 656, 660, 661, 662, 663, 664, 665], "refactor": [466, 467, 517, 560, 591, 594, 654, 665], "refcount": 526, "refer": [47, 137, 233, 378, 443, 444, 446, 447, 449, 450, 453, 454, 455, 458, 462, 463, 464, 466, 467, 468, 469, 472, 474, 495, 505, 511, 512, 513, 514, 517, 519, 521, 522, 527, 535, 537, 539, 545, 547, 551, 552, 554, 555, 560, 561, 563, 564, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577, 580, 581, 584, 585, 588, 599, 600, 605, 606, 608, 611, 613, 615, 617, 619, 621, 622, 624, 626, 627, 630, 631, 632, 633, 634, 635, 649, 650, 651, 652, 653, 654, 655, 656, 660, 661, 663, 665], "referenc": [442, 446, 447, 454, 506, 509, 510, 544, 559, 560, 562, 565, 571, 573, 575, 577, 584, 589, 600, 602, 605, 615, 616, 623, 626, 633, 634, 649, 650, 651, 652, 653, 654, 655, 656, 660, 661, 662, 663, 664, 665], "referenti": 587, "refil": 571, "refin": [450, 464, 559, 589, 594, 633], "reflect": [442, 446, 447, 450, 517, 543, 551, 559, 562, 573, 594, 605, 626, 627, 653, 664], "reflex": 571, "reflog": 591, "reflogexpir": 591, "reflogexpireunreach": 591, "refnam": 591, "reformat": [467, 567, 594], "reformul": 450, "refrain": [551, 559, 601], "refresh": [535, 562], "refs_to_clean": 591, "refspec": 591, "refus": [462, 477, 485, 488, 490, 507, 587, 606], "reg": [46, 136, 231, 376, 464, 468, 487, 496, 565, 567, 572, 589, 608, 615, 626], "reg1": 468, "reg1024": 464, "reg1025": 464, "reg1026": 464, "reg1027": 464, "reg2": 468, "reg_bas": 468, "reg_nam": 487, "reg_offset": 468, "reg_sequ": [533, 565], "regalloc": [464, 473, 474, 627], "regalloclinearscan": 464, "regallocregistri": 627, "regard": [442, 451, 467, 476, 492, 522, 528, 551, 557, 559, 600, 613], "regardless": [94, 338, 426, 442, 447, 450, 462, 467, 477, 485, 488, 490, 493, 504, 507, 526, 531, 559, 573, 586, 587, 605, 606, 619, 634, 654, 665], "regbankselect": [539, 543, 565], "regconstraint": 464, "regener": 553, "regex": [481, 486, 495, 505, 509, 600, 620], "regex_replac": 472, "regexp": 472, "region": [442, 446, 447, 454, 481, 493, 513, 519, 559, 560, 568, 591, 596, 606, 608, 616, 623], "region0": 514, "region1": 514, "regioninfo": [587, 596], "regionsforfile0": 514, "regionsforfile1": 514, "regionvector": 595, "regist": [14, 17, 30, 41, 43, 46, 55, 82, 112, 115, 136, 141, 167, 196, 199, 215, 226, 228, 231, 266, 313, 344, 347, 360, 371, 373, 376, 385, 413, 444, 445, 446, 448, 450, 451, 453, 461, 468, 469, 473, 474, 487, 493, 496, 507, 508, 509, 513, 515, 517, 519, 526, 529, 534, 535, 536, 537, 538, 539, 540, 541, 543, 546, 554, 559, 564, 567, 573, 574, 588, 589, 596, 598, 608, 610, 613, 615, 617, 625, 628, 631, 650, 653, 654, 655, 656, 661, 662, 663, 664, 665], "registeralias": 613, "registeranalysisgroup": 450, "registerasmprint": 626, "registerasmstream": 464, "registerbankinfo": [533, 540], "registerclass": [464, 613, 617, 626], "registerdescriptor": 626, "registeredarg": 526, "registerehfram": [564, 637], "registerehframesinprocess": 637, "registerinfo": [464, 565, 626], "registerlist": 626, "registermcobjectstream": 464, "registermypass": 627, "registerpass": 627, "registerpassbuildercallback": 627, "registerpasspars": 627, "registerregalloc": 627, "registerschedul": 627, "registerstandardpass": 627, "registertarget": 626, "registerwithsubreg": 626, "registr": [511, 515, 522, 526, 633], "registri": [526, 655], "reglist": 626, "regmapping_f": 464, "regmask": 565, "regno": 464, "regnum": 608, "regoffset": 567, "regress": [458, 468, 472, 517, 529, 531, 532, 539, 561, 590, 591, 599, 606], "regstat": [464, 565], "regtyp": 626, "regul": 627, "regular": [442, 445, 447, 451, 459, 467, 468, 472, 476, 481, 486, 488, 489, 491, 494, 495, 497, 505, 509, 510, 529, 559, 561, 565, 571, 573, 591, 595, 598, 600, 620, 631, 657, 666], "reid": 611, "reilli": 589, "reinterpret": [453, 534, 538], "reinterpret_cast": 637, "reintroduc": 606, "reject": [454, 468, 509, 529, 536, 551, 559, 657, 661, 662, 663, 664, 665, 666], "rejit": 662, "rel": [47, 137, 233, 378, 446, 447, 454, 455, 461, 462, 464, 467, 468, 472, 478, 496, 497, 498, 506, 509, 513, 521, 524, 526, 528, 529, 551, 561, 563, 567, 570, 589, 590, 596, 598, 599, 604, 605, 608, 610, 634, 652, 656, 663], "rel32": 447, "rel_path_to_fil": 481, "rela": [447, 504], "relai": 559, "relat": [442, 447, 450, 451, 457, 463, 464, 466, 467, 468, 472, 493, 495, 505, 512, 513, 516, 517, 519, 527, 529, 533, 551, 553, 556, 558, 559, 561, 568, 570, 571, 572, 577, 587, 589, 591, 592, 594, 595, 597, 598, 599, 602, 603, 605, 608, 610, 613, 621, 627, 631, 650, 652, 653, 661, 662, 664], "relationship": [447, 468, 486, 516, 519, 526, 554, 556, 559, 571, 605, 610, 611, 626, 627, 628], "relativenam": 506, "relax": [493, 533, 539, 559, 598, 610], "relbf": 559, "releas": [447, 460, 462, 464, 467, 480, 513, 517, 518, 519, 524, 528, 529, 544, 547, 548, 549, 555, 561, 562, 573, 586, 589, 590, 591, 600, 603, 605, 608, 621, 626, 627, 629, 650], "release_1": 529, "release_11": 529, "release_29": 529, "release_350": 529, "release_39": 594, "release_test": 551, "release_xi": 551, "release_xx": 551, "releasei": 599, "relev": [442, 450, 451, 464, 466, 468, 501, 510, 513, 517, 524, 547, 548, 550, 551, 552, 556, 558, 559, 585, 586, 588, 591, 592, 596, 601, 603, 610, 628, 652, 663], "reli": [442, 453, 455, 460, 463, 464, 467, 513, 517, 524, 526, 527, 538, 559, 561, 562, 573, 582, 591, 598, 599, 605, 606, 610, 621, 625, 628, 634, 654, 665], "reliabl": [462, 472, 510, 523, 539, 596, 605, 619], "religion": 465, "relink": [458, 480], "reload": [464, 513, 526, 535, 560, 561, 606, 654, 655, 656, 665], "reloc": [442, 446, 464, 474, 495, 496, 500, 501, 505, 506, 526, 550, 553, 559, 564, 565, 577, 598, 626, 655], "reloc_absolute_dword": 626, "reloc_absolute_word": 626, "reloc_pcrel_word": 626, "reloc_picrel_word": 626, "relocat": [47, 137, 233, 378, 442, 447, 474, 495, 559, 564, 573, 610, 626], "relocationtyp": 626, "reloccrc": 577, "relpo": 476, "relr": [500, 501], "relwithdebinfo": [460, 462, 529, 548], "rem": 464, "remain": [442, 447, 451, 456, 462, 467, 468, 493, 513, 514, 516, 517, 519, 521, 526, 538, 539, 551, 554, 559, 565, 574, 582, 587, 589, 596, 601, 603, 605, 606, 608, 610, 615, 621, 630, 633, 653, 654, 664, 665], "remaind": [442, 446, 464, 468, 513, 514, 520, 529, 558, 559, 587, 594, 606, 621, 622, 626], "remainingbuffersizetoskip": 630, "remap": [447, 464, 470, 471, 498, 541], "remark": [458, 470, 473, 594, 624, 625], "remarkemitt": 594, "remarkstream": 600, "remateri": 451, "rematerializ": 569, "rememb": [457, 465, 466, 467, 509, 512, 522, 527, 531, 547, 550, 559, 561, 589, 610, 620, 627, 649, 652, 654, 655, 656, 660, 663, 665], "remind": [517, 551, 568, 591], "remot": [564, 573, 591, 633, 636, 667], "remotejit": 637, "remotejitutil": 637, "remoteobjectclientlay": 573, "remoteobjectserverlay": 573, "remov": [442, 447, 450, 454, 458, 459, 460, 462, 464, 467, 468, 470, 472, 473, 476, 481, 485, 488, 493, 495, 505, 507, 509, 513, 517, 518, 519, 522, 524, 529, 533, 535, 538, 551, 552, 555, 559, 560, 561, 562, 563, 565, 570, 571, 572, 573, 574, 586, 588, 589, 591, 594, 603, 605, 610, 611, 621, 622, 623, 626, 627, 635, 650, 651, 652, 653, 654, 655, 656, 657, 662, 663, 666], "remove_if": 589, "removebranch": 626, "removefrompar": 589, "removemodul": [573, 635, 636, 637, 651, 652, 653, 654], "removeobject": 573, "renam": [442, 458, 459, 467, 493, 495, 529, 533, 559, 565, 573, 589, 591, 594, 599, 605, 612, 636, 637, 654, 665], "render": [464, 536, 559, 589, 629, 653, 664], "reopen": 457, "reorder": [447, 451, 468, 493, 516, 534, 554, 559, 605, 610], "reorgan": [596, 631], "repack": 591, "repeat": [447, 458, 468, 493, 519, 521, 539, 549, 559, 567, 571, 587, 591, 594, 599, 605], "repeatedli": [447, 523, 559], "repetit": [464, 468, 487], "rephras": [527, 559], "repl": [573, 633, 634, 637, 651], "replac": [442, 446, 447, 451, 459, 462, 464, 472, 476, 481, 482, 491, 494, 495, 497, 499, 502, 504, 505, 506, 509, 510, 513, 517, 519, 524, 526, 529, 533, 534, 536, 538, 539, 541, 544, 545, 554, 559, 560, 561, 562, 563, 565, 570, 571, 572, 573, 574, 591, 596, 597, 600, 605, 606, 610, 611, 615, 616, 621, 622, 623, 626, 633, 634, 635, 636, 651, 654, 665], "replacealldbguseswith": 554, "replaceallus": 538, "replacealluseswith": [554, 560, 563, 571, 589], "replaceinstwithinst": 589, "replaceinstwithvalu": 589, "replaceoperandwith": 622, "replaceusesofwith": [560, 589], "replaceusesofwithonconst": 560, "replai": 447, "repli": [517, 551, 594], "replic": [442, 553, 562, 574, 596, 615, 631], "repo": [517, 518, 529, 585, 591, 627], "report": [442, 447, 450, 452, 458, 465, 472, 473, 478, 491, 493, 495, 496, 502, 504, 505, 506, 514, 525, 526, 528, 544, 545, 548, 554, 558, 559, 560, 561, 562, 573, 589, 591, 602, 605, 606, 608, 609, 610, 615, 620, 621, 622, 627, 632, 633, 650, 661], "report_fatal_error": [467, 589], "reporterror": 634, "repositori": [466, 517, 518, 519, 528, 529, 532, 550, 551, 553, 588, 593, 594, 603, 605, 621], "repres": [47, 137, 233, 378, 442, 446, 447, 450, 451, 453, 454, 455, 456, 461, 463, 467, 468, 472, 486, 493, 494, 495, 498, 509, 513, 514, 516, 519, 520, 521, 522, 523, 524, 526, 527, 533, 534, 538, 548, 555, 559, 563, 565, 570, 572, 573, 576, 577, 579, 581, 584, 585, 587, 589, 591, 594, 596, 598, 600, 603, 605, 606, 610, 613, 615, 616, 617, 619, 626, 628, 630, 631, 635, 636, 637, 649, 650, 651, 652, 653, 654, 655, 656, 660, 661, 662, 663, 664, 665], "represent": [445, 447, 453, 455, 463, 464, 467, 497, 498, 508, 509, 512, 516, 519, 520, 526, 529, 533, 535, 539, 543, 560, 563, 565, 567, 573, 589, 597, 605, 608, 613, 615, 617, 624, 626, 627, 628, 629, 630, 631, 633, 634, 649, 650, 651, 653, 657, 660, 661, 662, 664, 666], "reprimand": 601, "repro": 532, "reproduc": [457, 458, 467, 470, 512, 517, 518, 532, 551, 553, 561, 574, 621, 654, 665], "repurpos": 605, "reqd_work_group_s": 447, "reqd_workgroup_s": 447, "reqdworkgroups": 447, "request": [58, 243, 388, 442, 447, 454, 457, 468, 476, 495, 505, 512, 517, 518, 519, 521, 529, 534, 538, 559, 560, 561, 562, 564, 573, 589, 591, 594, 598, 600, 601, 602, 603, 608, 610, 615, 622, 630, 633, 634, 635, 655], "requir": [442, 444, 445, 446, 447, 449, 451, 452, 453, 454, 458, 460, 461, 462, 463, 467, 468, 472, 476, 479, 481, 483, 487, 491, 492, 493, 495, 496, 504, 505, 511, 514, 519, 520, 522, 523, 524, 525, 532, 533, 537, 538, 539, 543, 544, 545, 547, 548, 550, 551, 552, 556, 557, 558, 559, 561, 562, 563, 564, 565, 570, 571, 572, 573, 574, 579, 581, 587, 588, 589, 591, 594, 598, 599, 600, 601, 602, 603, 605, 606, 608, 610, 611, 613, 615, 619, 622, 626, 630, 631, 633, 636, 637, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666], "required_librari": 558, "requires_rtti": 586, "requri": 552, "rerereresolv": 591, "rerereunresolv": 591, "rerun": [529, 588], "resbyarg": 559, "rescan": 571, "reschedul": 605, "research": [520, 593, 603, 606, 620, 632], "resembl": [527, 606], "reserv": [447, 452, 454, 464, 523, 551, 559, 561, 576, 577, 584, 606, 608, 610, 626, 630], "reserveresourc": 464, "reset": [447, 454, 462, 519, 532, 561, 569, 589, 606, 615, 630, 636, 637], "resid": [442, 445, 447, 453, 454, 461, 513, 526, 559, 561, 572, 573, 581, 602, 605, 606, 627], "resign": 517, "resili": [493, 568], "resist": 561, "resolut": [452, 457, 467, 510, 517, 539, 559, 573, 601, 603, 651, 653], "resolv": [47, 137, 233, 378, 446, 447, 460, 463, 464, 465, 472, 487, 510, 517, 559, 562, 564, 573, 589, 594, 601, 603, 606, 609, 615, 616, 627, 630, 634, 635, 636, 637, 650, 651, 652, 661, 662, 663], "resolvereloc": 564, "resolverti": 559, "resort": [519, 598], "resourc": [20, 27, 28, 60, 61, 115, 118, 124, 125, 145, 146, 199, 202, 212, 213, 245, 246, 331, 347, 350, 357, 358, 390, 391, 445, 463, 487, 493, 501, 509, 518, 519, 543, 573, 589, 626, 627, 635, 636, 637], "resp": [487, 559, 589], "respect": [442, 447, 450, 458, 462, 464, 465, 467, 469, 483, 486, 493, 498, 501, 502, 504, 506, 510, 513, 517, 519, 526, 527, 529, 534, 552, 559, 560, 567, 573, 589, 590, 591, 600, 603, 610, 617, 619, 621, 623, 626, 633, 635, 654, 665], "respond": [450, 466, 512, 568, 587, 588, 601, 603], "respons": [447, 464, 466, 476, 479, 482, 493, 494, 495, 496, 500, 501, 502, 504, 505, 506, 513, 517, 519, 526, 536, 551, 559, 573, 582, 588, 589, 596, 600, 601, 604, 608, 610, 613, 622, 623, 627, 631, 633], "responsibli": 526, "rest": [232, 377, 442, 447, 454, 464, 468, 488, 513, 517, 526, 529, 533, 538, 543, 545, 559, 561, 562, 565, 566, 571, 581, 589, 600, 605, 607, 611, 628, 651, 654, 665], "restart": [451, 538, 546, 561, 589, 627], "restat": 467, "restofthecleanup": 513, "restor": [442, 447, 454, 464, 519, 557, 559, 598, 604, 606, 626, 652, 653, 654, 655, 656, 663, 664, 665], "restrict": [442, 447, 451, 464, 467, 493, 504, 509, 517, 520, 521, 522, 527, 533, 557, 559, 565, 570, 576, 589, 591, 605, 606, 608, 610, 614, 616, 625, 627, 651], "restructur": 622, "restructuredtext": 607, "result": [442, 445, 446, 447, 451, 453, 454, 458, 460, 461, 462, 463, 464, 467, 468, 469, 470, 474, 477, 481, 486, 487, 493, 497, 498, 507, 509, 510, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 524, 526, 527, 528, 529, 531, 532, 533, 534, 538, 539, 544, 545, 548, 549, 551, 553, 554, 555, 556, 559, 561, 563, 564, 565, 570, 571, 572, 573, 574, 575, 581, 582, 587, 589, 591, 594, 595, 599, 600, 605, 606, 608, 611, 615, 616, 617, 620, 621, 622, 625, 626, 627, 628, 629, 631, 633, 635, 649, 650, 651, 652, 653, 654, 655, 656, 660, 661, 662, 663, 664, 665], "results_a": 619, "results_b": 619, "resultti": 559, "resulttyp": 559, "resultv": 559, "resum": [447, 515, 519, 608], "resume1": 513, "resume2": 513, "resumpt": 513, "resurrect": 598, "ret": [451, 453, 456, 464, 468, 513, 519, 522, 526, 527, 554, 563, 565, 566, 570, 572, 587, 589, 604, 605, 606, 607, 608, 610, 615, 621, 623, 650, 651, 652, 654, 661, 662, 663, 665], "ret_typ": 559, "ret_val": [661, 662, 663, 664, 665], "retain": [442, 447, 453, 509, 517, 522, 560, 589, 598, 602, 627], "retainednod": [554, 605], "retainedtyp": [559, 605], "retarget": [464, 624], "retcc_sparc32": 626, "retcc_x86_32": 626, "retcc_x86_32_c": 626, "retcc_x86_32_fast": 626, "retcc_x86_32_ss": 626, "retcc_x86common": 626, "rethrow": [519, 610], "retir": 517, "retpolin": 606, "retq": [565, 606, 610], "retri": 628, "retriev": [442, 476, 509, 519, 521, 564, 572, 588, 589, 600, 608, 610, 613, 627, 631], "retroact": 517, "retti": 454, "return": [39, 40, 131, 132, 224, 225, 323, 369, 370, 442, 445, 447, 448, 450, 451, 453, 454, 456, 458, 459, 464, 466, 468, 470, 474, 481, 482, 486, 487, 492, 493, 497, 498, 500, 501, 503, 506, 509, 510, 514, 515, 519, 520, 522, 524, 526, 529, 531, 534, 535, 536, 538, 540, 545, 552, 555, 556, 557, 559, 561, 562, 564, 566, 567, 569, 570, 571, 572, 573, 574, 587, 602, 604, 605, 607, 608, 609, 610, 611, 613, 615, 623, 625, 626, 627, 628, 630, 631, 633, 634, 635, 636, 637, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 659, 660, 661, 662, 663, 664, 665, 666], "return_addr": 606, "return_address_regist": [442, 447], "returnaddress": 565, "returndoesnotalia": 559, "returnindex": 555, "returns_signed_char": 559, "returns_twic": [454, 559], "returntyp": [526, 559], "retval": [519, 559, 650, 651, 652, 653, 654, 655, 656], "reus": [447, 463, 464, 468, 516, 543, 545, 559, 591, 594, 605, 606, 608, 615], "reusabl": [464, 543, 598], "rev": [453, 551, 591, 594, 660, 661, 662, 663, 664, 665], "rev128": 453, "rev64": 453, "reveal": [527, 606], "revector": [587, 589], "revers": [442, 445, 453, 462, 468, 494, 527, 534, 559, 560, 587, 589, 605, 606, 615], "revert": [442, 466, 517, 559], "review": [442, 457, 461, 467, 512, 524, 528, 529, 531, 551, 560, 561, 566, 571, 591, 594, 595, 596, 601, 603, 607, 610, 611], "revis": [208, 210, 211, 219, 221, 222, 457, 462, 466, 467, 517, 518, 524, 529, 532, 551, 588, 589, 605, 608], "revisit": [467, 596, 606, 610], "revlist": 591, "revmap": 591, "revoc": 603, "revok": [517, 603], "revolv": 605, "reword": 468, "rework": [509, 517], "rewound": 519, "rewrit": [462, 493, 517, 552, 554, 559, 560, 587, 591, 610, 626, 654, 665], "rewritestatepointsforgc": 526, "rewritten": [464, 513, 589, 591], "rex": 559, "rf": [566, 607, 621, 626], "rfc": [517, 560, 595, 598, 603], "rfunc": 488, "rg": 588, "rgb": 593, "rgba": 445, "rglob": 488, "rgm": 627, "rh": [467, 559, 571, 589, 649, 650, 651, 652, 653, 654, 655, 656, 660, 661, 662, 663, 664, 665], "rhs_val": [661, 662, 663, 664, 665], "ri": [526, 559, 626], "ri_inst": 615, "ricci": 594, "ricciacronym": 594, "rice": 516, "rich": [533, 597], "richer": 608, "rid": [571, 577], "right": [442, 445, 446, 447, 451, 453, 463, 464, 467, 469, 509, 512, 516, 517, 520, 522, 524, 529, 534, 545, 551, 552, 553, 559, 565, 571, 582, 587, 588, 591, 599, 606, 607, 613, 616, 621, 630, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 664, 665, 666], "right_op": 559, "rightr": 571, "rigor": 464, "riinst": 615, "rilei": 603, "ring": 447, "rip": [559, 565, 617, 621], "risc": [451, 464, 559, 594, 595, 626], "rise": 467, "risk": [547, 551, 559, 589, 605, 606], "riski": 606, "rival": 589, "rl": [442, 572], "rl1": 572, "rl2": 572, "rl247405": 561, "rl247414": 561, "rl247416": 561, "rl247417": 561, "rl247420": 561, "rl247422": 561, "rl3": 572, "rl317337": 602, "rl4": 572, "rl5": 572, "rl6": 572, "rl7": 572, "rm": [529, 559, 561, 566, 607, 615, 617, 621, 626, 629, 655], "rmrk": 600, "rmw": 451, "rn": [521, 572], "rnglist": 486, "ro_signed_pat": 617, "roadmap": 528, "rob": [493, 510], "robert": 510, "robin": 493, "robinson": [594, 603], "robinsonagre": 594, "robinsondistinguish": 594, "robinsondistinguish2": 594, "robinsontransit": 594, "robot": 528, "robust": [466, 510, 543, 554, 559, 567, 592, 598, 621], "rocgdb": 442, "rocm": [442, 447], "rodata": [447, 606, 626], "rogu": 606, "role": [467, 497, 563, 571, 589, 599, 605, 616, 649, 660], "roll": [467, 552, 568], "rom": 495, "roms_": 593, "roms_r": 593, "room": [555, 627, 649, 660], "root": [457, 462, 464, 472, 479, 480, 517, 518, 529, 545, 546, 550, 558, 559, 560, 563, 581, 589, 590, 591, 594, 602, 613, 621, 627, 629, 650, 661], "rootcount": 526, "rootmetadata": 526, "rootnum": 526, "roots_begin": 526, "roots_end": 526, "roots_iter": 526, "roots_siz": 526, "rootstackoffset": 526, "rope": 589, "rot": 517, "rotat": [442, 445, 464, 520, 559, 598], "rotl": 520, "rough": [527, 615, 616], "roughli": [451, 464, 510, 519, 551, 552, 560, 561, 594, 605], "roun": 510, "round": [442, 453, 464, 493, 510, 534, 545, 551, 598, 606, 616, 631, 653, 664], "roundp": 625, "roundtointegraltiestoeven": 559, "roundup": 447, "routin": [442, 451, 464, 472, 517, 519, 526, 559, 571, 587, 606, 610, 611, 627, 628, 630, 649, 657, 658, 659, 660, 662, 666], "rovid": 545, "row": [445, 493, 556, 559], "row_bcast": [445, 447], "row_half_mirror": 445, "row_mask": [0, 1, 3, 4, 7, 8, 447], "row_mirror": [445, 447], "row_ror": 445, "row_shar": 445, "row_shl": [445, 447], "row_shr": 445, "row_xmask": 445, "rowfield": 556, "rpass": 625, "rpath": 529, "rpc": [573, 630, 637], "rpcc": 559, "rpo": 560, "rppassmanag": 627, "rr": [615, 626], "rrinst": 615, "rs1": 626, "rs2": 626, "rs4gc": 610, "rs880": 447, "rsb": 606, "rsi": [464, 606, 617], "rsp": [464, 565, 604, 606, 608, 610, 617], "rsrc": [445, 501], "rss": [561, 602], "rss_limit_mb": 561, "rst": [448, 464, 607, 613], "rsync": 619, "rt": [449, 460, 462, 463, 525, 529, 532, 545, 547, 548, 551, 559, 591, 594, 598, 599, 602, 624, 626, 628], "rtc": 622, "rtdyldmemorymanag": [635, 636, 637], "rtdyldobjectlinkinglay": [573, 633, 634, 635, 636, 637], "rthroughput": 493, "rtl": 464, "rtti": [462, 519, 586, 589, 597, 623, 654, 655, 656], "rttiextend": 552, "rttiroot": 552, "rubi": 526, "rude": 519, "rui": 594, "rule": [444, 447, 451, 464, 465, 467, 468, 470, 477, 479, 483, 493, 497, 510, 513, 517, 533, 535, 550, 557, 571, 573, 589, 590, 594, 599, 600, 602, 605, 606, 610, 611, 614, 615, 616, 617, 620, 621, 627, 630, 650, 651, 652, 661, 663], "ruleset": 538, "run": [442, 447, 449, 450, 451, 452, 453, 458, 459, 462, 463, 464, 467, 468, 469, 470, 480, 481, 487, 493, 495, 498, 499, 507, 509, 510, 511, 512, 513, 514, 515, 518, 519, 522, 523, 524, 526, 528, 529, 530, 531, 535, 539, 544, 546, 547, 548, 549, 551, 553, 554, 558, 559, 562, 564, 565, 569, 570, 571, 573, 574, 586, 587, 588, 589, 590, 591, 594, 597, 599, 603, 605, 606, 608, 610, 613, 615, 621, 625, 626, 628, 629, 630, 633, 634, 635, 636, 637, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666], "run_funct": [662, 663, 664, 665], "run_long_test": 621, "runfunct": [515, 589], "runfunctionasmain": 515, "runhelp": 467, "runnabl": 529, "runner": 619, "runonfunct": [450, 458, 574, 589, 626, 629], "runonmachinefunct": [464, 537, 574, 626], "runonmodul": 629, "runtest": [550, 599], "runtim": [442, 447, 449, 451, 454, 456, 458, 460, 462, 464, 467, 468, 481, 493, 496, 506, 509, 510, 511, 515, 517, 523, 526, 529, 549, 560, 561, 563, 573, 582, 587, 589, 591, 604, 605, 608, 610, 611, 619, 622, 626, 627, 629, 631, 634, 635, 636, 637, 651, 653, 657, 664, 666], "runtimedyld": [564, 635], "runtimedyldelf": 564, "runtimedyldimpl": 564, "runtimedyldmacho": 564, "runtimehandl": 447, "runtimevers": [554, 559, 605], "rust": [594, 603], "rv": 571, "rv64": 598, "rv670": 447, "rv710": 447, "rv730": 447, "rv770": 447, "rvaluerefer": 576, "rvaluerefthispoint": 576, "rw": 559, "rx": [447, 615], "ryzen": 447, "rzi": 572, "s0": [446, 447, 559], "s1": [447, 533, 534], "s15": 559, "s16": [533, 534, 538], "s17": 533, "s2": [46, 136, 231, 376, 447], "s3": [446, 447], "s31": 559, "s32": [0, 2, 3, 4, 533, 534, 535, 537, 538, 554, 565, 572], "s33": 534, "s4": [446, 447], "s5": [446, 447], "s6": [446, 447], "s64": [0, 2, 3, 4, 533, 534, 538, 572], "s7": [446, 538], "s7100": 447, "s7150": 447, "s8": [533, 534], "s9": 559, "s9150": 447, "s9170": 447, "s9300x2": 447, "s_abs_i32": [0, 2, 3, 4], "s_absdiff_i32": [0, 2, 3, 4], "s_add_i32": [0, 2, 3, 4], "s_add_u32": [0, 2, 3, 4, 447, 565], "s_addc_u32": [0, 2, 3, 4, 447], "s_addk_i32": [0, 2, 3, 4], "s_and_b32": [0, 2, 3, 4], "s_and_b64": [0, 2, 3, 4, 447], "s_and_saveexec_b32": 0, "s_and_saveexec_b64": [0, 2, 3, 4], "s_andn1_saveexec_b32": 0, "s_andn1_saveexec_b64": [0, 4], "s_andn1_wrexec_b32": 0, "s_andn1_wrexec_b64": [0, 4], "s_andn2_b32": [0, 2, 3, 4, 447], "s_andn2_b64": [0, 2, 3, 4], "s_andn2_saveexec_b32": 0, "s_andn2_saveexec_b64": [0, 2, 3, 4], "s_andn2_wrexec_b32": 0, "s_andn2_wrexec_b64": [0, 4], "s_annot": 559, "s_arch": 510, "s_ashr_i32": [0, 2, 3, 4, 447], "s_ashr_i64": [0, 2, 3, 4], "s_atc_prob": [0, 3, 4], "s_atc_probe_buff": [0, 3, 4], "s_atomic_add": [0, 4], "s_atomic_add_x2": [0, 4], "s_atomic_and": [0, 4], "s_atomic_and_x2": [0, 4], "s_atomic_cmpswap": [0, 4], "s_atomic_cmpswap_x2": [0, 4], "s_atomic_dec": [0, 4], "s_atomic_dec_x2": [0, 4], "s_atomic_inc": [0, 4], "s_atomic_inc_x2": [0, 4], "s_atomic_or": [0, 4], "s_atomic_or_x2": [0, 4], "s_atomic_smax": [0, 4], "s_atomic_smax_x2": [0, 4], "s_atomic_smin": [0, 4], "s_atomic_smin_x2": [0, 4], "s_atomic_sub": [0, 4], "s_atomic_sub_x2": [0, 4], "s_atomic_swap": [0, 4], "s_atomic_swap_x2": [0, 4], "s_atomic_umax": [0, 4], "s_atomic_umax_x2": [0, 4], "s_atomic_umin": [0, 4], "s_atomic_umin_x2": [0, 4], "s_atomic_xor": [0, 4], "s_atomic_xor_x2": [0, 4], "s_barrier": [0, 2, 3, 4, 447], "s_bcnt0_i32_b32": [0, 2, 3, 4], "s_bcnt0_i32_b64": [0, 2, 3, 4, 444, 447], "s_bcnt1_i32_b32": [0, 2, 3, 4], "s_bcnt1_i32_b64": [0, 2, 3, 4], "s_bfe_i32": [0, 2, 3, 4], "s_bfe_i64": [0, 2, 3, 4, 446, 447], "s_bfe_u32": [0, 2, 3, 4], "s_bfe_u64": [0, 2, 3, 4, 446], "s_bfm_b32": [0, 2, 3, 4], "s_bfm_b64": [0, 2, 3, 4, 447], "s_bitcmp0_b32": [0, 2, 3, 4], "s_bitcmp0_b64": [0, 2, 3, 4, 447], "s_bitcmp1_b32": [0, 2, 3, 4, 447], "s_bitcmp1_b64": [0, 2, 3, 4], "s_bitreplicate_b64_b32": [0, 4], "s_bitset0_b32": [0, 2, 3, 4], "s_bitset0_b64": [0, 2, 3, 4], "s_bitset1_b32": [0, 2, 3, 4], "s_bitset1_b64": [0, 2, 3, 4], "s_branch": [0, 2, 3, 4, 47, 137, 233, 378, 446], "s_brev_b32": [0, 2, 3, 4], "s_brev_b64": [0, 2, 3, 4], "s_buffer_atomic_add": [0, 4], "s_buffer_atomic_add_x2": [0, 4], "s_buffer_atomic_and": [0, 4], "s_buffer_atomic_and_x2": [0, 4], "s_buffer_atomic_cmpswap": [0, 4], "s_buffer_atomic_cmpswap_x2": [0, 4], "s_buffer_atomic_dec": [0, 4], "s_buffer_atomic_dec_x2": [0, 4], "s_buffer_atomic_inc": [0, 4], "s_buffer_atomic_inc_x2": [0, 4], "s_buffer_atomic_or": [0, 4], "s_buffer_atomic_or_x2": [0, 4], "s_buffer_atomic_smax": [0, 4], "s_buffer_atomic_smax_x2": [0, 4], "s_buffer_atomic_smin": [0, 4], "s_buffer_atomic_smin_x2": [0, 4], "s_buffer_atomic_sub": [0, 4], "s_buffer_atomic_sub_x2": [0, 4], "s_buffer_atomic_swap": [0, 4], "s_buffer_atomic_swap_x2": [0, 4], "s_buffer_atomic_umax": [0, 4], "s_buffer_atomic_umax_x2": [0, 4], "s_buffer_atomic_umin": [0, 4], "s_buffer_atomic_umin_x2": [0, 4], "s_buffer_atomic_xor": [0, 4], "s_buffer_atomic_xor_x2": [0, 4], "s_buffer_load_dword": [0, 2, 3, 4], "s_buffer_load_dwordx16": [0, 2, 3, 4], "s_buffer_load_dwordx2": [0, 2, 3, 4], "s_buffer_load_dwordx4": [0, 2, 3, 4], "s_buffer_load_dwordx8": [0, 2, 3, 4], "s_buffer_store_dword": [0, 3, 4], "s_buffer_store_dwordx2": [0, 3, 4], "s_buffer_store_dwordx4": [0, 3, 4], "s_call_b64": [0, 4], "s_cbranch_cdbgsi": [0, 2, 3, 4], "s_cbranch_cdbgsys_and_us": [0, 2, 3, 4], "s_cbranch_cdbgsys_or_us": [0, 2, 3, 4], "s_cbranch_cdbgus": [0, 2, 3, 4], "s_cbranch_execnz": [0, 2, 3, 4], "s_cbranch_execz": [0, 2, 3, 4], "s_cbranch_g_fork": [2, 3, 4, 447], "s_cbranch_i_fork": [2, 3, 4], "s_cbranch_join": [2, 3, 4, 447], "s_cbranch_scc0": [0, 2, 3, 4], "s_cbranch_scc1": [0, 2, 3, 4], "s_cbranch_vccnz": [0, 2, 3, 4], "s_cbranch_vccz": [0, 2, 3, 4], "s_claus": 0, "s_cmov_b32": [0, 2, 3, 4, 447], "s_cmov_b64": [0, 2, 3, 4], "s_cmovk_i32": [0, 2, 3, 4], "s_cmp_eq_i32": [0, 2, 3, 4, 447], "s_cmp_eq_u32": [0, 2, 3, 4], "s_cmp_eq_u64": [0, 3, 4], "s_cmp_ge_i32": [0, 2, 3, 4], "s_cmp_ge_u32": [0, 2, 3, 4], "s_cmp_gt_i32": [0, 2, 3, 4], "s_cmp_gt_u32": [0, 2, 3, 4], "s_cmp_le_i32": [0, 2, 3, 4], "s_cmp_le_u32": [0, 2, 3, 4], "s_cmp_lg_i32": [0, 2, 3, 4], "s_cmp_lg_u32": [0, 2, 3, 4], "s_cmp_lg_u64": [0, 3, 4], "s_cmp_lt_i32": [0, 2, 3, 4], "s_cmp_lt_u32": [0, 2, 3, 4], "s_cmpk_eq_i32": [0, 2, 3, 4], "s_cmpk_eq_u32": [0, 2, 3, 4], "s_cmpk_ge_i32": [0, 2, 3, 4], "s_cmpk_ge_u32": [0, 2, 3, 4], "s_cmpk_gt_i32": [0, 2, 3, 4], "s_cmpk_gt_u32": [0, 2, 3, 4], "s_cmpk_le_i32": [0, 2, 3, 4], "s_cmpk_le_u32": [0, 2, 3, 4], "s_cmpk_lg_i32": [0, 2, 3, 4], "s_cmpk_lg_u32": [0, 2, 3, 4], "s_cmpk_lt_i32": [0, 2, 3, 4], "s_cmpk_lt_u32": [0, 2, 3, 4], "s_code_end": 0, "s_cselect_b32": [0, 2, 3, 4, 447], "s_cselect_b64": [0, 2, 3, 4], "s_dcache_discard": [0, 4], "s_dcache_discard_x2": [0, 4], "s_dcache_inv": [0, 2, 3, 4, 447], "s_dcache_inv_vol": [2, 3, 4, 447], "s_dcache_wb": [0, 3, 4, 447], "s_dcache_wb_vol": [3, 4], "s_decperflevel": [0, 2, 3, 4], "s_denorm_mod": 0, "s_endpgm": [0, 2, 3, 4, 447], "s_endpgm_ordered_ps_don": [0, 4], "s_endpgm_sav": [0, 3, 4], "s_ff0_i32_b32": [0, 2, 3, 4], "s_ff0_i32_b64": [0, 2, 3, 4], "s_ff1_i32_b32": [0, 2, 3, 4], "s_ff1_i32_b64": [0, 2, 3, 4], "s_flbit_i32": [0, 2, 3, 4], "s_flbit_i32_b32": [0, 2, 3, 4], "s_flbit_i32_b64": [0, 2, 3, 4], "s_flbit_i32_i64": [0, 2, 3, 4], "s_get_reg": 446, "s_get_waveid_in_workgroup": 0, "s_getpc_b64": [0, 2, 3, 4, 447], "s_getreg_b32": [0, 2, 3, 4, 46, 136, 231, 376], "s_gl1_inv": 0, "s_icache_inv": [0, 2, 3, 4], "s_incperflevel": [0, 2, 3, 4], "s_inst_prefetch": 0, "s_load_dword": [0, 2, 3, 4, 447], "s_load_dwordx16": [0, 2, 3, 4, 447], "s_load_dwordx2": [0, 2, 3, 4, 447], "s_load_dwordx4": [0, 2, 3, 4], "s_load_dwordx8": [0, 2, 3, 4, 447], "s_lshl1_add_u32": [0, 4], "s_lshl2_add_u32": [0, 4], "s_lshl3_add_u32": [0, 4], "s_lshl4_add_u32": [0, 4], "s_lshl_b32": [0, 2, 3, 4], "s_lshl_b64": [0, 2, 3, 4], "s_lshr_b32": [0, 2, 3, 4], "s_lshr_b64": [0, 2, 3, 4, 447], "s_max_i32": [0, 2, 3, 4], "s_max_u32": [0, 2, 3, 4], "s_memrealtim": [0, 3, 4], "s_memtim": [0, 2, 3, 4, 447], "s_min_i32": [0, 2, 3, 4], "s_min_u32": [0, 2, 3, 4], "s_mov_b32": [0, 2, 3, 4, 447], "s_mov_b64": [0, 2, 3, 4, 447], "s_mov_fed_b32": [2, 3, 4], "s_movk_i32": [0, 2, 3, 4], "s_movreld_b32": [0, 2, 3, 4], "s_movreld_b64": [0, 2, 3, 4], "s_movrels_b32": [0, 2, 3, 4], "s_movrels_b64": [0, 2, 3, 4], "s_movrelsd_2_b32": 0, "s_mul_hi_i32": [0, 4], "s_mul_hi_u32": [0, 4], "s_mul_i32": [0, 2, 3, 4], "s_mulk_i32": [0, 2, 3, 4], "s_nand_b32": [0, 2, 3, 4], "s_nand_b64": [0, 2, 3, 4], "s_nand_saveexec_b32": 0, "s_nand_saveexec_b64": [0, 2, 3, 4], "s_nop": [0, 2, 3, 4, 447], "s_nor_b32": [0, 2, 3, 4], "s_nor_b64": [0, 2, 3, 4], "s_nor_saveexec_b32": 0, "s_nor_saveexec_b64": [0, 2, 3, 4], "s_not_b32": [0, 2, 3, 4], "s_not_b64": [0, 2, 3, 4], "s_or_b32": [0, 2, 3, 4], "s_or_b64": [0, 2, 3, 4], "s_or_saveexec_b32": 0, "s_or_saveexec_b64": [0, 2, 3, 4], "s_orn1_saveexec_b32": 0, "s_orn1_saveexec_b64": [0, 4], "s_orn2_b32": [0, 2, 3, 4], "s_orn2_b64": [0, 2, 3, 4], "s_orn2_saveexec_b32": 0, "s_orn2_saveexec_b64": [0, 2, 3, 4], "s_pack_hh_b32_b16": [0, 4], "s_pack_lh_b32_b16": [0, 4], "s_pack_ll_b32_b16": [0, 4], "s_quadmask_b32": [0, 2, 3, 4], "s_quadmask_b64": [0, 2, 3, 4], "s_rfe_b64": [0, 2, 3, 4], "s_rfe_restore_b64": [3, 4], "s_round_mod": 0, "s_scratch_load_dword": [0, 4], "s_scratch_load_dwordx2": [0, 4], "s_scratch_load_dwordx4": [0, 4], "s_scratch_store_dword": [0, 4], "s_scratch_store_dwordx2": [0, 4], "s_scratch_store_dwordx4": [0, 4], "s_sendmsg": [0, 2, 3, 4, 52, 139, 237, 382, 447], "s_sendmsghalt": [0, 2, 3, 4], "s_set_gpr_idx_idx": [3, 4], "s_set_gpr_idx_mod": [3, 4, 232, 377], "s_set_gpr_idx_off": [3, 4], "s_set_gpr_idx_on": [3, 4], "s_set_reg": 446, "s_sethalt": [0, 2, 3, 4, 447], "s_setkil": [0, 2, 3, 4], "s_setpc_b64": [0, 2, 3, 4, 447], "s_setprio": [0, 2, 3, 4], "s_setreg_b32": [0, 2, 3, 4], "s_setreg_imm32_b32": [0, 2, 3, 4], "s_setvskip": [2, 3, 4, 447], "s_sext_i32_i16": [0, 2, 3, 4], "s_sext_i32_i8": [0, 2, 3, 4], "s_sleep": [0, 2, 3, 4, 447], "s_store_dword": [0, 3, 4], "s_store_dwordx2": [0, 3, 4], "s_store_dwordx4": [0, 3, 4], "s_sub_i32": [0, 2, 3, 4], "s_sub_u32": [0, 2, 3, 4], "s_subb_u32": [0, 2, 3, 4], "s_subvector_loop_begin": 0, "s_subvector_loop_end": 0, "s_swappc_b64": [0, 2, 3, 4, 447], "s_trap": [0, 2, 3, 4, 447], "s_ttracedata": [0, 2, 3, 4], "s_ttracedata_imm": 0, "s_version": 0, "s_waitcnt": [0, 2, 3, 4, 109, 195, 292, 441, 447], "s_waitcnt_expcnt": 0, "s_waitcnt_lgkmcnt": 0, "s_waitcnt_vmcnt": 0, "s_waitcnt_vscnt": 0, "s_wakeup": [0, 3, 4], "s_wqm_b32": [0, 2, 3, 4], "s_wqm_b64": [0, 2, 3, 4, 447], "s_xnor_b32": [0, 2, 3, 4], "s_xnor_b64": [0, 2, 3, 4], "s_xnor_saveexec_b32": 0, "s_xnor_saveexec_b64": [0, 2, 3, 4], "s_xor_b32": [0, 2, 3, 4], "s_xor_b64": [0, 2, 3, 4], "s_xor_saveexec_b32": 0, "s_xor_saveexec_b64": [0, 2, 3, 4], "sa": 447, "sacrif": 592, "sacrific": [559, 571], "saddr": [0, 4, 8, 94, 95, 338, 426, 427], "sadli": [588, 606], "safe": [450, 451, 454, 458, 460, 464, 469, 509, 517, 521, 524, 527, 529, 538, 553, 554, 559, 560, 573, 574, 587, 591, 598, 601, 606, 608, 609, 610, 622, 633, 635, 657, 665, 666], "safepoint": [526, 559, 597], "safepoint_pol": 610, "safepointaddress": 526, "safer": 589, "safestack": [454, 559, 609], "safeti": [523, 524, 559, 569, 601, 624], "saga": [652, 663], "sahf": [464, 606], "sai": [447, 464, 465, 468, 472, 509, 524, 527, 529, 538, 552, 554, 556, 559, 566, 570, 581, 582, 589, 591, 594, 607, 611, 620, 648, 650, 657, 659, 661, 666], "said": [459, 466, 467, 487, 493, 517, 519, 545, 548, 559, 570, 582, 589, 602, 603, 605, 657, 666], "sake": [468, 589, 627], "salvag": 605, "salvagedebuginfo": 554, "same": [46, 47, 109, 136, 137, 195, 231, 232, 233, 292, 376, 377, 378, 441, 442, 445, 446, 447, 448, 450, 451, 453, 454, 456, 457, 458, 459, 462, 463, 464, 466, 467, 469, 470, 472, 474, 476, 477, 478, 481, 487, 493, 494, 495, 497, 501, 505, 506, 507, 509, 510, 513, 514, 517, 519, 520, 521, 523, 524, 525, 526, 527, 529, 533, 534, 537, 538, 539, 544, 545, 547, 548, 549, 551, 553, 554, 556, 557, 558, 559, 560, 561, 563, 565, 568, 570, 571, 572, 573, 574, 575, 577, 582, 584, 585, 586, 587, 588, 589, 590, 591, 594, 596, 598, 599, 600, 602, 603, 604, 605, 606, 607, 608, 610, 611, 613, 614, 615, 616, 617, 622, 623, 625, 626, 627, 629, 630, 631, 633, 634, 637, 648, 649, 650, 651, 652, 653, 654, 657, 660, 661, 662, 663, 664, 665, 666], "same_cont": 521, "same_s": 521, "sames": 559, "sampl": [445, 447, 449, 456, 492, 498, 509, 515, 517, 526, 531, 545, 554, 561, 572, 590, 597, 610, 619, 627, 629, 649, 650, 656, 660, 661, 668], "samplepgo": [456, 554], "sampler": [64, 147, 247, 394, 545], "sampson": 512, "san": 545, "sancov_": 602, "sandbox": [550, 599], "sander": 542, "sandia": 593, "sandwich": 554, "sandybridg": 625, "sandylak": 655, "sane": [451, 462, 659], "sanit": [462, 463, 525, 561, 587, 592, 602, 609, 629], "saniti": [524, 529, 558, 561], "sanitize_address": [454, 559], "sanitize_hwaddress": [454, 559], "sanitize_memori": [454, 559], "sanitize_memtag": [454, 559], "sanitize_thread": [454, 559], "sanitizer_common": 602, "sanitizer_common_nolibc": 602, "sanitizer_symbol": 602, "sanitizer_termin": 602, "sanitizer_unwind": 602, "sanitizercommonflag": 602, "sanitizercoverag": 561, "sanitizercoveragetracedataflow": 561, "sanitizerlist": 629, "sanjoi": 594, "saptr": 559, "sar": 464, "sarq": 606, "sass": [510, 572], "sata": 547, "satisfi": [52, 139, 237, 382, 446, 447, 450, 451, 466, 468, 517, 523, 533, 538, 549, 551, 559, 606, 611, 654, 665], "satur": [534, 653, 664], "save": [442, 447, 453, 454, 462, 464, 467, 476, 478, 487, 509, 510, 519, 520, 529, 531, 553, 557, 559, 561, 564, 572, 573, 586, 588, 589, 598, 605, 606, 608, 615, 619, 625, 626, 651, 652, 653, 654, 655, 656, 662, 663, 664, 665], "save1": 513, "save2": 513, "savesomewher": 467, "savethi": 468, "saw": [493, 562, 627, 652, 663], "sbase": [0, 2, 3, 4], "sbyte": 584, "sc": [451, 497, 559, 577], "scaffold": [649, 660], "scalabl": [450, 559, 598], "scalablevectortyp": 598, "scalar": [19, 20, 117, 118, 201, 202, 349, 350, 442, 446, 447, 464, 509, 510, 524, 526, 533, 535, 541, 558, 559, 560, 563, 595, 596, 598, 625, 626, 627, 634, 635, 636, 637, 651, 652, 653, 654, 656, 665], "scalar_nam": 559, "scalarbitsettrait": 631, "scalarevolut": [450, 527, 594], "scalaropt": 480, "scalartrait": 631, "scale": [442, 452, 464, 467, 498, 527, 552, 559, 594, 606, 613], "scale2": 559, "scaling_governor": 452, "scan": [464, 467, 472, 473, 474, 526, 563, 571, 573, 582, 598, 613, 619, 621, 627, 635, 657, 662, 666], "scanf": 468, "scanner": [648, 659], "scare": 517, "scari": [657, 659, 666], "scatter": [596, 605], "scc": [9, 10, 53, 77, 78, 79, 80, 81, 83, 86, 88, 89, 140, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 171, 174, 175, 177, 238, 260, 261, 262, 263, 264, 265, 267, 271, 272, 274, 295, 296, 300, 301, 307, 308, 309, 328, 333, 334, 335, 336, 383, 407, 408, 409, 410, 411, 412, 414, 418, 419, 421, 447, 516, 560, 563, 574, 627], "sccp": 560, "scenario": [449, 451, 458, 462, 495, 505, 522, 529, 554, 584, 589, 596], "scene": 589, "scev": [517, 559, 563], "sched": [464, 474, 487, 626], "sched_class": 487, "schedcov": 626, "schedq": 493, "schedul": [468, 474, 487, 493, 529, 538, 547, 551, 554, 563, 568, 572, 589, 596, 598, 610, 613, 627], "schema": [472, 479, 605, 631, 668], "scheme": [449, 461, 467, 478, 482, 483, 486, 517, 525, 526, 555, 559, 573, 589, 592, 610, 626, 635, 636, 654, 665], "scienc": 593, "scm": 532, "scope": [450, 454, 458, 462, 467, 468, 492, 506, 508, 517, 519, 524, 526, 554, 561, 563, 565, 575, 589, 594, 603, 606, 609, 610, 613, 616, 627, 631, 650, 652, 653, 654, 655, 656, 661, 663, 664, 665], "scopelin": [554, 559, 605, 656], "scott": 467, "scrape": 472, "scratch": [63, 95, 393, 427, 445, 446, 464, 559, 589, 598, 626, 627], "scratch_en": 447, "scratch_load": 447, "scratch_load_dword": [0, 4], "scratch_load_dwordx2": [0, 4], "scratch_load_dwordx3": [0, 4], "scratch_load_dwordx4": [0, 4], "scratch_load_sbyt": [0, 4], "scratch_load_sbyte_d16": [0, 4], "scratch_load_sbyte_d16_hi": [0, 4], "scratch_load_short_d16": [0, 4], "scratch_load_short_d16_hi": [0, 4], "scratch_load_sshort": [0, 4], "scratch_load_ubyt": [0, 4], "scratch_load_ubyte_d16": [0, 4], "scratch_load_ubyte_d16_hi": [0, 4], "scratch_load_ushort": [0, 4], "scratch_segment_s": 447, "scratch_store_byt": [0, 4], "scratch_store_byte_d16_hi": [0, 4], "scratch_store_dword": [0, 4], "scratch_store_dwordx2": [0, 4], "scratch_store_dwordx3": [0, 4], "scratch_store_dwordx4": [0, 4], "scratch_store_short": [0, 4], "scratch_store_short_d16_hi": [0, 4], "scratchpad": [442, 447], "screen": [459, 599], "script": [449, 458, 459, 462, 469, 472, 479, 509, 512, 518, 522, 526, 529, 532, 545, 547, 551, 589, 590, 591, 594, 613, 617, 619, 620, 621, 627], "scroll": 588, "scrub": 606, "scrutini": 606, "scudo": [545, 569, 597], "scudo_default_opt": 602, "scudo_opt": 602, "sd": [501, 547, 615], "sdata": [0, 3, 4], "sdisel": 560, "sdiv": [464, 533], "sdk": [462, 497, 510, 529, 619], "sdnode": [458, 464, 589, 595, 605, 617, 626, 629], "sdst": [0, 2, 3, 4], "sdtc": 626, "sdvalu": [464, 626, 629], "sdwa": [443, 444], "se": [559, 594, 616], "sea": 447, "seamless": 544, "seamlessli": [561, 562], "sean": 589, "search": [458, 461, 462, 467, 468, 472, 486, 497, 504, 509, 517, 519, 521, 526, 529, 556, 558, 559, 560, 561, 573, 584, 587, 589, 590, 596, 605, 609, 610, 625, 626, 632, 633, 650, 651, 652, 653, 654, 663], "searchabl": 613, "sec": [498, 559], "secidx": 521, "secnam": 521, "second": [14, 82, 112, 167, 196, 266, 313, 344, 413, 442, 444, 445, 447, 454, 456, 461, 462, 463, 464, 467, 468, 472, 493, 506, 509, 513, 514, 518, 519, 521, 526, 527, 529, 531, 534, 551, 552, 554, 556, 559, 561, 563, 566, 570, 571, 577, 579, 581, 582, 584, 587, 589, 591, 602, 604, 605, 606, 607, 608, 610, 611, 616, 619, 620, 626, 627, 630, 631, 635, 650, 651, 652, 653, 654, 655, 656, 657, 661, 663, 666], "secondari": [461, 517, 519, 602, 608], "secondcondit": 589, "secondlastinst": 626, "secondlastopc": 626, "secondli": 656, "secrel32": 521, "secrel_hi12": 521, "secrel_lo12": 521, "secret": [602, 606], "sectalign": 509, "section": [445, 446, 450, 451, 452, 453, 454, 460, 461, 462, 463, 464, 467, 468, 470, 472, 473, 474, 476, 479, 486, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 504, 505, 506, 507, 509, 510, 513, 514, 517, 518, 519, 526, 527, 529, 533, 543, 548, 551, 552, 553, 554, 558, 559, 564, 565, 567, 570, 571, 573, 575, 576, 584, 585, 587, 588, 589, 591, 598, 600, 602, 603, 604, 605, 606, 610, 611, 613, 615, 623, 625, 626, 627, 628, 629, 633, 649, 651, 656, 657, 660, 662, 666, 668], "section1": 496, "section2": 496, "sectioncontr": 577, "sectioncontribentri": 577, "sectioncontribentry2": 577, "sectioncontributions": 577, "sectioncontrsubstreamvers": 577, "sectiondata": 668, "sectionlength": 577, "sectionmapentri": 577, "sectionmapentryflag": 577, "sectionmaphead": 577, "sectionmaps": 577, "sectionmemorymanag": [564, 573, 633, 634, 635, 636], "sectionnam": [454, 577], "sectionnumb": 668, "sectnam": 509, "sector": 611, "sectvalu": 509, "secur": [461, 509, 553, 587, 597, 598, 602, 632, 651], "sed": [472, 487, 529], "see": [1, 5, 6, 7, 8, 52, 62, 139, 237, 332, 382, 392, 442, 445, 446, 447, 448, 451, 452, 453, 454, 455, 456, 457, 458, 460, 462, 463, 464, 465, 466, 468, 476, 479, 481, 483, 487, 489, 493, 507, 508, 509, 510, 512, 513, 514, 517, 518, 519, 520, 522, 524, 525, 527, 529, 531, 532, 533, 534, 535, 537, 538, 539, 544, 546, 548, 549, 550, 552, 553, 554, 558, 559, 560, 561, 563, 565, 566, 567, 569, 570, 571, 572, 573, 574, 577, 580, 581, 584, 585, 587, 588, 589, 590, 591, 593, 594, 596, 598, 599, 602, 603, 605, 606, 607, 608, 610, 611, 613, 615, 617, 619, 620, 621, 623, 624, 625, 626, 627, 628, 629, 632, 633, 634, 635, 636, 637, 649, 650, 651, 652, 653, 654, 655, 656, 657, 660, 661, 662, 663, 664, 665, 666], "seed": [503, 561], "seek": [442, 517, 521, 527, 535, 587, 597, 630], "seekabl": 630, "seem": [442, 447, 450, 453, 458, 462, 464, 484, 509, 510, 526, 527, 552, 554, 570, 571, 577, 591, 593, 594, 603, 606], "seemingli": [533, 626], "seen": [464, 467, 493, 498, 509, 517, 533, 559, 570, 571, 587, 589, 610, 626, 627, 635, 651, 653, 657, 664, 666], "seg": 559, "segalign": 491, "segment": [494, 495, 496, 500, 501, 502, 505, 545, 559, 576, 577, 597, 605, 606, 608, 619, 630], "segment_selector_s": [442, 447], "segmentreg": 464, "segnam": 509, "seh": 559, "sel": 513, "seldag": 598, "seldom": 571, "select": [442, 445, 446, 447, 453, 462, 467, 476, 481, 486, 487, 493, 494, 512, 517, 518, 519, 520, 521, 525, 526, 527, 529, 531, 532, 534, 536, 538, 539, 540, 541, 542, 545, 549, 554, 556, 560, 564, 565, 572, 587, 588, 589, 591, 596, 597, 598, 606, 610, 613, 615, 617, 619, 622, 626, 627, 628, 629, 631, 654, 655, 665], "select_isd_stor": 626, "selectaddrrr": 626, "selectcod": 626, "selectcodecommon": 629, "selectimpl": 536, "selectinst": 467, "selectiondag": [451, 533, 534, 535, 538, 539, 543, 587, 589, 605, 613], "selectiondagbuild": [448, 464, 539], "selectiondagdump": 448, "selectiondagisel": [613, 629], "selectiondagleg": 448, "selectiondagnod": 626, "selectionkind": 559, "selector": [442, 447, 464, 493, 508, 519, 529, 533, 536, 539, 543, 559, 577, 605, 613], "selecttarget": [635, 636, 637], "self": [447, 454, 464, 468, 487, 514, 559, 571, 576, 577, 587, 588, 589, 601, 603, 627, 651, 653, 660, 662, 664], "selp": 572, "selti": 559, "sema": 613, "semant": [442, 444, 447, 451, 456, 464, 467, 495, 510, 519, 522, 526, 534, 558, 560, 562, 563, 567, 589, 595, 596, 605, 606, 613, 614, 616, 617, 622, 627, 631, 634, 650, 652, 661, 663], "semi": [460, 463, 526, 558, 628, 657, 666], "semicolon": [462, 529, 615, 619, 649, 650, 651, 652, 653, 654, 655, 656, 660, 661, 662, 663, 664, 665], "semispac": 526, "semver": [442, 447], "send": [445, 451, 464, 473, 477, 485, 488, 493, 508, 512, 517, 524, 528, 546, 551, 553, 561, 566, 573, 588, 591, 598, 599, 607, 621, 627, 650], "sendmsg": [52, 139, 237, 382, 447], "sens": [450, 451, 462, 464, 467, 509, 517, 522, 527, 557, 559, 561, 589, 591, 594, 605, 606, 610, 616, 629, 650, 657, 661, 666], "sensibl": 589, "sensit": [450, 462, 468, 476, 484, 498, 559, 565, 603, 606, 627, 631], "sent": [445, 466, 473, 485, 493, 498, 517, 528, 551, 560, 573, 588, 610], "sentenc": 467, "sentinel": 454, "separ": [109, 195, 232, 292, 377, 441, 442, 443, 444, 445, 446, 447, 449, 451, 454, 455, 460, 462, 463, 464, 466, 467, 468, 472, 476, 481, 482, 487, 491, 494, 495, 497, 498, 502, 506, 509, 510, 512, 513, 516, 517, 525, 526, 527, 529, 538, 539, 541, 543, 545, 549, 550, 557, 558, 559, 561, 562, 563, 566, 570, 572, 573, 581, 584, 589, 590, 591, 594, 598, 600, 601, 602, 605, 606, 608, 610, 611, 613, 615, 619, 621, 622, 626, 627, 631, 637, 649, 651, 660], "separateremarksfil": 600, "separateremarksmeta": 600, "seq": [487, 545, 668], "seq_cst": [447, 451, 559], "sequenc": [17, 115, 199, 347, 442, 445, 446, 451, 453, 464, 467, 468, 474, 476, 488, 493, 504, 513, 514, 519, 521, 524, 526, 527, 535, 538, 559, 561, 571, 574, 575, 576, 584, 587, 589, 591, 594, 596, 600, 605, 606, 608, 610, 613, 615, 616, 625, 626, 627, 630, 649, 653, 654, 660, 664, 665, 668], "sequencetrait": 631, "sequenti": [446, 447, 454, 464, 468, 493, 519, 554, 559, 591, 622], "sequentialtyp": 589, "serg": 603, "seri": [442, 447, 449, 454, 462, 464, 466, 482, 517, 519, 529, 553, 559, 565, 576, 581, 589, 594, 596, 627, 634, 651, 658, 659, 662], "serial": [470, 487, 493, 520, 529, 539, 565, 571, 575, 576, 582, 584, 585, 590, 597, 606, 613, 631], "seriou": [551, 601, 606], "serious": 531, "serv": [24, 25, 26, 27, 28, 31, 32, 33, 59, 121, 122, 123, 124, 125, 144, 205, 206, 207, 212, 213, 244, 322, 330, 354, 355, 356, 357, 358, 361, 362, 363, 389, 442, 443, 447, 453, 472, 493, 497, 513, 518, 519, 527, 528, 559, 573, 582, 587, 589, 596, 601, 605, 606, 608, 616, 621, 630, 636, 637], "servaddr": 637, "server": [497, 551, 589, 591, 606, 619, 637], "servic": [447, 450, 452, 522, 591, 602, 611], "sese": 596, "session": [515, 566, 573, 589, 607, 634], "set": [14, 63, 94, 95, 112, 196, 313, 338, 344, 393, 426, 427, 442, 445, 446, 449, 451, 452, 453, 454, 456, 458, 460, 462, 463, 464, 466, 467, 468, 469, 472, 473, 474, 476, 481, 487, 493, 494, 495, 498, 500, 501, 502, 504, 505, 506, 508, 510, 511, 513, 514, 516, 517, 518, 519, 520, 521, 522, 525, 526, 529, 531, 533, 534, 539, 541, 543, 544, 545, 546, 547, 548, 549, 550, 551, 554, 556, 557, 558, 561, 562, 563, 564, 571, 572, 574, 577, 579, 580, 581, 584, 585, 586, 588, 590, 591, 592, 594, 595, 597, 598, 599, 600, 602, 603, 605, 606, 608, 610, 611, 613, 615, 616, 617, 619, 620, 621, 622, 623, 628, 629, 630, 631, 634, 635, 636, 637, 648, 649, 650, 651, 652, 653, 654, 655, 656, 658, 659, 660, 661, 662, 663, 664, 665], "set_value_nam": [661, 662, 663, 664, 665], "setargstr": 509, "setbann": [589, 637], "setbid": 454, "setbr": 487, "setcategori": 509, "setcc": [464, 589], "setcondcodeact": 626, "setconvertact": 626, "setcurrentdebugloc": 656, "setdata": 467, "setdatalayout": [651, 652, 653, 654, 655, 656], "setdebugloc": 554, "setdescript": 509, "setexitcodemapp": 589, "setfoo": 559, "setgc": 526, "setgener": [573, 633, 634], "setgraphattr": 589, "setgraphcolor": 589, "sethi": 626, "sethiddenflag": 509, "setindexedloadact": 626, "setindexedstoreact": 626, "setinsertfencesforatom": 451, "setinsertpoint": [650, 651, 652, 653, 654, 655, 656], "setinternallinkag": 589, "setjmp": [559, 657, 666], "setjmp_buf": 519, "setlazycompilefailureaddr": 573, "setloadextact": 626, "setloadxact": 626, "setmaxatomicsizeinbitssupport": 451, "setmcjitmemorymanag": 564, "setnam": [589, 650, 651, 652, 653, 654, 655, 656], "setnumcompilethread": 573, "seto": 606, "setop": [615, 616], "setoperationact": [451, 464, 626], "setp": 572, "setpreservesal": 627, "setpreservescfg": 627, "setrecordnam": 454, "setreg": 464, "setrequiresstructuredcfg": 626, "setsearchord": 573, "setsockopt": 637, "setsubprogram": 656, "settargettripl": 655, "setter": [519, 559, 605, 613, 634], "settl": 591, "settransform": 634, "settruncstoreact": 626, "setup": [447, 449, 521, 544, 549, 565, 588, 589, 591, 605, 619, 626, 633, 651, 657, 666], "setup_token": 559, "setupmachinefunct": 626, "setvector": 467, "setxyzzi": 467, "sevenkind": 559, "seventeen": 565, "sever": [442, 444, 446, 450, 454, 458, 459, 462, 463, 464, 467, 468, 472, 476, 478, 487, 490, 497, 498, 509, 514, 517, 519, 520, 526, 528, 529, 541, 545, 554, 555, 559, 561, 562, 563, 565, 568, 571, 573, 575, 579, 582, 587, 589, 590, 596, 598, 599, 601, 602, 603, 605, 606, 611, 613, 615, 617, 619, 620, 621, 626, 627, 632, 650, 652, 657, 658, 661, 663, 666], "sex": 465, "sexi": 659, "sexist": 465, "sext": [50, 235, 305, 326, 380, 554], "sextload": [617, 626], "sexual": 465, "sf": [529, 547, 550], "sge": 559, "sgi": 589, "sgn": 559, "sgpr": [46, 136, 231, 376, 559], "sgpr0": 447, "sgpr1": 447, "sgpr105": 447, "sgpr2": 565, "sgpr29": 447, "sgpr30": 447, "sgpr32": 447, "sgpr33": 447, "sgpr34": 447, "sgpr4": 447, "sgpr63": 447, "sgpr64": 447, "sgpr_spill_count": 447, "sgprn": 447, "sgprs_use": 447, "sgt": 559, "sh": [469, 509, 518, 529, 532, 545, 551, 588, 591], "sh_addralign": 447, "sh_entsiz": 521, "sh_hidden_private_base_vimid": 447, "sh_link": [495, 505, 521], "sha": 559, "sha1": 561, "shader": [46, 136, 231, 376, 445, 464], "shadow": [569, 594, 608, 610, 616, 626, 652, 653, 654, 655, 656, 663, 664, 665], "shadowbyt": 608, "shadowcallstack": [454, 559], "shadowdescriptort": 447, "shadowlist": 626, "shadowstackgc": 526, "shadowstackgclow": 526, "shall": [462, 509, 521, 559, 568, 603, 657, 666], "shape": [538, 539, 551, 552, 559, 589, 605, 617, 632], "shapekind": 552, "shard": 472, "share": [442, 445, 446, 447, 448, 451, 454, 458, 460, 462, 464, 467, 469, 473, 474, 476, 495, 496, 510, 513, 515, 519, 521, 529, 533, 537, 543, 550, 553, 556, 559, 561, 562, 572, 573, 575, 587, 589, 590, 600, 602, 603, 605, 611, 617, 620, 621, 627, 630, 631, 633, 636, 637, 650, 653, 656, 661], "shared_bas": 446, "shared_librari": 590, "shared_limit": 446, "shared_ptr": [635, 636, 637], "shared_vgpr_cnt": 447, "shared_vgpr_count": 447, "sharedfnast": [636, 637], "sharir": 596, "shayn": 603, "she": 546, "shelf": [573, 633, 634], "shell": [458, 462, 472, 509, 529, 566, 607, 621, 656], "shf_alloc": [447, 495], "shf_exclud": [495, 521], "shf_execinstr": [447, 495], "shf_link_ord": 521, "shf_merg": 495, "shf_string": 495, "shf_write": [447, 495], "shield": [452, 464, 602, 611], "shift": [445, 446, 447, 451, 454, 455, 464, 509, 520, 524, 534, 559, 560, 571, 587, 598, 606, 615, 617, 630], "shiftinst": 467, "shim": 587, "shini": 627, "ship": [449, 451, 461, 515, 526, 529, 545, 603, 610, 657, 666], "shirt": 465, "shl": [467, 534, 554, 571, 587, 615, 616], "shld": 598, "shlib": 529, "shlibext": 621, "shlq": 606, "shn_amdgpu_ld": 447, "shoe": 631, "shoot": [651, 662], "short": [450, 453, 458, 464, 467, 472, 506, 508, 517, 522, 531, 559, 570, 572, 577, 589, 596, 602, 608, 610, 619, 626, 628, 631, 634, 652, 653, 654, 656, 663, 664, 665], "short_enum": 559, "short_wchar": 559, "shortcom": 603, "shortcut": [447, 659, 660], "shorter": [498, 594], "shortest": [571, 616], "shorthand": [563, 615], "shortli": [605, 656], "should": [96, 442, 445, 447, 448, 449, 450, 451, 453, 454, 455, 456, 458, 459, 460, 461, 462, 464, 465, 467, 468, 469, 472, 473, 474, 476, 481, 483, 488, 493, 497, 498, 506, 507, 508, 509, 510, 512, 513, 517, 519, 520, 521, 524, 525, 526, 527, 529, 531, 534, 535, 536, 537, 538, 539, 541, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 570, 572, 573, 574, 576, 577, 579, 581, 584, 586, 587, 588, 589, 590, 591, 592, 594, 596, 597, 598, 599, 600, 601, 602, 603, 605, 606, 607, 608, 609, 610, 611, 613, 614, 615, 616, 617, 619, 620, 621, 622, 624, 626, 627, 628, 629, 630, 631, 635, 649, 650, 651, 652, 654, 656, 659, 660, 661, 662, 663, 665], "shouldexecut": 589, "shouldexpandatomiccmpxchginir": 451, "shouldexpandatomicloadinir": 451, "shouldexpandatomicrmwinir": 451, "shouldexpandatomicstoreinir": 451, "shouldinsertfencesforatom": 451, "shouldn": [450, 466, 467, 509, 550, 559, 564, 570, 621, 659], "shouldsampl": 545, "show": [456, 464, 468, 472, 475, 486, 487, 492, 493, 494, 496, 497, 506, 508, 509, 513, 515, 521, 527, 529, 544, 559, 560, 564, 565, 566, 572, 588, 589, 591, 594, 598, 599, 605, 606, 607, 608, 613, 615, 619, 623, 625, 626, 627, 629, 631, 633, 635, 636, 637, 649, 650, 651, 652, 653, 654, 655, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667], "showc": 498, "showdebug": 515, "shown": [442, 445, 446, 447, 453, 472, 481, 486, 487, 498, 500, 501, 502, 506, 509, 513, 514, 516, 531, 539, 552, 559, 565, 566, 570, 572, 589, 605, 606, 608, 617, 620, 623, 626, 631, 653, 664], "shr": 467, "shrd": 598, "shrink": [464, 495, 591], "shrx": 606, "shrxq": 606, "shstrtab": 447, "sht_dynam": 447, "sht_hash": 447, "sht_llvm_linker_opt": 521, "sht_nobit": [447, 495], "sht_note": [447, 495], "sht_progbit": [447, 495], "sht_rela": 447, "sht_strtab": 447, "sht_symtab": 447, "shtest": 472, "shuffl": [447, 464, 467, 472, 534, 559, 573, 595, 596], "shuffle_vector": 464, "shufflebyt": 561, "shufflevector": [453, 464, 468, 534], "shut": [561, 626], "shutdown": 561, "si": [447, 467, 617], "sibl": [532, 563], "side": [447, 450, 451, 462, 464, 467, 493, 510, 516, 526, 529, 534, 554, 559, 565, 571, 572, 587, 589, 591, 598, 600, 606, 610, 621, 649, 650, 652, 653, 660, 661, 663, 664], "sidebar": [551, 607], "sidelength": 552, "sierra": 593, "siframelow": 447, "sift": 628, "sig": 529, "sig_atomic_t": 559, "sig_ign": 545, "sight": [654, 665], "sigil": 565, "sign": [47, 55, 137, 233, 378, 385, 442, 444, 445, 446, 464, 465, 467, 473, 487, 509, 511, 521, 524, 527, 533, 534, 559, 561, 562, 565, 584, 589, 598, 603, 606, 615, 626, 657, 666], "signal": [445, 451, 509, 511, 513, 515, 519, 523, 534, 545, 559, 561], "signatur": [451, 453, 464, 478, 510, 529, 559, 580, 582, 589, 610, 627, 650], "signature_invalid": 529, "signed": 442, "signedcharact": 584, "signext": [454, 559], "signextimm": 464, "signifi": 605, "signific": [58, 243, 388, 442, 447, 450, 453, 454, 460, 466, 467, 500, 501, 517, 520, 526, 545, 559, 561, 562, 569, 571, 587, 596, 603, 606, 610, 613, 619, 627, 630, 652, 653, 658, 659, 664], "significand": 559, "significantli": [454, 460, 462, 467, 478, 493, 519, 523, 529, 539, 549, 559, 561, 562, 589, 605, 606, 627, 649, 652, 660, 663], "sigplan": [464, 526], "sigsegv": 545, "sigusr1": 561, "sil": 617, "silenc": 548, "silent": [466, 495, 504, 505, 546, 559, 598, 615], "silli": [450, 467, 522, 615, 659], "simd": [46, 136, 231, 376, 442, 447, 473, 474, 559, 587, 595, 596, 622, 625], "simd_benchmark": 593, "similar": [442, 451, 454, 456, 459, 463, 464, 466, 467, 468, 476, 480, 497, 509, 510, 513, 516, 517, 519, 521, 526, 527, 529, 532, 538, 539, 545, 547, 548, 549, 554, 559, 561, 565, 568, 569, 571, 572, 573, 575, 577, 584, 587, 589, 590, 591, 594, 596, 602, 607, 611, 613, 615, 621, 625, 626, 627, 628, 629, 631, 648, 650, 651, 652, 653, 656, 659, 661, 662, 663, 664], "similarli": [442, 447, 450, 451, 453, 454, 458, 467, 487, 493, 509, 510, 517, 519, 525, 533, 536, 538, 539, 552, 553, 559, 575, 589, 606, 620, 623, 626, 628, 630, 632, 655, 656], "simm13": 626, "simm21": [55, 385], "simpl": [442, 449, 450, 451, 453, 454, 455, 458, 462, 463, 464, 468, 472, 473, 474, 493, 494, 509, 514, 516, 517, 518, 520, 521, 526, 527, 529, 531, 532, 536, 537, 538, 549, 552, 554, 558, 561, 563, 567, 570, 571, 573, 591, 598, 605, 606, 610, 611, 615, 616, 620, 621, 625, 626, 627, 631, 633, 634, 635, 636, 637, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667], "simplecompil": [573, 633, 635, 636, 637], "simpleloopunrol": 622, "simpleproject": 462, "simpler": [442, 447, 464, 520, 559, 563, 587, 589, 591, 605, 606, 633, 653, 654, 664, 665], "simplest": [442, 449, 460, 464, 509, 516, 531, 561, 591, 606, 626, 631, 634, 649, 650, 660, 662], "simpletyp": 668, "simpletypekind": 584, "simpletypemod": 584, "simplevalu": 616, "simpli": [442, 447, 450, 458, 461, 464, 467, 468, 482, 497, 506, 507, 509, 512, 513, 517, 519, 522, 525, 527, 529, 534, 544, 545, 548, 550, 554, 559, 565, 567, 570, 573, 575, 577, 587, 589, 590, 591, 598, 605, 606, 607, 608, 610, 611, 620, 621, 626, 627, 649, 650, 651, 660, 661, 662], "simplic": [457, 526, 533, 589, 592, 608, 648, 650, 661], "simplif": [458, 533, 587, 627], "simplifi": [442, 447, 449, 459, 464, 517, 526, 537, 549, 553, 554, 559, 574, 588, 606, 610, 620, 631, 633, 651, 652, 653, 654, 656, 659, 662, 663, 664, 665, 668], "simplify_typ": 552, "simplifycfg": [469, 654, 665], "simplifydemandedbit": 629, "simt": [442, 447], "simul": [453, 464, 493, 517, 543, 559, 619], "simultan": [442, 451, 453, 470, 495, 505, 529, 545, 561, 589, 603, 621, 625], "sin": [450, 510, 625, 631, 633, 648, 649, 650, 651, 659, 660, 661, 662], "sin_famili": 637, "sin_port": 637, "sinc": [442, 447, 448, 450, 454, 455, 462, 464, 466, 467, 470, 476, 493, 497, 498, 509, 510, 513, 516, 517, 519, 522, 526, 527, 529, 531, 535, 538, 547, 548, 550, 551, 552, 553, 556, 559, 561, 564, 566, 570, 571, 572, 573, 575, 577, 581, 585, 589, 591, 599, 603, 604, 605, 608, 610, 611, 616, 617, 626, 627, 630, 631, 648, 649, 650, 651, 652, 653, 654, 656, 660, 661, 662, 663, 664, 665], "sine": [559, 626], "sinf": 510, "singl": [442, 446, 449, 451, 453, 454, 458, 462, 463, 464, 466, 468, 472, 476, 481, 482, 486, 487, 490, 491, 493, 495, 497, 498, 501, 505, 509, 510, 514, 516, 517, 518, 519, 520, 526, 527, 529, 532, 533, 534, 535, 538, 539, 545, 548, 554, 555, 557, 560, 561, 563, 565, 569, 570, 571, 572, 573, 574, 575, 576, 577, 580, 581, 584, 585, 589, 590, 592, 596, 598, 599, 605, 609, 610, 615, 619, 621, 622, 625, 626, 627, 628, 629, 631, 648, 650, 651, 654, 656, 657, 661, 662, 665, 666], "singleimpl": 559, "singleimplnam": 559, "singlesour": 619, "singlesourc": [593, 619], "singlethread": [447, 559], "singleton": 442, "singli": 526, "singular": [467, 559, 563, 589], "sink": [450, 509, 596, 606], "sint": 559, "sit": 634, "site": [442, 447, 450, 463, 472, 519, 521, 526, 531, 557, 565, 570, 587, 593, 598, 607, 608, 610, 621, 623], "sitofp": [650, 661], "situat": [442, 451, 460, 464, 466, 467, 493, 509, 510, 517, 519, 527, 538, 549, 552, 554, 559, 568, 571, 587, 589, 601, 602, 625, 626, 627, 635, 651, 662], "six": [451, 464, 603, 633], "sixkind": 559, "sixth": [513, 533, 626], "sizabl": 589, "size": [9, 10, 12, 13, 14, 15, 16, 17, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46, 48, 53, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 117, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 140, 141, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 231, 238, 239, 240, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 295, 296, 297, 298, 300, 301, 302, 303, 307, 308, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 328, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 376, 383, 384, 385, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 445, 447, 450, 451, 452, 453, 454, 458, 462, 465, 467, 469, 470, 471, 472, 473, 476, 478, 481, 486, 493, 494, 495, 497, 498, 500, 501, 503, 506, 509, 514, 520, 521, 524, 526, 527, 533, 534, 538, 539, 545, 554, 559, 560, 561, 562, 569, 571, 572, 573, 576, 577, 579, 581, 584, 586, 587, 593, 598, 600, 602, 605, 606, 608, 610, 614, 615, 616, 617, 619, 621, 622, 623, 625, 626, 627, 628, 629, 630, 631, 634, 637, 649, 650, 651, 652, 653, 654, 655, 656, 657, 660, 665, 666], "size1": 559, "size2": 559, "size3": 559, "size_t": [451, 526, 561, 562, 573, 589, 631], "sizeclassalloc": 602, "sizem1": 559, "sizem1bitwidth": 559, "sizeof": [497, 513, 522, 559, 572, 579, 581, 584, 589, 606, 610, 637], "sizeofimm": 626, "sjljehprepar": 519, "sk_buff": 464, "sk_circl": 552, "sk_lastsquar": 552, "sk_otherspecialsquar": 552, "sk_somewhatspecialsquar": 552, "sk_specialsquar": 552, "sk_squar": 552, "sketch": 513, "skip": [442, 453, 454, 463, 464, 467, 468, 481, 496, 498, 510, 513, 514, 526, 532, 536, 549, 554, 559, 569, 589, 591, 605, 606, 610, 619, 622, 625, 626, 648, 649, 650, 651, 652, 653, 654, 655, 656, 658, 659, 660, 661, 662, 663, 664, 665], "skipbasicblock": 574, "skipfunct": 574, "skiploop": 574, "skipmodul": 574, "skipscc": 574, "sl": 442, "slash": 559, "slave": 546, "slc": [0, 2, 3, 4, 8, 447], "sle": 559, "sleb128": 442, "sled": 628, "slh": 606, "slice": [491, 589, 615, 616], "slide": [465, 510, 589], "slight": [521, 548], "slightli": [449, 453, 501, 502, 510, 516, 529, 559, 563, 569, 606, 610, 616, 627, 651, 653, 654, 662, 664, 665], "sln": 531, "slot": [442, 447, 464, 478, 493, 513, 519, 524, 545, 557, 559, 604, 608, 610, 626, 654, 665], "slow": [459, 460, 473, 529, 539, 559, 561, 586, 589, 627], "slow_path": 559, "slowdown": [545, 561], "slower": [464, 467, 486, 510, 519, 522, 524, 526, 559, 571, 589, 606], "slowli": [517, 529, 559], "slp": [560, 596], "slt": [559, 563], "sm": [497, 533, 572], "sm_20": [464, 572], "sm_21": 464, "sm_30": [464, 510], "sm_35": [464, 510], "sm_xx": 510, "small": [446, 454, 458, 461, 463, 464, 466, 467, 469, 474, 478, 493, 498, 509, 512, 513, 514, 517, 524, 526, 527, 533, 538, 539, 545, 551, 552, 558, 559, 561, 571, 572, 582, 589, 592, 593, 605, 606, 608, 611, 621, 627, 632, 635, 656, 658, 659], "smallconst": 608, "smaller": [442, 447, 451, 459, 464, 466, 467, 481, 487, 489, 493, 517, 524, 526, 534, 538, 559, 571, 574, 587, 588, 589, 602], "smallest": [445, 468, 553, 559], "smallsetvector": 589, "smallvector": [467, 637, 656], "smallvectorhead": 589, "smallvectorimpl": [589, 629], "smart": [467, 559, 576], "smarter": 509, "smartphon": 568, "smash": [559, 606], "smax": 446, "smell": 589, "smith": [467, 603], "smithwa": 593, "smooshlab": 528, "smoothli": 463, "smovq": 464, "smp": [451, 627], "smt": 452, "smul_lohi": 464, "sn": [497, 533], "sn_map": 571, "sn_mapl": 571, "sn_mapr": 571, "snan": 559, "snapshot": [450, 518, 561], "sneak": 467, "snippet": [517, 526, 554, 589, 627], "so": [442, 444, 445, 447, 449, 450, 451, 452, 453, 457, 458, 460, 462, 464, 465, 466, 467, 468, 469, 472, 473, 479, 481, 487, 491, 493, 497, 507, 509, 510, 512, 513, 515, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 532, 533, 536, 537, 538, 539, 541, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 560, 563, 565, 566, 567, 568, 570, 571, 572, 573, 574, 577, 581, 582, 584, 585, 586, 587, 588, 589, 590, 591, 592, 594, 596, 598, 599, 601, 602, 603, 604, 605, 606, 607, 608, 610, 611, 613, 615, 616, 617, 619, 620, 621, 622, 623, 626, 627, 628, 629, 631, 633, 634, 635, 636, 637, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666], "so_reuseaddr": 637, "social": [465, 632], "sock_stream": 637, "sockaddr": 637, "sockaddr_in": 637, "socket": 637, "sockfd": 637, "socklen_t": 637, "soffset": [0, 2, 3, 4, 8], "soft": [474, 493, 517, 605], "softer": 517, "softfp": 549, "softwar": [442, 463, 467, 474, 511, 517, 518, 526, 548, 549, 551, 559, 560, 576, 594, 598, 606, 621, 626, 627, 650, 657, 658, 659, 666], "sol_socket": 637, "solari": 529, "solaris2": 627, "sole": [517, 539, 559, 570, 589], "solicit": [466, 560], "solid": 548, "solut": [442, 451, 453, 462, 464, 509, 518, 529, 531, 559, 573, 589, 591, 605, 627, 634, 654, 657, 665, 666], "solution_1": 559, "solution_2": 559, "solv": [450, 464, 517, 527, 539, 543, 551, 554, 589, 591, 605, 653, 654, 657, 664, 665, 666], "solver": [462, 464], "some": [442, 445, 447, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 472, 473, 475, 476, 481, 486, 487, 493, 494, 496, 497, 509, 510, 511, 512, 513, 516, 517, 519, 520, 522, 523, 524, 525, 526, 527, 529, 530, 531, 533, 534, 535, 536, 538, 539, 541, 543, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 565, 566, 568, 570, 571, 573, 576, 577, 582, 585, 586, 587, 588, 589, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 610, 611, 613, 614, 615, 616, 617, 619, 620, 621, 622, 625, 626, 627, 629, 630, 631, 633, 634, 635, 636, 637, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 659, 660, 661, 662, 663, 664, 665, 666], "some_bss": 504, "some_crash_test": 591, "some_op": 565, "somebodi": 466, "someclass": 616, "somedag": 615, "somefancyaa": 627, "somefunc": [467, 589], "somehow": [442, 513, 577, 589, 627], "somelocalpath": 561, "somemap": 467, "somemulticlass": 616, "someon": [457, 464, 465, 466, 497, 512, 517, 518, 520, 524, 526, 535, 566, 591, 601, 607, 666], "someone_els": 466, "sometest": 620, "someth": [447, 449, 450, 464, 466, 467, 468, 494, 509, 513, 517, 520, 529, 531, 532, 538, 539, 548, 552, 553, 556, 559, 561, 563, 566, 570, 571, 573, 582, 587, 588, 589, 591, 602, 606, 607, 610, 611, 613, 615, 616, 626, 629, 631, 649, 650, 651, 652, 653, 655, 656, 657, 658, 660, 661, 662, 663, 664, 665, 666], "someti": 559, "sometim": [454, 458, 459, 464, 466, 467, 468, 493, 509, 510, 527, 529, 538, 552, 559, 561, 571, 581, 587, 589, 591, 605, 606, 613, 626, 631], "somewhat": [450, 451, 467, 513, 517, 518, 539, 559, 589, 591, 594, 606, 610, 620, 624, 649, 653, 660, 664], "somewhatspecialsquar": 552, "somewher": [468, 519, 552, 559, 591, 620, 621, 627, 650, 653, 661, 664], "soni": 603, "sonnenberg": 591, "soon": [517, 532, 561, 562, 573, 599, 627, 634, 649, 652, 660, 663], "sooner": 546, "sophist": [464, 526, 559, 566, 598, 607, 620, 627], "sorri": 666, "sort": [451, 462, 470, 494, 509, 510, 514, 517, 522, 553, 559, 584, 591, 593, 605, 628, 629, 649, 651, 652, 654, 657, 660, 662, 663, 665, 666], "sortord": 629, "sought": [442, 559], "sound": [450, 457, 561, 568], "sourc": [82, 167, 266, 413, 443, 444, 445, 446, 449, 450, 452, 458, 459, 460, 463, 464, 468, 469, 470, 471, 472, 473, 475, 479, 480, 481, 483, 493, 496, 497, 507, 509, 510, 512, 515, 517, 518, 519, 521, 524, 526, 527, 528, 531, 534, 545, 549, 550, 551, 553, 554, 558, 560, 562, 563, 565, 570, 571, 572, 573, 577, 585, 588, 589, 591, 592, 594, 597, 599, 600, 603, 606, 607, 608, 610, 611, 613, 615, 617, 619, 620, 621, 624, 626, 627, 628, 629, 631, 632, 635, 651, 655, 657, 662, 666], "source0": 627, "source_filenam": 559, "source_i386": 506, "source_x86_64": 506, "sourcebas": [512, 530], "sourcebasedcodecoverag": 514, "sourcefil": 481, "sourcefilecount": 577, "sourcefilenameindex": 577, "sourceforg": 593, "sourceinfos": 577, "sourceloc": 656, "sourcewar": [544, 561], "southern": 447, "sp": [447, 464, 521, 559, 565, 567, 569, 604, 617, 626, 656], "sp3": [445, 446], "space": [109, 195, 292, 441, 443, 444, 452, 454, 462, 465, 468, 473, 481, 487, 494, 497, 510, 517, 519, 526, 528, 529, 531, 533, 534, 556, 557, 558, 559, 564, 568, 569, 571, 582, 589, 590, 591, 592, 601, 604, 605, 606, 608, 610, 611, 615, 626, 627, 630, 631, 651, 654, 657, 662, 665, 666], "space0": 559, "space1": 559, "space2": 559, "spadini": 587, "spaghetti": [658, 659], "span": [617, 627], "spanish": 602, "sparc": [451, 464, 495, 529, 559, 594, 615, 626, 627], "sparcasmprint": [464, 626], "sparccallingconv": 626, "sparcel": 495, "sparcgenregisterinfo": 626, "sparcgensubtarget": 626, "sparcinstrformat": 626, "sparcinstrinfo": 626, "sparciseldagtodag": 626, "sparcisellow": 626, "sparclet": 626, "sparclit": 626, "sparclite86x": 626, "sparcreg": 626, "sparcregisterinfo": 626, "sparcsubtarget": 626, "sparctargetasminfo": 626, "sparctargetlow": 626, "sparctargetmachin": 626, "sparcv8": [451, 559], "sparcv9": 559, "sparingli": [467, 524], "spars": [464, 498, 520, 529, 560, 574, 589, 591, 630], "sparsecheckout": 591, "sparser": 630, "spawn": [561, 573], "spcc": 626, "spdx": [467, 633, 634, 635, 636, 637], "spe": 511, "speak": [463, 465, 510, 601, 610, 652, 653, 663, 664], "speaker": 568, "spec": [510, 553, 559, 565, 566, 589, 605, 606, 615, 616, 619, 631], "spec95": 620, "speccpu2000": [619, 620], "speccpu2006": 620, "special": [17, 443, 445, 446, 447, 450, 451, 453, 454, 463, 464, 467, 468, 472, 493, 494, 495, 505, 509, 510, 514, 515, 516, 517, 518, 519, 521, 523, 526, 527, 529, 536, 539, 550, 553, 558, 561, 563, 565, 569, 570, 571, 573, 575, 576, 577, 587, 589, 591, 592, 598, 600, 603, 606, 608, 610, 611, 615, 616, 617, 621, 625, 626, 627, 631, 632, 654, 655, 656, 657, 658, 659, 665, 666], "specialfp": 615, "specialsquar": 552, "specialti": 589, "specicifi": 488, "specif": [1, 5, 6, 7, 8, 52, 115, 139, 199, 237, 347, 382, 442, 444, 447, 449, 451, 452, 454, 457, 459, 460, 466, 467, 468, 472, 474, 481, 486, 496, 500, 509, 510, 511, 514, 517, 519, 520, 522, 525, 526, 527, 529, 531, 533, 536, 538, 539, 540, 541, 543, 548, 550, 551, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 570, 572, 573, 574, 577, 585, 587, 589, 592, 595, 597, 598, 599, 601, 603, 606, 608, 610, 613, 614, 615, 616, 617, 620, 625, 626, 627, 628, 630, 631, 634, 648, 649, 651, 653, 655, 658, 659, 660, 664], "specifi": [11, 14, 17, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46, 47, 52, 55, 56, 58, 59, 61, 62, 63, 64, 82, 92, 95, 109, 112, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 139, 141, 142, 144, 146, 147, 167, 180, 195, 196, 205, 206, 207, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 231, 232, 233, 237, 241, 243, 244, 246, 247, 266, 277, 292, 310, 313, 322, 323, 329, 330, 332, 337, 344, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 376, 377, 378, 382, 385, 386, 388, 389, 392, 393, 394, 413, 424, 427, 441, 442, 443, 444, 445, 446, 447, 448, 451, 454, 456, 457, 458, 460, 462, 463, 464, 467, 468, 469, 470, 472, 473, 474, 476, 477, 480, 481, 482, 483, 485, 486, 487, 488, 490, 491, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, 514, 518, 519, 521, 522, 525, 527, 528, 529, 531, 534, 545, 553, 554, 558, 561, 563, 565, 566, 572, 573, 574, 577, 581, 582, 585, 587, 589, 590, 592, 596, 598, 600, 602, 605, 608, 610, 611, 613, 615, 616, 617, 619, 620, 621, 622, 625, 626, 629, 630, 631, 649, 650, 652, 653, 654, 655, 656, 657, 660, 661, 662, 663, 664, 665, 666], "spectr": [559, 597], "spectre11": 606, "spectreattack": 606, "specul": [450, 451, 493, 510, 519, 524, 554, 559, 573, 574, 597, 598, 610], "speculat": [454, 559], "speculative_load_harden": [454, 559], "speed": [460, 462, 467, 487, 509, 510, 529, 561, 570, 621, 654, 665], "speedup": 606, "spell": [467, 517, 563, 613], "spencer": 611, "spend": [472, 629], "spent": [493, 629], "spflag": 605, "spflagdefinit": 656, "sphinx": [462, 528, 529, 566], "sphinx_execut": 462, "sphinx_output_html": 462, "sphinx_output_man": 462, "sphinx_warnings_as_error": 462, "sphinxquickstarttempl": 607, "spi": 447, "spiffygrep": 509, "spiffysh": 509, "spill": [442, 447, 461, 464, 474, 513, 535, 605, 606, 608, 610, 626], "spillalign": 626, "spiller": [464, 473, 474], "spillsiz": 626, "spirit": [465, 589, 603], "spisd": 626, "spl": 617, "splat": [464, 560, 573], "splice": [559, 589], "split": [442, 447, 451, 453, 458, 464, 482, 495, 497, 506, 509, 510, 513, 517, 520, 527, 533, 539, 559, 561, 565, 570, 571, 573, 581, 587, 590, 591, 598, 602, 604, 626], "split64": 559, "splitdebugfilenam": 559, "sponsor": 591, "sponsorship": 517, "spot": [561, 587], "spotti": 559, "spread": [559, 587], "spreadsheet": 629, "springer": 510, "sprinkl": 589, "spu": 626, "spuriou": 559, "spurious": [559, 621], "sq": 493, "sq_rsrc_img_1d": 445, "sq_rsrc_img_1d_arrai": 445, "sq_rsrc_img_2d": 445, "sq_rsrc_img_2d_arrai": 445, "sq_rsrc_img_2d_msaa": 445, "sq_rsrc_img_2d_msaa_arrai": 445, "sq_rsrc_img_3d": 445, "sq_rsrc_img_cub": 445, "sqlite": 561, "sqrt": [625, 631], "squar": [517, 552, 558, 559, 631], "squash": [453, 591], "squeue": 493, "sr": 501, "sra": [615, 616], "sram": 447, "srand": 561, "src": [0, 2, 3, 4, 8, 462, 464, 480, 519, 551, 559, 577, 585, 589, 590, 599, 620, 626, 651], "src0": [0, 1, 2, 3, 4, 5, 6, 7, 8, 82, 167, 232, 266, 377, 413, 445, 446], "src0_sel": [0, 3, 4, 7, 8, 447], "src1": [0, 1, 2, 3, 4, 5, 6, 7, 8, 82, 167, 232, 266, 377, 413, 443, 445, 464, 615, 617], "src1_sel": [0, 3, 4, 7, 8, 447], "src2": [0, 1, 2, 3, 4, 5, 6, 7, 8, 82, 167, 232, 266, 377, 413, 464, 615, 617], "src3": [0, 2, 3, 4, 8, 82, 167, 266, 413], "src_private_bas": 447, "src_reg": 464, "src_root": 529, "src_shared_bas": 447, "srcarglist": 559, "srcloc": 559, "srcvalu": 610, "srd": 447, "srem": 464, "sret": [447, 454, 559], "srgp": 447, "srinivasan": 603, "srl": [442, 615, 616], "sroa": [451, 510, 524, 560, 574, 654, 665], "srsrc": [0, 2, 3, 4, 8], "ss": [464, 483, 615], "ssa": [519, 524, 526, 534, 559, 560, 570, 589, 605, 610, 626, 627, 650, 652, 653, 654, 657, 658, 659, 661, 663, 664, 665, 666], "ssamp": [0, 2, 3, 4], "ssca2v2": 593, "sscabmk": 593, "sse": [464, 555, 559, 595, 626, 655], "sse2": [559, 621], "sse4": 625, "sse41": 468, "ssecal": 626, "ssh": 619, "ssp": [454, 559, 605], "sspreq": [454, 559], "sspstrong": [454, 559], "ssrc": [0, 2, 3, 4], "ssrc0": [0, 2, 3, 4], "ssrc1": [0, 2, 3, 4], "ssrc2": [0, 2, 3, 4], "sstream": 467, "st": [483, 501, 559, 572, 626], "st0": [615, 617, 626], "st1": [453, 464, 617, 626], "st17basic_string_viewicst11char_traitsice": 483, "st2": 617, "st3": 617, "st3__1": 483, "st4": 617, "st5": 617, "st6": 617, "st7": 617, "st7__cxx11": 483, "st_valu": 447, "stab": 605, "stabil": [517, 591, 592], "stabl": [467, 484, 487, 517, 551, 554, 562, 574, 589, 626], "stack": [450, 461, 467, 473, 494, 496, 500, 501, 502, 513, 519, 524, 529, 534, 545, 557, 560, 567, 570, 573, 589, 597, 598, 600, 605, 616, 624, 626, 627, 628, 630, 631, 633, 635, 637, 654, 656, 658, 659, 665], "stack_loc": 464, "stack_siz": 473, "stackar": 526, "stackentri": 526, "stackframes": 526, "stackgrowsdown": 626, "stackmap": [500, 501, 526, 559], "stackoffset": 526, "stackprotectorcheck": 559, "stackrestor": 557, "stacksafeti": [559, 587], "stacksav": 557, "stacksiz": 600, "stacksizessect": 464, "staff": 601, "stage": [442, 447, 451, 460, 462, 464, 469, 481, 509, 510, 517, 518, 546, 551, 559, 561, 562, 571, 572, 592, 595, 596, 599, 603, 609, 626, 629, 632, 649, 660], "stage1": [449, 518, 548], "stage2": [449, 460, 462, 518, 548], "stage3": 449, "stageselectioncat": 509, "stai": [513, 528, 562, 571, 581, 631], "stale": [447, 605], "stall": [493, 606], "stamp": 582, "stanc": 467, "stand": [464, 466, 467, 510, 517, 559, 577, 589, 621, 627, 634, 635, 636, 637, 649, 660], "standalon": [464, 525, 549, 558, 591, 600, 656, 657], "standard": [17, 446, 447, 449, 450, 451, 453, 462, 464, 468, 469, 472, 473, 474, 476, 477, 478, 482, 485, 486, 487, 488, 490, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 504, 505, 506, 507, 508, 509, 511, 512, 517, 519, 521, 522, 523, 524, 526, 528, 531, 534, 536, 548, 552, 562, 565, 572, 573, 587, 595, 598, 607, 610, 613, 617, 621, 625, 626, 627, 630, 634, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 659, 660, 661, 662, 663, 664, 665, 666], "standpoint": 589, "star": 593, "start": [15, 113, 197, 215, 226, 228, 345, 442, 447, 449, 450, 454, 458, 467, 468, 469, 472, 481, 483, 493, 495, 496, 497, 498, 505, 506, 512, 513, 514, 515, 517, 518, 520, 521, 522, 524, 527, 528, 532, 533, 534, 538, 539, 546, 549, 550, 551, 554, 558, 563, 565, 566, 569, 571, 572, 573, 575, 587, 588, 589, 591, 592, 594, 598, 599, 602, 605, 606, 607, 610, 615, 616, 624, 625, 626, 628, 629, 630, 631, 632, 634, 635, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 659, 660, 661, 662, 663, 664, 665, 666, 667], "start_bb": [663, 664, 665], "start_val": [663, 664, 665], "start_valu": 559, "starter": [568, 594], "startexpr": [652, 653, 654, 655, 656, 665], "startup": [472, 529, 559, 572, 573, 586, 634, 635], "startval": [652, 653, 654, 655, 656], "stash": 552, "stat": [450, 452, 458, 473, 474, 493, 507, 536, 611, 619, 620, 627], "state": [445, 446, 450, 451, 453, 457, 464, 466, 467, 493, 509, 513, 517, 518, 519, 523, 526, 538, 539, 543, 549, 551, 554, 559, 561, 565, 566, 570, 573, 579, 587, 588, 589, 591, 594, 602, 603, 605, 607, 608, 610, 625, 627, 630, 631, 634, 636, 637, 649, 656], "stateless": [451, 627], "statement": [461, 463, 493, 510, 514, 516, 517, 519, 520, 527, 559, 560, 563, 587, 589, 601, 605, 613, 615, 616, 625, 626, 630, 650, 652, 654, 656, 658, 663, 665], "statepoint_token": 610, "static": [442, 447, 450, 451, 452, 458, 460, 461, 462, 464, 469, 471, 474, 493, 509, 513, 520, 522, 524, 526, 527, 529, 541, 545, 550, 552, 553, 557, 559, 560, 561, 562, 563, 564, 569, 571, 573, 589, 590, 598, 602, 605, 606, 610, 613, 623, 626, 627, 628, 631, 633, 634, 648, 649, 650, 651, 652, 653, 654, 655, 656, 658, 661, 662], "static_cast": [637, 654, 655, 656], "static_librari": 549, "staticlibrarydefinitiongener": 598, "statist": [450, 452, 470, 471, 473, 474, 478, 481, 507, 514, 561, 590, 600, 603, 619, 620, 628], "statu": [46, 136, 231, 376, 445, 457, 459, 462, 465, 467, 491, 517, 542, 546, 559, 579, 598, 608, 624], "statuscheck": 591, "stb_local": 559, "std": [483, 496, 507, 509, 519, 522, 538, 545, 552, 571, 572, 573, 584, 593, 602, 606, 619, 625, 626, 629, 631, 633, 634, 635, 636, 637, 648, 649, 650, 651, 652, 653, 654, 655, 656], "stdarg": 559, "stdcall": 464, "stddef": 561, "stderr": [467, 468, 469, 561, 574, 589, 621, 649, 650, 651, 652, 653, 654, 655, 656], "stdin": [468, 481, 487, 605, 621, 656, 660, 661, 662, 663, 664, 665], "stdint": 561, "stdio": [529, 531, 544, 562, 598, 611, 662, 663, 664, 665], "stdlib": [462, 529], "stdlibc": 462, "stdout": [472, 481, 483, 486, 487, 531, 559, 561, 621, 660, 661, 662, 663, 664, 665, 668], "steadi": 523, "steensgaard": 450, "steer": 517, "steinberg": 593, "stellard": 551, "stem": [510, 589], "step": [442, 446, 449, 450, 458, 460, 462, 464, 466, 510, 513, 516, 517, 518, 519, 520, 526, 527, 529, 531, 532, 534, 539, 543, 548, 549, 550, 551, 552, 554, 556, 561, 562, 563, 571, 572, 587, 589, 594, 596, 599, 605, 613, 620, 623, 624, 627, 631, 636, 637, 650, 651, 652, 653, 654, 655, 656, 663, 664, 665, 667], "step_val": [663, 664, 665], "stepexpr": [652, 653, 654, 655, 656, 665], "stepval": [652, 653, 654, 655, 656], "stepwithcompactencod": 519, "steve": 603, "stick": [458, 547, 568, 589, 591], "sticki": 559, "still": [442, 447, 453, 457, 458, 459, 461, 464, 467, 472, 481, 495, 505, 509, 510, 514, 517, 519, 522, 526, 529, 531, 533, 535, 537, 538, 539, 543, 544, 545, 549, 550, 552, 553, 554, 557, 559, 561, 563, 564, 570, 571, 573, 574, 586, 587, 588, 589, 591, 592, 593, 601, 603, 605, 606, 608, 610, 611, 620, 623, 625, 627, 631, 651, 652, 653, 654, 657, 663, 664, 665, 666], "still_poison": 559, "stingi": 589, "stitch": 581, "stkmaprecord": [608, 610], "stksizerecord": 608, "stl": [467, 522, 529, 561, 587, 589, 631], "stlextra": [635, 636, 637, 649, 650, 651, 652, 653, 654, 655, 656], "stm": 559, "stmt": 622, "stn_undef": 447, "stonei": 447, "stop": [462, 465, 467, 472, 484, 496, 497, 513, 517, 519, 520, 526, 539, 551, 559, 561, 565, 570, 605, 606, 627, 628, 630, 649, 660], "stopgap": 589, "stopiter": 513, "stopper": 599, "storag": [442, 447, 452, 454, 464, 513, 526, 569, 572, 598, 605], "storageclass": 668, "store": [29, 30, 38, 126, 130, 208, 209, 210, 211, 214, 215, 223, 226, 228, 359, 360, 368, 442, 445, 447, 450, 451, 453, 454, 455, 462, 463, 468, 481, 506, 509, 513, 514, 516, 518, 519, 523, 526, 527, 529, 533, 534, 538, 541, 543, 554, 555, 557, 560, 561, 564, 565, 570, 571, 572, 573, 577, 581, 589, 590, 591, 595, 596, 598, 600, 602, 604, 605, 608, 609, 610, 620, 623, 626, 633, 634, 648, 649, 654, 655, 656, 659, 660, 665], "storemerg": 513, "storeregtoaddr": 626, "storeregtostackslot": [464, 626], "storesdnod": 626, "stori": [531, 605], "str": [453, 486, 509, 514, 559, 572, 589, 631, 633, 634, 635, 636, 637, 649, 650, 651, 652, 653, 654, 655, 656, 668], "str1": 615, "str2": 615, "str_offset": 605, "strai": 621, "straight": [450, 464, 487, 510, 555, 571, 589, 610, 611, 615, 649, 659, 660, 661], "straightforward": [453, 464, 522, 552, 589, 591, 592, 602, 605, 626, 627, 634, 648, 650, 651, 652, 653, 654, 661, 662, 663, 664, 665, 666], "strang": [453, 654, 665], "strategi": [451, 459, 464, 509, 513, 569, 589, 591, 610, 654, 665], "strconcat": [615, 616, 626], "stream": [52, 139, 237, 382, 442, 446, 454, 464, 467, 468, 469, 470, 476, 477, 482, 485, 486, 488, 490, 494, 495, 496, 501, 502, 504, 505, 506, 507, 514, 520, 529, 559, 561, 576, 589, 593, 600, 605, 606, 625, 626, 627, 630, 631, 649, 659, 660, 661, 662, 663, 664, 665], "streamblock": 581, "streamclust": 593, "streamdirectori": 581, "streamer": 464, "streamlin": 459, "streamsiz": 581, "strength": [451, 464, 465, 509, 524, 559, 589, 632, 658, 659], "strengthen": 493, "stress": [467, 471, 525], "strex": 451, "strict": [52, 139, 237, 382, 448, 451, 453, 468, 517, 524, 533, 558, 559, 561, 571, 573, 589, 605, 614, 617, 650, 661], "strict_": 448, "strict_fadd": 448, "strict_fp_round": 448, "stricter": [451, 468, 559], "strictfp": [454, 559], "strictli": [468, 519, 529, 559, 572, 589, 605, 610, 611, 650, 652, 655, 663], "stride": [20, 118, 202, 350, 447, 559, 593, 596], "strike": [517, 602, 650, 661], "strikingli": [653, 664], "string": [442, 447, 454, 456, 460, 462, 463, 464, 467, 471, 472, 473, 474, 476, 486, 493, 495, 496, 497, 498, 500, 501, 506, 509, 521, 529, 539, 545, 555, 556, 558, 565, 567, 572, 577, 581, 582, 585, 587, 598, 602, 605, 610, 611, 613, 615, 616, 617, 626, 627, 628, 631, 633, 635, 636, 637, 648, 649, 650, 651, 652, 653, 654, 655, 656, 659, 660, 661, 662, 663, 664, 665], "string_view": [483, 545], "stringli": 463, "stringmap": 509, "stringmapentri": 589, "stringref": [467, 509, 605, 629, 631, 633, 634, 635, 636, 637, 654, 655, 656], "stringsort": 467, "stringswitch": 613, "stringwithcstr": 605, "stringwithspecialstr": 605, "strip": [458, 471, 481, 482, 495, 507, 509, 517, 554, 562, 577, 589, 605, 621], "strippointercast": 467, "strive": [465, 467, 543, 603, 621], "strlen": 589, "strong": [451, 466, 468, 517, 522, 524, 559, 569, 571, 592, 602], "stronger": [442, 447, 451, 559, 589, 610], "strongest": 606, "strongli": [463, 466, 467, 493, 516, 524, 526, 545, 549, 550, 560, 563, 602, 615, 652, 654, 657, 658, 663, 665, 666], "stroustrup": 589, "strr": 626, "strtab": [447, 454, 600], "strtab_blob": 454, "strtod": [509, 648, 649, 650, 651, 652, 653, 654, 655, 656], "strtol": 509, "struct": [447, 454, 464, 468, 509, 510, 513, 519, 521, 524, 526, 557, 570, 576, 577, 580, 581, 582, 584, 589, 598, 605, 606, 623, 625, 626, 627, 631, 654, 656, 657, 665, 666], "struct_anon": 454, "struct_nam": 454, "structtyp": 589, "structur": [447, 450, 451, 454, 458, 464, 466, 467, 468, 471, 479, 486, 493, 497, 500, 501, 509, 514, 516, 519, 524, 526, 527, 529, 531, 533, 536, 539, 555, 558, 560, 561, 562, 563, 564, 566, 577, 581, 582, 585, 587, 592, 596, 605, 607, 613, 617, 626, 627, 630, 631, 633, 649, 650, 652, 653, 654, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666], "struggl": 529, "stryjewski": 587, "stt_amdgpu_hsa_kernel": 447, "stt_file": [495, 505], "stt_func": [447, 495], "stt_gnu_ifunc": 495, "stt_notyp": 447, "stt_object": [447, 495], "stt_section": 495, "stub": [464, 511, 545, 571, 573, 589, 626, 635, 636, 637], "stubsmgr": 573, "stuck": [657, 666], "stucki": 593, "student": 512, "studi": [524, 561, 590], "studio": [449, 462, 521, 529, 530, 605], "stuf": 468, "stuff": [463, 464, 509, 566, 589, 607, 615, 620, 627, 631, 651, 652, 654, 655, 656, 662, 663, 665], "stump": 626, "stupid": 458, "stwu": 464, "sty": 617, "style": [442, 447, 449, 451, 458, 468, 471, 472, 474, 475, 476, 481, 482, 493, 495, 496, 501, 506, 509, 513, 517, 526, 531, 558, 563, 577, 589, 594, 597, 606, 613, 615, 616, 628, 649, 654, 657, 660, 665, 666], "styleguid": 594, "stylist": 467, "su": 637, "sub": [445, 451, 454, 459, 460, 463, 464, 468, 472, 493, 513, 517, 520, 521, 529, 534, 551, 563, 571, 589, 596, 613, 615, 617, 621, 626, 650, 655, 661], "sub1": 468, "sub32rr": 605, "sub_32": 565, "sub_8bit": 565, "sub_ri": 615, "sub_rr": 615, "subblock": 454, "subclass": [450, 464, 467, 509, 526, 552, 565, 596, 605, 615, 617, 627, 631, 649, 660], "subclassoptionaldata": 571, "subclassref": 616, "subcommand": [627, 628, 629], "subcommun": 517, "subcompon": [442, 517], "subdir": 591, "subdirectori": [462, 463, 472, 529, 549, 558, 619, 620, 621, 626], "subdivid": 559, "subel": [559, 560], "subexpress": [450, 560, 606, 649, 651, 652, 653, 654, 660, 662, 663, 664, 665], "subfield": 615, "subfold": 518, "subgraph": [516, 587, 596], "subject": [442, 447, 461, 464, 467, 517, 535, 538, 545, 551, 559, 588, 589, 622, 631], "subl": [464, 468], "subleti": 534, "sublist": 463, "subloop": 622, "submiss": [442, 517], "submit": [442, 457, 458, 466, 528, 588, 619], "submodul": 591, "subnorm": [559, 572], "subobject": 623, "suboptim": 591, "subpath": [472, 558], "subprogram": [442, 447, 559, 605, 656], "subproject": [467, 517, 528, 529, 548, 591, 598, 621], "subproject_branch": 591, "subrang": 559, "subreg": [565, 626], "subreg_to_reg": 565, "subregclasslist": 626, "subregindex": 565, "subregion": 559, "subregist": [608, 626], "subroutin": 559, "subroutine2": 605, "subscrib": [517, 588, 603], "subscript": [450, 559, 587], "subsect": [497, 501, 573, 589], "subsequ": [232, 377, 442, 447, 448, 464, 476, 509, 517, 519, 527, 551, 559, 564, 567, 573, 584, 587, 594, 605, 606, 608, 615, 625, 626, 635, 636, 637, 650, 651], "subset": [450, 451, 472, 476, 493, 495, 505, 517, 525, 527, 529, 545, 559, 561, 572, 573, 589, 593, 605, 606, 608, 621, 657, 666], "subsidiari": 613, "subst": [615, 616, 617], "substanti": [450, 460, 466, 513, 526, 559, 606, 651, 662], "substitut": [451, 463, 464, 483, 549, 559, 573, 587, 608, 615], "substr": [493, 509, 514, 621], "substream": [497, 575, 585], "subsystem": [464, 559], "subtarget": [464, 487, 508, 536, 559], "subtargetemitt": 626, "subtargetfeatur": [617, 626], "subtl": [460, 463, 527, 561, 577, 649, 652, 657, 660, 662, 663, 666], "subtmp": [650, 651, 652, 653, 654, 655, 656, 661, 662, 663, 664, 665], "subtmp5": [654, 665], "subtool": 510, "subtract": [446, 447, 464, 514, 520, 534, 559], "subtyp": [519, 626], "subvector": 464, "subvers": [517, 551, 591, 621], "subvert": 461, "succ": 467, "succe": [457, 461, 467, 468, 469, 473, 476, 477, 478, 480, 485, 488, 490, 507, 508, 519, 546, 552, 573, 589, 603, 621, 633, 634, 649, 651, 660, 665], "succeed": [454, 455, 472, 559, 627], "success": [467, 469, 479, 487, 493, 517, 519, 529, 534, 553, 559, 563, 589, 591, 600, 603, 621, 626, 627, 631, 636, 637, 649, 650, 651, 652, 653, 654, 655, 656, 660, 661, 662, 663, 664, 665], "success_ord": 451, "successfulli": [450, 467, 470, 486, 492, 517, 519, 536, 546, 549, 550, 551, 553, 563, 573, 606, 610, 625, 653, 664], "successor": [455, 464, 467, 484, 519, 524, 554, 559, 563, 587, 596, 605, 626], "succinct": [467, 472], "sudo": [529, 547, 619], "suffer": [526, 603], "suffic": [453, 582], "suffici": [447, 448, 450, 451, 452, 458, 468, 509, 524, 526, 527, 529, 535, 549, 552, 553, 559, 567, 584, 587, 588, 589, 591, 592, 594, 603, 606, 610, 615, 648, 659], "suffix": [444, 447, 462, 467, 468, 472, 473, 477, 481, 485, 495, 509, 520, 549, 559, 589, 594, 606, 613, 621, 626, 627, 636, 637, 650, 661], "sugar": 559, "suggest": [442, 450, 460, 466, 467, 517, 524, 529, 550, 554, 559, 573, 586, 588, 589, 590, 594, 603, 606, 610, 614, 617, 627], "suit": [449, 463, 464, 468, 510, 517, 519, 520, 528, 531, 539, 543, 547, 550, 551, 571, 589, 591, 597, 600, 605, 606, 628, 633], "suitabl": [442, 454, 461, 463, 464, 467, 468, 481, 508, 509, 512, 513, 514, 525, 526, 536, 559, 561, 563, 564, 572, 573, 587, 589, 594, 605, 610, 621], "sum": [442, 454, 455, 456, 468, 481, 486, 559, 577, 589, 625, 629], "sum_1": 498, "sum_2": 498, "sum_of_all_vari": 486, "summar": [464, 472, 486, 513, 526, 559, 582, 584, 587, 600, 603], "summari": [454, 468, 469, 472, 473, 474, 476, 477, 480, 481, 482, 485, 487, 488, 490, 493, 494, 495, 496, 498, 500, 501, 502, 504, 505, 507, 508, 509, 532, 533, 585, 587, 588, 602, 606, 609, 610, 620, 654, 656, 665], "summaris": [453, 502], "summat": 559, "sumo": 447, "sun": 627, "sunit": 464, "sunk": [447, 450, 536, 605], "sunwspro": 529, "super": [464, 562, 626], "superclass": [450, 589, 613, 615, 616, 617, 626, 627], "superflu": 527, "superiorli": 493, "supermajor": 603, "superpos": 589, "superreg": 626, "supersed": 595, "superset": [451, 559], "supersparc": 626, "superword": [560, 625], "supplement": [472, 506, 511, 601], "supplementari": 442, "suppli": [14, 21, 55, 112, 141, 196, 313, 344, 351, 385, 442, 445, 446, 454, 472, 476, 481, 498, 513, 519, 538, 547, 549, 551, 553, 559, 562, 567, 573, 589, 591, 627, 631, 633, 634, 635, 657, 666], "support": [17, 52, 54, 55, 115, 139, 199, 208, 210, 211, 219, 221, 222, 237, 347, 382, 384, 385, 442, 444, 445, 446, 447, 449, 450, 451, 452, 453, 454, 460, 461, 462, 463, 465, 467, 468, 472, 473, 476, 480, 481, 483, 486, 491, 493, 494, 496, 497, 498, 509, 511, 513, 515, 517, 520, 521, 523, 524, 525, 526, 527, 529, 531, 533, 538, 539, 543, 544, 548, 549, 551, 552, 555, 556, 557, 558, 562, 565, 566, 571, 572, 577, 579, 581, 585, 586, 587, 589, 590, 591, 593, 594, 596, 597, 598, 600, 602, 603, 605, 606, 607, 612, 613, 615, 617, 619, 621, 622, 623, 624, 625, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 648, 649, 650, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 663, 664, 665, 666, 667], "supportsvp": 595, "supporttest": 462, "suppos": [464, 498, 519, 533, 552, 558, 559, 571, 577, 581, 591, 611, 627, 631], "suppress": [467, 470, 472, 494, 513, 554, 559, 598, 622, 631], "sure": [450, 451, 453, 457, 462, 464, 466, 467, 469, 481, 509, 512, 513, 517, 520, 522, 524, 529, 531, 532, 544, 545, 546, 547, 549, 550, 551, 552, 553, 568, 586, 588, 589, 598, 599, 603, 605, 609, 611, 614, 617, 619, 621, 625, 627, 628, 649, 650, 651, 652, 653, 654, 655, 656, 661, 665, 666], "surfac": [27, 28, 124, 125, 212, 213, 357, 358, 445, 464, 525, 603, 628], "surgic": 589, "surpris": [559, 571, 589, 657, 666], "surprisingli": [467, 524, 529, 649, 651, 660, 662], "surround": [451, 461, 468, 527, 529, 545, 559, 565, 587, 594, 606, 608, 617], "survei": 511, "surviv": [519, 606, 649, 660], "suspect": 507, "suspend": [442, 603], "suspend1": 513, "suspend2": 513, "suspens": [513, 603], "suspici": 611, "sv": [462, 545], "sve": [559, 594, 595, 598], "svg": [462, 629], "svn": [528, 551, 594, 608, 619, 625, 661], "svptr": 559, "svr4": 476, "sw": [501, 593, 606], "swap": [442, 445, 451, 453, 547, 559, 570, 581], "sweep": 526, "swift": [505, 559, 573, 594], "swiftcc": [454, 559], "swifterror": [454, 559], "swiftmodul": 470, "swiftself": [454, 559], "swim": 593, "switch": [447, 448, 451, 461, 462, 475, 495, 505, 509, 519, 520, 544, 547, 551, 552, 556, 587, 589, 591, 594, 598, 606, 610, 613, 619, 625, 626, 630, 631, 633, 649, 650, 651, 652, 653, 654, 655, 656, 661, 662, 663], "switchsect": [464, 526], "switchtosect": 464, "swizzl": [442, 447], "sx": 595, "sy": [452, 529, 635, 636, 637, 655, 656], "sym": [494, 495, 496, 497, 498, 500, 501, 521, 573, 598, 599, 635, 636, 637], "symaddr": [635, 636, 637], "symbol": [47, 137, 233, 378, 445, 450, 454, 460, 464, 467, 471, 473, 474, 475, 476, 478, 481, 483, 489, 495, 496, 498, 500, 501, 502, 505, 509, 514, 515, 526, 529, 544, 545, 550, 559, 560, 561, 564, 577, 585, 586, 589, 592, 598, 605, 610, 615, 619, 623, 626, 629, 630, 631, 633, 634, 637, 650, 651, 652, 653, 654, 655, 656, 657, 661, 663, 664, 665, 666, 668], "symbol1": [496, 521], "symbol2": [496, 521], "symbol_in_partit": 521, "symbolalias": 573, "symbolaliasmap": 573, "symbollookup": 637, "symbolmap": 573, "symbolnam": 447, "symbolresolv": [635, 636, 637], "symbols": 580, "symbolstringptr": 573, "symbolt": 589, "symbytes": [577, 580], "symlik": 462, "symlink": 462, "symmetr": 510, "symmetri": 621, "symnam": 496, "symposium": 510, "symptom": 529, "symptomat": 602, "symrecordstream": 577, "symtab": [447, 470, 589], "sync": [451, 572, 631], "synch_and_fetch": 549, "synchron": [445, 447, 451, 559, 562, 573, 591], "syncscop": 559, "synergist": 596, "synonym": 476, "synopsi": 509, "syntact": [468, 559, 651, 662], "syntax": [17, 18, 46, 52, 57, 91, 109, 116, 136, 139, 143, 179, 195, 200, 231, 232, 237, 242, 276, 292, 348, 376, 377, 382, 387, 423, 441, 443, 447, 463, 464, 467, 473, 474, 493, 495, 496, 497, 505, 509, 522, 527, 529, 545, 549, 560, 561, 565, 566, 567, 574, 589, 597, 602, 605, 607, 613, 621, 631, 648, 650, 651, 652, 653, 654, 655, 656, 659, 661, 662, 663, 664, 665], "synthes": [468, 520, 605, 651, 662], "synthesizedcd": 453, "synthet": [495, 554, 626], "sysadmin": 591, "syscal": 464, "sysmsg_op_ecc_err_interrupt": [52, 139, 237, 382], "sysmsg_op_host_trap_ack": [52, 139, 237, 382], "sysmsg_op_reg_rd": [52, 139, 237, 382], "sysmsg_op_ttrace_pc": [52, 139, 237, 382], "sysroot": [549, 550, 551, 617], "system": [442, 449, 450, 451, 452, 453, 457, 460, 462, 463, 464, 467, 470, 472, 473, 474, 476, 479, 497, 509, 511, 512, 517, 518, 520, 522, 525, 526, 527, 528, 530, 533, 544, 547, 549, 550, 551, 552, 553, 558, 560, 561, 562, 569, 572, 573, 581, 585, 586, 588, 589, 590, 591, 592, 598, 599, 602, 603, 605, 606, 608, 610, 613, 617, 619, 620, 624, 627, 628, 629, 632, 633, 634, 635, 636, 637, 650, 651, 652, 653, 654, 655, 656, 657, 659, 662, 665, 666], "system_error": 655, "system_vgpr_workitem_id_undefin": 447, "system_vgpr_workitem_id_x": 447, "system_vgpr_workitem_id_x_i": 447, "system_vgpr_workitem_id_x_y_z": 447, "systemat": 606, "systemz": [464, 529, 559, 565, 594], "sysv": [494, 502, 511], "sz": 534, "t": [442, 447, 448, 449, 450, 451, 452, 453, 456, 457, 459, 462, 463, 464, 465, 468, 470, 472, 473, 474, 476, 482, 493, 494, 496, 497, 498, 501, 502, 504, 505, 506, 509, 510, 512, 514, 517, 518, 519, 521, 523, 525, 526, 528, 529, 531, 532, 534, 535, 536, 537, 538, 539, 540, 541, 544, 547, 548, 549, 550, 551, 552, 553, 554, 555, 559, 563, 564, 565, 570, 571, 572, 575, 576, 579, 584, 586, 587, 588, 589, 591, 598, 599, 601, 603, 605, 607, 608, 609, 610, 613, 614, 615, 616, 617, 620, 621, 623, 625, 626, 627, 628, 629, 630, 631, 633, 636, 637, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666], "t1": [464, 559, 571, 621, 629], "t1item": 571, "t2": [464, 468, 559, 571, 572, 621, 629], "t2item": 571, "t3": [464, 559], "t4": 559, "t5": 559, "ta": 445, "tab": [467, 468, 481], "tabl": [52, 139, 237, 382, 442, 444, 445, 446, 448, 450, 453, 454, 461, 462, 470, 471, 476, 478, 479, 486, 489, 493, 495, 496, 497, 498, 500, 501, 505, 506, 508, 509, 513, 529, 530, 534, 543, 552, 556, 559, 561, 562, 564, 571, 573, 575, 577, 582, 584, 585, 587, 589, 598, 606, 610, 613, 617, 620, 625, 626, 630, 631, 633, 649, 650, 651, 652, 653, 654, 655, 656, 657, 660, 661, 662, 663, 664, 665, 666], "tabledef": 487, "tablegen": [462, 508, 520, 529, 536, 541, 550, 551, 556, 558, 594, 624, 626], "tablegen_json_vers": 613, "tablet": 568, "tabsiz": 481, "tackl": [522, 651, 654, 662, 665], "tag": [11, 92, 180, 277, 310, 337, 424, 443, 444, 454, 467, 517, 518, 526, 529, 559, 567, 588, 589, 591, 597, 610, 613], "tag0": [443, 559], "tag1": [443, 559], "tag2": 559, "tag3": 559, "tag_apple_properti": 605, "tag_base_typ": 605, "tag_memb": 605, "tag_offset": 559, "tag_pointer_typ": 605, "tag_structure_typ": 605, "tahiti": 447, "tail": [454, 468, 513, 526, 554, 559, 571, 572, 605, 615, 616, 630, 657, 666], "tail_exit": 630, "tailcal": [464, 606], "tailcalle": 464, "tailcallopt": [464, 559], "tailcc": [454, 464, 559], "tailor": [497, 547], "take": [442, 447, 449, 450, 451, 453, 454, 456, 458, 459, 460, 461, 463, 464, 465, 466, 467, 468, 470, 472, 473, 474, 478, 482, 485, 488, 490, 491, 493, 496, 497, 498, 507, 509, 510, 512, 513, 517, 518, 519, 520, 521, 525, 526, 527, 529, 531, 532, 534, 538, 548, 552, 554, 555, 556, 557, 559, 561, 562, 563, 564, 566, 568, 571, 572, 573, 587, 589, 591, 592, 596, 598, 599, 600, 601, 605, 606, 607, 608, 610, 613, 615, 616, 619, 623, 626, 627, 628, 630, 631, 633, 634, 635, 636, 637, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 668], "takecallback": 589, "takeerror": [573, 589, 633, 634, 635, 636, 637], "taken": [447, 450, 456, 460, 464, 487, 509, 513, 519, 524, 538, 545, 559, 563, 565, 570, 571, 573, 587, 589, 591, 592, 596, 599, 603, 605, 606, 610, 611, 617, 623, 626, 657, 666], "talk": [467, 510, 520, 533, 539, 559, 569, 589, 601, 627, 649, 650, 651, 652, 654, 657, 658, 659, 660, 661, 662, 663, 665, 666], "talli": 620, "tape": 529, "tar": [529, 531, 550, 599], "tarbal": [529, 550, 551], "target": [47, 91, 137, 179, 233, 276, 378, 423, 442, 445, 446, 449, 451, 452, 453, 454, 460, 461, 462, 463, 466, 467, 471, 472, 473, 480, 483, 487, 493, 495, 496, 498, 511, 513, 518, 520, 522, 524, 525, 526, 529, 531, 533, 534, 536, 538, 539, 541, 543, 548, 550, 551, 553, 554, 555, 556, 558, 564, 567, 569, 571, 573, 574, 576, 592, 595, 602, 605, 606, 608, 610, 613, 617, 619, 620, 621, 623, 624, 625, 627, 632, 633, 634, 635, 636, 637, 651, 652, 653, 654, 656, 658, 662, 663, 664, 665], "target_compile_definit": 463, "target_data": [662, 663, 664, 665], "target_link_librari": 462, "targetasminfo": [526, 626], "targetcallingconv": 626, "targetdescript": 626, "targetfeatur": 447, "targetframeinfo": 626, "targetframelow": 519, "targetfunc": 589, "targetgroup": 558, "targetinfo": [517, 626], "targetinstrformat": 626, "targetinstrinfo": 594, "targetjitinfo": 626, "targetlibraryinfo": [559, 594, 598], "targetlow": [458, 519, 520, 538, 594, 626, 629], "targetloweringbas": 448, "targetloweringobjectfil": 464, "targetloweringopt": 629, "targetmachin": [526, 564, 572, 594, 626, 627, 633, 635, 636, 637, 651, 652, 653, 654, 655], "targetnam": 565, "targetopt": [464, 655], "targetpassconfig": 540, "targetregisterclass": [464, 626], "targetregisterdesc": [464, 626], "targetregisterinfo": 594, "targetregistri": [464, 626, 655], "targets_to_build": 550, "targetselect": [637, 651, 652, 653, 654, 655, 656], "targetselectiondag": [464, 520, 626], "targetsubtarget": 626, "targettransforminfo": 559, "targettripl": 655, "tarjan": 627, "task": [467, 468, 513, 519, 520, 539, 548, 559, 571, 592, 605, 607, 610, 611], "task_begin": 468, "task_end": 468, "taught": 464, "tb": 626, "tba": 447, "tba_hi": [46, 446], "tba_lo": [46, 446], "tbaa": [524, 560, 570], "tbb": 626, "tbcc": 626, "tbd": [443, 445, 447, 494, 573], "tbepler": 593, "tblgen": [462, 464, 471, 520, 548, 550, 613, 615, 617, 626], "tblgensubtarget": 626, "tbr_jtr": 565, "tcb": 604, "tcp": 637, "tcpchannel": 637, "td": [448, 464, 474, 508, 520, 556, 565, 572, 613, 615, 616, 617, 626], "tdm": 546, "tdrr": 474, "tdtag": 613, "te": 559, "teach": [520, 633, 650, 658, 659, 661], "team": [510, 517, 551, 590, 591, 596], "tear": 519, "technic": [463, 465, 466, 483, 517, 528, 561, 591, 603, 629], "techniqu": [442, 450, 458, 464, 526, 539, 559, 571, 589, 600, 625, 626, 627, 628, 649, 651, 652, 653, 654, 658, 659, 660, 662, 663, 664, 665], "technolog": 516, "technologi": [562, 657, 666], "tediou": [468, 631], "tee": 458, "tell": [450, 458, 462, 464, 466, 467, 469, 509, 514, 517, 520, 526, 529, 532, 549, 559, 562, 571, 573, 586, 589, 590, 591, 605, 615, 620, 621, 649, 650, 654, 656, 657, 660, 661, 665, 666], "temp": 553, "templat": [450, 467, 481, 509, 510, 528, 552, 571, 587, 603, 611, 613, 616, 617, 626, 627, 631, 637, 650], "templatearglist": 616, "templateparam": 559, "tempor": [460, 559], "temporari": [446, 464, 467, 472, 487, 521, 522, 538, 545, 559, 560, 561, 565, 587, 589, 591, 601, 606, 620, 621, 631], "temporarili": [442, 447, 458, 468, 603, 616], "tempt": [467, 529, 611], "ten": [527, 581], "tend": [484, 487, 493, 517, 523, 527, 529, 539, 558, 573, 589, 594, 599, 605], "tension": [654, 665], "tensorflow": 561, "tent": [447, 559, 603], "term": [442, 447, 450, 451, 453, 464, 465, 466, 467, 493, 517, 519, 522, 526, 536, 545, 559, 560, 565, 570, 571, 573, 587, 588, 596, 605, 608, 610, 611, 615, 616, 621, 624, 634], "termin": [442, 447, 454, 456, 458, 464, 467, 472, 476, 477, 484, 485, 488, 490, 497, 504, 507, 509, 519, 521, 524, 545, 571, 572, 576, 577, 582, 587, 589, 596, 600, 602, 605, 611, 615, 621, 626, 627, 652, 663], "terminologi": [456, 463, 538, 559, 587, 594, 597, 624, 656], "ternari": 464, "terribli": 449, "territori": 529, "terror": 449, "tessel": 447, "test": [442, 447, 449, 450, 458, 460, 461, 464, 466, 468, 471, 473, 479, 487, 488, 493, 497, 498, 502, 503, 504, 506, 508, 509, 510, 512, 513, 514, 519, 520, 522, 525, 528, 531, 538, 544, 545, 547, 548, 550, 552, 553, 558, 563, 571, 574, 587, 588, 589, 590, 591, 592, 594, 602, 603, 605, 606, 610, 613, 624, 627, 631, 637, 651, 652, 654, 655, 662, 663, 665], "test1": [566, 607, 610, 621], "test2": [502, 504], "test5": 468, "test_arg": 459, "test_argu": 459, "test_blockaddress": 534, "test_devic": 510, "test_exec_root": 472, "test_format": 472, "test_fuzz": 561, "test_hd": 510, "test_host": 510, "test_nam": 459, "test_source_root": 472, "test_suite_benchmarking_onli": 619, "test_suite_collect_stat": 619, "test_suite_remote_host": 619, "test_suite_run_benchmark": 619, "test_suite_run_typ": 619, "test_suite_run_und": 619, "test_suite_spec2000_root": 619, "test_suite_spec2006_root": 619, "test_suite_spec2017_root": 619, "test_suite_subdir": 619, "test_suite_use_perf": 619, "testabl": [467, 539, 588], "testament": [658, 659], "testcas": [468, 469, 517, 559, 589, 650, 661], "testcase_dir": 561, "testcleanup": 559, "tester": [471, 517, 528, 551, 620], "testfnptr": 559, "testfunc": [651, 662], "testingconfig": 472, "testl": 606, "testq": 606, "testresult": 528, "testrunn": 472, "testsuit": [468, 472, 592], "tex": 620, "text": [442, 447, 462, 464, 465, 466, 468, 476, 481, 483, 486, 494, 496, 498, 502, 504, 517, 520, 521, 525, 561, 566, 567, 588, 589, 601, 605, 606, 608, 616, 619, 620, 621, 626, 628, 631, 635, 648, 657, 659, 666, 668], "textfileread": 467, "textual": [442, 447, 464, 470, 472, 473, 481, 517, 522, 525, 559, 560, 567, 570, 575, 613, 615, 617, 621, 629, 651, 662], "textur": 445, "tfe": [24, 25, 26, 27, 28, 34, 35, 36, 37, 38, 41, 42, 43, 121, 122, 123, 124, 125, 127, 128, 129, 130, 133, 134, 205, 206, 207, 212, 213, 216, 217, 218, 219, 220, 221, 222, 223, 226, 227, 228, 322, 354, 355, 356, 357, 358, 364, 365, 366, 367, 368, 371, 372, 373, 447], "tgid_size_en": 447, "tgid_x_en": 447, "tgid_y_en": 447, "tgid_z_en": 447, "tgt": [0, 2, 3, 4, 508], "th": [442, 447, 453, 478, 519, 532, 559, 571, 579, 626, 631, 648, 659], "than": [442, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 458, 460, 462, 464, 466, 467, 468, 470, 472, 473, 476, 478, 481, 483, 487, 493, 494, 497, 498, 501, 504, 506, 509, 510, 513, 514, 516, 517, 518, 519, 520, 522, 524, 525, 526, 528, 529, 534, 538, 539, 543, 545, 546, 547, 551, 553, 554, 555, 557, 558, 559, 561, 562, 563, 566, 567, 568, 570, 571, 573, 575, 577, 579, 581, 582, 584, 587, 588, 589, 590, 591, 592, 593, 596, 598, 599, 601, 603, 604, 605, 606, 608, 610, 613, 615, 616, 621, 622, 626, 627, 630, 631, 633, 634, 635, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666], "thank": [512, 553, 602], "the_execution_engin": [662, 663, 664, 665], "the_fpm": [662, 663, 664, 665], "the_funct": [661, 662, 663, 664, 665], "the_modul": [661, 662, 663, 664, 665], "theadsafemodul": 573, "thecontext": [650, 651, 652, 653, 654, 655, 656], "thecu": 656, "thedoc": 631, "thedoclist": 631, "theexecutionengin": 656, "thefpm": [651, 652, 653, 654], "thefunct": [650, 651, 652, 653, 654, 655, 656], "thei": [442, 443, 444, 445, 446, 447, 450, 451, 453, 454, 457, 458, 459, 462, 463, 464, 465, 466, 467, 468, 469, 472, 474, 476, 478, 483, 484, 493, 494, 495, 498, 505, 506, 507, 509, 510, 513, 514, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 533, 536, 538, 539, 545, 546, 547, 551, 552, 554, 556, 557, 558, 559, 560, 561, 563, 565, 567, 570, 571, 573, 575, 576, 584, 587, 588, 589, 590, 591, 592, 593, 594, 596, 597, 598, 599, 601, 603, 605, 606, 608, 609, 610, 611, 613, 615, 616, 617, 619, 620, 621, 622, 623, 625, 626, 627, 629, 630, 631, 633, 634, 636, 649, 650, 651, 652, 654, 657, 660, 661, 662, 663, 665, 666], "theier": 587, "thejit": [651, 652, 653, 654, 656], "them": [442, 447, 450, 451, 453, 454, 458, 459, 461, 462, 463, 464, 465, 467, 468, 469, 472, 476, 481, 486, 489, 490, 493, 495, 497, 498, 500, 501, 504, 505, 509, 510, 512, 514, 516, 517, 518, 519, 522, 524, 525, 526, 527, 529, 531, 533, 535, 536, 538, 539, 541, 545, 548, 550, 551, 552, 555, 556, 558, 559, 561, 562, 563, 565, 567, 568, 570, 571, 572, 573, 584, 586, 587, 588, 589, 590, 591, 594, 596, 598, 599, 601, 604, 605, 606, 607, 608, 610, 611, 613, 615, 619, 620, 621, 622, 626, 627, 628, 629, 630, 631, 633, 634, 635, 637, 648, 649, 650, 651, 652, 653, 654, 656, 657, 659, 660, 661, 662, 663, 664, 665, 666], "theme": [614, 617, 633], "themodul": [650, 651, 652, 653, 654, 655, 656], "themself": 517, "themselv": [451, 454, 464, 472, 509, 517, 525, 558, 559, 571, 589, 591, 603, 605, 606, 615, 617, 622, 629, 630, 649, 660], "then1": 606, "then2": 606, "then_": [663, 664, 665], "then_bb": [663, 664, 665], "then_val": [663, 664, 665], "thenbb": [652, 653, 654, 655, 656, 663], "thenv": [652, 653, 654, 655, 656], "theoret": [493, 589, 611], "theori": [549, 571, 577, 631, 666], "thereaft": 608, "therebi": [509, 559, 608], "therefor": [442, 447, 451, 453, 464, 493, 509, 510, 513, 517, 519, 527, 544, 559, 567, 568, 572, 574, 587, 589, 594, 596, 603, 605, 606, 608, 622, 627, 631], "thereof": 465, "thesi": 596, "thesimplifiedandinstruct": 554, "thetargetmachin": 655, "thetripl": 594, "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 14, 17, 21, 38, 39, 40, 46, 47, 48, 49, 50, 51, 52, 56, 58, 59, 63, 82, 92, 94, 95, 96, 109, 112, 130, 131, 132, 136, 137, 138, 139, 142, 144, 167, 180, 195, 196, 208, 210, 211, 215, 219, 221, 222, 223, 224, 225, 226, 228, 231, 232, 233, 234, 235, 236, 237, 241, 243, 244, 266, 277, 292, 293, 294, 298, 299, 303, 304, 305, 306, 310, 313, 323, 324, 325, 326, 327, 329, 330, 337, 338, 344, 351, 368, 369, 370, 376, 377, 378, 379, 380, 381, 382, 386, 388, 389, 393, 413, 424, 426, 427, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 490, 491, 493, 494, 495, 497, 498, 500, 501, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 523, 525, 526, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 562, 563, 564, 565, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 579, 580, 581, 582, 584, 585, 586, 587, 588, 589, 590, 592, 593, 594, 595, 596, 597, 599, 600, 601, 602, 603, 604, 605, 606, 608, 609, 610, 611, 613, 615, 616, 617, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 633, 634, 635, 636, 637, 648, 649, 650, 651, 652, 653, 655, 657, 658, 659, 660, 661, 662, 663, 664, 666, 667], "thin": [460, 462, 476, 481, 489, 491, 559, 589], "thing": [447, 450, 453, 454, 458, 460, 463, 464, 465, 467, 468, 472, 509, 510, 514, 517, 519, 525, 527, 529, 531, 536, 539, 548, 550, 551, 553, 558, 559, 561, 563, 566, 567, 570, 571, 585, 586, 587, 589, 590, 591, 602, 603, 605, 606, 611, 613, 615, 620, 621, 627, 629, 631, 633, 634, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666], "think": [442, 450, 457, 462, 464, 467, 514, 517, 520, 526, 527, 533, 552, 556, 559, 560, 570, 572, 576, 588, 589, 591, 592, 606, 611, 615, 652, 655, 657, 659, 663, 666], "thinlto": [456, 598, 606, 609], "third": [442, 449, 454, 456, 464, 467, 493, 497, 506, 509, 513, 514, 519, 521, 526, 527, 529, 533, 551, 559, 565, 571, 574, 589, 590, 598, 603, 605, 606, 608, 610, 620, 626, 627, 630, 631, 650, 657, 661, 666], "thischar": [648, 649, 650, 651, 652, 653, 654, 655, 656], "thoma": 606, "thoroughli": [652, 663], "those": [442, 445, 447, 450, 451, 458, 460, 462, 463, 464, 465, 466, 467, 468, 472, 475, 476, 478, 481, 484, 493, 494, 495, 497, 498, 509, 514, 516, 517, 519, 525, 526, 527, 528, 529, 530, 532, 535, 537, 538, 547, 549, 550, 552, 558, 559, 560, 561, 563, 570, 571, 573, 585, 587, 589, 591, 592, 595, 601, 602, 603, 605, 606, 608, 610, 611, 621, 623, 624, 626, 627, 628, 631, 632, 654, 655, 656, 665], "thost": 531, "though": [442, 451, 455, 464, 468, 483, 487, 509, 510, 517, 519, 520, 521, 524, 526, 527, 533, 538, 548, 552, 554, 559, 562, 568, 570, 571, 575, 587, 589, 591, 605, 606, 615, 620, 621, 627, 633, 649, 650, 652, 654, 656, 660, 661, 662, 665], "thought": [464, 533, 559, 570, 582, 594, 610, 616], "thousand": [561, 581, 587], "thread": [442, 445, 446, 450, 451, 452, 454, 462, 464, 468, 470, 481, 498, 512, 513, 515, 517, 518, 519, 526, 545, 554, 560, 561, 572, 573, 591, 593, 594, 602, 604, 606, 610, 619, 628, 629, 630, 633, 634], "thread_id": [468, 630], "thread_loc": [464, 559, 610], "thread_siblings_list": 452, "threadbuff": 630, "threadgroup_size_in_wavefront": 447, "threadid": 572, "threadidx": 572, "threadloc": [454, 559], "threadlocalquarantinesizekb": 602, "threadpool": 573, "threadsaf": 526, "threadsafecontext": [633, 634], "threadsafemodul": [633, 634], "threadsanit": 559, "threat": [465, 601, 603], "threaten": 465, "three": [442, 445, 449, 454, 458, 463, 464, 468, 469, 493, 498, 509, 513, 514, 516, 519, 523, 527, 529, 533, 538, 543, 559, 565, 570, 571, 574, 575, 587, 589, 594, 596, 599, 600, 603, 606, 610, 613, 621, 626, 627, 628, 633, 649, 652, 660], "threshold": [481, 559, 587, 593, 600, 628], "throttl": 596, "through": [442, 447, 450, 451, 454, 455, 458, 459, 462, 463, 464, 466, 473, 476, 493, 509, 510, 511, 512, 513, 516, 517, 519, 522, 523, 524, 525, 526, 527, 529, 532, 536, 538, 545, 546, 548, 551, 552, 555, 557, 559, 561, 562, 563, 564, 567, 568, 569, 571, 573, 574, 585, 587, 588, 589, 591, 594, 595, 596, 598, 600, 602, 603, 605, 606, 608, 609, 610, 611, 613, 623, 625, 626, 627, 628, 631, 633, 634, 635, 636, 649, 651, 652, 653, 654, 655, 656, 658, 659, 660, 662, 663, 664, 665], "throughout": [445, 446, 453, 454, 463, 467, 468, 514, 517, 529, 559, 564, 581, 584, 589, 600, 605, 611, 630], "throughput": [487, 493, 524], "throw": [464, 510, 513, 524, 557, 559, 563, 573, 587, 589, 627, 635], "throwawai": 449, "throwinfo": 519, "thrown": [460, 519, 523, 559], "throwntyp": 559, "thu": [442, 450, 451, 454, 455, 458, 459, 464, 467, 468, 509, 513, 517, 519, 522, 524, 526, 545, 553, 554, 559, 561, 563, 569, 570, 571, 575, 577, 584, 587, 588, 589, 591, 605, 606, 610, 621, 622, 627, 649, 650, 651, 652, 653, 654, 655, 656, 660, 661, 662, 663, 664, 665], "thumb": [451, 464, 517, 549, 598, 611, 628], "thumb1": [511, 559], "thumb2": [464, 511, 555, 559, 598], "thunderbird": 517, "thunderx2t99model": 626, "thunderxt8xmodel": 626, "thunk": [464, 497, 559, 571, 587, 623], "thursdai": 568, "thusli": 580, "ti": [447, 464, 479, 518, 557, 559, 565, 573, 605, 610], "tian": 596, "tick": 630, "tid": 572, "tidbit": [450, 656, 658, 659, 665, 667], "tidi": [467, 594, 627], "tidig_cmp_cnt": 447, "tie": [513, 559], "tiebreak": 510, "tight": [524, 562], "tighten": 533, "tighter": 513, "tightli": [514, 559, 591, 649, 650, 651, 652, 653, 654, 655, 656, 660, 661, 662, 663, 664, 665], "tii": [464, 594], "tile": [61, 146, 246, 391, 596], "till": [515, 546], "tim": [542, 596], "timberwolfmc": 620, "time": [442, 446, 447, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 468, 470, 472, 473, 474, 476, 479, 481, 486, 487, 488, 493, 494, 495, 497, 498, 505, 506, 507, 509, 510, 511, 512, 513, 517, 518, 519, 520, 521, 524, 526, 528, 529, 531, 532, 534, 535, 538, 539, 543, 545, 546, 548, 549, 550, 551, 552, 557, 558, 559, 560, 561, 563, 564, 565, 566, 568, 569, 571, 572, 573, 574, 577, 581, 582, 585, 586, 587, 589, 590, 591, 593, 596, 598, 599, 602, 603, 605, 607, 608, 610, 613, 614, 615, 616, 617, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 633, 634, 635, 648, 650, 651, 652, 653, 654, 658, 659, 661, 662, 663, 664, 665], "timeit": 619, "timelin": [603, 628, 629], "timeout": [472, 561], "timeout_exitcod": 561, "timepassesisen": 509, "timer": [452, 559], "timescal": 630, "timestamp": [442, 470, 476, 495, 505, 582, 591, 630], "tini": [474, 552, 571], "tip": [458, 512, 517, 530, 591, 613, 627, 659], "tire": [467, 617], "tirefactori": 467, "titl": [457, 466, 517, 588], "tl": [454, 464, 519, 559, 610], "tli": 594, "tm": [572, 626, 635, 636, 637], "tma_hi": [46, 446], "tma_lo": [46, 446], "tmax": 446, "tmp": [462, 464, 468, 472, 487, 506, 526, 527, 545, 559, 589, 590, 621, 626, 651, 654, 662, 665], "tmp1": [467, 468, 527], "tmp2": [527, 654, 665], "tmp3": [468, 527], "tmp4": 527, "tmp5": 527, "tmp7": 468, "tmp9": 468, "tmpb": [654, 655, 656], "tmpf": 452, "tobia": 596, "toc": 464, "todai": [451, 467, 525, 527, 559, 585, 591, 594, 608, 610], "todefin": 613, "todo": [464, 517, 520, 535, 541, 550, 554, 587, 599, 613, 614, 627], "togeth": [38, 130, 223, 368, 442, 445, 447, 450, 453, 455, 458, 464, 468, 469, 472, 490, 491, 494, 498, 506, 507, 509, 513, 514, 517, 519, 526, 529, 533, 538, 539, 548, 554, 558, 559, 561, 568, 573, 577, 581, 587, 589, 591, 600, 605, 615, 621, 625, 627, 634, 648, 649, 650, 652, 653, 657, 659, 660, 661, 663, 664, 666], "toi": [510, 573, 629, 633, 634, 635, 636, 637, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 659, 660, 661, 662, 663, 664, 665, 666], "tojittargetaddress": 573, "tok": [513, 559, 656], "tok_binari": [653, 654, 655, 656], "tok_def": [648, 649, 650, 651, 652, 653, 654, 655, 656], "tok_els": [652, 653, 654, 655, 656], "tok_eof": [648, 649, 650, 651, 652, 653, 654, 655, 656], "tok_extern": [648, 649, 650, 651, 652, 653, 654, 655, 656], "tok_for": [652, 653, 654, 655, 656], "tok_identifi": [648, 649, 650, 651, 652, 653, 654, 655, 656], "tok_if": [652, 653, 654, 655, 656], "tok_in": [652, 653, 654, 655, 656], "tok_numb": [648, 649, 650, 651, 652, 653, 654, 655, 656], "tok_then": [652, 653, 654, 655, 656], "tok_unari": [653, 654, 655, 656], "tok_var": [654, 655, 656], "tokcodefrag": 616, "token": [464, 493, 513, 520, 538, 567, 577, 591, 610, 615, 616, 631, 648, 649, 650, 651, 652, 653, 654, 655, 656, 659, 660, 661, 662, 663, 664, 665], "token_prec": [660, 661, 662, 663, 664, 665], "tokidentifi": 616, "tokinteg": 616, "tokprec": [649, 650, 651, 652, 653, 654, 655, 656], "tokstr": 616, "tokvarnam": 616, "told": 517, "toler": [516, 526, 551, 559, 561, 598, 609], "tolmach": 526, "tolmach94": 526, "tom": [551, 631], "tombston": 579, "ton": [570, 659], "tonearest": 559, "tonearestawai": 559, "tonga": 447, "too": [449, 458, 464, 466, 467, 468, 509, 514, 517, 523, 529, 531, 538, 539, 544, 545, 547, 552, 559, 563, 570, 571, 589, 593, 596, 606, 611, 613, 615, 621, 627, 630, 631, 634, 649, 654, 656, 657, 660, 665, 666], "took": [661, 662, 663, 664, 665], "tool": [447, 449, 450, 454, 459, 460, 462, 463, 464, 467, 468, 470, 472, 474, 475, 478, 479, 480, 481, 482, 484, 486, 487, 488, 493, 497, 499, 500, 501, 502, 503, 504, 506, 509, 510, 511, 512, 514, 515, 516, 517, 521, 526, 528, 530, 532, 544, 545, 548, 549, 550, 551, 553, 558, 559, 560, 562, 569, 572, 574, 582, 584, 585, 586, 587, 588, 590, 591, 592, 594, 597, 599, 600, 602, 605, 609, 611, 617, 619, 621, 624, 626, 627, 649, 650, 651, 652, 659, 661, 662, 663], "tool_nam": 529, "toolchain": [460, 461, 462, 464, 467, 470, 531, 549, 575, 576, 577, 582, 585, 591, 592, 598, 603, 619], "toolkit": [510, 572, 589, 597], "toolnam": 590, "toolset": [462, 531, 628], "toosl": 629, "top": [442, 447, 450, 451, 454, 462, 463, 464, 467, 468, 472, 474, 479, 498, 517, 518, 519, 525, 527, 529, 538, 541, 544, 557, 558, 559, 560, 561, 563, 570, 571, 587, 588, 589, 590, 591, 600, 605, 613, 619, 620, 623, 627, 629, 631, 633, 634, 635, 637, 649, 650, 651, 652, 653, 654, 655, 656, 657, 660, 661, 662, 663, 664, 665, 666], "topic": [517, 528, 566, 568, 607, 657, 658, 659, 666], "toplevel": [532, 660, 661, 662, 663, 664, 665], "toplevelexpr": [649, 650, 651, 652, 653, 654, 655, 656, 660, 661, 662, 663, 664, 665], "topmost": 506, "topn": 498, "topolog": [468, 584], "topologi": 452, "torec": 589, "torerr": 589, "toret": 605, "toreturn": 630, "tos": 632, "toshio": 464, "tot": 610, "total": [447, 451, 454, 478, 492, 493, 502, 559, 561, 571, 577, 581, 584, 587, 589, 598, 600, 602, 604, 605, 606, 620, 627, 629, 650], "totalview": 442, "touch": [452, 512, 545, 552, 554, 559, 587, 589, 591, 601, 605, 606, 627], "tough": [649, 660], "tour": [649, 660], "toward": [447, 455, 459, 460, 462, 517, 525, 528, 559, 589, 595, 598, 603, 606], "towardzero": 559, "town": 528, "tp": 573, "tpi": [497, 575, 576, 582, 585], "tpistreamhead": 584, "tpistreamvers": 584, "tpoff": 610, "tr1": 589, "trac": 546, "trace": [481, 509, 545, 559, 560, 605, 606, 610, 627], "trace_ev": 629, "tracer": 630, "tracevalu": 587, "track": [442, 447, 450, 457, 458, 464, 467, 469, 472, 493, 517, 518, 522, 524, 525, 526, 529, 533, 539, 553, 559, 560, 561, 565, 570, 571, 573, 574, 587, 589, 591, 603, 605, 606, 608, 609, 610, 617, 627, 650, 653, 654, 656, 661, 664, 665], "tracker": [457, 465, 466, 512, 517, 525, 588, 591, 603], "tracksregl": 565, "tradbigmip": 495, "trade": [458, 460, 529, 570, 589, 606, 634], "tradeoff": [451, 467, 526, 559, 651, 662], "tradit": [442, 449, 464, 476, 494, 545, 587, 589, 605, 633, 648, 659], "tradition": [450, 464, 573], "tradlittlemip": 495, "traffic": [568, 589, 591, 654, 665], "tragic": 591, "trail": [445, 463, 467, 468, 472, 495, 509, 514, 527, 534, 559, 589, 631], "train": [449, 498, 619], "trait": [589, 631], "tramp": 559, "tramp1": 559, "transcendent": 510, "transcrib": [650, 661], "transcript": [651, 662], "transfer": [453, 510, 513, 519, 557, 559, 563, 565, 604, 606, 619, 651, 652, 653, 654, 655, 656], "transform": [445, 451, 458, 462, 464, 467, 468, 493, 507, 516, 520, 522, 523, 524, 526, 529, 536, 537, 538, 548, 556, 559, 563, 571, 574, 589, 590, 596, 606, 608, 610, 613, 617, 623, 624, 626, 627, 632, 634, 635, 636, 637, 650, 651, 652, 653, 654, 656, 661, 662, 665], "transformedtsm": 634, "transformfunct": 634, "transformlay": 634, "transformutil": 558, "transient": [442, 517, 545], "transit": [447, 464, 493, 517, 539, 556, 558, 570, 571, 591, 595, 597, 605, 627, 633, 651, 662], "translat": [450, 451, 464, 467, 477, 508, 509, 513, 514, 521, 522, 524, 525, 527, 529, 533, 539, 543, 559, 563, 573, 577, 584, 587, 589, 592, 593, 595, 596, 605, 606, 613, 623, 626, 631, 656, 657, 666], "transmit": 559, "transpar": [467, 509, 520, 527, 554, 562, 589], "trap": [46, 117, 136, 140, 141, 150, 151, 152, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 201, 231, 238, 239, 249, 250, 253, 254, 255, 257, 258, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 376, 461, 473, 513, 524, 527, 554, 598], "trap_pres": 447, "travers": [464, 472, 521, 526, 536, 541, 552, 558, 571, 587, 596, 627], "trc": 464, "tre": 587, "treat": [47, 137, 233, 378, 442, 447, 451, 453, 454, 462, 464, 468, 470, 476, 483, 486, 493, 495, 505, 509, 519, 521, 525, 527, 534, 555, 556, 559, 561, 562, 565, 571, 573, 577, 598, 603, 605, 608, 610, 621, 626, 629, 650, 657, 661, 666], "treatment": [447, 526, 589, 626], "tree": [447, 449, 460, 462, 464, 467, 472, 479, 497, 517, 519, 522, 524, 525, 526, 527, 528, 529, 531, 532, 534, 550, 551, 552, 558, 559, 560, 563, 571, 572, 589, 591, 596, 598, 602, 605, 620, 621, 627, 629, 648, 650, 651, 652, 653, 654, 655, 656, 659, 661, 662, 663, 664, 665], "trevi\u00f1o": 459, "tri": [458, 459, 462, 464, 497, 525, 559, 561, 566, 571, 587, 594, 600, 607, 622, 626, 627, 651, 659], "triag": [464, 528, 554], "trick": [512, 517, 530, 550, 552, 559, 589, 591, 606, 613, 654, 659, 665], "tricki": [451, 510, 526, 619, 627], "trickrevnum": 591, "trie": 496, "trig": 626, "trigger": [446, 447, 450, 458, 462, 466, 467, 488, 513, 526, 545, 553, 559, 560, 561, 564, 565, 573, 589, 608, 620, 621, 631, 633, 635, 651], "trim": 591, "triniti": 447, "trip": [453, 467, 559, 587, 596, 598, 606, 622], "tripl": [454, 473, 474, 493, 496, 524, 525, 550, 564, 565, 594, 598, 605, 621, 626, 637, 655, 656], "triplet": [509, 559], "trivial": [447, 450, 451, 453, 463, 464, 466, 467, 509, 520, 522, 527, 536, 538, 545, 554, 557, 559, 587, 588, 589, 591, 592, 603, 605, 606, 611, 626, 627, 630, 649, 654, 657, 658, 659, 660, 665, 666], "troubl": [509, 525, 529, 531], "true": [447, 450, 451, 456, 463, 464, 467, 469, 474, 481, 487, 493, 498, 506, 509, 513, 526, 527, 533, 534, 538, 544, 545, 547, 550, 552, 554, 556, 559, 561, 563, 565, 571, 572, 577, 585, 587, 589, 591, 602, 603, 605, 613, 616, 617, 621, 622, 623, 626, 627, 628, 629, 631, 635, 636, 637, 649, 650, 651, 652, 653, 654, 655, 656, 661, 662, 663, 664, 665], "true_branch_weight": 456, "truebr": 605, "truedest": 559, "truli": [569, 589, 606, 635], "trunc": [554, 625], "truncat": [23, 58, 120, 204, 243, 353, 388, 442, 446, 476, 554, 559, 615, 626], "truncinst": 587, "trunk": [461, 464, 518, 528, 529, 532, 551, 561, 588, 591, 605, 619], "trust": [467, 517, 603, 605, 635], "truth": [517, 559, 570, 652, 663], "try": [450, 451, 452, 453, 457, 458, 459, 462, 464, 465, 467, 469, 479, 486, 509, 510, 512, 517, 518, 524, 526, 528, 529, 531, 532, 545, 553, 559, 561, 565, 566, 568, 570, 571, 573, 584, 587, 589, 591, 592, 601, 602, 603, 606, 611, 627, 628, 631, 634, 635, 636, 637, 651, 653, 654, 655, 657, 660, 661, 662, 663, 664, 665, 666], "tsc": [629, 630], "tsc701": 626, "tsc_delta": 630, "tsctx": 573, "tsflag": 626, "tslp": 596, "tsm": [573, 577, 634], "tsm1": 573, "tsm2": 573, "tstri": 565, "tsvg": 629, "tsxldtrk": 598, "tt": 556, "tti": [594, 595], "ttmp": [9, 10, 19, 20, 21, 31, 32, 33, 53, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 110, 111, 118, 145, 146, 147, 148, 149, 202, 245, 246, 247, 248, 251, 252, 295, 296, 300, 301, 307, 308, 309, 328, 331, 332, 333, 334, 335, 349, 350, 351, 361, 362, 363, 383, 384, 385, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422, 447], "ttmp0": 446, "ttmp4": 446, "ttmp5": 446, "ttmp6": 446, "ttmp7": 446, "tu": 486, "tunabl": [545, 592, 602], "tune": [464, 509, 524, 589, 598, 605, 606, 625, 654, 665], "tupl": [521, 538, 559, 591], "turbo": 452, "ture": [649, 651, 660, 662], "turk": 447, "turn": [442, 447, 451, 453, 458, 459, 462, 463, 464, 465, 468, 476, 509, 513, 517, 520, 529, 547, 548, 559, 562, 566, 570, 573, 586, 587, 596, 598, 601, 605, 610, 613, 614, 617, 626, 627, 633, 634, 635, 649, 650, 657, 660, 661, 666], "turner": 594, "turnercamelback": 594, "turnerlldb": 594, "tutori": [509, 510, 528, 543, 552, 561, 571, 573, 589, 632, 633, 634, 635, 636, 637, 648, 649, 650, 651, 652, 653, 654, 655, 656, 660, 661, 662, 663, 664, 665], "tval": 605, "tweak": [509, 510, 529, 532, 552, 586, 628, 633, 651], "twice": [449, 513, 531, 532, 534, 559, 563, 571, 589, 599, 616, 619, 627, 651, 662], "twiddl": [559, 651, 652, 653, 654, 662, 663, 664, 665], "twist": 633, "twitter": 568, "two": [442, 445, 446, 447, 449, 450, 451, 453, 454, 455, 456, 458, 459, 460, 461, 462, 463, 467, 468, 472, 474, 483, 484, 486, 487, 492, 493, 497, 498, 506, 509, 510, 513, 514, 516, 517, 518, 519, 521, 523, 524, 525, 526, 529, 533, 534, 538, 539, 541, 543, 545, 546, 548, 552, 553, 556, 557, 559, 560, 561, 563, 564, 565, 570, 571, 572, 573, 574, 577, 581, 584, 587, 588, 589, 590, 591, 594, 598, 600, 602, 603, 605, 606, 608, 609, 610, 611, 613, 615, 616, 617, 619, 620, 621, 623, 625, 626, 627, 629, 631, 633, 634, 635, 649, 651, 652, 653, 654, 657, 660, 661, 662, 663, 664, 665, 666], "twoaddressinstructionpass": 464, "twoargfp": 615, "txt": [449, 462, 467, 479, 482, 504, 506, 509, 512, 517, 529, 545, 551, 558, 566, 588, 591, 605, 607, 619, 621, 626, 627, 629, 633, 634, 635, 636, 637], "ty": [464, 467, 520, 559, 589, 615], "ty2": 559, "ty64": 554, "type": [52, 139, 237, 382, 443, 447, 450, 451, 453, 454, 456, 458, 459, 461, 462, 464, 469, 470, 473, 476, 478, 482, 483, 486, 488, 491, 493, 494, 495, 496, 501, 505, 509, 510, 513, 516, 517, 519, 521, 522, 525, 526, 529, 531, 535, 538, 539, 541, 543, 547, 550, 551, 552, 553, 554, 555, 557, 558, 560, 562, 564, 567, 570, 571, 572, 575, 579, 582, 585, 588, 590, 594, 596, 598, 600, 605, 606, 608, 610, 613, 617, 619, 620, 621, 624, 627, 628, 629, 630, 633, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 659, 660, 661, 662, 663, 664, 665, 666, 668], "type0": 538, "type1": 538, "type_info": 519, "type_nam": 447, "type_of": [661, 662, 663, 664, 665], "typecod": 520, "typedef": [467, 497, 521, 589, 631, 634, 637], "typedescriptor2": 519, "typeendbegin": 584, "typeflag": 605, "typeid": [520, 559, 571, 623], "typeid1": 623, "typeid2": 623, "typeid3": 623, "typeidref": 559, "typeindex": [576, 584], "typeindexbegin": 584, "typeindexend": 584, "typeless": 444, "typemap": 520, "typenam": [447, 559, 589, 637], "typeprint": 520, "typerecordbyt": 584, "types": 598, "typesaf": 559, "typeservermaps": 577, "typeset": 538, "typetestr": 559, "typic": [442, 450, 451, 462, 464, 467, 468, 476, 478, 481, 487, 490, 494, 502, 510, 516, 518, 519, 523, 525, 526, 527, 531, 533, 534, 535, 539, 546, 549, 551, 552, 558, 559, 560, 561, 562, 564, 565, 567, 573, 574, 582, 587, 588, 589, 590, 592, 600, 602, 605, 606, 608, 615, 619, 621, 626, 627, 630, 657, 666], "typo": [467, 468], "u": [442, 464, 465, 467, 468, 470, 476, 481, 486, 489, 493, 494, 495, 496, 500, 501, 505, 509, 512, 514, 516, 517, 529, 533, 535, 539, 545, 548, 553, 559, 570, 571, 572, 573, 585, 588, 589, 591, 592, 593, 598, 600, 602, 605, 623, 626, 627, 629, 633, 634, 635, 649, 650, 651, 653, 654, 655, 656, 658, 659, 660, 661, 662, 664, 665], "u1": 591, "u16": [0, 3, 4, 446], "u16x2": [0, 1, 2, 3, 4, 7, 8], "u2": [591, 600], "u3": [591, 600], "u32": [0, 1, 2, 3, 4, 7, 8, 443, 446, 464, 572, 600], "u4x8": [1, 7, 8], "u64": [0, 2, 3, 4, 446, 572], "u8x4": [0, 1, 2, 3, 4, 7, 8], "u999999": 588, "ualpha": 616, "ub": 559, "ubsan": [561, 602], "ubuntu": [517, 529, 547, 550], "ubyt": [442, 447], "uc": 447, "ud2": [461, 464], "ud2a": 464, "udiv": 533, "ueq": [559, 654, 665], "ueyama": 594, "uf": 596, "ug": 559, "ugli": [468, 522, 653, 664], "uglifi": [651, 662], "ugt": 559, "ui": [463, 559, 588], "uid": [476, 495, 505, 559], "uimm20": [54, 55, 239, 240, 384, 385], "uimm21": [54, 384], "uimm32": 141, "uimm8": 141, "uint": [473, 497], "uint128": 584, "uint128oct": 584, "uint16": [523, 581, 584, 608], "uint16_t": [556, 576, 577, 584, 585, 605, 626, 631], "uint16short": 584, "uint16x4_t": 453, "uint32": [523, 579, 584, 608], "uint32_max": [589, 605], "uint32_t": [559, 577, 580, 582, 584, 605, 631, 637], "uint32long": 584, "uint32x2_t": 453, "uint64": [523, 584, 608], "uint64_max": 455, "uint64_t": [455, 555, 559, 571, 585, 589, 598, 600, 631, 637], "uint64quad": 584, "uint8": [523, 608], "uint8_t": [561, 576, 580, 631, 637], "uint_64": 447, "uintptr_t": [606, 637], "uitofp": [650, 652, 654, 661, 663, 665], "uiuc": 517, "ul": 559, "uleb": 447, "uleb128": [442, 521], "ulimit": 561, "ulittle32_t": [581, 582], "ulp": 559, "ult": [559, 605, 652, 654, 661, 662, 663, 664, 665], "ultim": [467, 472, 517, 559, 570, 599, 605, 606, 651, 662], "ultrasparc": [529, 626], "ultrasparc3": 626, "um": [559, 591], "um1": 591, "um2": 591, "um3": 591, "um4": 591, "um5": 591, "um6": 591, "um7": 591, "um8": 591, "umbrella": [517, 591], "uml": 516, "umrella": 591, "un": [559, 625, 633], "unabbrev": 454, "unabbrevi": 454, "unabl": [465, 493, 524, 538, 559, 560, 574, 589, 606, 615, 660], "unabridg": [654, 665], "unaccept": 517, "unadorn": 559, "unaffect": 570, "unalign": [451, 524, 576], "unalloc": 569, "unambigu": 554, "unannot": 591, "unari": [616, 654, 655, 656, 657, 658, 659, 665, 666], "unaryexprast": [653, 654, 655, 656], "unassign": [446, 457], "unassignedbug": 457, "unattend": 458, "unavail": [451, 493, 554, 605, 626], "unawar": [510, 559], "unbias": 455, "unbound": [464, 493, 559, 626], "unbuild": 591, "uncach": 447, "uncaptur": 559, "uncategor": [482, 494, 500, 501, 502, 504, 509], "uncertain": 512, "uncertainti": [459, 466], "unchang": [442, 450, 559, 589, 591, 605, 610, 622, 636, 637], "uncharacter": 584, "uncheck": 589, "unclear": [442, 467, 468, 577, 582, 584, 654, 665], "unclutt": 611, "uncomfort": 465, "uncommon": [463, 519, 538, 559], "uncompil": 573, "uncompress": [462, 514, 529, 589], "uncondit": [442, 464, 481, 534, 559, 563, 587, 610, 626, 652, 663, 664, 665], "uncondition": [450, 464, 467, 521, 546, 554, 559, 635, 656], "unconnect": 527, "uncontroversi": 526, "unconvent": [657, 666], "unconvinc": 561, "uncoop": 526, "uncov": [462, 467, 561], "undecid": 591, "undeclar": [559, 650, 661], "undef": [451, 468, 513, 519, 535, 554, 557, 559, 565, 570, 589, 598, 605, 613], "undefin": [447, 451, 453, 457, 462, 467, 468, 494, 495, 497, 505, 513, 519, 521, 522, 524, 527, 534, 537, 553, 562, 570, 587, 589, 598, 602, 605, 613, 615, 616, 617, 622, 625, 626], "undefinedbehaviorsanit": 561, "undefinit": 559, "under": [447, 449, 452, 462, 464, 467, 469, 472, 493, 500, 501, 509, 513, 514, 517, 519, 522, 524, 528, 529, 544, 546, 551, 557, 558, 559, 561, 569, 572, 588, 591, 598, 603, 606, 610, 617, 621, 623, 626, 627, 633, 634, 635, 636, 637, 649, 657, 660, 666, 667], "underestim": 559, "underflow": [442, 446, 447, 468], "undergo": [466, 559, 587], "underli": [453, 462, 464, 467, 493, 509, 517, 526, 533, 534, 559, 573, 581, 582, 589, 606, 623, 656], "undermin": [467, 605], "underneath": [529, 590, 591, 621], "underscor": [467, 482, 565, 605], "understand": [450, 454, 457, 464, 465, 466, 467, 468, 472, 476, 493, 517, 519, 520, 526, 527, 549, 558, 559, 563, 566, 567, 571, 575, 576, 580, 585, 587, 588, 589, 592, 601, 602, 605, 606, 607, 610, 611, 614, 615, 616, 617, 627, 629, 630, 631, 635, 650, 654, 656, 658, 659, 665, 666], "understood": [454, 464, 466, 467, 577, 580, 666], "undesir": [559, 603], "undetect": 561, "undisturb": 467, "undo": 453, "undocu": [519, 577, 598], "unequ": [468, 559], "unexpect": [442, 459, 461, 463, 467, 517, 531, 571, 589, 602, 654, 665], "unexpectedli": 621, "unfamiliar": 607, "unflatten": 629, "unfold": 606, "unforeseen": 543, "unfortun": [510, 549, 557, 559, 571, 589, 591, 605, 606, 627, 651, 652, 657, 662, 663, 666], "unfriendli": 561, "unfus": 510, "unglamor": 517, "unguard": 559, "unhandl": [519, 589], "unhappi": 510, "unharden": 606, "unhid": 509, "uni": 572, "unic": 509, "unicod": 496, "unif": [442, 450], "unifi": [442, 454, 468, 524, 549, 559, 589, 591, 600, 666], "unifom": 447, "uniform": [467, 493, 559, 574, 589], "uniformli": [467, 493], "uniformretv": 559, "unimagin": 610, "unimpl": 627, "unimport": [599, 610], "unindex": 626, "uniniti": [442, 494, 526, 527, 559, 609, 615], "uninstru": 577, "unintend": 587, "unintent": 517, "uninterest": [517, 659], "unintrus": 559, "union": [442, 450, 464, 467, 493, 538, 563, 577, 605, 654, 665], "uniprocessor": 451, "uniqu": [447, 454, 464, 468, 470, 472, 494, 495, 513, 517, 519, 521, 546, 554, 555, 556, 558, 559, 562, 563, 571, 573, 574, 577, 582, 584, 589, 591, 605, 608, 610, 616, 617, 622, 625, 629, 650, 651, 661], "unique_ptr": [572, 573, 589, 633, 634, 635, 636, 637, 649, 650, 651, 652, 653, 654, 655, 656], "uniqueid": 582, "uniqueretv": 559, "unistd": 611, "unit": [46, 47, 136, 137, 231, 233, 376, 378, 453, 461, 462, 467, 469, 481, 486, 509, 512, 513, 514, 519, 521, 522, 527, 534, 539, 554, 559, 560, 561, 573, 574, 577, 585, 587, 589, 592, 600, 605, 606, 613, 615, 623, 625, 626, 627, 651], "unittest": [461, 462, 619, 621], "univers": [463, 471, 481, 496, 502, 506, 514, 516, 517, 559, 568, 589], "unix": [462, 467, 468, 476, 509, 522, 525, 529, 531, 559, 589, 611, 621], "unknown": [446, 447, 464, 487, 491, 493, 509, 518, 534, 537, 544, 549, 559, 577, 580, 581, 585, 589, 598, 606, 622, 631, 635, 648, 649, 650, 651, 652, 653, 654, 655, 656, 659, 660, 661, 662, 663, 664, 665], "unknownptr": 559, "unknownvalu": 559, "unless": [447, 449, 458, 462, 463, 464, 466, 467, 468, 470, 473, 481, 482, 486, 488, 490, 493, 495, 496, 509, 510, 513, 517, 519, 524, 526, 527, 551, 559, 561, 566, 570, 573, 585, 587, 589, 591, 594, 601, 603, 607, 608, 610, 616, 620, 621, 622, 626, 627, 652, 654, 663, 665], "unlik": [442, 451, 454, 463, 464, 466, 467, 504, 510, 519, 526, 529, 534, 544, 545, 547, 552, 559, 570, 573, 587, 589, 594, 605, 606, 608, 610, 616, 627, 635, 651, 654, 662, 665], "unlimit": 493, "unlink": [529, 589], "unload": [559, 627], "unlock": 573, "unmaintain": [517, 617], "unmanag": [559, 610], "unmangl": 483, "unmask": 559, "unmatch": 498, "unmitig": 606, "unmodel": 493, "unmodifi": [445, 559, 610, 634], "unnam": [463, 509, 559, 565, 587, 616], "unnamed_addr": [454, 521, 559], "unnecessari": [442, 461, 464, 524, 535, 554, 559, 565, 587, 589, 598, 606, 609, 610, 626, 635], "unnecessarili": [450, 466, 627], "unneed": [495, 505, 654, 665], "unnorm": [445, 559], "uno": 559, "unoffici": [527, 593], "unop": [446, 653, 654, 655, 656, 664, 665], "unoptim": [473, 529, 605], "unord": [447, 462, 467, 468, 566, 607, 626], "unordered_map": 467, "unordered_set": 589, "unorm": [0, 2, 3, 4], "unpack": [512, 530, 550], "unpars": [472, 649, 660], "unpatch": [551, 628], "unpeel": 447, "unpleas": 606, "unpoison": 559, "unpredict": 606, "unprofit": [587, 606, 622], "unprotect": [461, 606], "unprototyp": 559, "unqualifi": [464, 466, 605], "unreach": [459, 467, 488, 513, 514, 519, 523, 524, 526, 563, 571, 587, 651, 652, 653, 654, 656, 662, 663, 664, 665], "unread": [451, 467, 532, 591, 606], "unrecogn": [509, 616], "unrecogniz": 494, "unrecurs": [654, 655, 656, 665], "unreferenc": [463, 559], "unregist": 627, "unrel": [467, 495, 501, 512, 517, 551, 589, 605, 606, 626], "unreli": [450, 561], "unreloc": 610, "unreserv": 447, "unresolv": [472, 657, 666], "unrespons": 591, "unreview": 517, "unrol": [510, 596, 598], "unroll_and_jam": 622, "unsaf": [451, 473, 474, 559, 605, 608, 609, 622, 657, 666], "unsat": 559, "unseen": 454, "unset": [462, 463, 579, 615, 616, 656], "unsett": 627, "unshadow": [652, 653, 654, 655, 656, 663, 664, 665], "unsign": [53, 54, 55, 140, 141, 238, 239, 240, 328, 383, 384, 385, 442, 444, 445, 446, 447, 450, 454, 456, 464, 467, 473, 498, 509, 514, 526, 527, 533, 534, 559, 562, 565, 571, 572, 584, 589, 598, 605, 606, 613, 625, 626, 629, 630, 631, 650, 651, 652, 653, 654, 655, 656, 661], "unsignedcharact": 584, "unsimm": 464, "unsound": 610, "unspecifi": [442, 459, 464, 483, 495, 534, 559, 572, 610, 620, 630], "unstabl": [461, 487, 547, 559, 599], "unstructur": 630, "unsuccess": 573, "unsuit": [461, 517, 619], "unsupport": [447, 451, 464, 472, 531, 538, 539, 559, 561, 598, 599, 621, 626], "unsupportedfor": 538, "unsupportedif": 538, "unsur": [466, 601, 616], "unswitch": 563, "unswizzl": [442, 447], "untest": 599, "until": [442, 447, 453, 454, 458, 464, 466, 467, 469, 472, 493, 494, 509, 512, 513, 517, 519, 524, 529, 532, 533, 539, 555, 559, 561, 564, 570, 573, 575, 587, 588, 589, 591, 598, 599, 601, 603, 605, 606, 613, 615, 619, 621, 626, 627, 628, 633, 634, 635, 648, 649, 650, 651, 652, 653, 654, 655, 656, 659, 660, 661, 662, 663, 664, 665], "untrust": 603, "untrusted_data_from_cal": 606, "untrusted_offset_from_cal": 606, "untrusted_size_from_cal": 606, "untyp": 565, "unus": [52, 139, 215, 226, 228, 237, 382, 442, 445, 446, 447, 459, 464, 467, 488, 513, 558, 560, 572, 574, 576, 577, 581, 584, 589, 602, 605, 610, 622, 623, 630], "unused1": 577, "unused2": 577, "unused_pad": [445, 447], "unused_preserv": [445, 447], "unused_sext": 445, "unusu": [464, 467, 517, 525, 526, 539, 589, 604, 615, 657, 666], "unvectoriz": 625, "unveil": 659, "unvers": 622, "unvisit": 459, "unwelcom": 465, "unwieldi": 628, "unwind": [442, 447, 456, 462, 464, 496, 500, 501, 513, 519, 521, 524, 545, 557, 559, 560, 587, 626, 635], "unwindcursor": 519, "unwindregistersrestor": 519, "unwindregisterssav": 519, "unwis": 559, "unwound": [442, 559, 606], "unwrap": [573, 589, 633], "unzip": [529, 599], "uop": [487, 493], "up": [442, 449, 450, 453, 454, 455, 457, 459, 460, 462, 464, 465, 466, 467, 469, 472, 474, 486, 487, 493, 496, 509, 510, 511, 512, 513, 514, 517, 519, 521, 523, 524, 525, 526, 529, 530, 531, 536, 540, 544, 545, 546, 547, 549, 550, 551, 553, 558, 559, 560, 561, 565, 567, 570, 571, 572, 574, 575, 577, 582, 584, 585, 587, 589, 591, 597, 598, 599, 600, 601, 602, 603, 605, 606, 610, 613, 615, 617, 619, 620, 621, 622, 625, 626, 629, 633, 634, 635, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666], "upa": 559, "upcast": 552, "upcom": [517, 568], "updat": [442, 447, 453, 461, 464, 466, 468, 470, 476, 495, 505, 509, 512, 513, 519, 520, 526, 529, 531, 552, 559, 562, 563, 564, 569, 571, 573, 581, 584, 587, 588, 589, 594, 598, 601, 603, 605, 606, 608, 610, 622, 627, 628, 633, 634, 635, 636, 637, 649, 650, 651, 652, 653, 654, 655, 656, 657, 662, 663, 664, 665, 666], "updatepoint": [636, 637], "upenn": 452, "upgrad": [479, 517, 528, 529, 591, 596, 605, 625], "upheld": 610, "uphold": [559, 606], "upl": 559, "upload": [529, 551, 588, 591], "upon": [442, 476, 507, 517, 526, 559, 564, 573, 589, 590, 594, 603, 605, 626], "upper": [445, 467, 469, 494, 559, 589, 594, 626], "upper16": 521, "uppercas": 447, "upsid": 517, "upstream": [442, 512, 517, 518, 524, 529, 551, 591, 610], "upstream_branch": 591, "upward": [472, 559, 592, 605], "uq": 559, "urem": [464, 520], "urgent": 466, "uri_encoded_os_file_path": 447, "url": [566, 588, 591, 607], "us": [0, 1, 2, 3, 4, 5, 6, 7, 8, 17, 38, 39, 40, 49, 50, 51, 52, 54, 55, 56, 62, 63, 64, 82, 94, 95, 109, 115, 130, 131, 132, 138, 139, 142, 147, 167, 195, 199, 223, 224, 225, 234, 235, 236, 237, 241, 247, 266, 292, 294, 299, 304, 305, 306, 323, 325, 326, 327, 329, 332, 338, 347, 368, 369, 370, 379, 380, 381, 382, 384, 385, 386, 392, 393, 394, 413, 426, 427, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 454, 455, 456, 457, 459, 460, 461, 465, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 490, 494, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 507, 508, 509, 511, 512, 513, 514, 515, 516, 517, 518, 520, 521, 523, 528, 530, 532, 533, 534, 535, 536, 537, 538, 539, 541, 543, 546, 547, 551, 552, 553, 557, 558, 560, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 577, 579, 581, 582, 584, 585, 588, 590, 591, 592, 593, 594, 596, 597, 599, 600, 601, 602, 603, 604, 605, 608, 609, 610, 613, 614, 615, 616, 617, 619, 620, 621, 622, 624, 625, 626, 629, 630, 631, 633, 635, 637, 648, 649, 650, 651, 652, 653, 654, 655, 656, 658, 659, 660, 661, 662, 663, 664, 665, 667], "usabl": [464, 473, 509, 589, 595, 605, 626, 629], "usag": [447, 456, 464, 467, 468, 469, 482, 486, 487, 491, 493, 495, 496, 497, 506, 509, 513, 514, 529, 533, 535, 547, 558, 559, 565, 571, 572, 573, 575, 576, 577, 584, 587, 589, 597, 600, 609, 610, 613, 617, 619, 621, 627, 659], "usb": 547, "use_": 589, "use_back": 589, "use_begin": [467, 589], "use_bind": [662, 663, 664, 665], "use_camlp4": [660, 661, 662, 663, 664, 665], "use_count": 561, "use_empti": 589, "use_end": 589, "use_iter": 589, "use_llvm": [661, 662, 663, 664, 665], "use_llvm_analysi": [661, 662, 663, 664, 665], "use_llvm_executionengin": [662, 663, 664, 665], "use_llvm_scalar_opt": [662, 663, 664, 665], "use_llvm_target": [662, 663, 664, 665], "use_s": 589, "use_value_profil": 561, "usedlib": 590, "useless": [453, 548, 605, 652, 657, 663, 666], "uselistord": 559, "uselistorder_bb": 559, "usenamedoperandt": 626, "user": [442, 449, 450, 451, 455, 458, 459, 462, 463, 464, 465, 466, 467, 468, 469, 472, 478, 487, 493, 508, 509, 511, 512, 513, 514, 517, 519, 521, 526, 528, 529, 535, 538, 545, 546, 548, 549, 551, 552, 559, 560, 562, 563, 567, 568, 570, 571, 573, 585, 586, 588, 591, 592, 596, 597, 598, 600, 602, 603, 605, 606, 607, 609, 610, 613, 615, 617, 621, 622, 625, 626, 627, 630, 632, 633, 648, 649, 650, 651, 652, 655, 656, 657, 658, 659, 660, 661, 662, 663, 666, 667], "user_sgpr": 447, "user_sgpr_count": 447, "userdefinederror": 589, "usernam": [517, 591, 603], "userspac": 519, "usescustominsert": 617, "usesmetadata": 526, "usr": [462, 509, 510, 518, 529, 544, 545, 547, 549, 550, 572], "usual": [446, 450, 451, 454, 458, 462, 464, 467, 468, 478, 493, 494, 507, 509, 510, 513, 517, 520, 521, 526, 527, 529, 532, 533, 534, 538, 544, 549, 552, 559, 560, 561, 562, 565, 566, 571, 573, 577, 582, 584, 588, 589, 591, 602, 603, 604, 605, 607, 609, 615, 616, 619, 620, 621, 626, 627, 633, 656, 657, 666], "ut": 559, "utf": [442, 447, 521, 613], "util": [442, 449, 450, 462, 471, 474, 476, 478, 493, 494, 496, 498, 509, 517, 518, 526, 531, 543, 548, 551, 552, 558, 559, 563, 573, 588, 589, 598, 599, 603, 613, 617, 619, 624, 625, 626, 633, 635, 654, 655], "uuid": 486, "uuidcreat": 582, "uv": 559, "uval": 559, "uvari": 462, "uword": 447, "uwtabl": [454, 559, 605, 628], "v": [9, 10, 12, 13, 14, 15, 16, 17, 24, 25, 26, 27, 28, 29, 30, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 77, 78, 79, 80, 81, 82, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 112, 113, 114, 115, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 260, 261, 262, 263, 264, 265, 266, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 295, 296, 297, 300, 301, 302, 307, 308, 309, 311, 312, 313, 322, 323, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 354, 355, 356, 357, 358, 359, 360, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 407, 408, 409, 410, 411, 412, 413, 426, 427, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 445, 447, 449, 450, 451, 453, 458, 464, 467, 468, 470, 472, 476, 486, 490, 494, 495, 498, 500, 501, 505, 518, 531, 533, 536, 544, 552, 559, 561, 563, 571, 589, 591, 594, 595, 600, 602, 606, 607, 610, 611, 613, 615, 619, 621, 626, 649, 650, 651, 652, 653, 654, 655, 656, 664, 665], "v0": [18, 116, 200, 348, 442, 445, 446, 447, 453, 559], "v1": [18, 116, 200, 348, 442, 446, 447, 450, 467, 559, 597, 606, 608, 616, 621], "v10": 510, "v110": 577, "v128": [559, 572], "v16": 572, "v16f32": 559, "v16i1": 559, "v16i32": 559, "v16p0f32": 559, "v16p1f32": 559, "v1f64": 533, "v1size": 450, "v2": [446, 450, 467, 511, 522, 532, 577, 589, 593, 616, 621, 633, 634, 635, 636, 637], "v200": 447, "v252": 446, "v253": 446, "v254": 446, "v255": [445, 446], "v256i64": 559, "v2f64": 559, "v2i32": 559, "v2i64": 559, "v2p1f64": 559, "v2s32": 538, "v2s64": 538, "v2size": 450, "v3": [82, 167, 266, 413, 621], "v31": 559, "v32": [446, 572], "v32i16": 598, "v36": 445, "v3i32": 533, "v4": [445, 446, 447], "v40": 584, "v41": 584, "v4f32": [533, 559], "v4f64": 559, "v4i1": 559, "v4i32": 559, "v4p0f64": 559, "v4p0f_i32f": 559, "v4p0p0f64": 559, "v4s32": 538, "v4t": 549, "v5": [445, 447, 605], "v50": [577, 584], "v6": [447, 549], "v60": 577, "v64": [559, 572], "v64i8": 598, "v7": 549, "v70": [577, 584], "v8": [451, 511, 598, 626], "v80": 584, "v8deprecatedinst": 626, "v8f64": 559, "v8i1": 559, "v8i16": 626, "v8i32": 559, "v8p0f32": 559, "v8p0f64": 559, "v8p0f_i32f": 559, "v8p0i32": 559, "v8p0p0f32": 559, "v9": [511, 529, 626], "v_accvgpr_read_b32": 8, "v_accvgpr_write_b32": 8, "v_add3_u32": [0, 4], "v_add_co_ci_u32": 0, "v_add_co_ci_u32_dpp": 0, "v_add_co_ci_u32_e64": 0, "v_add_co_ci_u32_sdwa": 0, "v_add_co_u32": [0, 4], "v_add_co_u32_dpp": 4, "v_add_co_u32_e32": 446, "v_add_co_u32_e64": 4, "v_add_co_u32_sdwa": 4, "v_add_f16": [0, 3, 4, 446], "v_add_f16_dpp": [0, 3, 4], "v_add_f16_e64": [0, 3, 4], "v_add_f16_sdwa": [0, 3, 4], "v_add_f32": [0, 2, 3, 4, 446, 447], "v_add_f32_dpp": [0, 3, 4], "v_add_f32_e32": 447, "v_add_f32_e64": [0, 2, 3, 4], "v_add_f32_sdwa": [0, 3, 4], "v_add_f64": [0, 2, 3, 4], "v_add_i16": 4, "v_add_i32": [2, 4], "v_add_i32_e64": 2, "v_add_lshl_u32": [0, 4], "v_add_nc_i16": 0, "v_add_nc_i32": 0, "v_add_nc_u16": 0, "v_add_nc_u32": 0, "v_add_nc_u32_dpp": 0, "v_add_nc_u32_e64": 0, "v_add_nc_u32_sdwa": 0, "v_add_u16": [3, 4, 446], "v_add_u16_dpp": [3, 4], "v_add_u16_e64": [3, 4], "v_add_u16_sdwa": [3, 4], "v_add_u32": [3, 4, 446], "v_add_u32_dpp": [3, 4], "v_add_u32_e64": [3, 4], "v_add_u32_sdwa": [3, 4], "v_addc_co_u32": 4, "v_addc_co_u32_dpp": 4, "v_addc_co_u32_e64": 4, "v_addc_co_u32_sdwa": 4, "v_addc_u32": [2, 3, 447], "v_addc_u32_dpp": 3, "v_addc_u32_e64": [2, 3], "v_addc_u32_sdwa": 3, "v_alignbit_b32": [0, 2, 3, 4], "v_alignbyte_b32": [0, 2, 3, 4], "v_and_b32": [0, 2, 3, 4], "v_and_b32_dpp": [0, 3, 4], "v_and_b32_e64": [0, 2, 3, 4], "v_and_b32_sdwa": [0, 3, 4], "v_and_or_b32": [0, 4], "v_ashr_i32": 2, "v_ashr_i32_e64": 2, "v_ashr_i64": 2, "v_ashrrev_i16": [0, 3, 4], "v_ashrrev_i16_dpp": [3, 4], "v_ashrrev_i16_e64": [3, 4], "v_ashrrev_i16_sdwa": [3, 4], "v_ashrrev_i32": [0, 2, 3, 4], "v_ashrrev_i32_dpp": [0, 3, 4], "v_ashrrev_i32_e64": [0, 2, 3, 4], "v_ashrrev_i32_sdwa": [0, 3, 4], "v_ashrrev_i64": [0, 3, 4], "v_bcnt_u32_b32": [0, 2, 3, 4], "v_bcnt_u32_b32_e64": 2, "v_bfe_i32": [0, 2, 3, 4], "v_bfe_u32": [0, 2, 3, 4], "v_bfi_b32": [0, 2, 3, 4], "v_bfm_b32": [0, 2, 3, 4], "v_bfm_b32_e64": 2, "v_bfrev_b32": [0, 2, 3, 4], "v_bfrev_b32_dpp": [0, 3, 4], "v_bfrev_b32_e32": 447, "v_bfrev_b32_e64": [0, 2, 3, 4], "v_bfrev_b32_sdwa": [0, 3, 4], "v_ceil_f16": [0, 3, 4], "v_ceil_f16_dpp": [0, 3, 4], "v_ceil_f16_e64": [0, 3, 4], "v_ceil_f16_sdwa": [0, 3, 4], "v_ceil_f32": [0, 2, 3, 4], "v_ceil_f32_dpp": [0, 3, 4], "v_ceil_f32_e64": [0, 2, 3, 4], "v_ceil_f32_sdwa": [0, 3, 4], "v_ceil_f64": [0, 2, 3, 4, 446], "v_ceil_f64_e32": 446, "v_ceil_f64_e64": [0, 2, 3, 4], "v_clrexcp": [0, 2, 3, 4], "v_clrexcp_e64": [0, 2, 3, 4], "v_cmp": 445, "v_cmp_class_f16": [0, 3, 4], "v_cmp_class_f16_e64": [0, 3, 4], "v_cmp_class_f16_sdwa": [0, 3, 4], "v_cmp_class_f32": [0, 2, 3, 4], "v_cmp_class_f32_e64": [0, 2, 3, 4], "v_cmp_class_f32_sdwa": [0, 3, 4], "v_cmp_class_f64": [0, 2, 3, 4], "v_cmp_class_f64_e64": [0, 2, 3, 4], "v_cmp_eq_f16": [0, 3, 4], "v_cmp_eq_f16_e64": [0, 3, 4], "v_cmp_eq_f16_sdwa": [0, 3, 4], "v_cmp_eq_f32": [0, 2, 3, 4], "v_cmp_eq_f32_e64": [0, 2, 3, 4], "v_cmp_eq_f32_sdwa": [0, 3, 4], "v_cmp_eq_f64": [0, 2, 3, 4], "v_cmp_eq_f64_e64": [0, 2, 3, 4], "v_cmp_eq_i16": [0, 3, 4], "v_cmp_eq_i16_e64": [0, 3, 4], "v_cmp_eq_i16_sdwa": [0, 3, 4], "v_cmp_eq_i32": [0, 2, 3, 4], "v_cmp_eq_i32_e64": [0, 2, 3, 4], "v_cmp_eq_i32_sdwa": [0, 3, 4], "v_cmp_eq_i64": [0, 2, 3, 4], "v_cmp_eq_i64_e64": [0, 2, 3, 4], "v_cmp_eq_u16": [0, 3, 4], "v_cmp_eq_u16_e64": [0, 3, 4], "v_cmp_eq_u16_sdwa": [0, 3, 4], "v_cmp_eq_u32": [0, 2, 3, 4], "v_cmp_eq_u32_e64": [0, 2, 3, 4], "v_cmp_eq_u32_sdwa": [0, 3, 4], "v_cmp_eq_u64": [0, 2, 3, 4], "v_cmp_eq_u64_e64": [0, 2, 3, 4], "v_cmp_f_f16": [0, 3, 4], "v_cmp_f_f16_e64": [0, 3, 4], "v_cmp_f_f16_sdwa": [0, 3, 4], "v_cmp_f_f32": [0, 2, 3, 4], "v_cmp_f_f32_e64": [0, 2, 3, 4], "v_cmp_f_f32_sdwa": [0, 3, 4], "v_cmp_f_f64": [0, 2, 3, 4], "v_cmp_f_f64_e64": [0, 2, 3, 4], "v_cmp_f_i16": [3, 4], "v_cmp_f_i16_e64": [3, 4], "v_cmp_f_i16_sdwa": [3, 4], "v_cmp_f_i32": [0, 2, 3, 4], "v_cmp_f_i32_e64": [0, 2, 3, 4], "v_cmp_f_i32_sdwa": [0, 3, 4], "v_cmp_f_i64": [0, 2, 3, 4], "v_cmp_f_i64_e64": [0, 2, 3, 4], "v_cmp_f_u16": [3, 4], "v_cmp_f_u16_e64": [3, 4], "v_cmp_f_u16_sdwa": [3, 4], "v_cmp_f_u32": [0, 2, 3, 4], "v_cmp_f_u32_e64": [0, 2, 3, 4], "v_cmp_f_u32_sdwa": [0, 3, 4], "v_cmp_f_u64": [0, 2, 3, 4], "v_cmp_f_u64_e64": [0, 2, 3, 4], "v_cmp_ge_f16": [0, 3, 4], "v_cmp_ge_f16_e64": [0, 3, 4], "v_cmp_ge_f16_sdwa": [0, 3, 4], "v_cmp_ge_f32": [0, 2, 3, 4], "v_cmp_ge_f32_e64": [0, 2, 3, 4], "v_cmp_ge_f32_sdwa": [0, 3, 4], "v_cmp_ge_f64": [0, 2, 3, 4], "v_cmp_ge_f64_e64": [0, 2, 3, 4], "v_cmp_ge_i16": [0, 3, 4], "v_cmp_ge_i16_e64": [0, 3, 4], "v_cmp_ge_i16_sdwa": [0, 3, 4], "v_cmp_ge_i32": [0, 2, 3, 4], "v_cmp_ge_i32_e64": [0, 2, 3, 4], "v_cmp_ge_i32_sdwa": [0, 3, 4], "v_cmp_ge_i64": [0, 2, 3, 4], "v_cmp_ge_i64_e64": [0, 2, 3, 4], "v_cmp_ge_u16": [0, 3, 4], "v_cmp_ge_u16_e64": [0, 3, 4], "v_cmp_ge_u16_sdwa": [0, 3, 4], "v_cmp_ge_u32": [0, 2, 3, 4], "v_cmp_ge_u32_e64": [0, 2, 3, 4], "v_cmp_ge_u32_sdwa": [0, 3, 4], "v_cmp_ge_u64": [0, 2, 3, 4], "v_cmp_ge_u64_e64": [0, 2, 3, 4], "v_cmp_gt_f16": [0, 3, 4], "v_cmp_gt_f16_e64": [0, 3, 4], "v_cmp_gt_f16_sdwa": [0, 3, 4], "v_cmp_gt_f32": [0, 2, 3, 4], "v_cmp_gt_f32_e64": [0, 2, 3, 4], "v_cmp_gt_f32_sdwa": [0, 3, 4], "v_cmp_gt_f64": [0, 2, 3, 4], "v_cmp_gt_f64_e64": [0, 2, 3, 4], "v_cmp_gt_i16": [0, 3, 4], "v_cmp_gt_i16_e64": [0, 3, 4], "v_cmp_gt_i16_sdwa": [0, 3, 4], "v_cmp_gt_i32": [0, 2, 3, 4], "v_cmp_gt_i32_e64": [0, 2, 3, 4], "v_cmp_gt_i32_sdwa": [0, 3, 4], "v_cmp_gt_i64": [0, 2, 3, 4], "v_cmp_gt_i64_e64": [0, 2, 3, 4], "v_cmp_gt_u16": [0, 3, 4], "v_cmp_gt_u16_e64": [0, 3, 4], "v_cmp_gt_u16_sdwa": [0, 3, 4], "v_cmp_gt_u32": [0, 2, 3, 4], "v_cmp_gt_u32_e64": [0, 2, 3, 4], "v_cmp_gt_u32_sdwa": [0, 3, 4], "v_cmp_gt_u64": [0, 2, 3, 4], "v_cmp_gt_u64_e64": [0, 2, 3, 4], "v_cmp_le_f16": [0, 3, 4], "v_cmp_le_f16_e64": [0, 3, 4], "v_cmp_le_f16_sdwa": [0, 3, 4], "v_cmp_le_f32": [0, 2, 3, 4], "v_cmp_le_f32_e64": [0, 2, 3, 4], "v_cmp_le_f32_sdwa": [0, 3, 4], "v_cmp_le_f64": [0, 2, 3, 4], "v_cmp_le_f64_e64": [0, 2, 3, 4], "v_cmp_le_i16": [0, 3, 4], "v_cmp_le_i16_e64": [0, 3, 4], "v_cmp_le_i16_sdwa": [0, 3, 4], "v_cmp_le_i32": [0, 2, 3, 4], "v_cmp_le_i32_e64": [0, 2, 3, 4], "v_cmp_le_i32_sdwa": [0, 3, 4], "v_cmp_le_i64": [0, 2, 3, 4], "v_cmp_le_i64_e64": [0, 2, 3, 4], "v_cmp_le_u16": [0, 3, 4], "v_cmp_le_u16_e64": [0, 3, 4], "v_cmp_le_u16_sdwa": [0, 3, 4], "v_cmp_le_u32": [0, 2, 3, 4], "v_cmp_le_u32_e64": [0, 2, 3, 4], "v_cmp_le_u32_sdwa": [0, 3, 4], "v_cmp_le_u64": [0, 2, 3, 4], "v_cmp_le_u64_e64": [0, 2, 3, 4], "v_cmp_lg_f16": [0, 3, 4], "v_cmp_lg_f16_e64": [0, 3, 4], "v_cmp_lg_f16_sdwa": [0, 3, 4], "v_cmp_lg_f32": [0, 2, 3, 4], "v_cmp_lg_f32_e64": [0, 2, 3, 4], "v_cmp_lg_f32_sdwa": [0, 3, 4], "v_cmp_lg_f64": [0, 2, 3, 4], "v_cmp_lg_f64_e64": [0, 2, 3, 4], "v_cmp_lt_f16": [0, 3, 4], "v_cmp_lt_f16_e64": [0, 3, 4], "v_cmp_lt_f16_sdwa": [0, 3, 4], "v_cmp_lt_f32": [0, 2, 3, 4], "v_cmp_lt_f32_e64": [0, 2, 3, 4], "v_cmp_lt_f32_sdwa": [0, 3, 4], "v_cmp_lt_f64": [0, 2, 3, 4], "v_cmp_lt_f64_e64": [0, 2, 3, 4], "v_cmp_lt_i16": [0, 3, 4], "v_cmp_lt_i16_e64": [0, 3, 4], "v_cmp_lt_i16_sdwa": [0, 3, 4], "v_cmp_lt_i32": [0, 2, 3, 4], "v_cmp_lt_i32_e64": [0, 2, 3, 4], "v_cmp_lt_i32_sdwa": [0, 3, 4], "v_cmp_lt_i64": [0, 2, 3, 4], "v_cmp_lt_i64_e64": [0, 2, 3, 4], "v_cmp_lt_u16": [0, 3, 4], "v_cmp_lt_u16_e64": [0, 3, 4], "v_cmp_lt_u16_sdwa": [0, 3, 4], "v_cmp_lt_u32": [0, 2, 3, 4], "v_cmp_lt_u32_e64": [0, 2, 3, 4], "v_cmp_lt_u32_sdwa": [0, 3, 4], "v_cmp_lt_u64": [0, 2, 3, 4], "v_cmp_lt_u64_e64": [0, 2, 3, 4], "v_cmp_ne_i16": [0, 3, 4], "v_cmp_ne_i16_e64": [0, 3, 4], "v_cmp_ne_i16_sdwa": [0, 3, 4], "v_cmp_ne_i32": [0, 2, 3, 4], "v_cmp_ne_i32_e64": [0, 2, 3, 4], "v_cmp_ne_i32_sdwa": [0, 3, 4], "v_cmp_ne_i64": [0, 2, 3, 4], "v_cmp_ne_i64_e64": [0, 2, 3, 4], "v_cmp_ne_u16": [0, 3, 4], "v_cmp_ne_u16_e64": [0, 3, 4], "v_cmp_ne_u16_sdwa": [0, 3, 4], "v_cmp_ne_u32": [0, 2, 3, 4], "v_cmp_ne_u32_e64": [0, 2, 3, 4], "v_cmp_ne_u32_sdwa": [0, 3, 4], "v_cmp_ne_u64": [0, 2, 3, 4], "v_cmp_ne_u64_e64": [0, 2, 3, 4], "v_cmp_neq_f16": [0, 3, 4], "v_cmp_neq_f16_e64": [0, 3, 4], "v_cmp_neq_f16_sdwa": [0, 3, 4], "v_cmp_neq_f32": [0, 2, 3, 4], "v_cmp_neq_f32_e64": [0, 2, 3, 4], "v_cmp_neq_f32_sdwa": [0, 3, 4], "v_cmp_neq_f64": [0, 2, 3, 4], "v_cmp_neq_f64_e64": [0, 2, 3, 4], "v_cmp_nge_f16": [0, 3, 4], "v_cmp_nge_f16_e64": [0, 3, 4], "v_cmp_nge_f16_sdwa": [0, 3, 4], "v_cmp_nge_f32": [0, 2, 3, 4], "v_cmp_nge_f32_e64": [0, 2, 3, 4], "v_cmp_nge_f32_sdwa": [0, 3, 4], "v_cmp_nge_f64": [0, 2, 3, 4], "v_cmp_nge_f64_e64": [0, 2, 3, 4], "v_cmp_ngt_f16": [0, 3, 4], "v_cmp_ngt_f16_e64": [0, 3, 4], "v_cmp_ngt_f16_sdwa": [0, 3, 4], "v_cmp_ngt_f32": [0, 2, 3, 4], "v_cmp_ngt_f32_e64": [0, 2, 3, 4], "v_cmp_ngt_f32_sdwa": [0, 3, 4], "v_cmp_ngt_f64": [0, 2, 3, 4], "v_cmp_ngt_f64_e64": [0, 2, 3, 4], "v_cmp_nle_f16": [0, 3, 4], "v_cmp_nle_f16_e64": [0, 3, 4], "v_cmp_nle_f16_sdwa": [0, 3, 4], "v_cmp_nle_f32": [0, 2, 3, 4], "v_cmp_nle_f32_e64": [0, 2, 3, 4], "v_cmp_nle_f32_sdwa": [0, 3, 4], "v_cmp_nle_f64": [0, 2, 3, 4], "v_cmp_nle_f64_e64": [0, 2, 3, 4], "v_cmp_nlg_f16": [0, 3, 4], "v_cmp_nlg_f16_e64": [0, 3, 4], "v_cmp_nlg_f16_sdwa": [0, 3, 4], "v_cmp_nlg_f32": [0, 2, 3, 4], "v_cmp_nlg_f32_e64": [0, 2, 3, 4], "v_cmp_nlg_f32_sdwa": [0, 3, 4], "v_cmp_nlg_f64": [0, 2, 3, 4], "v_cmp_nlg_f64_e64": [0, 2, 3, 4], "v_cmp_nlt_f16": [0, 3, 4], "v_cmp_nlt_f16_e64": [0, 3, 4], "v_cmp_nlt_f16_sdwa": [0, 3, 4], "v_cmp_nlt_f32": [0, 2, 3, 4], "v_cmp_nlt_f32_e64": [0, 2, 3, 4], "v_cmp_nlt_f32_sdwa": [0, 3, 4], "v_cmp_nlt_f64": [0, 2, 3, 4], "v_cmp_nlt_f64_e64": [0, 2, 3, 4], "v_cmp_o_f16": [0, 3, 4], "v_cmp_o_f16_e64": [0, 3, 4], "v_cmp_o_f16_sdwa": [0, 3, 4], "v_cmp_o_f32": [0, 2, 3, 4], "v_cmp_o_f32_e64": [0, 2, 3, 4], "v_cmp_o_f32_sdwa": [0, 3, 4], "v_cmp_o_f64": [0, 2, 3, 4], "v_cmp_o_f64_e64": [0, 2, 3, 4], "v_cmp_t_i16": [3, 4], "v_cmp_t_i16_e64": [3, 4], "v_cmp_t_i16_sdwa": [3, 4], "v_cmp_t_i32": [0, 2, 3, 4], "v_cmp_t_i32_e64": [0, 2, 3, 4], "v_cmp_t_i32_sdwa": [0, 3, 4], "v_cmp_t_i64": [0, 2, 3, 4], "v_cmp_t_i64_e64": [0, 2, 3, 4], "v_cmp_t_u16": [3, 4], "v_cmp_t_u16_e64": [3, 4], "v_cmp_t_u16_sdwa": [3, 4], "v_cmp_t_u32": [0, 2, 3, 4], "v_cmp_t_u32_e64": [0, 2, 3, 4], "v_cmp_t_u32_sdwa": [0, 3, 4], "v_cmp_t_u64": [0, 2, 3, 4], "v_cmp_t_u64_e64": [0, 2, 3, 4], "v_cmp_tru_f16": [0, 3, 4], "v_cmp_tru_f16_e64": [0, 3, 4], "v_cmp_tru_f16_sdwa": [0, 3, 4], "v_cmp_tru_f32": [0, 2, 3, 4], "v_cmp_tru_f32_e64": [0, 2, 3, 4], "v_cmp_tru_f32_sdwa": [0, 3, 4], "v_cmp_tru_f64": [0, 2, 3, 4], "v_cmp_tru_f64_e64": [0, 2, 3, 4], "v_cmp_u_f16": [0, 3, 4], "v_cmp_u_f16_e64": [0, 3, 4], "v_cmp_u_f16_sdwa": [0, 3, 4], "v_cmp_u_f32": [0, 2, 3, 4], "v_cmp_u_f32_e64": [0, 2, 3, 4], "v_cmp_u_f32_sdwa": [0, 3, 4], "v_cmp_u_f64": [0, 2, 3, 4], "v_cmp_u_f64_e64": [0, 2, 3, 4], "v_cmps_eq_f32": 2, "v_cmps_eq_f32_e64": 2, "v_cmps_eq_f64": 2, "v_cmps_eq_f64_e64": 2, "v_cmps_f_f32": 2, "v_cmps_f_f32_e64": 2, "v_cmps_f_f64": 2, "v_cmps_f_f64_e64": 2, "v_cmps_ge_f32": 2, "v_cmps_ge_f32_e64": 2, "v_cmps_ge_f64": 2, "v_cmps_ge_f64_e64": 2, "v_cmps_gt_f32": 2, "v_cmps_gt_f32_e64": 2, "v_cmps_gt_f64": 2, "v_cmps_gt_f64_e64": 2, "v_cmps_le_f32": 2, "v_cmps_le_f32_e64": 2, "v_cmps_le_f64": 2, "v_cmps_le_f64_e64": 2, "v_cmps_lg_f32": 2, "v_cmps_lg_f32_e64": 2, "v_cmps_lg_f64": 2, "v_cmps_lg_f64_e64": 2, "v_cmps_lt_f32": 2, "v_cmps_lt_f32_e64": 2, "v_cmps_lt_f64": 2, "v_cmps_lt_f64_e64": 2, "v_cmps_neq_f32": 2, "v_cmps_neq_f32_e64": 2, "v_cmps_neq_f64": 2, "v_cmps_neq_f64_e64": 2, "v_cmps_nge_f32": 2, "v_cmps_nge_f32_e64": 2, "v_cmps_nge_f64": 2, "v_cmps_nge_f64_e64": 2, "v_cmps_ngt_f32": 2, "v_cmps_ngt_f32_e64": 2, "v_cmps_ngt_f64": 2, "v_cmps_ngt_f64_e64": 2, "v_cmps_nle_f32": 2, "v_cmps_nle_f32_e64": 2, "v_cmps_nle_f64": 2, "v_cmps_nle_f64_e64": 2, "v_cmps_nlg_f32": 2, "v_cmps_nlg_f32_e64": 2, "v_cmps_nlg_f64": 2, "v_cmps_nlg_f64_e64": 2, "v_cmps_nlt_f32": 2, "v_cmps_nlt_f32_e64": 2, "v_cmps_nlt_f64": 2, "v_cmps_nlt_f64_e64": 2, "v_cmps_o_f32": 2, "v_cmps_o_f32_e64": 2, "v_cmps_o_f64": 2, "v_cmps_o_f64_e64": 2, "v_cmps_tru_f32": 2, "v_cmps_tru_f32_e64": 2, "v_cmps_tru_f64": 2, "v_cmps_tru_f64_e64": 2, "v_cmps_u_f32": 2, "v_cmps_u_f32_e64": 2, "v_cmps_u_f64": 2, "v_cmps_u_f64_e64": 2, "v_cmpsx_eq_f32": 2, "v_cmpsx_eq_f32_e64": 2, "v_cmpsx_eq_f64": 2, "v_cmpsx_eq_f64_e64": 2, "v_cmpsx_f_f32": 2, "v_cmpsx_f_f32_e64": 2, "v_cmpsx_f_f64": 2, "v_cmpsx_f_f64_e64": 2, "v_cmpsx_ge_f32": 2, "v_cmpsx_ge_f32_e64": 2, "v_cmpsx_ge_f64": 2, "v_cmpsx_ge_f64_e64": 2, "v_cmpsx_gt_f32": 2, "v_cmpsx_gt_f32_e64": 2, "v_cmpsx_gt_f64": 2, "v_cmpsx_gt_f64_e64": 2, "v_cmpsx_le_f32": 2, "v_cmpsx_le_f32_e64": 2, "v_cmpsx_le_f64": 2, "v_cmpsx_le_f64_e64": 2, "v_cmpsx_lg_f32": 2, "v_cmpsx_lg_f32_e64": 2, "v_cmpsx_lg_f64": 2, "v_cmpsx_lg_f64_e64": 2, "v_cmpsx_lt_f32": 2, "v_cmpsx_lt_f32_e64": 2, "v_cmpsx_lt_f64": 2, "v_cmpsx_lt_f64_e64": 2, "v_cmpsx_neq_f32": 2, "v_cmpsx_neq_f32_e64": 2, "v_cmpsx_neq_f64": 2, "v_cmpsx_neq_f64_e64": 2, "v_cmpsx_nge_f32": 2, "v_cmpsx_nge_f32_e64": 2, "v_cmpsx_nge_f64": 2, "v_cmpsx_nge_f64_e64": 2, "v_cmpsx_ngt_f32": 2, "v_cmpsx_ngt_f32_e64": 2, "v_cmpsx_ngt_f64": 2, "v_cmpsx_ngt_f64_e64": 2, "v_cmpsx_nle_f32": 2, "v_cmpsx_nle_f32_e64": 2, "v_cmpsx_nle_f64": 2, "v_cmpsx_nle_f64_e64": 2, "v_cmpsx_nlg_f32": 2, "v_cmpsx_nlg_f32_e64": 2, "v_cmpsx_nlg_f64": 2, "v_cmpsx_nlg_f64_e64": 2, "v_cmpsx_nlt_f32": 2, "v_cmpsx_nlt_f32_e64": 2, "v_cmpsx_nlt_f64": 2, "v_cmpsx_nlt_f64_e64": 2, "v_cmpsx_o_f32": 2, "v_cmpsx_o_f32_e64": 2, "v_cmpsx_o_f64": 2, "v_cmpsx_o_f64_e64": 2, "v_cmpsx_tru_f32": 2, "v_cmpsx_tru_f32_e64": 2, "v_cmpsx_tru_f64": 2, "v_cmpsx_tru_f64_e64": 2, "v_cmpsx_u_f32": 2, "v_cmpsx_u_f32_e64": 2, "v_cmpsx_u_f64": 2, "v_cmpsx_u_f64_e64": 2, "v_cmpx_class_f16": [0, 3, 4], "v_cmpx_class_f16_e64": [0, 3, 4], "v_cmpx_class_f16_sdwa": [0, 3, 4], "v_cmpx_class_f32": [0, 2, 3, 4], "v_cmpx_class_f32_e64": [0, 2, 3, 4], "v_cmpx_class_f32_sdwa": [0, 3, 4], "v_cmpx_class_f64": [0, 2, 3, 4], "v_cmpx_class_f64_e64": [0, 2, 3, 4], "v_cmpx_eq_f16": [0, 3, 4], "v_cmpx_eq_f16_e64": [0, 3, 4], "v_cmpx_eq_f16_sdwa": [0, 3, 4], "v_cmpx_eq_f32": [0, 2, 3, 4], "v_cmpx_eq_f32_e64": [0, 2, 3, 4], "v_cmpx_eq_f32_sdwa": [0, 3, 4], "v_cmpx_eq_f64": [0, 2, 3, 4], "v_cmpx_eq_f64_e64": [0, 2, 3, 4], "v_cmpx_eq_i16": [0, 3, 4], "v_cmpx_eq_i16_e64": [0, 3, 4], "v_cmpx_eq_i16_sdwa": [0, 3, 4], "v_cmpx_eq_i32": [0, 2, 3, 4], "v_cmpx_eq_i32_e64": [0, 2, 3, 4], "v_cmpx_eq_i32_sdwa": [0, 3, 4], "v_cmpx_eq_i64": [0, 2, 3, 4], "v_cmpx_eq_i64_e64": [0, 2, 3, 4], "v_cmpx_eq_u16": [0, 3, 4], "v_cmpx_eq_u16_e64": [0, 3, 4], "v_cmpx_eq_u16_sdwa": [0, 3, 4], "v_cmpx_eq_u32": [0, 2, 3, 4], "v_cmpx_eq_u32_e64": [0, 2, 3, 4], "v_cmpx_eq_u32_sdwa": [0, 3, 4], "v_cmpx_eq_u64": [0, 2, 3, 4], "v_cmpx_eq_u64_e64": [0, 2, 3, 4], "v_cmpx_f_f16": [0, 3, 4], "v_cmpx_f_f16_e64": [0, 3, 4], "v_cmpx_f_f16_sdwa": [0, 3, 4], "v_cmpx_f_f32": [0, 2, 3, 4], "v_cmpx_f_f32_e64": [0, 2, 3, 4], "v_cmpx_f_f32_sdwa": [0, 3, 4], "v_cmpx_f_f64": [0, 2, 3, 4], "v_cmpx_f_f64_e64": [0, 2, 3, 4], "v_cmpx_f_i16": [3, 4], "v_cmpx_f_i16_e64": [3, 4], "v_cmpx_f_i16_sdwa": [3, 4], "v_cmpx_f_i32": [0, 2, 3, 4], "v_cmpx_f_i32_e64": [0, 2, 3, 4], "v_cmpx_f_i32_sdwa": [0, 3, 4], "v_cmpx_f_i64": [0, 2, 3, 4], "v_cmpx_f_i64_e64": [0, 2, 3, 4], "v_cmpx_f_u16": [3, 4], "v_cmpx_f_u16_e64": [3, 4], "v_cmpx_f_u16_sdwa": [3, 4], "v_cmpx_f_u32": [0, 2, 3, 4], "v_cmpx_f_u32_e64": [0, 2, 3, 4], "v_cmpx_f_u32_sdwa": [0, 3, 4], "v_cmpx_f_u64": [0, 2, 3, 4], "v_cmpx_f_u64_e64": [0, 2, 3, 4], "v_cmpx_ge_f16": [0, 3, 4], "v_cmpx_ge_f16_e64": [0, 3, 4], "v_cmpx_ge_f16_sdwa": [0, 3, 4], "v_cmpx_ge_f32": [0, 2, 3, 4], "v_cmpx_ge_f32_e64": [0, 2, 3, 4], "v_cmpx_ge_f32_sdwa": [0, 3, 4], "v_cmpx_ge_f64": [0, 2, 3, 4], "v_cmpx_ge_f64_e64": [0, 2, 3, 4], "v_cmpx_ge_i16": [0, 3, 4], "v_cmpx_ge_i16_e64": [0, 3, 4], "v_cmpx_ge_i16_sdwa": [0, 3, 4], "v_cmpx_ge_i32": [0, 2, 3, 4], "v_cmpx_ge_i32_e64": [0, 2, 3, 4], "v_cmpx_ge_i32_sdwa": [0, 3, 4], "v_cmpx_ge_i64": [0, 2, 3, 4], "v_cmpx_ge_i64_e64": [0, 2, 3, 4], "v_cmpx_ge_u16": [0, 3, 4], "v_cmpx_ge_u16_e64": [0, 3, 4], "v_cmpx_ge_u16_sdwa": [0, 3, 4], "v_cmpx_ge_u32": [0, 2, 3, 4], "v_cmpx_ge_u32_e64": [0, 2, 3, 4], "v_cmpx_ge_u32_sdwa": [0, 3, 4], "v_cmpx_ge_u64": [0, 2, 3, 4], "v_cmpx_ge_u64_e64": [0, 2, 3, 4], "v_cmpx_gt_f16": [0, 3, 4], "v_cmpx_gt_f16_e64": [0, 3, 4], "v_cmpx_gt_f16_sdwa": [0, 3, 4], "v_cmpx_gt_f32": [0, 2, 3, 4], "v_cmpx_gt_f32_e64": [0, 2, 3, 4], "v_cmpx_gt_f32_sdwa": [0, 3, 4], "v_cmpx_gt_f64": [0, 2, 3, 4], "v_cmpx_gt_f64_e64": [0, 2, 3, 4], "v_cmpx_gt_i16": [0, 3, 4], "v_cmpx_gt_i16_e64": [0, 3, 4], "v_cmpx_gt_i16_sdwa": [0, 3, 4], "v_cmpx_gt_i32": [0, 2, 3, 4], "v_cmpx_gt_i32_e64": [0, 2, 3, 4], "v_cmpx_gt_i32_sdwa": [0, 3, 4], "v_cmpx_gt_i64": [0, 2, 3, 4], "v_cmpx_gt_i64_e64": [0, 2, 3, 4], "v_cmpx_gt_u16": [0, 3, 4], "v_cmpx_gt_u16_e64": [0, 3, 4], "v_cmpx_gt_u16_sdwa": [0, 3, 4], "v_cmpx_gt_u32": [0, 2, 3, 4], "v_cmpx_gt_u32_e64": [0, 2, 3, 4], "v_cmpx_gt_u32_sdwa": [0, 3, 4], "v_cmpx_gt_u64": [0, 2, 3, 4], "v_cmpx_gt_u64_e64": [0, 2, 3, 4], "v_cmpx_le_f16": [0, 3, 4], "v_cmpx_le_f16_e64": [0, 3, 4], "v_cmpx_le_f16_sdwa": [0, 3, 4], "v_cmpx_le_f32": [0, 2, 3, 4], "v_cmpx_le_f32_e64": [0, 2, 3, 4], "v_cmpx_le_f32_sdwa": [0, 3, 4], "v_cmpx_le_f64": [0, 2, 3, 4], "v_cmpx_le_f64_e64": [0, 2, 3, 4], "v_cmpx_le_i16": [0, 3, 4], "v_cmpx_le_i16_e64": [0, 3, 4], "v_cmpx_le_i16_sdwa": [0, 3, 4], "v_cmpx_le_i32": [0, 2, 3, 4], "v_cmpx_le_i32_e64": [0, 2, 3, 4], "v_cmpx_le_i32_sdwa": [0, 3, 4], "v_cmpx_le_i64": [0, 2, 3, 4], "v_cmpx_le_i64_e64": [0, 2, 3, 4], "v_cmpx_le_u16": [0, 3, 4], "v_cmpx_le_u16_e64": [0, 3, 4], "v_cmpx_le_u16_sdwa": [0, 3, 4], "v_cmpx_le_u32": [0, 2, 3, 4, 447], "v_cmpx_le_u32_e64": [0, 2, 3, 4], "v_cmpx_le_u32_sdwa": [0, 3, 4], "v_cmpx_le_u64": [0, 2, 3, 4], "v_cmpx_le_u64_e64": [0, 2, 3, 4], "v_cmpx_lg_f16": [0, 3, 4], "v_cmpx_lg_f16_e64": [0, 3, 4], "v_cmpx_lg_f16_sdwa": [0, 3, 4], "v_cmpx_lg_f32": [0, 2, 3, 4], "v_cmpx_lg_f32_e64": [0, 2, 3, 4], "v_cmpx_lg_f32_sdwa": [0, 3, 4], "v_cmpx_lg_f64": [0, 2, 3, 4], "v_cmpx_lg_f64_e64": [0, 2, 3, 4], "v_cmpx_lt_f16": [0, 3, 4], "v_cmpx_lt_f16_e64": [0, 3, 4], "v_cmpx_lt_f16_sdwa": [0, 3, 4], "v_cmpx_lt_f32": [0, 2, 3, 4], "v_cmpx_lt_f32_e64": [0, 2, 3, 4], "v_cmpx_lt_f32_sdwa": [0, 3, 4], "v_cmpx_lt_f64": [0, 2, 3, 4], "v_cmpx_lt_f64_e64": [0, 2, 3, 4], "v_cmpx_lt_i16": [0, 3, 4], "v_cmpx_lt_i16_e64": [0, 3, 4], "v_cmpx_lt_i16_sdwa": [0, 3, 4], "v_cmpx_lt_i32": [0, 2, 3, 4], "v_cmpx_lt_i32_e64": [0, 2, 3, 4], "v_cmpx_lt_i32_sdwa": [0, 3, 4], "v_cmpx_lt_i64": [0, 2, 3, 4], "v_cmpx_lt_i64_e64": [0, 2, 3, 4], "v_cmpx_lt_u16": [0, 3, 4], "v_cmpx_lt_u16_e64": [0, 3, 4], "v_cmpx_lt_u16_sdwa": [0, 3, 4], "v_cmpx_lt_u32": [0, 2, 3, 4], "v_cmpx_lt_u32_e64": [0, 2, 3, 4], "v_cmpx_lt_u32_sdwa": [0, 3, 4], "v_cmpx_lt_u64": [0, 2, 3, 4], "v_cmpx_lt_u64_e64": [0, 2, 3, 4], "v_cmpx_ne_i16": [0, 3, 4], "v_cmpx_ne_i16_e64": [0, 3, 4], "v_cmpx_ne_i16_sdwa": [0, 3, 4], "v_cmpx_ne_i32": [0, 2, 3, 4], "v_cmpx_ne_i32_e64": [0, 2, 3, 4], "v_cmpx_ne_i32_sdwa": [0, 3, 4], "v_cmpx_ne_i64": [0, 2, 3, 4], "v_cmpx_ne_i64_e64": [0, 2, 3, 4], "v_cmpx_ne_u16": [0, 3, 4], "v_cmpx_ne_u16_e64": [0, 3, 4], "v_cmpx_ne_u16_sdwa": [0, 3, 4], "v_cmpx_ne_u32": [0, 2, 3, 4], "v_cmpx_ne_u32_e64": [0, 2, 3, 4], "v_cmpx_ne_u32_sdwa": [0, 3, 4], "v_cmpx_ne_u64": [0, 2, 3, 4], "v_cmpx_ne_u64_e64": [0, 2, 3, 4], "v_cmpx_neq_f16": [0, 3, 4], "v_cmpx_neq_f16_e64": [0, 3, 4], "v_cmpx_neq_f16_sdwa": [0, 3, 4], "v_cmpx_neq_f32": [0, 2, 3, 4], "v_cmpx_neq_f32_e64": [0, 2, 3, 4], "v_cmpx_neq_f32_sdwa": [0, 3, 4], "v_cmpx_neq_f64": [0, 2, 3, 4], "v_cmpx_neq_f64_e64": [0, 2, 3, 4], "v_cmpx_nge_f16": [0, 3, 4], "v_cmpx_nge_f16_e64": [0, 3, 4], "v_cmpx_nge_f16_sdwa": [0, 3, 4], "v_cmpx_nge_f32": [0, 2, 3, 4], "v_cmpx_nge_f32_e64": [0, 2, 3, 4], "v_cmpx_nge_f32_sdwa": [0, 3, 4], "v_cmpx_nge_f64": [0, 2, 3, 4], "v_cmpx_nge_f64_e64": [0, 2, 3, 4], "v_cmpx_ngt_f16": [0, 3, 4], "v_cmpx_ngt_f16_e64": [0, 3, 4], "v_cmpx_ngt_f16_sdwa": [0, 3, 4], "v_cmpx_ngt_f32": [0, 2, 3, 4], "v_cmpx_ngt_f32_e64": [0, 2, 3, 4], "v_cmpx_ngt_f32_sdwa": [0, 3, 4], "v_cmpx_ngt_f64": [0, 2, 3, 4], "v_cmpx_ngt_f64_e64": [0, 2, 3, 4], "v_cmpx_nle_f16": [0, 3, 4], "v_cmpx_nle_f16_e64": [0, 3, 4], "v_cmpx_nle_f16_sdwa": [0, 3, 4], "v_cmpx_nle_f32": [0, 2, 3, 4], "v_cmpx_nle_f32_e64": [0, 2, 3, 4], "v_cmpx_nle_f32_sdwa": [0, 3, 4], "v_cmpx_nle_f64": [0, 2, 3, 4], "v_cmpx_nle_f64_e64": [0, 2, 3, 4], "v_cmpx_nlg_f16": [0, 3, 4], "v_cmpx_nlg_f16_e64": [0, 3, 4], "v_cmpx_nlg_f16_sdwa": [0, 3, 4], "v_cmpx_nlg_f32": [0, 2, 3, 4], "v_cmpx_nlg_f32_e64": [0, 2, 3, 4], "v_cmpx_nlg_f32_sdwa": [0, 3, 4], "v_cmpx_nlg_f64": [0, 2, 3, 4], "v_cmpx_nlg_f64_e64": [0, 2, 3, 4], "v_cmpx_nlt_f16": [0, 3, 4], "v_cmpx_nlt_f16_e64": [0, 3, 4], "v_cmpx_nlt_f16_sdwa": [0, 3, 4], "v_cmpx_nlt_f32": [0, 2, 3, 4], "v_cmpx_nlt_f32_e64": [0, 2, 3, 4], "v_cmpx_nlt_f32_sdwa": [0, 3, 4], "v_cmpx_nlt_f64": [0, 2, 3, 4], "v_cmpx_nlt_f64_e64": [0, 2, 3, 4], "v_cmpx_o_f16": [0, 3, 4], "v_cmpx_o_f16_e64": [0, 3, 4], "v_cmpx_o_f16_sdwa": [0, 3, 4], "v_cmpx_o_f32": [0, 2, 3, 4], "v_cmpx_o_f32_e64": [0, 2, 3, 4], "v_cmpx_o_f32_sdwa": [0, 3, 4], "v_cmpx_o_f64": [0, 2, 3, 4], "v_cmpx_o_f64_e64": [0, 2, 3, 4], "v_cmpx_t_i16": [3, 4], "v_cmpx_t_i16_e64": [3, 4], "v_cmpx_t_i16_sdwa": [3, 4], "v_cmpx_t_i32": [0, 2, 3, 4], "v_cmpx_t_i32_e64": [0, 2, 3, 4], "v_cmpx_t_i32_sdwa": [0, 3, 4], "v_cmpx_t_i64": [0, 2, 3, 4], "v_cmpx_t_i64_e64": [0, 2, 3, 4], "v_cmpx_t_u16": [3, 4], "v_cmpx_t_u16_e64": [3, 4], "v_cmpx_t_u16_sdwa": [3, 4], "v_cmpx_t_u32": [0, 2, 3, 4], "v_cmpx_t_u32_e64": [0, 2, 3, 4], "v_cmpx_t_u32_sdwa": [0, 3, 4], "v_cmpx_t_u64": [0, 2, 3, 4], "v_cmpx_t_u64_e64": [0, 2, 3, 4], "v_cmpx_tru_f16": [0, 3, 4], "v_cmpx_tru_f16_e64": [0, 3, 4], "v_cmpx_tru_f16_sdwa": [0, 3, 4], "v_cmpx_tru_f32": [0, 2, 3, 4], "v_cmpx_tru_f32_e64": [0, 2, 3, 4], "v_cmpx_tru_f32_sdwa": [0, 3, 4], "v_cmpx_tru_f64": [0, 2, 3, 4], "v_cmpx_tru_f64_e64": [0, 2, 3, 4], "v_cmpx_u_f16": [0, 3, 4], "v_cmpx_u_f16_e64": [0, 3, 4], "v_cmpx_u_f16_sdwa": [0, 3, 4], "v_cmpx_u_f32": [0, 2, 3, 4], "v_cmpx_u_f32_e64": [0, 2, 3, 4], "v_cmpx_u_f32_sdwa": [0, 3, 4], "v_cmpx_u_f64": [0, 2, 3, 4], "v_cmpx_u_f64_e64": [0, 2, 3, 4], "v_cndmask_b32": [0, 2, 3, 4], "v_cndmask_b32_dpp": [3, 4], "v_cndmask_b32_e64": [0, 2, 3, 4], "v_cndmask_b32_sdwa": [3, 4], "v_cos_f16": [0, 3, 4], "v_cos_f16_dpp": [0, 3, 4], "v_cos_f16_e64": [0, 3, 4], "v_cos_f16_sdwa": [0, 3, 4], "v_cos_f32": [0, 2, 3, 4], "v_cos_f32_dpp": [0, 3, 4], "v_cos_f32_e64": [0, 2, 3, 4], "v_cos_f32_sdwa": [0, 3, 4], "v_cubeid_f32": [0, 2, 3, 4], "v_cubema_f32": [0, 2, 3, 4], "v_cubesc_f32": [0, 2, 3, 4], "v_cubetc_f32": [0, 2, 3, 4], "v_cvt_f16_f32": [0, 2, 3, 4, 445], "v_cvt_f16_f32_dpp": [0, 3, 4], "v_cvt_f16_f32_e64": [0, 2, 3, 4], "v_cvt_f16_f32_sdwa": [0, 3, 4], "v_cvt_f16_i16": [0, 3, 4], "v_cvt_f16_i16_dpp": [0, 3, 4], "v_cvt_f16_i16_e64": [0, 3, 4], "v_cvt_f16_i16_sdwa": [0, 3, 4], "v_cvt_f16_u16": [0, 3, 4], "v_cvt_f16_u16_dpp": [0, 3, 4], "v_cvt_f16_u16_e64": [0, 3, 4], "v_cvt_f16_u16_sdwa": [0, 3, 4], "v_cvt_f32_f16": [0, 2, 3, 4], "v_cvt_f32_f16_dpp": [0, 3, 4], "v_cvt_f32_f16_e64": [0, 2, 3, 4], "v_cvt_f32_f16_sdwa": [0, 3, 4], "v_cvt_f32_f64": [0, 2, 3, 4], "v_cvt_f32_f64_e64": [0, 2, 3, 4], "v_cvt_f32_i32": [0, 2, 3, 4], "v_cvt_f32_i32_dpp": [0, 3, 4], "v_cvt_f32_i32_e64": [0, 2, 3, 4], "v_cvt_f32_i32_sdwa": [0, 3, 4], "v_cvt_f32_u32": [0, 2, 3, 4, 444], "v_cvt_f32_u32_dpp": [0, 3, 4], "v_cvt_f32_u32_e64": [0, 2, 3, 4], "v_cvt_f32_u32_sdwa": [0, 3, 4], "v_cvt_f32_ubyte0": [0, 2, 3, 4], "v_cvt_f32_ubyte0_dpp": [0, 3, 4], "v_cvt_f32_ubyte0_e64": [0, 2, 3, 4], "v_cvt_f32_ubyte0_sdwa": [0, 3, 4], "v_cvt_f32_ubyte1": [0, 2, 3, 4], "v_cvt_f32_ubyte1_dpp": [0, 3, 4], "v_cvt_f32_ubyte1_e64": [0, 2, 3, 4], "v_cvt_f32_ubyte1_sdwa": [0, 3, 4], "v_cvt_f32_ubyte2": [0, 2, 3, 4], "v_cvt_f32_ubyte2_dpp": [0, 3, 4], "v_cvt_f32_ubyte2_e64": [0, 2, 3, 4], "v_cvt_f32_ubyte2_sdwa": [0, 3, 4], "v_cvt_f32_ubyte3": [0, 2, 3, 4], "v_cvt_f32_ubyte3_dpp": [0, 3, 4], "v_cvt_f32_ubyte3_e64": [0, 2, 3, 4], "v_cvt_f32_ubyte3_sdwa": [0, 3, 4], "v_cvt_f64_f32": [0, 2, 3, 4], "v_cvt_f64_f32_e64": [0, 2, 3, 4], "v_cvt_f64_i32": [0, 2, 3, 4], "v_cvt_f64_i32_e32": 447, "v_cvt_f64_i32_e64": [0, 2, 3, 4], "v_cvt_f64_u32": [0, 2, 3, 4], "v_cvt_f64_u32_e64": [0, 2, 3, 4], "v_cvt_flr_i32_f32": [0, 2, 3, 4], "v_cvt_flr_i32_f32_dpp": [0, 3, 4], "v_cvt_flr_i32_f32_e64": [0, 2, 3, 4], "v_cvt_flr_i32_f32_sdwa": [0, 3, 4], "v_cvt_i16_f16": [0, 3, 4], "v_cvt_i16_f16_dpp": [0, 3, 4], "v_cvt_i16_f16_e64": [0, 3, 4], "v_cvt_i16_f16_sdwa": [0, 3, 4], "v_cvt_i32_f32": [0, 2, 3, 4], "v_cvt_i32_f32_dpp": [0, 3, 4], "v_cvt_i32_f32_e64": [0, 2, 3, 4], "v_cvt_i32_f32_sdwa": [0, 3, 4], "v_cvt_i32_f64": [0, 2, 3, 4], "v_cvt_i32_f64_e64": [0, 2, 3, 4], "v_cvt_norm_i16_f16": [0, 4], "v_cvt_norm_i16_f16_dpp": [0, 4], "v_cvt_norm_i16_f16_e64": [0, 4], "v_cvt_norm_i16_f16_sdwa": [0, 4], "v_cvt_norm_u16_f16": [0, 4], "v_cvt_norm_u16_f16_dpp": [0, 4], "v_cvt_norm_u16_f16_e64": [0, 4], "v_cvt_norm_u16_f16_sdwa": [0, 4], "v_cvt_off_f32_i4": [0, 2, 3, 4], "v_cvt_off_f32_i4_dpp": [0, 3, 4], "v_cvt_off_f32_i4_e64": [0, 2, 3, 4], "v_cvt_off_f32_i4_sdwa": [0, 3, 4], "v_cvt_pk_i16_i32": [0, 2, 3, 4], "v_cvt_pk_i16_i32_e64": 2, "v_cvt_pk_u16_u32": [0, 2, 3, 4], "v_cvt_pk_u16_u32_e64": 2, "v_cvt_pk_u8_f32": [0, 2, 3, 4], "v_cvt_pkaccum_u8_f32": [2, 3, 4], "v_cvt_pkaccum_u8_f32_e64": 2, "v_cvt_pknorm_i16_f16": [0, 4], "v_cvt_pknorm_i16_f32": [0, 2, 3, 4], "v_cvt_pknorm_i16_f32_e64": 2, "v_cvt_pknorm_u16_f16": [0, 4], "v_cvt_pknorm_u16_f32": [0, 2, 3, 4], "v_cvt_pknorm_u16_f32_e64": 2, "v_cvt_pkrtz_f16_f32": [0, 2, 3, 4], "v_cvt_pkrtz_f16_f32_e64": [0, 2], "v_cvt_rpi_i32_f32": [0, 2, 3, 4], "v_cvt_rpi_i32_f32_dpp": [0, 3, 4], "v_cvt_rpi_i32_f32_e64": [0, 2, 3, 4], "v_cvt_rpi_i32_f32_sdwa": [0, 3, 4], "v_cvt_u16_f16": [0, 3, 4], "v_cvt_u16_f16_dpp": [0, 3, 4], "v_cvt_u16_f16_e64": [0, 3, 4], "v_cvt_u16_f16_sdwa": [0, 3, 4], "v_cvt_u32_f32": [0, 2, 3, 4], "v_cvt_u32_f32_dpp": [0, 3, 4], "v_cvt_u32_f32_e64": [0, 2, 3, 4], "v_cvt_u32_f32_sdwa": [0, 3, 4], "v_cvt_u32_f64": [0, 2, 3, 4], "v_cvt_u32_f64_e64": [0, 2, 3, 4], "v_div_fixup_f16": [0, 3, 4], "v_div_fixup_f32": [0, 2, 3, 4], "v_div_fixup_f64": [0, 2, 3, 4], "v_div_fixup_legacy_f16": 4, "v_div_fmas_f32": [0, 2, 3, 4], "v_div_fmas_f64": [0, 2, 3, 4], "v_div_scale_f32": [0, 2, 3, 4], "v_div_scale_f64": [0, 2, 3, 4], "v_dot2_f32_f16": [1, 7, 8], "v_dot2_i32_i16": [1, 7, 8], "v_dot2_u32_u16": [1, 7, 8], "v_dot2c_f32_f16": [1, 8], "v_dot2c_f32_f16_dpp": [1, 8], "v_dot2c_i32_i16": 8, "v_dot2c_i32_i16_dpp": 8, "v_dot4_i32_i8": [1, 7, 8], "v_dot4_u32_u8": [1, 7, 8], "v_dot4c_i32_i8": [1, 8], "v_dot4c_i32_i8_dpp": [1, 8], "v_dot8_i32_i4": [1, 7, 8], "v_dot8_u32_u4": [1, 7, 8], "v_dot8c_i32_i4": 8, "v_dot8c_i32_i4_dpp": 8, "v_exp_f16": [0, 3, 4], "v_exp_f16_dpp": [0, 3, 4], "v_exp_f16_e64": [0, 3, 4], "v_exp_f16_sdwa": [0, 3, 4], "v_exp_f32": [0, 2, 3, 4], "v_exp_f32_dpp": [0, 3, 4], "v_exp_f32_e64": [0, 2, 3, 4], "v_exp_f32_sdwa": [0, 3, 4], "v_exp_legacy_f32": [2, 3, 4], "v_exp_legacy_f32_dpp": [3, 4], "v_exp_legacy_f32_e64": [2, 3, 4], "v_exp_legacy_f32_sdwa": [3, 4], "v_ffbh_i32": [0, 2, 3, 4], "v_ffbh_i32_dpp": [0, 3, 4], "v_ffbh_i32_e64": [0, 2, 3, 4], "v_ffbh_i32_sdwa": [0, 3, 4], "v_ffbh_u32": [0, 2, 3, 4], "v_ffbh_u32_dpp": [0, 3, 4], "v_ffbh_u32_e64": [0, 2, 3, 4], "v_ffbh_u32_sdwa": [0, 3, 4], "v_ffbl_b32": [0, 2, 3, 4], "v_ffbl_b32_dpp": [0, 3, 4], "v_ffbl_b32_e64": [0, 2, 3, 4], "v_ffbl_b32_sdwa": [0, 3, 4], "v_floor_f16": [0, 3, 4], "v_floor_f16_dpp": [0, 3, 4], "v_floor_f16_e64": [0, 3, 4], "v_floor_f16_sdwa": [0, 3, 4], "v_floor_f32": [0, 2, 3, 4], "v_floor_f32_dpp": [0, 3, 4], "v_floor_f32_e32": 447, "v_floor_f32_e64": [0, 2, 3, 4], "v_floor_f32_sdwa": [0, 3, 4], "v_floor_f64": [0, 2, 3, 4], "v_floor_f64_e64": [0, 2, 3, 4], "v_fma_f16": [0, 3, 4], "v_fma_f32": [0, 2, 3, 4], "v_fma_f64": [0, 2, 3, 4], "v_fma_legacy_f16": 4, "v_fma_mix": 445, "v_fma_mix_f32": [0, 6, 7, 8], "v_fma_mixhi_f16": [0, 6, 7, 8], "v_fma_mixlo_f16": [0, 6, 7, 8], "v_fmaak_f16": 0, "v_fmaak_f32": 0, "v_fmac_f16": 0, "v_fmac_f16_dpp": 0, "v_fmac_f16_e64": 0, "v_fmac_f32": [0, 7, 8], "v_fmac_f32_dpp": [0, 7, 8], "v_fmac_f32_e64": [0, 7, 8], "v_fmamk_f16": 0, "v_fmamk_f32": 0, "v_fract_f16": [0, 3, 4], "v_fract_f16_dpp": [0, 3, 4], "v_fract_f16_e64": [0, 3, 4], "v_fract_f16_sdwa": [0, 3, 4], "v_fract_f32": [0, 2, 3, 4, 447], "v_fract_f32_dpp": [0, 3, 4], "v_fract_f32_e64": [0, 2, 3, 4], "v_fract_f32_sdwa": [0, 3, 4], "v_fract_f64": [0, 2, 3, 4], "v_fract_f64_e64": [0, 2, 3, 4], "v_frexp_exp_i16_f16": [0, 3, 4], "v_frexp_exp_i16_f16_dpp": [0, 3, 4], "v_frexp_exp_i16_f16_e64": [0, 3, 4], "v_frexp_exp_i16_f16_sdwa": [0, 3, 4], "v_frexp_exp_i32_f32": [0, 2, 3, 4], "v_frexp_exp_i32_f32_dpp": [0, 3, 4], "v_frexp_exp_i32_f32_e64": [0, 2, 3, 4], "v_frexp_exp_i32_f32_sdwa": [0, 3, 4], "v_frexp_exp_i32_f64": [0, 2, 3, 4], "v_frexp_exp_i32_f64_e64": [0, 2, 3, 4], "v_frexp_mant_f16": [0, 3, 4], "v_frexp_mant_f16_dpp": [0, 3, 4], "v_frexp_mant_f16_e64": [0, 3, 4], "v_frexp_mant_f16_sdwa": [0, 3, 4], "v_frexp_mant_f32": [0, 2, 3, 4], "v_frexp_mant_f32_dpp": [0, 3, 4], "v_frexp_mant_f32_e64": [0, 2, 3, 4], "v_frexp_mant_f32_sdwa": [0, 3, 4], "v_frexp_mant_f64": [0, 2, 3, 4], "v_frexp_mant_f64_e64": [0, 2, 3, 4], "v_interp_mov_f32": [0, 2, 3, 4], "v_interp_mov_f32_e64": [3, 4], "v_interp_p1_f32": [0, 2, 3, 4, 18, 116, 200, 348], "v_interp_p1_f32_e64": [3, 4], "v_interp_p1ll_f16": [0, 3, 4], "v_interp_p1lv_f16": [0, 3, 4], "v_interp_p2_f16": [0, 3, 4], "v_interp_p2_f32": [0, 2, 3, 4], "v_interp_p2_f32_e64": [3, 4], "v_interp_p2_legacy_f16": 4, "v_ldexp_f16": [0, 3, 4], "v_ldexp_f16_dpp": [0, 3, 4], "v_ldexp_f16_e64": [0, 3, 4], "v_ldexp_f16_sdwa": [0, 3, 4], "v_ldexp_f32": [0, 2, 3, 4], "v_ldexp_f32_e64": 2, "v_ldexp_f64": [0, 2, 3, 4], "v_lerp_u8": [0, 2, 3, 4], "v_log_clamp_f32": 2, "v_log_clamp_f32_e64": 2, "v_log_f16": [0, 3, 4], "v_log_f16_dpp": [0, 3, 4], "v_log_f16_e64": [0, 3, 4], "v_log_f16_sdwa": [0, 3, 4], "v_log_f32": [0, 2, 3, 4], "v_log_f32_dpp": [0, 3, 4], "v_log_f32_e64": [0, 2, 3, 4], "v_log_f32_sdwa": [0, 3, 4], "v_log_legacy_f32": [2, 3, 4], "v_log_legacy_f32_dpp": [3, 4], "v_log_legacy_f32_e64": [2, 3, 4], "v_log_legacy_f32_sdwa": [3, 4], "v_lshl_add_u32": [0, 4], "v_lshl_b32": 2, "v_lshl_b32_e64": 2, "v_lshl_b64": 2, "v_lshl_or_b32": [0, 4], "v_lshlrev_b16": [0, 3, 4], "v_lshlrev_b16_dpp": [3, 4], "v_lshlrev_b16_e64": [3, 4], "v_lshlrev_b16_sdwa": [3, 4], "v_lshlrev_b32": [0, 2, 3, 4], "v_lshlrev_b32_dpp": [0, 3, 4], "v_lshlrev_b32_e64": [0, 2, 3, 4], "v_lshlrev_b32_sdwa": [0, 3, 4], "v_lshlrev_b64": [0, 3, 4], "v_lshr_b32": 2, "v_lshr_b32_e64": 2, "v_lshr_b64": 2, "v_lshrrev_b16": [0, 3, 4], "v_lshrrev_b16_dpp": [3, 4], "v_lshrrev_b16_e64": [3, 4], "v_lshrrev_b16_sdwa": [3, 4], "v_lshrrev_b32": [0, 2, 3, 4], "v_lshrrev_b32_dpp": [0, 3, 4], "v_lshrrev_b32_e64": [0, 2, 3, 4], "v_lshrrev_b32_sdwa": [0, 3, 4], "v_lshrrev_b64": [0, 3, 4], "v_mac_f16": [3, 4], "v_mac_f16_dpp": [3, 4], "v_mac_f16_e64": [3, 4], "v_mac_f16_sdwa": 3, "v_mac_f32": [0, 2, 3, 4], "v_mac_f32_dpp": [0, 3, 4], "v_mac_f32_e64": [0, 2, 3, 4], "v_mac_f32_sdwa": 3, "v_mac_legacy_f32": [0, 2], "v_mac_legacy_f32_e64": [0, 2], "v_mad_f16": [3, 4], "v_mad_f32": [0, 2, 3, 4], "v_mad_i16": [0, 3, 4], "v_mad_i32_i16": [0, 4], "v_mad_i32_i24": [0, 2, 3, 4], "v_mad_i64_i32": [0, 2, 3, 4], "v_mad_legacy_f16": 4, "v_mad_legacy_f32": [0, 2, 3, 4], "v_mad_legacy_i16": 4, "v_mad_legacy_u16": 4, "v_mad_mix_f32": 5, "v_mad_mixhi_f16": 5, "v_mad_mixlo_f16": 5, "v_mad_u16": [0, 3, 4], "v_mad_u32_u16": [0, 4], "v_mad_u32_u24": [0, 2, 3, 4], "v_mad_u64_u32": [0, 2, 3, 4], "v_madak_f16": [3, 4], "v_madak_f32": [0, 2, 3, 4], "v_madmk_f16": [3, 4], "v_madmk_f32": [0, 2, 3, 4], "v_max3_f16": [0, 4], "v_max3_f32": [0, 2, 3, 4, 444], "v_max3_i16": [0, 4, 444], "v_max3_i32": [0, 2, 3, 4], "v_max3_u16": [0, 4], "v_max3_u32": [0, 2, 3, 4], "v_max_f16": [0, 3, 4, 447], "v_max_f16_dpp": [0, 3, 4], "v_max_f16_e32": 447, "v_max_f16_e64": [0, 3, 4], "v_max_f16_sdwa": [0, 3, 4], "v_max_f32": [0, 2, 3, 4], "v_max_f32_dpp": [0, 3, 4], "v_max_f32_e64": [0, 2, 3, 4], "v_max_f32_sdwa": [0, 3, 4], "v_max_f64": [0, 2, 3, 4], "v_max_i16": [0, 3, 4], "v_max_i16_dpp": [3, 4], "v_max_i16_e64": [3, 4], "v_max_i16_sdwa": [3, 4], "v_max_i32": [0, 2, 3, 4], "v_max_i32_dpp": [0, 3, 4], "v_max_i32_e64": [0, 2, 3, 4], "v_max_i32_sdwa": [0, 3, 4], "v_max_legacy_f32": 2, "v_max_legacy_f32_e64": 2, "v_max_u16": [0, 3, 4], "v_max_u16_dpp": [3, 4], "v_max_u16_e64": [3, 4], "v_max_u16_sdwa": [3, 4], "v_max_u32": [0, 2, 3, 4], "v_max_u32_dpp": [0, 3, 4], "v_max_u32_e64": [0, 2, 3, 4], "v_max_u32_sdwa": [0, 3, 4], "v_mbcnt_hi_u32_b32": [0, 2, 3, 4], "v_mbcnt_hi_u32_b32_e64": 2, "v_mbcnt_lo_u32_b32": [0, 2, 3, 4], "v_mbcnt_lo_u32_b32_e64": 2, "v_med3_f16": [0, 4], "v_med3_f32": [0, 2, 3, 4], "v_med3_i16": [0, 4], "v_med3_i32": [0, 2, 3, 4], "v_med3_u16": [0, 4], "v_med3_u32": [0, 2, 3, 4], "v_mfma_f32_16x16x16f16": 8, "v_mfma_f32_16x16x1f32": 8, "v_mfma_f32_16x16x2bf16": 8, "v_mfma_f32_16x16x4f16": 8, "v_mfma_f32_16x16x4f32": 8, "v_mfma_f32_16x16x8bf16": 8, "v_mfma_f32_32x32x1f32": 8, "v_mfma_f32_32x32x2bf16": 8, "v_mfma_f32_32x32x2f32": 8, "v_mfma_f32_32x32x4bf16": 8, "v_mfma_f32_32x32x4f16": 8, "v_mfma_f32_32x32x8f16": 8, "v_mfma_f32_4x4x1f32": 8, "v_mfma_f32_4x4x2bf16": 8, "v_mfma_f32_4x4x4f16": 8, "v_mfma_i32_16x16x16i8": 8, "v_mfma_i32_16x16x4i8": 8, "v_mfma_i32_32x32x4i8": 8, "v_mfma_i32_32x32x8i8": 8, "v_mfma_i32_4x4x4i8": 8, "v_min3_f16": [0, 4], "v_min3_f32": [0, 2, 3, 4], "v_min3_i16": [0, 4], "v_min3_i32": [0, 2, 3, 4], "v_min3_u16": [0, 4], "v_min3_u32": [0, 2, 3, 4], "v_min_f16": [0, 3, 4], "v_min_f16_dpp": [0, 3, 4], "v_min_f16_e64": [0, 3, 4], "v_min_f16_sdwa": [0, 3, 4], "v_min_f32": [0, 2, 3, 4], "v_min_f32_dpp": [0, 3, 4], "v_min_f32_e64": [0, 2, 3, 4], "v_min_f32_sdwa": [0, 3, 4], "v_min_f64": [0, 2, 3, 4], "v_min_i16": [0, 3, 4], "v_min_i16_dpp": [3, 4], "v_min_i16_e64": [3, 4], "v_min_i16_sdwa": [3, 4], "v_min_i32": [0, 2, 3, 4], "v_min_i32_dpp": [0, 3, 4], "v_min_i32_e64": [0, 2, 3, 4], "v_min_i32_sdwa": [0, 3, 4], "v_min_legacy_f32": 2, "v_min_legacy_f32_e64": 2, "v_min_u16": [0, 3, 4], "v_min_u16_dpp": [3, 4], "v_min_u16_e64": [3, 4], "v_min_u16_sdwa": [3, 4], "v_min_u32": [0, 2, 3, 4, 447], "v_min_u32_dpp": [0, 3, 4], "v_min_u32_e64": [0, 2, 3, 4], "v_min_u32_sdwa": [0, 3, 4], "v_mov_b32": [0, 2, 3, 4, 447], "v_mov_b32_dpp": [0, 3, 4], "v_mov_b32_e32": 447, "v_mov_b32_e64": [0, 2, 3, 4], "v_mov_b32_sdwa": [0, 3, 4], "v_mov_fed_b32": [2, 3, 4], "v_mov_fed_b32_dpp": [3, 4], "v_mov_fed_b32_e64": [2, 3, 4], "v_mov_fed_b32_sdwa": [3, 4], "v_movreld_b32": [0, 2, 3], "v_movreld_b32_e64": [0, 2, 3], "v_movrels_b32": [0, 2, 3], "v_movrels_b32_e64": [0, 2, 3], "v_movrelsd_2_b32": 0, "v_movrelsd_2_b32_e64": 0, "v_movrelsd_b32": [0, 2, 3], "v_movrelsd_b32_e64": [0, 2, 3], "v_mqsad_pk_u16_u8": [0, 2, 3, 4], "v_mqsad_u32_u8": [0, 2, 3, 4], "v_msad_u8": [0, 2, 3, 4], "v_mul_f16": [0, 3, 4], "v_mul_f16_dpp": [0, 3, 4], "v_mul_f16_e64": [0, 3, 4], "v_mul_f16_sdwa": [0, 3, 4], "v_mul_f32": [0, 2, 3, 4], "v_mul_f32_dpp": [0, 3, 4], "v_mul_f32_e64": [0, 2, 3, 4], "v_mul_f32_sdwa": [0, 3, 4], "v_mul_f64": [0, 2, 3, 4], "v_mul_hi_i32": [0, 2, 3, 4], "v_mul_hi_i32_i24": [0, 2, 3, 4], "v_mul_hi_i32_i24_dpp": [0, 3, 4], "v_mul_hi_i32_i24_e64": [0, 2, 3, 4], "v_mul_hi_i32_i24_sdwa": [0, 3, 4], "v_mul_hi_u32": [0, 2, 3, 4], "v_mul_hi_u32_u24": [0, 2, 3, 4], "v_mul_hi_u32_u24_dpp": [0, 3, 4], "v_mul_hi_u32_u24_e64": [0, 2, 3, 4], "v_mul_hi_u32_u24_sdwa": [0, 3, 4], "v_mul_i32_i24": [0, 2, 3, 4], "v_mul_i32_i24_dpp": [0, 3, 4], "v_mul_i32_i24_e32": 447, "v_mul_i32_i24_e64": [0, 2, 3, 4, 447], "v_mul_i32_i24_sdwa": [0, 3, 4], "v_mul_legacy_f32": [0, 2, 3, 4], "v_mul_legacy_f32_dpp": [0, 3, 4], "v_mul_legacy_f32_e64": [0, 2, 3, 4], "v_mul_legacy_f32_sdwa": [0, 3, 4], "v_mul_lo_i32": 2, "v_mul_lo_u16": [0, 3, 4], "v_mul_lo_u16_dpp": [3, 4], "v_mul_lo_u16_e64": [3, 4], "v_mul_lo_u16_sdwa": [3, 4], "v_mul_lo_u32": [0, 2, 3, 4], "v_mul_u32_u24": [0, 2, 3, 4], "v_mul_u32_u24_dpp": [0, 3, 4], "v_mul_u32_u24_e64": [0, 2, 3, 4], "v_mul_u32_u24_sdwa": [0, 3, 4], "v_mullit_f32": [0, 2], "v_nop": [0, 2, 3, 4, 447], "v_nop_e64": [0, 2, 3, 4], "v_not_b32": [0, 2, 3, 4], "v_not_b32_dpp": [0, 3, 4], "v_not_b32_e64": [0, 2, 3, 4], "v_not_b32_sdwa": [0, 3, 4], "v_or3_b32": [0, 4], "v_or_b32": [0, 2, 3, 4], "v_or_b32_dpp": [0, 3, 4], "v_or_b32_e64": [0, 2, 3, 4], "v_or_b32_sdwa": [0, 3, 4], "v_pack_b32_f16": [0, 4], "v_perm_b32": [0, 3, 4], "v_permlane16_b32": 0, "v_permlanex16_b32": 0, "v_pipeflush": 0, "v_pipeflush_e64": 0, "v_pk_add_f16": [0, 4, 444], "v_pk_add_i16": [0, 4, 444], "v_pk_add_u16": [0, 4, 444], "v_pk_ashrrev_i16": [0, 4], "v_pk_fma_f16": [0, 4], "v_pk_fmac_f16": [0, 8], "v_pk_lshlrev_b16": [0, 4], "v_pk_lshrrev_b16": [0, 4], "v_pk_mad_i16": [0, 4], "v_pk_mad_u16": [0, 4], "v_pk_max_f16": [0, 4], "v_pk_max_i16": [0, 4], "v_pk_max_u16": [0, 4], "v_pk_min_f16": [0, 4], "v_pk_min_i16": [0, 4], "v_pk_min_u16": [0, 4], "v_pk_mul_f16": [0, 4], "v_pk_mul_lo_u16": [0, 4], "v_pk_sub_i16": [0, 4], "v_pk_sub_u16": [0, 4], "v_qsad_pk_u16_u8": [0, 2, 3, 4], "v_rcp_clamp_f32": 2, "v_rcp_clamp_f32_e64": 2, "v_rcp_clamp_f64": 2, "v_rcp_clamp_f64_e64": 2, "v_rcp_f16": [0, 3, 4], "v_rcp_f16_dpp": [0, 3, 4], "v_rcp_f16_e64": [0, 3, 4], "v_rcp_f16_sdwa": [0, 3, 4], "v_rcp_f32": [0, 2, 3, 4], "v_rcp_f32_dpp": [0, 3, 4], "v_rcp_f32_e64": [0, 2, 3, 4], "v_rcp_f32_sdwa": [0, 3, 4], "v_rcp_f64": [0, 2, 3, 4], "v_rcp_f64_e64": [0, 2, 3, 4], "v_rcp_iflag_f32": [0, 2, 3, 4], "v_rcp_iflag_f32_dpp": [0, 3, 4], "v_rcp_iflag_f32_e64": [0, 2, 3, 4], "v_rcp_iflag_f32_sdwa": [0, 3, 4], "v_rcp_legacy_f32": 2, "v_rcp_legacy_f32_e64": 2, "v_readfirstlane_b32": [0, 2, 3, 4], "v_readlane_b32": [0, 2, 3, 4], "v_reg": 464, "v_rndne_f16": [0, 3, 4], "v_rndne_f16_dpp": [0, 3, 4], "v_rndne_f16_e64": [0, 3, 4], "v_rndne_f16_sdwa": [0, 3, 4], "v_rndne_f32": [0, 2, 3, 4], "v_rndne_f32_dpp": [0, 3, 4], "v_rndne_f32_e64": [0, 2, 3, 4], "v_rndne_f32_sdwa": [0, 3, 4], "v_rndne_f64": [0, 2, 3, 4], "v_rndne_f64_e64": [0, 2, 3, 4], "v_rsq_clamp_f32": 2, "v_rsq_clamp_f32_e64": 2, "v_rsq_clamp_f64": 2, "v_rsq_clamp_f64_e64": 2, "v_rsq_f16": [0, 3, 4], "v_rsq_f16_dpp": [0, 3, 4], "v_rsq_f16_e64": [0, 3, 4], "v_rsq_f16_sdwa": [0, 3, 4], "v_rsq_f32": [0, 2, 3, 4], "v_rsq_f32_dpp": [0, 3, 4], "v_rsq_f32_e64": [0, 2, 3, 4], "v_rsq_f32_sdwa": [0, 3, 4], "v_rsq_f64": [0, 2, 3, 4], "v_rsq_f64_e64": [0, 2, 3, 4], "v_rsq_legacy_f32": 2, "v_rsq_legacy_f32_e64": 2, "v_sad_hi_u8": [0, 2, 3, 4], "v_sad_u16": [0, 2, 3, 4], "v_sad_u32": [0, 2, 3, 4], "v_sad_u8": [0, 2, 3, 4], "v_sat_pk_u8_i16": [0, 4], "v_sat_pk_u8_i16_dpp": [0, 4], "v_sat_pk_u8_i16_e64": [0, 4], "v_sat_pk_u8_i16_sdwa": [0, 4], "v_screen_partition_4se_b32": 4, "v_screen_partition_4se_b32_dpp": 4, "v_screen_partition_4se_b32_e64": 4, "v_screen_partition_4se_b32_sdwa": 4, "v_sin_f16": [0, 3, 4], "v_sin_f16_dpp": [0, 3, 4], "v_sin_f16_e64": [0, 3, 4], "v_sin_f16_sdwa": [0, 3, 4], "v_sin_f32": [0, 2, 3, 4, 447], "v_sin_f32_dpp": [0, 3, 4], "v_sin_f32_e64": [0, 2, 3, 4], "v_sin_f32_sdwa": [0, 3, 4], "v_sqrt_f16": [0, 3, 4], "v_sqrt_f16_dpp": [0, 3, 4], "v_sqrt_f16_e64": [0, 3, 4], "v_sqrt_f16_sdwa": [0, 3, 4], "v_sqrt_f32": [0, 2, 3, 4], "v_sqrt_f32_dpp": [0, 3, 4], "v_sqrt_f32_e64": [0, 2, 3, 4], "v_sqrt_f32_sdwa": [0, 3, 4], "v_sqrt_f64": [0, 2, 3, 4], "v_sqrt_f64_e64": [0, 2, 3, 4], "v_sub_co_ci_u32": 0, "v_sub_co_ci_u32_dpp": 0, "v_sub_co_ci_u32_e64": 0, "v_sub_co_ci_u32_sdwa": 0, "v_sub_co_u32": [0, 4], "v_sub_co_u32_dpp": 4, "v_sub_co_u32_e64": 4, "v_sub_co_u32_sdwa": 4, "v_sub_f16": [0, 3, 4], "v_sub_f16_dpp": [0, 3, 4], "v_sub_f16_e64": [0, 3, 4], "v_sub_f16_sdwa": [0, 3, 4], "v_sub_f32": [0, 2, 3, 4], "v_sub_f32_dpp": [0, 3, 4], "v_sub_f32_e64": [0, 2, 3, 4], "v_sub_f32_sdwa": [0, 3, 4], "v_sub_i16": 4, "v_sub_i32": [2, 4], "v_sub_i32_e64": 2, "v_sub_nc_i16": 0, "v_sub_nc_i32": 0, "v_sub_nc_u16": 0, "v_sub_nc_u32": 0, "v_sub_nc_u32_dpp": 0, "v_sub_nc_u32_e64": 0, "v_sub_nc_u32_sdwa": 0, "v_sub_u16": [3, 4], "v_sub_u16_dpp": [3, 4], "v_sub_u16_e64": [3, 4], "v_sub_u16_sdwa": [3, 4], "v_sub_u32": [3, 4], "v_sub_u32_dpp": [3, 4], "v_sub_u32_e64": [3, 4], "v_sub_u32_sdwa": [3, 4], "v_subb_co_u32": 4, "v_subb_co_u32_dpp": 4, "v_subb_co_u32_e64": 4, "v_subb_co_u32_sdwa": 4, "v_subb_u32": [2, 3], "v_subb_u32_dpp": 3, "v_subb_u32_e64": [2, 3], "v_subb_u32_sdwa": 3, "v_subbrev_co_u32": 4, "v_subbrev_co_u32_dpp": 4, "v_subbrev_co_u32_e64": 4, "v_subbrev_co_u32_sdwa": 4, "v_subbrev_u32": [2, 3], "v_subbrev_u32_dpp": 3, "v_subbrev_u32_e64": [2, 3], "v_subbrev_u32_sdwa": 3, "v_subrev_co_ci_u32": 0, "v_subrev_co_ci_u32_dpp": 0, "v_subrev_co_ci_u32_e64": 0, "v_subrev_co_ci_u32_sdwa": 0, "v_subrev_co_u32": [0, 4], "v_subrev_co_u32_dpp": 4, "v_subrev_co_u32_e64": 4, "v_subrev_co_u32_sdwa": 4, "v_subrev_f16": [0, 3, 4], "v_subrev_f16_dpp": [0, 3, 4], "v_subrev_f16_e64": [0, 3, 4], "v_subrev_f16_sdwa": [0, 3, 4], "v_subrev_f32": [0, 2, 3, 4], "v_subrev_f32_dpp": [0, 3, 4], "v_subrev_f32_e64": [0, 2, 3, 4], "v_subrev_f32_sdwa": [0, 3, 4], "v_subrev_i32": 2, "v_subrev_i32_e64": 2, "v_subrev_nc_u32": 0, "v_subrev_nc_u32_dpp": 0, "v_subrev_nc_u32_e64": 0, "v_subrev_nc_u32_sdwa": 0, "v_subrev_u16": [3, 4], "v_subrev_u16_dpp": [3, 4], "v_subrev_u16_e64": [3, 4], "v_subrev_u16_sdwa": [3, 4], "v_subrev_u32": [3, 4], "v_subrev_u32_dpp": [3, 4], "v_subrev_u32_e64": [3, 4], "v_subrev_u32_sdwa": [3, 4], "v_swap_b32": [0, 4], "v_swaprel_b32": 0, "v_trig_preop_f64": [0, 2, 3, 4], "v_trunc_f16": [0, 3, 4], "v_trunc_f16_dpp": [0, 3, 4], "v_trunc_f16_e64": [0, 3, 4], "v_trunc_f16_sdwa": [0, 3, 4], "v_trunc_f32": [0, 2, 3, 4], "v_trunc_f32_dpp": [0, 3, 4], "v_trunc_f32_e64": [0, 2, 3, 4], "v_trunc_f32_sdwa": [0, 3, 4], "v_trunc_f64": [0, 2, 3, 4], "v_trunc_f64_e64": [0, 2, 3, 4], "v_writelane_b32": [0, 2, 3, 4], "v_xad_u32": [0, 4], "v_xnor_b32": [0, 7, 8], "v_xnor_b32_dpp": [0, 7, 8], "v_xnor_b32_e64": [0, 7, 8], "v_xnor_b32_sdwa": [0, 7, 8], "v_xor3_b32": 0, "v_xor_b32": [0, 2, 3, 4], "v_xor_b32_dpp": [0, 3, 4], "v_xor_b32_e64": [0, 2, 3, 4], "v_xor_b32_sdwa": [0, 3, 4], "va_list": 559, "vacat": 601, "vaddr": [0, 2, 3, 4, 8, 62, 63, 332, 392, 393], "vadv": 620, "vagu": 517, "val": [451, 454, 467, 509, 513, 555, 559, 572, 589, 608, 615, 626, 637, 649, 650, 651, 652, 653, 654, 655, 656], "val0": [513, 559], "val1": [513, 559, 561, 615], "val1l": 559, "val2": [513, 559, 561, 615], "val29": 513, "val3": 559, "val7": 559, "val_": 665, "val_express": 442, "val_offset": 442, "val_success": 559, "vala": 572, "valb": 572, "valc": 572, "valgrind": [469, 472, 553, 621], "valid": [52, 139, 237, 382, 442, 445, 446, 447, 454, 455, 458, 461, 462, 464, 467, 468, 470, 473, 474, 480, 482, 487, 495, 497, 500, 501, 504, 509, 517, 519, 522, 525, 527, 528, 529, 534, 537, 538, 551, 559, 560, 561, 563, 564, 571, 572, 579, 581, 584, 587, 589, 591, 600, 605, 606, 608, 609, 610, 616, 621, 623, 627, 629, 630, 649, 650, 651, 652, 653, 654, 655, 656, 660, 661, 662, 663, 664, 665], "valn": 615, "valu": [22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 41, 43, 44, 45, 46, 47, 52, 58, 76, 93, 109, 119, 120, 121, 122, 123, 124, 125, 135, 136, 137, 139, 156, 181, 195, 203, 204, 205, 206, 207, 212, 213, 215, 226, 228, 229, 230, 231, 232, 233, 237, 243, 259, 278, 292, 322, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 371, 373, 374, 375, 376, 377, 378, 382, 388, 406, 425, 441, 445, 448, 450, 451, 453, 454, 456, 459, 460, 462, 463, 464, 467, 468, 469, 472, 473, 474, 476, 477, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 490, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 504, 505, 506, 507, 508, 513, 514, 515, 517, 518, 519, 520, 521, 524, 526, 529, 531, 533, 534, 535, 536, 537, 538, 549, 552, 555, 556, 557, 558, 560, 563, 569, 570, 572, 573, 576, 577, 579, 580, 581, 582, 584, 585, 590, 596, 597, 598, 600, 602, 604, 608, 610, 613, 617, 620, 621, 623, 625, 626, 627, 628, 630, 633, 634, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 659, 660, 661, 662, 663, 664, 665, 666, 668], "valuabl": [466, 472, 512, 517, 539, 545, 594, 620], "value1": 605, "value2": [605, 606], "value_1": 558, "value_2": 558, "value_align": 559, "value_desc": 509, "value_kind": [447, 559], "value_load": 559, "value_n": 558, "value_typ": [447, 631], "valuecol": 556, "valuedisallow": 509, "valueenumer": 520, "valuekind": [447, 467], "valuelist": 616, "valuelistn": 616, "valueopt": 509, "valuerequir": 509, "valuesuffix": 616, "valuet": 589, "valuetrack": [559, 610], "valuetyp": [447, 464, 520, 617, 626], "vanilla": 510, "var": [463, 468, 486, 496, 571, 605, 613, 615, 654, 655, 656, 665], "var1": 463, "var_arg_function_typ": 661, "var_loc": 534, "var_nam": [463, 663, 664, 665], "varang": 447, "vararg": [454, 463, 464, 559, 589, 650, 661], "varbit": 613, "vardecl": 467, "varexpr": [654, 655, 656, 665], "varexprast": [654, 655, 656], "vari": [115, 199, 347, 442, 447, 451, 454, 458, 464, 465, 513, 522, 529, 534, 559, 561, 568, 573, 581, 589, 603, 611, 657, 666], "variabl": [442, 447, 449, 450, 451, 452, 459, 460, 472, 475, 476, 478, 481, 486, 488, 492, 496, 497, 506, 509, 511, 514, 519, 522, 524, 526, 527, 528, 529, 531, 544, 545, 553, 554, 560, 563, 564, 565, 569, 570, 571, 572, 574, 575, 576, 577, 580, 581, 584, 589, 602, 606, 608, 609, 610, 613, 615, 616, 619, 620, 621, 623, 624, 626, 627, 628, 629, 631, 633, 648, 649, 650, 651, 652, 653, 655, 657, 658, 659, 660, 661, 662, 663, 664, 666, 667], "variable_nam": [462, 594], "variable_op": 615, "variableexprast": [649, 650, 651, 652, 653, 654, 655, 656], "variad": [559, 589], "variant": [444, 451, 468, 493, 509, 519, 521, 533, 534, 536, 541, 554, 558, 559, 563, 581, 587, 589, 598, 608, 611, 616, 621, 626, 627, 659, 660, 661, 662, 663, 664, 665], "variat": [450, 452, 464, 472, 519, 561, 594, 607, 611, 625, 626, 633], "varieti": [450, 451, 454, 460, 463, 464, 476, 511, 517, 519, 526, 529, 547, 558, 560, 561, 589, 592, 598, 603, 605, 608, 613, 616, 650, 651, 652, 653, 657, 661, 662, 663, 664, 666], "variou": [442, 446, 450, 451, 454, 458, 459, 462, 464, 467, 469, 489, 493, 497, 507, 511, 512, 514, 516, 519, 524, 525, 529, 538, 554, 556, 558, 559, 562, 564, 565, 570, 572, 575, 576, 577, 584, 585, 589, 591, 594, 597, 598, 600, 602, 605, 606, 613, 617, 620, 621, 626, 627, 628, 629, 631, 648, 649, 651, 652, 656, 659, 660, 662, 663], "varnam": [652, 653, 654, 655, 656, 663, 665], "vasileio": 596, "vasrc0": 8, "vasrc1": 8, "vbr": 478, "vbr4": 454, "vbr5": 454, "vbr6": [454, 600], "vbr7": 600, "vbr8": [454, 600], "vc": 561, "vc110": 582, "vc140": 582, "vc2": 582, "vc4": 582, "vc41": [577, 582], "vc50": 582, "vc70": 582, "vc70dep": 582, "vc80": 582, "vc98": 582, "vcall": 461, "vcc": [0, 2, 3, 4, 9, 10, 19, 21, 32, 33, 53, 54, 55, 62, 63, 66, 67, 70, 71, 72, 74, 75, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 110, 111, 117, 140, 141, 150, 151, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 201, 238, 239, 249, 250, 253, 254, 257, 258, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 295, 296, 300, 301, 307, 308, 309, 328, 332, 333, 334, 335, 349, 351, 362, 363, 383, 384, 385, 392, 393, 396, 397, 400, 401, 404, 405, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422, 447], "vcc_32": 447, "vcc_64": 447, "vcc_hi": 446, "vcc_lo": [96, 446], "vccz": [9, 10, 53, 77, 78, 79, 80, 81, 83, 86, 88, 89, 140, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 171, 174, 175, 177, 238, 260, 261, 262, 263, 264, 265, 267, 271, 272, 274, 295, 296, 300, 301, 307, 308, 309, 328, 333, 334, 335, 336, 383, 407, 408, 409, 410, 411, 412, 414, 418, 419, 421], "vcsrevis": 462, "vdata": [0, 2, 3, 4, 8, 443], "vdata0": [0, 2, 3, 4], "vdata1": [0, 2, 3, 4], "vdst": [0, 1, 2, 3, 4, 5, 6, 7, 8, 443], "ve": [464, 467, 510, 517, 518, 520, 524, 525, 527, 533, 559, 570, 588, 589, 591, 592, 601, 603, 610, 621, 631, 649, 651, 653, 654, 655, 656, 657, 659, 660, 664, 665, 666], "vec": [559, 589], "vec0": 559, "vec01": 559, "vec012": 559, "vec0123": 559, "vec1": [559, 589], "vec2": [559, 589], "vec_load_len_r": 598, "vec_splat": 560, "vec_store_len_r": 598, "vec_type_hint": 447, "vector": [96, 109, 182, 195, 279, 292, 428, 441, 442, 446, 447, 453, 454, 464, 467, 493, 509, 524, 528, 533, 536, 560, 571, 572, 598, 619, 623, 624, 626, 631, 635, 636, 637, 649, 650, 651, 652, 653, 654, 655, 656, 657, 661, 665, 666], "vector_length": 559, "vector_redirect": 559, "vectoriz": 622, "vectorize_width": 625, "vectorti": 559, "vectortyp": [589, 598], "vectypehint": 447, "vega": 447, "vehicl": [463, 467], "vehiclemak": 467, "vehicletyp": 467, "veli": 464, "vend": 557, "vendor": [442, 467, 559, 592, 603, 606, 655], "venu": 601, "venv": 619, "ver60": 577, "verb": 467, "verbatim": [509, 626], "verbos": [469, 470, 472, 486, 490, 496, 502, 506, 554, 565, 589, 594, 626, 628, 629, 631], "verd": 447, "veri": [442, 450, 451, 452, 454, 458, 460, 463, 464, 466, 467, 468, 484, 493, 497, 509, 516, 517, 518, 519, 522, 524, 525, 526, 527, 528, 529, 532, 539, 543, 545, 547, 548, 551, 552, 559, 561, 565, 567, 568, 570, 571, 573, 576, 584, 587, 589, 591, 594, 597, 600, 605, 606, 610, 613, 614, 615, 617, 619, 620, 621, 625, 627, 628, 631, 634, 635, 648, 649, 650, 651, 652, 653, 654, 657, 659, 660, 661, 662, 663, 664, 665, 666], "verif": [447, 509, 539, 559, 587, 598, 602, 619, 623, 624], "verifi": [448, 449, 458, 461, 464, 470, 471, 478, 479, 491, 493, 507, 517, 529, 539, 551, 554, 559, 561, 566, 582, 590, 591, 605, 606, 607, 608, 610, 621, 627, 629, 650, 651, 652, 653, 654, 655, 656, 661, 663, 664, 665], "verify_arch": 491, "verifyfunct": [650, 651, 652, 653, 654, 655, 656], "verifypreservedanalysi": 629, "versa": [451, 513, 554, 559, 581, 596, 610, 621], "version": [447, 448, 449, 450, 451, 454, 459, 462, 463, 464, 468, 470, 473, 474, 476, 478, 480, 481, 482, 486, 490, 491, 494, 495, 496, 500, 501, 502, 504, 505, 506, 508, 509, 510, 511, 512, 514, 517, 518, 520, 523, 524, 526, 529, 531, 534, 536, 538, 544, 546, 549, 550, 554, 559, 567, 570, 571, 572, 573, 577, 582, 584, 586, 588, 589, 591, 593, 594, 596, 598, 600, 602, 603, 605, 608, 610, 613, 616, 619, 625, 626, 627, 628, 629, 630, 633, 650, 651, 652, 654, 655, 656, 661, 662, 663, 665, 666], "version_less": 462, "versionhead": 577, "versioninglicm": 622, "versionsignatur": 577, "vertex": [91, 179, 276, 423, 447, 596], "vertic": [591, 628], "vex": 613, "vf": [594, 596], "vfabi": 559, "vfdatabas": 598, "vfp": [453, 559], "vfp3": 550, "vfprintf": 559, "vfuncid": 559, "vg": [472, 621], "vg_leak": 472, "vgpr": [17, 46, 136, 231, 376, 445, 559], "vgpr0": 447, "vgpr1": 447, "vgpr104": 447, "vgpr120": 447, "vgpr136": 447, "vgpr152": 447, "vgpr168": 447, "vgpr184": 447, "vgpr200": 447, "vgpr216": 447, "vgpr232": 447, "vgpr248": 447, "vgpr255": 447, "vgpr31": 447, "vgpr40": 447, "vgpr56": 447, "vgpr72": 447, "vgpr88": 447, "vgpr_spill_count": 447, "vgprs_use": 447, "vgrp": 447, "vhaddp": [487, 493], "vi": [447, 626], "via": [447, 451, 459, 462, 464, 468, 493, 497, 498, 506, 507, 510, 512, 513, 515, 516, 517, 518, 519, 521, 523, 525, 526, 535, 543, 544, 549, 550, 559, 561, 562, 563, 564, 568, 573, 574, 575, 587, 589, 596, 598, 606, 608, 611, 613, 614, 616, 617, 621, 627, 628, 630, 634, 636, 637, 650, 651, 656], "viabl": [545, 554, 606], "vibrant": 517, "vic": 493, "vice": [451, 513, 554, 559, 581, 596, 610, 621], "video": [465, 589], "view": [442, 447, 451, 464, 465, 481, 497, 561, 562, 563, 570, 579, 591, 592, 594, 607, 620, 648, 652, 659, 663], "view_function_cfg": 663, "view_function_cfg_onli": 663, "viewcfg": [589, 652], "viewcfgonli": [589, 652], "viewer": [467, 628], "viewgraph": 589, "viewpoint": 465, "viewvc": 591, "vii": 447, "vim": [529, 607, 617], "violat": [447, 461, 465, 517, 526, 527, 559, 589, 598, 601, 652, 663], "violent": 465, "virginia": 593, "virt": 589, "virtreg": 464, "virtreg2indexfunctor": 464, "virtregmap": 464, "virtregrewrit": 605, "virtual": [442, 447, 450, 461, 468, 472, 480, 497, 513, 516, 526, 535, 536, 539, 541, 543, 552, 555, 559, 565, 570, 573, 587, 589, 596, 598, 605, 606, 613, 614, 617, 619, 626, 627, 649, 650, 651, 652, 653, 654, 655, 656, 661, 665], "virtualconstprop": 559, "virtualenv": 619, "virtualindex": 559, "visibl": [447, 451, 454, 464, 467, 476, 495, 509, 545, 560, 562, 568, 572, 573, 589, 598, 602, 605, 610, 623, 627], "visit": [458, 491, 495, 496, 502, 504, 505, 520, 526, 589, 634], "visitbasicblock": 589, "visitconstrainedfpintrins": 448, "visitfab": 520, "visitfunct": 629, "visitgcroot": 526, "visiticmpinst": 458, "visitinstruct": 629, "visitor": [458, 520, 526, 613, 650, 658, 659], "visitsrl": 520, "visitxor": 458, "visual": [449, 464, 467, 468, 519, 521, 529, 530, 559, 561, 576, 581, 587, 589, 591, 600, 605, 606, 626, 628, 652, 663], "viv": 559, "vk": 446, "vk_argument": 467, "vk_basicblock": 467, "vla": [521, 559], "vle": 511, "vlen": 559, "vliw": [508, 613], "vlk": 606, "vm": [0, 2, 3, 4, 446, 447, 467, 561], "vm_cnt": [109, 195, 292, 441], "vma": [496, 506, 629], "vmcnt": [109, 195, 292, 441, 447], "vmcnt_sat": [109, 195, 292, 441], "vmodulekei": [634, 635, 636, 637], "vmov": 468, "vmulp": [487, 493], "vn": [446, 560], "vo": 476, "vocabulari": 559, "void": [450, 451, 453, 454, 455, 464, 467, 468, 483, 509, 510, 513, 514, 519, 520, 522, 523, 526, 527, 537, 544, 545, 554, 557, 561, 562, 563, 565, 570, 572, 573, 576, 584, 587, 589, 602, 605, 606, 608, 610, 623, 625, 626, 627, 628, 629, 631, 633, 634, 635, 636, 637, 649, 650, 651, 652, 653, 654, 655, 656], "voidtyp": 589, "volatil": [445, 447, 450, 451, 464, 493, 506, 522, 526, 570, 576, 587, 626], "volcan": 447, "volkan": 542, "volum": [528, 589], "volumin": 589, "volunt": [546, 551, 591, 599, 603], "voluntari": 591, "von": 559, "vop1": [444, 447], "vop2": [444, 447], "vop3": [443, 444, 447], "vop_dpp": 447, "vop_sdwa": 447, "vopc": [444, 447], "vote": [568, 603], "vp_fdiv": 595, "vpaddbyrr_vpadddyrr_vpaddqyrr_vpaddwyrr_vpsubbyrr_vpsubdyrr_vpsubqyrr_vpsubwyrr": 487, "vpaddqyrr": 487, "vpbasicblock": 596, "vpblock": 596, "vpblockbas": 596, "vpgr": 447, "vpic": 593, "vpinstruct": 596, "vplan": 595, "vprecip": 596, "vprecipebas": 596, "vpregionblock": 596, "vprfc": 595, "vpsubqyrr": 487, "vpsubusw": 621, "vptr": [559, 606], "vptransformst": 596, "vpuser": 596, "vpvalu": 596, "vreg": [464, 535, 536, 538], "vscnt": 447, "vset_lan": 453, "vsetq_lane_s32": 453, "vsplth": 560, "vsrc": [0, 2, 3, 4], "vsrc0": [0, 1, 2, 3, 4, 7, 8], "vsrc1": [0, 1, 2, 3, 4, 7, 8], "vsrc2": [0, 2, 3, 4], "vsrc3": [0, 2, 3, 4], "vsx": 559, "vtabl": [467, 468, 559, 598, 606, 623], "vulner": [559, 597, 598, 602, 603, 606], "vv": [468, 472], "vx": [442, 447], "vxf32": 598, "vxf64": 598, "vxi16": 598, "vxi32": 598, "vxi64": 598, "vxi8": 598, "vzeroupp": 487, "w": [18, 21, 38, 116, 130, 200, 208, 210, 211, 219, 221, 222, 223, 348, 351, 368, 446, 464, 494, 495, 496, 501, 505, 521, 526, 545, 559, 561, 610], "w0": 559, "w30": [559, 565], "w31": 559, "w64": [462, 598], "w7100": 447, "w8": 453, "w8100": 447, "w9100": 447, "w_": 617, "wa": [442, 447, 449, 451, 453, 454, 456, 457, 458, 462, 464, 466, 467, 470, 472, 478, 479, 480, 481, 487, 493, 509, 510, 513, 514, 517, 519, 521, 522, 525, 527, 529, 532, 533, 535, 545, 555, 557, 559, 561, 563, 564, 571, 573, 577, 582, 585, 588, 589, 591, 594, 598, 601, 602, 605, 606, 610, 611, 613, 615, 617, 622, 625, 627, 630, 631, 633, 634, 635, 636, 637, 649, 650, 651, 652, 653, 656, 657, 660, 661, 662, 663, 664, 665, 666], "wai": [442, 447, 449, 450, 451, 454, 458, 459, 460, 463, 464, 466, 467, 468, 469, 486, 492, 493, 495, 497, 498, 506, 509, 510, 513, 514, 515, 516, 517, 518, 519, 522, 523, 524, 525, 526, 529, 531, 532, 533, 535, 536, 538, 539, 543, 545, 549, 550, 551, 552, 553, 554, 555, 557, 558, 559, 561, 565, 569, 570, 571, 572, 573, 574, 581, 582, 584, 587, 588, 589, 590, 591, 592, 594, 596, 599, 600, 602, 605, 606, 608, 610, 613, 615, 616, 617, 619, 620, 621, 623, 625, 626, 627, 628, 629, 631, 633, 634, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666], "wait": [109, 195, 292, 441, 447, 466, 467, 493, 546, 573, 599, 611, 634, 649, 651, 660], "waitcnt": [0, 2, 3, 4, 447], "waitset": 493, "waiv": 517, "wake": 591, "walk": [447, 536, 548, 560, 563, 570, 571, 587, 589, 591, 627, 631], "walkarch": 589, "wall": [472, 627, 657, 666], "walltimemark": 630, "wambigu": 483, "want": [442, 450, 452, 454, 460, 462, 464, 465, 466, 467, 468, 481, 493, 509, 510, 512, 517, 518, 520, 522, 525, 527, 528, 529, 531, 532, 533, 536, 545, 546, 548, 549, 550, 551, 552, 553, 556, 557, 559, 561, 563, 566, 570, 571, 572, 573, 586, 587, 588, 589, 590, 591, 592, 602, 603, 605, 606, 607, 609, 610, 611, 614, 615, 617, 620, 626, 627, 628, 629, 631, 633, 648, 649, 650, 651, 652, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 665, 666], "wari": 524, "warn": [445, 447, 460, 462, 468, 470, 476, 483, 495, 500, 501, 505, 510, 517, 521, 529, 531, 536, 548, 554, 559, 563, 573, 598, 610, 613, 617, 619, 622, 633, 634, 635, 656, 658], "warnmissedtransformationspass": 622, "warpsiz": 572, "warrant": 520, "warranti": [517, 627], "warren": 516, "wasincrementallylink": 577, "wasn": [450, 571, 653, 654, 655, 656, 664, 665], "wast": [564, 566, 589, 605, 607, 608, 654, 665], "watch": [447, 517, 540], "waterfal": 546, "wave": [46, 136, 231, 376, 447], "wave32": [445, 446], "wave_rol": 445, "wave_ror": 445, "wave_shl": [445, 447], "wave_shr": 445, "wavefront": [96, 110, 111, 442, 445, 447], "wavefront32": 447, "wavefront64": 447, "wavefront_s": 447, "wavefronts": 447, "wavefrontsize64": 447, "waypoint": 458, "wb": 493, "wc": 559, "wchar_t": 559, "wcover": 467, "wd": 559, "we": [442, 447, 449, 450, 452, 453, 454, 455, 456, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 487, 493, 509, 510, 512, 513, 514, 517, 518, 519, 522, 523, 525, 526, 527, 528, 529, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 543, 545, 546, 548, 549, 550, 551, 552, 553, 555, 556, 557, 558, 559, 561, 563, 564, 565, 568, 570, 572, 573, 575, 576, 577, 580, 581, 582, 584, 585, 586, 587, 588, 589, 590, 591, 592, 594, 598, 601, 602, 603, 605, 606, 608, 609, 610, 611, 613, 614, 617, 621, 622, 623, 625, 627, 628, 629, 630, 631, 633, 634, 635, 636, 637, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666], "weak": [451, 454, 494, 495, 496, 521, 524, 559, 562, 571, 573, 589, 598, 654, 665], "weak_odr": [454, 559], "weakanylinkag": 589, "weaken": [493, 495], "weaker": 559, "weakest": [451, 464], "weakodrlinkag": 589, "weakvh": 589, "wealth": 512, "web": [466, 512, 517, 593, 598], "webassembli": [464, 559, 594], "webkit": [559, 594, 608], "webkit_jscc": [454, 559], "websit": [463, 553, 591, 603], "wednesdai": 568, "week": [466, 512, 568, 594, 601, 603], "weekend": [466, 568], "weekli": 568, "weight": [521, 559, 565, 597], "weird": 464, "welcom": [465, 466, 511, 517, 528, 529, 531, 549, 568, 573, 610, 627, 632, 633, 634, 635, 636, 637, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666], "well": [442, 447, 448, 450, 451, 454, 458, 459, 460, 462, 463, 464, 465, 466, 467, 469, 481, 482, 493, 494, 497, 507, 509, 512, 513, 515, 516, 517, 520, 522, 523, 524, 529, 533, 536, 543, 544, 545, 548, 551, 552, 554, 558, 561, 562, 563, 565, 568, 571, 572, 576, 577, 579, 580, 585, 587, 588, 589, 591, 593, 594, 595, 598, 600, 601, 602, 603, 605, 606, 607, 610, 615, 617, 621, 622, 624, 625, 627, 628, 629, 633, 649, 650, 651, 653, 654, 655, 656, 658, 659, 660, 661, 662, 664, 665], "weng": 510, "wennborg": 551, "went": [467, 651, 652, 663], "were": [442, 447, 451, 453, 464, 467, 468, 472, 479, 481, 486, 492, 493, 500, 501, 506, 507, 509, 510, 513, 514, 517, 519, 524, 531, 536, 551, 553, 554, 557, 559, 560, 561, 570, 571, 573, 577, 587, 589, 591, 598, 601, 605, 606, 610, 613, 616, 617, 625, 629, 634, 657, 666], "weren": [517, 536], "werror": 544, "wf": 559, "wg21": 606, "wget": 529, "wgp": 447, "wgp_mode": 447, "what": [442, 445, 446, 447, 450, 451, 453, 454, 455, 457, 459, 462, 464, 467, 468, 471, 472, 473, 481, 490, 493, 497, 507, 509, 510, 511, 513, 516, 517, 519, 520, 528, 529, 531, 533, 534, 536, 537, 539, 540, 545, 546, 550, 551, 553, 554, 558, 559, 560, 563, 565, 566, 568, 570, 572, 573, 575, 577, 581, 584, 585, 587, 588, 589, 590, 592, 594, 596, 598, 599, 600, 605, 606, 607, 609, 610, 611, 613, 614, 615, 616, 617, 620, 626, 628, 630, 631, 635, 636, 637, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 659, 660, 661, 662, 663, 664, 665, 666], "whatev": [450, 462, 468, 487, 509, 510, 513, 519, 527, 529, 548, 550, 559, 568, 570, 575, 587, 588, 589, 611, 631], "whatsoev": [517, 559], "when": [94, 338, 426, 442, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 457, 459, 460, 462, 463, 464, 465, 468, 469, 470, 472, 476, 480, 481, 482, 486, 487, 493, 494, 495, 496, 497, 498, 500, 501, 502, 505, 506, 507, 509, 510, 512, 513, 514, 515, 517, 518, 519, 520, 521, 525, 526, 527, 528, 529, 531, 533, 537, 538, 539, 541, 545, 546, 547, 548, 549, 550, 551, 552, 553, 558, 559, 560, 562, 563, 564, 565, 566, 568, 569, 570, 571, 572, 573, 574, 576, 577, 579, 581, 584, 586, 587, 588, 589, 591, 592, 596, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 613, 615, 616, 617, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 633, 634, 635, 636, 637, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 659, 660, 661, 662, 663, 664, 665, 666], "whenev": [442, 449, 450, 463, 467, 468, 469, 509, 515, 545, 556, 558, 559, 570, 589, 598, 605, 608, 621, 648, 656], "where": [47, 137, 233, 378, 442, 443, 445, 446, 447, 448, 451, 453, 454, 455, 456, 458, 461, 462, 464, 465, 466, 467, 468, 470, 472, 476, 481, 483, 486, 487, 492, 493, 494, 495, 497, 498, 507, 508, 509, 510, 513, 514, 517, 519, 520, 523, 524, 525, 526, 527, 529, 531, 532, 533, 534, 538, 539, 544, 545, 550, 551, 552, 553, 554, 555, 558, 559, 561, 563, 564, 565, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 584, 585, 587, 588, 589, 590, 591, 596, 598, 599, 600, 601, 602, 603, 605, 606, 610, 615, 616, 617, 620, 621, 622, 626, 627, 628, 629, 631, 633, 635, 648, 650, 651, 652, 654, 655, 656, 658, 659, 660, 661, 662, 663, 665], "wherea": [453, 464, 475, 501, 513, 519, 524, 533, 535, 559, 570, 573, 589, 596, 605], "wherebi": [581, 591], "wherev": [510, 589, 656], "whether": [442, 445, 447, 448, 450, 454, 455, 458, 461, 462, 464, 467, 473, 474, 476, 483, 507, 510, 513, 519, 520, 521, 526, 527, 529, 534, 535, 543, 544, 549, 552, 553, 558, 559, 561, 562, 563, 571, 574, 581, 584, 587, 588, 589, 590, 591, 594, 596, 600, 601, 602, 603, 605, 606, 608, 610, 613, 615, 622, 623, 626, 628, 630, 634, 649, 651, 652, 653, 654, 655, 656, 657, 660, 663, 664, 665, 666], "which": [14, 17, 20, 29, 47, 58, 60, 61, 112, 115, 118, 126, 137, 145, 146, 196, 199, 202, 214, 232, 233, 243, 245, 246, 313, 331, 344, 347, 350, 359, 377, 378, 388, 390, 391, 442, 443, 444, 445, 446, 447, 451, 452, 453, 454, 456, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 472, 473, 474, 476, 478, 479, 480, 481, 482, 483, 484, 487, 491, 493, 494, 495, 497, 498, 504, 507, 509, 510, 512, 513, 514, 515, 517, 519, 520, 521, 522, 524, 525, 526, 529, 530, 531, 532, 533, 534, 538, 539, 540, 541, 543, 544, 545, 546, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 570, 571, 572, 573, 574, 577, 579, 580, 581, 582, 584, 585, 587, 588, 589, 590, 591, 592, 593, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 613, 614, 615, 616, 617, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 633, 634, 635, 636, 637, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 660, 661, 662, 663, 664, 665, 666], "whichev": [588, 605], "while": [232, 377, 442, 444, 445, 447, 449, 450, 454, 456, 457, 458, 462, 463, 464, 465, 467, 468, 472, 493, 507, 509, 512, 513, 515, 516, 517, 518, 519, 523, 525, 527, 528, 529, 532, 534, 535, 538, 539, 543, 545, 548, 549, 550, 554, 556, 557, 559, 560, 561, 562, 563, 568, 570, 571, 574, 575, 576, 577, 581, 582, 584, 585, 586, 587, 588, 591, 594, 599, 600, 601, 602, 603, 605, 608, 610, 611, 614, 615, 617, 621, 625, 627, 629, 637, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 659, 660, 663, 665, 666], "whilst": [494, 500, 501, 506], "whip": [653, 664], "whirlwind": [649, 660], "whisker": 606, "white": 511, "whitelist": 481, "whitelist_fun": 481, "whitepap": [569, 628], "whitespac": [468, 476, 491, 495, 517, 616, 648, 649, 650, 651, 652, 653, 654, 655, 656, 659, 660, 661, 662, 663, 664, 665], "whitespaceoranycom": 616, "whitespaceorcstylecom": 616, "whizbang": 467, "who": [457, 460, 462, 463, 514, 517, 518, 528, 533, 535, 553, 558, 559, 568, 571, 573, 586, 588, 591, 601, 603, 611, 624, 626, 633, 634, 654, 657, 658, 665, 666], "whoa": [651, 662], "whole": [442, 447, 449, 464, 466, 476, 498, 517, 519, 520, 524, 526, 543, 550, 551, 555, 558, 559, 561, 565, 571, 573, 587, 589, 598, 600, 602, 609, 619, 620, 621, 623, 627, 633, 634, 649, 651, 652, 660, 662, 663], "whom": [571, 585], "whose": [442, 445, 447, 450, 454, 458, 464, 467, 472, 476, 486, 493, 494, 495, 497, 498, 514, 516, 559, 563, 582, 584, 589, 596, 600, 603, 605, 613, 615, 616, 626, 630, 634, 649, 653, 654, 660, 664, 665], "why": [442, 447, 450, 456, 457, 465, 466, 467, 493, 510, 517, 525, 529, 544, 552, 559, 566, 570, 571, 582, 588, 589, 593, 605, 606, 607, 610, 613, 614, 627, 631, 649, 650, 652, 658, 659, 660, 663], "wibbl": 504, "wide": [446, 447, 450, 451, 454, 460, 463, 464, 465, 496, 517, 526, 527, 529, 547, 559, 572, 575, 584, 585, 589, 596, 598, 603, 605, 615, 616, 623, 632, 651, 652, 657, 662, 663, 666], "wideaddr": 559, "widecharact": 584, "widen": [464, 538, 596, 625, 627], "widenable_cond": 559, "widenable_condit": 559, "widenscalar": 538, "widenscalarfor": 538, "widenscalarif": 538, "widenscalartonextpow2": 538, "wider": [447, 451, 520, 527, 534, 538], "widest": 517, "width": [446, 451, 453, 487, 493, 496, 510, 526, 534, 563, 577, 587, 589, 594, 598, 622, 625, 657, 666], "wiki": [462, 529, 550, 561, 593, 594, 602], "wikipedia": [558, 559, 652, 663], "wild": [509, 653, 664], "wildcard": [481, 495, 505], "wili": 527, "willing": [466, 657, 666], "willreturn": [454, 559], "win": [450, 467, 589, 606], "win32": [464, 529, 531, 582, 611, 621], "wincomplet": 483, "windbg": 605, "window": [460, 462, 464, 467, 472, 476, 483, 497, 509, 510, 513, 514, 522, 529, 530, 531, 546, 557, 559, 573, 582, 585, 589, 591, 605, 611, 621, 627, 650, 651, 652, 653, 663], "wineh": 513, "winrt": 576, "winrtsmartpoint": 576, "winzip": 531, "wip": 447, "wire": 522, "wireshark": 561, "wise": [521, 560, 615], "wish": [462, 466, 472, 476, 509, 510, 520, 524, 527, 529, 539, 549, 553, 559, 571, 573, 585, 589, 598, 601, 606, 610, 615, 626, 658], "wit": [447, 601], "with_assert": 462, "withcolor": 467, "withentryv": 492, "withhold": 605, "within": [442, 445, 447, 450, 453, 454, 458, 463, 464, 465, 467, 468, 472, 486, 493, 495, 496, 504, 505, 507, 510, 513, 514, 517, 519, 521, 526, 527, 529, 538, 543, 552, 554, 559, 560, 563, 571, 572, 573, 574, 575, 577, 581, 584, 585, 587, 589, 590, 591, 594, 596, 598, 600, 601, 602, 603, 605, 606, 608, 610, 615, 619, 620, 623, 627, 630, 631, 633, 651, 652, 653, 654, 655, 656, 662, 663, 664, 665], "withmoduledo": [573, 634], "without": [442, 445, 446, 447, 451, 453, 454, 455, 458, 460, 462, 463, 464, 467, 468, 469, 472, 474, 476, 480, 481, 486, 493, 494, 495, 498, 505, 506, 509, 510, 513, 514, 515, 517, 519, 521, 524, 526, 527, 529, 533, 534, 538, 539, 544, 554, 555, 559, 560, 561, 562, 563, 566, 567, 570, 571, 573, 574, 577, 582, 584, 585, 586, 587, 588, 589, 590, 591, 592, 594, 598, 600, 601, 605, 606, 607, 608, 610, 611, 613, 617, 621, 622, 625, 626, 627, 649, 651, 652, 653, 654, 655, 656, 659, 660, 662, 663, 664, 665], "wl": [529, 574, 598, 653], "wlandri": 593, "wno": 548, "woff2": 561, "wojciech": 587, "wolf": 516, "won": [462, 464, 467, 510, 517, 527, 529, 536, 549, 550, 555, 559, 591, 599, 605, 606, 616, 620, 621, 650, 651, 656, 662], "wonder": [467, 517, 522, 527, 552, 606, 651, 662], "wontfix": 457, "word": [442, 445, 447, 451, 455, 464, 465, 466, 467, 509, 514, 516, 517, 519, 521, 522, 526, 537, 539, 552, 559, 561, 570, 579, 589, 594, 601, 605, 606, 626, 630, 633, 650, 661], "word32": 447, "word64": 447, "word_0": [445, 447, 579], "word_1": [445, 447, 579], "word_n": 579, "wordsiz": 526, "work": [442, 448, 449, 450, 451, 455, 458, 459, 460, 463, 464, 465, 467, 468, 469, 472, 473, 474, 478, 479, 481, 487, 492, 495, 497, 498, 505, 509, 510, 511, 513, 514, 517, 518, 519, 520, 522, 525, 526, 528, 529, 531, 532, 535, 539, 544, 545, 546, 548, 549, 550, 551, 552, 553, 554, 557, 558, 559, 560, 562, 563, 564, 565, 568, 569, 570, 573, 582, 587, 588, 589, 590, 591, 592, 594, 595, 598, 601, 603, 604, 610, 611, 613, 616, 617, 619, 620, 621, 623, 624, 626, 627, 629, 631, 634, 635, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666], "work_group_size_hint": 447, "workabl": 589, "workaround": [447, 493, 532, 592], "worker": [472, 561, 573], "workflow": [449, 460, 529, 546, 588, 628], "workgroup": 447, "workgroup_s": 447, "workgroup_size_hint": 447, "workgroups": 447, "workgroupsizehint": 447, "worklist": [571, 587, 589], "workload": 447, "worksform": 457, "workshop": 568, "workspac": 529, "world": [463, 465, 514, 517, 526, 529, 531, 545, 559, 566, 568, 588, 598, 605, 607, 657, 659, 666], "worri": [509, 559, 588, 649, 656, 660], "wors": [453, 464, 554, 559], "worst": [543, 589, 604, 605, 610, 657, 666], "worth": [442, 458, 459, 460, 467, 524, 532, 538, 547, 552, 570, 589, 606, 628], "worthwhil": 589, "would": [442, 446, 447, 449, 450, 451, 453, 454, 455, 457, 458, 459, 461, 462, 463, 464, 466, 467, 468, 472, 473, 478, 495, 497, 505, 509, 510, 513, 514, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 527, 531, 533, 538, 543, 546, 548, 552, 553, 554, 558, 559, 560, 561, 563, 565, 566, 570, 571, 573, 574, 575, 576, 577, 581, 584, 585, 587, 588, 589, 590, 591, 593, 594, 598, 601, 602, 605, 606, 607, 608, 610, 611, 613, 616, 617, 621, 622, 623, 625, 627, 628, 629, 630, 631, 633, 635, 649, 650, 651, 652, 656, 657, 660, 661, 662, 663, 664, 666], "wouldn": [467, 554, 563, 654, 656, 665], "wp": 545, "wpdre": 559, "wpdresolut": 559, "wrap": [442, 454, 463, 467, 487, 509, 517, 524, 527, 529, 533, 557, 559, 564, 573, 589, 605, 606, 611, 631, 633, 634, 649, 650, 658, 659, 660, 661], "wrapcolumn": 631, "wrapper": [467, 492, 510, 564, 571, 573, 574, 587, 589, 611, 626], "wrf_": 593, "wrf_r": 593, "wrinkl": 557, "writabl": [446, 494, 518, 521, 577, 605], "write": [58, 243, 388, 442, 447, 451, 458, 468, 476, 477, 478, 479, 481, 483, 485, 487, 488, 490, 495, 496, 497, 498, 504, 505, 506, 507, 508, 510, 512, 518, 519, 524, 528, 529, 531, 532, 534, 535, 539, 557, 559, 561, 565, 566, 571, 572, 573, 577, 581, 582, 587, 589, 594, 596, 597, 603, 605, 606, 607, 608, 610, 611, 615, 617, 624, 628, 629, 631, 648, 651, 652, 655, 656, 657, 659, 662, 663, 666, 667], "write_escap": 627, "write_onli": 447, "write_regist": 559, "writeabl": [46, 136, 231, 376], "writealia": 571, "writealu": 487, "writeattribut": 613, "writeonli": [447, 454, 559], "writer": [451, 454, 464, 484, 508, 509, 520, 522, 526, 530, 559, 571, 626, 627], "writesetcc": 487, "writethunk": 571, "writethunkoralia": 571, "writetypet": 520, "writev": 626, "written": [442, 447, 449, 450, 463, 464, 467, 478, 479, 481, 483, 485, 487, 488, 493, 495, 498, 512, 517, 518, 521, 523, 529, 535, 553, 558, 559, 561, 563, 571, 572, 577, 581, 582, 587, 589, 591, 592, 593, 594, 603, 605, 606, 607, 610, 611, 613, 615, 619, 621, 625, 626, 630, 631, 652, 653, 656, 657, 658, 659, 663, 664, 666], "wrong": [450, 452, 457, 465, 467, 510, 522, 553, 598, 602, 611, 651, 656], "wrote": [520, 527, 559, 655, 656], "wswitch": 467, "wu": 510, "www": [452, 462, 551, 591, 593, 594], "wzr": 559, "x": [18, 116, 200, 348, 442, 444, 445, 446, 447, 451, 453, 456, 464, 467, 468, 469, 476, 481, 486, 494, 495, 496, 500, 501, 502, 504, 505, 509, 510, 514, 517, 519, 521, 522, 525, 526, 529, 533, 534, 538, 551, 554, 559, 561, 565, 570, 572, 576, 582, 587, 589, 591, 605, 610, 613, 615, 616, 617, 623, 626, 627, 631, 633, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 659, 660, 661, 662, 663, 664, 665, 666], "x0": [521, 565], "x00": [600, 668], "x00argpath": 600, "x00function": 600, "x00kei": 600, "x00path": 600, "x00remark": 600, "x00valu": 600, "x01": 668, "x03": 668, "x04": 668, "x08": 668, "x0abar": 561, "x0c": 668, "x1": [521, 563, 587, 598, 654, 665], "x11": 589, "x15": [521, 559], "x16": [444, 521], "x18": 598, "x2": [444, 559, 563, 587, 654, 665], "x20": 565, "x21": 565, "x24": 668, "x3": [444, 563, 587, 654, 665], "x30": 559, "x32": 468, "x4": [444, 563, 587, 654, 665], "x44": 668, "x64": [468, 529, 531, 546], "x8": 444, "x83": 668, "x86": [449, 451, 461, 462, 468, 473, 474, 487, 493, 495, 496, 513, 519, 520, 524, 529, 533, 547, 558, 559, 560, 565, 577, 594, 604, 610, 613, 615, 617, 621, 623, 625, 626, 629, 631, 655], "x86_64": [461, 464, 468, 487, 493, 506, 518, 524, 525, 545, 547, 548, 549, 559, 565, 599, 602, 605, 608, 610, 621, 628, 631, 655], "x86_fastcal": 464, "x86_fastcallcc": 454, "x86_fp80": [454, 559, 571], "x86_mmx": 454, "x86_ssecal": 626, "x86_stdcall": 464, "x86_stdcallcc": 454, "x86_thiscal": 464, "x86call": 615, "x86callingconv": 626, "x86codeemitt": 626, "x86dagtodagisel": 629, "x86framelow": 464, "x86geninstrinfo": 487, "x86genregisterinfo": [464, 626], "x86ii": 626, "x86inst": 617, "x86instrinfo": 626, "x86instrmmx": 626, "x86instrss": 626, "x86iseldagtodag": 629, "x86isellow": 629, "x86registerinfo": [464, 626], "x86reloc": 626, "x86retflag": 615, "x86subtarget": 629, "x86targetasminfo": 626, "x86targetlow": 629, "x86targetmachin": [464, 629], "x87": [533, 559], "x8b": 668, "x_": 617, "xab": 561, "xadd": 451, "xarch": 529, "xarg": 591, "xc3": 668, "xc4": 668, "xc7": 668, "xchg": [451, 559], "xclang": 553, "xcode": [462, 515, 529], "xcodebuild": 462, "xcoff": 559, "xcore": [464, 529, 559, 594], "xctoolchain": 462, "xd": 615, "xdata": 577, "xdemangl": 481, "xdigit": 468, "xe8": 668, "xec": 668, "xemac": 529, "xf7": 561, "xf8": 561, "xfail": [472, 621], "xinmin": 596, "xlc": 529, "xlen": 559, "xmax": [653, 664], "xme": 497, "xmi": 497, "xmin": [653, 664], "xml": 454, "xmm": [468, 559, 626], "xmm0": [468, 493, 608, 615, 617, 621], "xmm1": [487, 493, 615, 617], "xmm10": 617, "xmm11": 617, "xmm12": 617, "xmm13": 617, "xmm14": 617, "xmm15": 617, "xmm2": [487, 493, 559, 615, 617], "xmm3": [487, 493, 559, 615, 617], "xmm4": [493, 615, 617], "xmm5": [615, 617], "xmm6": [615, 617], "xmm7": [615, 617], "xmm8": 617, "xmm9": 617, "xmo": 511, "xnack": [201, 238, 239, 249, 250, 253, 254, 255, 257, 258, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 349, 351, 362, 363, 383, 384, 385, 392, 393, 396, 397, 400, 401, 402, 404, 405, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422, 447], "xnack_mask": [46, 446, 447], "xnack_mask_hi": 446, "xnack_mask_lo": 446, "xnor": 626, "xnorrr": 626, "xor": [445, 446, 464, 513, 572, 587, 589, 625, 626], "xor16rr": 464, "xor32rr": [464, 565], "xor64rr": 464, "xor8rr": 464, "xorl": 606, "xorri": 626, "xorrr": 626, "xp": 611, "xpass": 472, "xplus1": 615, "xray_always_instru": [628, 629], "xray_basic_opt": 628, "xray_fdr_opt": 628, "xray_instr_map": [628, 629], "xray_log_fin": 628, "xray_log_flush": 628, "xray_log_interfac": 628, "xray_logfile_bas": 628, "xray_mod": [628, 629], "xray_never_instru": 628, "xray_opt": [628, 629], "xraylogimpl": 628, "xs1": 511, "xstep": [653, 664], "xt": 447, "xtemp": 451, "xue": 596, "xuetian": 510, "xvf": 531, "xvjf": 529, "xword": 626, "xx": [452, 495, 559], "xxx": [467, 468, 495, 619, 620, 626], "xxxasmprint": 626, "xxxbegin": 589, "xxxbranchselector": 626, "xxxcallingconv": 626, "xxxcodeemitt": 626, "xxxend": 589, "xxxgenasmwrit": 626, "xxxgencallingconv": 626, "xxxgencodeemitt": 626, "xxxgendagisel": 626, "xxxgeninstrinfo": 626, "xxxgenregisterinfo": 626, "xxxinstrdescriptor": 626, "xxxinstrformat": 626, "xxxinstrinfo": [556, 626], "xxxiseldagtodag": 626, "xxxisellow": 626, "xxxiter": 589, "xxxjitinfo": 626, "xxxkind": 552, "xxxlayer": 573, "xxxregisterinfo": 626, "xxxreloc": 626, "xxxschedul": 626, "xxxsubtarget": 626, "xxxtargetasminfo": 626, "xxxtargetlow": 626, "xxxtargetmachin": 626, "xxxtrait": 631, "xxxxxx": 628, "xy": 444, "xyz": [444, 473, 474, 529, 556], "xyzw": 444, "xyzzi": 467, "xz": 519, "xzr": 559, "y": [18, 116, 200, 348, 442, 445, 446, 447, 453, 464, 470, 509, 510, 514, 515, 517, 521, 525, 529, 551, 559, 570, 572, 582, 587, 589, 605, 606, 615, 617, 625, 627, 631, 649, 651, 653, 654, 655, 660, 662, 664, 665], "yaml": [447, 470, 487, 497, 565, 597, 628, 629, 668], "yaxxz": 519, "ye": [444, 517, 522, 527, 529, 561, 566, 571, 587, 604, 607, 637], "year": [459, 517, 592, 603, 617], "yet": [451, 464, 466, 467, 468, 480, 498, 509, 513, 517, 519, 526, 534, 546, 548, 557, 558, 559, 564, 571, 573, 587, 589, 593, 598, 603, 606, 610, 626, 627, 628, 635, 636, 637, 650, 652, 653, 662, 663, 664], "yield": [454, 472, 509, 513, 527, 559, 587, 589, 610, 620, 629, 634], "yin": 631, "ymax": [653, 664], "ymin": [653, 664], "ymm": [559, 598], "ymm0": 608, "yosefk": 467, "you": [449, 450, 451, 452, 454, 457, 458, 460, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 474, 476, 481, 485, 486, 487, 493, 497, 506, 507, 509, 510, 512, 514, 515, 517, 518, 519, 520, 522, 524, 525, 526, 527, 528, 529, 531, 532, 533, 536, 537, 538, 539, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 559, 561, 563, 565, 568, 570, 571, 572, 573, 574, 577, 581, 585, 586, 587, 588, 589, 590, 591, 594, 598, 599, 602, 603, 605, 606, 607, 610, 611, 613, 614, 615, 616, 617, 619, 620, 621, 624, 626, 627, 628, 629, 631, 633, 634, 635, 636, 637, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666], "young": 589, "younger": 493, "your": [449, 450, 451, 452, 458, 460, 464, 465, 466, 467, 468, 470, 476, 481, 487, 497, 509, 510, 512, 517, 518, 519, 520, 522, 524, 525, 526, 527, 528, 529, 531, 532, 537, 544, 545, 547, 548, 549, 550, 551, 553, 554, 559, 560, 561, 566, 569, 570, 572, 573, 581, 586, 588, 590, 591, 597, 599, 600, 601, 602, 607, 610, 612, 617, 618, 620, 621, 624, 626, 629, 631, 633, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 662, 663, 664, 665, 666], "youralloc": 545, "yourregex": 468, "yourself": [457, 462, 466, 512, 517, 520, 529, 559, 588, 589, 615], "yout": 631, "youtu": 466, "yplus1": 615, "ystep": [653, 664], "ysvn": 551, "yy": 572, "yypvr": 607, "z": [18, 91, 116, 179, 200, 276, 348, 423, 445, 447, 454, 464, 468, 470, 495, 496, 505, 511, 525, 551, 559, 565, 572, 587, 605, 615, 616, 617, 648, 649, 650, 651, 652, 653, 654, 655, 656, 659, 660, 661, 662, 663, 664, 665], "z0": [446, 447, 468, 559, 648, 649, 650, 651, 652, 653, 654, 655, 656, 659, 660, 661, 662, 663, 664, 665], "z2": 653, "z3": 462, "z7": [559, 577, 605], "z_": [446, 468], "za": [446, 447, 468, 559, 565, 648, 649, 650, 651, 652, 653, 654, 655, 656, 659, 660, 661, 662, 663, 664, 665], "zachari": 594, "zak": 596, "zc": 559, "zchf": 550, "zero": [442, 443, 445, 446, 447, 453, 454, 464, 467, 468, 469, 472, 473, 474, 476, 477, 478, 479, 480, 481, 482, 484, 485, 488, 490, 493, 494, 495, 496, 500, 501, 502, 504, 505, 506, 507, 508, 509, 510, 513, 514, 521, 524, 526, 527, 534, 537, 539, 559, 560, 561, 563, 564, 565, 572, 573, 577, 587, 589, 596, 598, 602, 605, 606, 608, 610, 615, 621, 623, 625, 626, 630, 649, 652, 657, 660, 663, 664, 665, 666], "zeroargfp": 615, "zerocont": 602, "zerodirect": 626, "zeroext": [454, 559], "zeroiniti": 559, "zeroormor": 509, "zext": [554, 555], "zhou": 596, "zi": [577, 605], "zip": 529, "zipp": 591, "zlib": [462, 495, 514, 529], "zlib1g": 550, "zmm": 598, "zone": [559, 606], "zorg": 546, "zork": 615, "zy": 559, "zz": 559, "\u03c6": [534, 559]}, "titles": ["Syntax of Core GFX10 Instructions", "Syntax of gfx1011 and gfx1012 Instructions", "Syntax of Core GFX7 Instructions", "Syntax of Core GFX8 Instructions", "Syntax of Core GFX9 Instructions", "Syntax of gfx900, gfx902 and gfx909 Instructions", "Syntax of gfx904 Instructions", "Syntax of gfx906 Instructions", "Syntax of gfx908 Instructions", "src", "src", "Type deviation", "vdst", "vsrc", "vaddr", "vaddr", "vaddr", "vaddr", "attr", "sbase", "sbase", "sbase", "imm16", "imm32", "vdata", "vdata", "vdata", "vdata", "vdata", "vdata", "vdata", "sdata", "sdata", "sdata", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "imm32", "imm32", "hwreg", "label", "fx", "m", "m", "m", "msg", "soffset", "soffset", "soffset", "opt", "param", "imm3", "dst", "srsrc", "srsrc", "saddr", "saddr", "ssamp", "sdata", "sdata", "sdata", "sdst", "sdst", "sdst", "sdst", "sdst", "sdst", "sdst", "sdst", "imm16", "src", "src", "src", "src", "src", "vsrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "tgt", "Type deviation", "imm16", "vaddr", "vaddr", "vcc", "vdata", "vdata", "vdata", "vdata", "vdst", "vdst", "vdst", "vdst", "vsrc", "vsrc", "vsrc", "vsrc", "waitcnt", "sdst", "ssrc", "vaddr", "vaddr", "vaddr", "vaddr", "attr", "sbase", "sbase", "imm16", "imm32", "vdata", "vdata", "vdata", "vdata", "vdata", "vdata", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "imm32", "hwreg", "label", "m", "msg", "soffset", "soffset", "opt", "param", "dst", "srsrc", "srsrc", "ssamp", "sdst", "sdst", "sdst", "sdst", "sdst", "sdst", "sdst", "sdst", "imm16", "src", "src", "src", "src", "src", "src", "src", "src", "src", "src", "vsrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "tgt", "Type deviation", "imm16", "vcc", "vdata", "vdata", "vdata", "vdata", "vdst", "vdst", "vdst", "vdst", "vsrc", "vsrc", "vsrc", "vsrc", "waitcnt", "vaddr", "vaddr", "vaddr", "vaddr", "attr", "sbase", "sbase", "imm16", "imm32", "vdata", "vdata", "vdata", "vdata", "vdata", "vdata", "vdata", "vdata", "vdata", "vdata", "vdata", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "imm32", "imm32", "hwreg", "imask", "label", "m", "m", "m", "msg", "soffset", "soffset", "soffset", "opt", "param", "imm3", "dst", "srsrc", "srsrc", "ssamp", "sdata", "sdata", "sdata", "sdst", "sdst", "sdst", "sdst", "sdst", "sdst", "sdst", "sdst", "imm16", "src", "src", "src", "src", "src", "src", "vsrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "tgt", "Type deviation", "imm16", "vcc", "vdata", "vdata", "vdata", "vdata", "vdst", "vdst", "vdst", "vdst", "vsrc", "vsrc", "vsrc", "vsrc", "waitcnt", "fx", "m", "src", "src", "vdst", "fx", "m", "src", "src", "vdst", "fx", "m", "m", "m", "src", "src", "src", "Type deviation", "vdst", "vsrc", "vaddr", "adst", "adst", "adst", "adst", "asrc", "asrc", "asrc", "asrc", "vdata", "vdst", "fx", "m", "m", "m", "soffset", "opt", "dst", "srsrc", "saddr", "src", "src", "src", "src", "Type deviation", "vaddr", "vasrc", "vasrc", "vdata", "vdst", "vsrc", "vaddr", "vaddr", "vaddr", "vaddr", "attr", "sbase", "sbase", "sbase", "imm16", "imm32", "vdata", "vdata", "vdata", "vdata", "vdata", "vdata", "vdata", "sdata", "sdata", "sdata", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "imm32", "imm32", "hwreg", "imask", "label", "m", "m", "m", "msg", "soffset", "soffset", "soffset", "opt", "param", "imm3", "dst", "srsrc", "srsrc", "saddr", "saddr", "ssamp", "sdata", "sdata", "sdata", "sdst", "sdst", "sdst", "sdst", "sdst", "sdst", "sdst", "sdst", "imm16", "src", "src", "src", "src", "src", "src", "vsrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "tgt", "Type deviation", "imm16", "vaddr", "vaddr", "vcc", "vdata", "vdata", "vdata", "vdata", "vdst", "vdst", "vdst", "vdst", "vsrc", "vsrc", "vsrc", "vsrc", "waitcnt", "DWARF Proposal For Heterogeneous Debugging", "AMDGPU Instructions Notation", "AMDGPU Instruction Syntax", "Syntax of AMDGPU Instruction Modifiers", "Syntax of AMDGPU Instruction Operands", "User Guide for AMDGPU Backend", "How To Add A Constrained Floating-Point Intrinsic", "Advanced Build Configurations", "LLVM Alias Analysis Infrastructure", "LLVM Atomic Instructions and Concurrency Guide", "Benchmarking tips", "Using ARM NEON instructions in big endian mode", "LLVM Bitcode File Format", "LLVM Block Frequency Terminology", "LLVM Branch Weight Metadata", "LLVM Bug Life Cycle", "LLVM bugpoint tool: design and usage", "Bugpoint Redesign", "Building a Distribution of LLVM", "Control Flow Verification Tool Design Document", "Building LLVM with CMake", "CMake Primer", "The LLVM Target-Independent Code Generator", "LLVM Community Code of Conduct", "LLVM Code-Review Policy and Practices", "LLVM Coding Standards", "FileCheck - Flexible pattern matching file verifier", "bugpoint - automatic test case reduction tool", "dsymutil - manipulate archived DWARF debug symbol files", "LLVM Command Guide", "lit - LLVM Integrated Tester", "llc - LLVM static compiler", "lli - directly execute programs from LLVM bitcode", "llvm-addr2line - a drop-in replacement for addr2line", "llvm-ar - LLVM archiver", "llvm-as - LLVM assembler", "llvm-bcanalyzer - LLVM bitcode analyzer", "llvm-build - LLVM Project Build Utility", "llvm-config - Print LLVM compilation options", "llvm-cov - emit coverage information", "llvm-cxxfilt - LLVM symbol name demangler", "llvm-cxxmap - Mangled name remapping tool", "llvm-diff - LLVM structural \u2018diff\u2019", "llvm-dis - LLVM disassembler", "llvm-dwarfdump - dump and verify DWARF debug information", "llvm-exegesis - LLVM Machine Instruction Benchmark", "llvm-extract - extract a function from an LLVM module", "llvm-lib - LLVM lib.exe compatible library tool", "llvm-link - LLVM bitcode linker", "llvm-lipo - LLVM tool for manipulating universal binaries", "llvm-locstats - calculate statistics on DWARF debug location", "llvm-mca - LLVM Machine Code Analyzer", "llvm-nm - list LLVM bitcode and object file\u2019s symbol table", "llvm-objcopy - object copying and editing tool", "llvm-objdump - LLVM\u2019s object file dumper", "llvm-pdbutil - PDB File forensics and diagnostics", "llvm-profdata - Profile data tool", "llvm-ranlib - generates an archive index", "llvm-readelf - GNU-style LLVM Object Reader", "llvm-readobj - LLVM Object Reader", "llvm-size - print size information", "llvm-stress - generate random .ll files", "llvm-strings - print strings", "llvm-strip - object stripping tool", "llvm-symbolizer - convert addresses into source code locations", "opt - LLVM optimizer", "tblgen - Target Description To C++ Code Generator", "CommandLine 2.0 Library Manual", "Compiling CUDA with clang", "Architecture &amp; Platform Information for Compiler Writers", "Contributing to LLVM", "Coroutines in LLVM", "LLVM Code Coverage Mapping Format", "Debugging JIT-ed Code With GDB", "Dependence Graphs in LLVM", "LLVM Developer Policy", "A guide to Dockerfiles for building LLVM", "Exception Handling in LLVM", "Extending LLVM: Adding instructions, intrinsics, types, etc.", "LLVM Extensions", "Frequently Asked Questions (FAQ)", "FaultMaps and implicit checks", "Performance Tips for Frontend Authors", "Fuzzing LLVM libraries and tools", "Garbage Collection with LLVM", "The Often Misunderstood GEP Instruction", "Getting Involved", "Getting Started with the LLVM System", "Getting Started/Tutorials", "Getting Started with the LLVM System using Microsoft Visual Studio", "Bisecting LLVM code", "Generic Machine IR", "Generic Opcodes", "IRTranslator", "InstructionSelect", "Known Bits Analysis", "Legalizer", "Core Pipeline", "Porting GlobalISel to A New Target", "RegBankSelect", "Resources", "Global Instruction Selection", "The LLVM gold plugin", "GWP-ASan", "How To Add Your Build Configuration To LLVM Buildbot Infrastructure", "How To Build On ARM", "How To Build Clang and LLVM with Profile-Guided Optimizations", "How to Cross Compile Compiler-rt Builtins For Arm", "How To Cross-Compile Clang/LLVM using Clang/LLVM", "How To Release LLVM To The Public", "How to set up LLVM-style RTTI for your class hierarchy", "How to submit an LLVM bug report", "How to Update Debug Info: A Guide for LLVM Pass Authors", "How To Use Attributes", "How To Use Instruction Mappings", "Design and Usage of the InAlloca Attribute", "LLVMBuild Guide", "LLVM Language Reference Manual", "The LLVM Lexicon", "libFuzzer \u2013 a library for coverage-guided fuzz testing.", "LLVM Link Time Optimization: Design and Implementation", "LLVM Loop Terminology (and Canonical Forms)", "MCJIT Design and Implementation", "Machine IR (MIR) Format Reference Manual", "Markdown Quickstart Template", "LLVM\u2019s Optional Rich Disassembly Output", "How to start LLVM Social in your town", "MemTagSanitizer", "MemorySSA", "MergeFunctions pass, how it works", "User Guide for NVPTX Back-end", "ORC Design and Implementation", "Using -opt-bisect-limit to debug optimization errors", "CodeView Symbol Records", "CodeView Type Records", "The PDB DBI (Debug Info) Stream", "The PDB Global Symbol Stream", "The PDB Serialized Hash Table Format", "The Module Information Stream", "The MSF File Format", "The PDB Info Stream (aka the PDB Stream)", "The PDB Public Symbol Stream", "The PDB TPI and IPI Streams", "The PDB File Format", "Advice on Packaging LLVM", "LLVM\u2019s Analysis and Transform Passes", "Code Reviews with Phabricator", "LLVM Programmer\u2019s Manual", "Creating an LLVM Project", "Moving LLVM Projects to GitHub", "\u201cllvm-libc\u201d C Standard Library", "Test-Suite Extensions", "Variable Names Plan", "Vector Predication Roadmap", "Vectorization Plan", "Reference", "LLVM 11.0.0 Release Notes", "How To Validate a New Release", "Remarks", "Reporting Guide", "Scudo Hardened Allocator", "LLVM Security Group", "Segmented Stacks in LLVM", "Source Level Debugging with LLVM", "Speculative Load Hardening", "Sphinx Quickstart Template", "Stack maps and patch points in LLVM", "Stack Safety Analysis", "Garbage Collection Safepoints in LLVM", "Support Library", "System Library", "TableGen BackEnds", "TableGen Deficiencies", "TableGen Language Introduction", "TableGen Language Reference", "TableGen", "TableGen Fundamentals", "test-suite Guide", "test-suite Makefile Guide (deprecated)", "LLVM Testing Infrastructure Guide", "Code Transformation Metadata", "Type Metadata", "User Guides", "Auto-Vectorization in LLVM", "Writing an LLVM Backend", "Writing an LLVM Pass", "XRay Instrumentation", "Debugging with XRay", "XRay Flight Data Recorder Trace Format", "YAML I/O", "About", "<span class=\"section-number\">1. </span>Building a JIT: Starting out with KaleidoscopeJIT", "<span class=\"section-number\">2. </span>Building a JIT: Adding Optimizations \u2013 An introduction to ORC Layers", "<span class=\"section-number\">3. </span>Building a JIT: Per-function Lazy Compilation", "<span class=\"section-number\">4. </span>Building a JIT: Extreme Laziness - Using Compile Callbacks to JIT from ASTs", "<span class=\"section-number\">5. </span>Building a JIT: Remote-JITing \u2013 Process Isolation and Laziness at a Distance", "Kaleidoscope Tutorial", "Kaleidoscope Tutorial", "Kaleidoscope Tutorial", "Kaleidoscope Tutorial", "Kaleidoscope Tutorial", "Kaleidoscope Tutorial", "Kaleidoscope Tutorial", "Kaleidoscope Tutorial", "Kaleidoscope Tutorial", "Kaleidoscope Tutorial", "Kaleidoscope: Kaleidoscope Introduction and the Lexer", "Kaleidoscope: Implementing a Parser and AST", "Kaleidoscope: Code generation to LLVM IR", "Kaleidoscope: Adding JIT and Optimizer Support", "Kaleidoscope: Extending the Language: Control Flow", "Kaleidoscope: Extending the Language: User-defined Operators", "Kaleidoscope: Extending the Language: Mutable Variables", "Kaleidoscope: Compiling to Object Code", "Kaleidoscope: Adding Debug Information", "Kaleidoscope: Conclusion and other useful LLVM tidbits", "My First Language Frontend with LLVM Tutorial", "<span class=\"section-number\">1. </span>Kaleidoscope: Tutorial Introduction and the Lexer", "<span class=\"section-number\">2. </span>Kaleidoscope: Implementing a Parser and AST", "<span class=\"section-number\">3. </span>Kaleidoscope: Code generation to LLVM IR", "<span class=\"section-number\">4. </span>Kaleidoscope: Adding JIT and Optimizer Support", "<span class=\"section-number\">5. </span>Kaleidoscope: Extending the Language: Control Flow", "<span class=\"section-number\">6. </span>Kaleidoscope: Extending the Language: User-defined Operators", "<span class=\"section-number\">7. </span>Kaleidoscope: Extending the Language: Mutable Variables", "<span class=\"section-number\">8. </span>Kaleidoscope: Conclusion and other useful LLVM tidbits", "LLVM Tutorial: Table of Contents", "yaml2obj"], "titleterms": {"": [446, 466, 494, 496, 522, 527, 560, 567, 587, 588, 589, 606], "0": [454, 509, 527, 598], "000": 463, "0x0006": 575, "0x000a": 576, "0x000e": 576, "0x0014": 576, "0x1001": 576, "0x1002": 576, "0x1008": 576, "0x1009": 576, "0x1012": 575, "0x1101": 575, "0x1102": 575, "0x1103": 575, "0x1105": 575, "0x1106": 575, "0x1107": 575, "0x1108": 575, "0x110b": 575, "0x110c": 575, "0x110e": 575, "0x110f": 575, "0x1110": 575, "0x1111": 575, "0x1112": 575, "0x1113": 575, "0x1116": 575, "0x111c": 575, "0x111d": 575, "0x1124": 575, "0x1125": 575, "0x1127": 575, "0x112c": 575, "0x112d": 575, "0x1136": 575, "0x1137": 575, "0x1138": 575, "0x1139": 575, "0x113a": 575, "0x113c": 575, "0x113d": 575, "0x113e": 575, "0x113f": 575, "0x1140": 575, "0x1141": 575, "0x1142": 575, "0x1143": 575, "0x1144": 575, "0x1145": 575, "0x1146": 575, "0x1147": 575, "0x114c": 575, "0x114d": 575, "0x114e": 575, "0x114f": 575, "0x1153": 575, "0x1155": 575, "0x1156": 575, "0x115a": 575, "0x115b": 575, "0x115e": 575, "0x1167": 575, "0x1168": 575, "0x1201": 576, "0x1203": 576, "0x1205": 576, "0x1206": 576, "0x1400": 576, "0x1401": 576, "0x1402": 576, "0x1404": 576, "0x1409": 576, "0x1502": 576, "0x1503": 576, "0x1504": 576, "0x1505": 576, "0x1506": 576, "0x1507": 576, "0x1509": 576, "0x150d": 576, "0x150e": 576, "0x150f": 576, "0x1510": 576, "0x1511": 576, "0x1515": 576, "0x1519": 576, "0x151a": 576, "0x151d": 576, "0x1601": 576, "0x1602": 576, "0x1603": 576, "0x1604": 576, "0x1605": 576, "0x1606": 576, "0x1607": 576, "0xf0": 576, "1": [487, 492, 527, 562, 591, 595, 606, 633], "10": 463, "11": 598, "2": [487, 492, 509, 562, 591, 593, 595, 606, 634, 649, 660], "2017": 593, "3": [449, 487, 492, 562, 591, 595, 635, 650, 661], "32": [442, 447, 473], "4": [562, 591, 593, 595, 636, 651, 662], "5": [442, 595, 637, 652, 663], "6": [454, 653, 664], "64": [442, 447, 606], "7": [654, 665], "8": 655, "9": 656, "A": [448, 449, 518, 540, 552, 554, 560, 572, 589, 593, 606, 623], "AND": [495, 496, 501, 505], "And": 622, "At": 591, "Be": 466, "Being": 466, "By": [442, 447], "For": [442, 524, 529, 538, 549, 623], "If": [463, 571, 625, 626, 652, 663], "In": [522, 526, 565], "It": [466, 655], "NOT": [468, 587], "No": [450, 549, 571, 611, 631], "Not": [467, 591], "OF": 486, "Of": [467, 552], "On": [547, 579, 591, 610], "TO": [493, 501], "The": [442, 450, 464, 467, 468, 509, 523, 524, 526, 527, 529, 544, 549, 551, 552, 554, 559, 560, 570, 572, 577, 578, 579, 580, 581, 582, 583, 584, 585, 589, 591, 596, 600, 606, 615, 617, 625, 626, 627, 629, 648, 649, 659, 660], "Then": [652, 663], "To": [448, 508, 517, 546, 547, 548, 550, 551, 555, 556, 599], "With": 515, "__atomic_": 451, "__device__": 510, "__host__": 510, "__nvvm_reflect": 572, "__sync_": 451, "_global__i_a": 522, "a16": 445, "aa": [450, 587], "aapc": 453, "aarch64": [511, 549, 598], "ab": 445, "abandon": 588, "abbrevi": 454, "abi": [447, 464, 511, 519, 589, 592, 606], "abid": 445, "abl": 571, "about": [512, 522, 591, 632], "absolut": [446, 509, 573], "absolute_symbol": 559, "abstract": [454, 524, 526, 559, 593, 596, 610, 611, 649, 660], "acceler": [442, 447, 605], "accept": [466, 603], "access": [442, 447, 464, 517, 559, 571, 591, 603], "accumul": 606, "accur": 559, "achiev": [457, 589], "acknowledg": 466, "acquir": 451, "acquirereleas": 451, "acronym": 594, "across": 532, "action": 538, "activ": [457, 559], "ad": [509, 517, 520, 524, 574, 589, 634, 651, 656, 662], "adc": [450, 587], "add": [448, 527, 546, 559, 573], "addescapingus": 450, "addit": [447, 472, 597, 598, 624], "addpreserv": 627, "addr": 605, "addr2lin": 475, "addr64": 445, "addrequir": 627, "addrequiredtransit": 627, "address": [442, 447, 464, 506, 521, 527, 559, 564, 572, 606, 623], "addressofreturnaddress": 559, "addrspacecast": 559, "adjust": [559, 654, 665], "administr": 551, "adst": [314, 315, 316, 317], "adt": 589, "advanc": [449, 514, 561, 589, 667], "advantag": [516, 594], "advertis": 568, "advic": [458, 586], "advisori": 601, "afl": 561, "after": [466, 467, 545, 562, 591, 601, 606], "again": 606, "aggreg": [524, 535, 559, 587], "aggress": 587, "ahead": 656, "aid": 589, "aim": 466, "aka": 582, "algorithm": [464, 510, 593], "alia": [450, 464, 509, 527, 559, 587, 625], "alias": [464, 509, 524, 559, 571, 573], "aliasanalysi": 450, "aliassettrack": 450, "align": [453, 454, 524, 581], "all": [466, 522, 587, 591, 655], "alloc": [464, 513, 545, 589, 602, 604, 605], "alloca": [524, 559, 604], "allow": 509, "along": [571, 610], "also": [467, 469, 470, 472, 473, 474, 475, 477, 478, 482, 485, 486, 488, 492, 494, 495, 496, 499, 500, 501, 505, 506], "altern": [509, 549, 562, 606, 610], "alwai": [527, 587], "always_inlin": 587, "ambigu": 622, "amd_kernel_code_t": 447, "amdgcn": 447, "amdgcn_target": 447, "amdgpu": [443, 444, 445, 446, 447, 464, 511, 598], "amdgpu_hsa_kernel": 447, "amdgpu_metadata": 447, "amdhsa": 447, "amdhsa_kernel": 447, "amdpal": 447, "an": [466, 488, 499, 509, 517, 527, 529, 531, 553, 554, 589, 590, 591, 606, 626, 627, 634], "analysi": [450, 459, 464, 487, 493, 527, 537, 587, 609, 616, 625, 627, 628], "analysisusag": 627, "analyz": [478, 493, 619], "anchor": 467, "ani": 561, "annot": [559, 567], "announc": 551, "anonym": [467, 587], "anoth": [589, 592], "api": [464, 517, 522, 536, 538, 541, 567, 573, 589, 591, 597, 598, 600, 606, 633], "appeal": 601, "append": 447, "appl": 449, "applic": [593, 628], "approach": [562, 606], "aql": 447, "ar": [464, 466, 476, 522], "arc": 559, "arch": 447, "architectur": [447, 511, 549, 608, 610], "archiv": [470, 476, 499, 529], "area": [513, 559], "arg": 559, "argpromot": [450, 587], "argument": [447, 463, 509, 513, 534, 559, 587, 589, 615], "arithmet": [442, 464, 527, 559], "arm": [453, 511, 521, 547, 549, 550, 598], "arm64": 521, "armneon": 613, "armneonsema": 613, "armneontest": 613, "armv6": 549, "armv7": 549, "arrai": [514, 521, 527, 559, 589], "arrayref": 589, "articl": 607, "asan": 545, "ashr": 559, "ask": 522, "asm": [464, 519, 559], "asmmatch": 613, "asmwrit": 613, "asrc": [318, 319, 320, 321], "assembl": [447, 464, 477, 525, 559], "assembli": [453, 464, 521, 526, 559, 626], "assert": 467, "assign": [587, 654, 665], "associ": [559, 571], "assum": 559, "ast": [636, 649, 652, 660, 663], "atom": [451, 559, 587], "atomicrmw": 559, "attack": 606, "attent": 513, "attr": [18, 116, 200, 348], "attrbuild": 555, "attrdoc": 613, "attribut": [442, 447, 509, 510, 517, 555, 557, 559, 565, 587, 605, 628, 629], "attributelist": 555, "audienc": 626, "author": [524, 554, 607], "auto": [467, 625], "automat": [458, 469, 554, 559, 606], "autoreleas": 559, "autoreleasepoolpop": 559, "autoreleasepoolpush": 559, "autoreleasereturnvalu": 559, "autotool": 544, "avail": [450, 525, 526], "avoid": [467, 513, 524], "avr": 598, "awar": 552, "b": [560, 623], "back": [493, 522, 572, 613], "backend": [447, 464, 527, 598, 613, 615, 617, 626], "background": [459, 461, 515, 519, 552, 605], "backward": 517, "bake": 610, "bang": 594, "bank": 533, "bank_mask": 445, "barrier": [526, 572], "barrier0": 572, "base": [464, 467, 510, 522, 527, 552, 587, 589, 610], "basic": [450, 454, 462, 471, 498, 518, 524, 532, 552, 559, 565, 571, 587, 589, 591, 617, 626, 627, 628, 633, 649, 659, 660], "basicblock": [571, 589], "basiccg": 587, "bb": 587, "bcanalyz": 478, "befor": [467, 591], "begin": 513, "begincatch": 519, "behavior": 450, "behaviour": 521, "behind": 605, "benchmark": [452, 487, 548, 593, 619], "berkelei": 464, "best": 524, "between": [460, 510, 527, 562, 589, 627], "bewar": 467, "bia": 455, "big": [453, 594], "bigger": 512, "binari": [446, 491, 495, 522, 551, 559, 649, 653, 660, 664], "binutil": 471, "bisect": [529, 532, 574, 591], "bit": [442, 447, 454, 509, 537, 559, 579, 589, 606], "bitcast": 559, "bitcod": [454, 474, 478, 490, 494, 522, 562], "bitconvert": 453, "bitrevers": 559, "bitstream": [454, 600], "bitvalu": 631, "bitvector": 589, "bitwis": 559, "blame": 594, "blgp": 445, "blitz": 593, "block": [454, 455, 466, 467, 468, 493, 559, 565, 581, 587, 589, 606, 607, 631], "blockinfo": 454, "bodi": [467, 587, 616], "boolean": 509, "bootstrap": 449, "bot": 592, "both": [529, 575], "bottleneck": 493, "bound": [527, 606], "bound_ctrl": 445, "boundari": 581, "bpf_ab": 464, "bpf_ind": 464, "br": 559, "brace": 467, "branch": [455, 456, 551, 587, 591, 606, 626], "branch_weight": 559, "branchinst": 456, "break": [587, 589, 606], "breakpoint": 627, "bridg": 591, "bswap": 559, "buffer": [447, 545], "bug": [457, 484, 491, 494, 495, 496, 502, 504, 505, 512, 525, 552, 553, 599, 610], "bugpoint": [458, 459, 469, 587], "build": [448, 449, 460, 462, 479, 518, 522, 525, 529, 544, 546, 547, 548, 549, 550, 551, 558, 561, 570, 589, 590, 591, 592, 598, 624, 627, 629, 633, 634, 635, 636, 637, 667], "buildbot": 546, "builder": 546, "buildmast": 546, "built": [456, 463, 464, 526, 631], "builtin": [509, 549], "bundl": [464, 559, 565], "bypass": 606, "byte": 497, "c": [453, 462, 467, 508, 517, 522, 529, 559, 560, 567, 586, 589, 592, 593, 600, 605, 611, 623, 628], "c99": 521, "cach": [462, 549], "calcul": 492, "call": [442, 447, 450, 464, 467, 521, 522, 535, 557, 559, 587, 589, 606, 625, 626], "callabl": 589, "callargu": 630, "callback": [559, 636], "callbr": 559, "calle": [557, 559], "callgraph": [587, 627], "callgraphsccpass": 627, "callingconv": 613, "callinst": 456, "callsit": [519, 587, 589], "caml": 667, "can": [466, 522, 524, 527, 575, 606], "candid": 551, "canon": 563, "canonic": [559, 587], "cantfail": 589, "case": [459, 469, 517, 573, 628], "cast": [527, 589], "catch": 519, "catchpad": 559, "catchret": 559, "catchswitch": 559, "categori": [509, 575, 576], "caus": 459, "cbsz": 445, "cc": 457, "ceil": 559, "cfa": 442, "cfg": [456, 587], "cfi": 447, "cfiindex": 565, "chain": [450, 529, 531, 589], "chang": [442, 517, 529, 588, 589, 591, 598, 603, 605, 650, 661], "chapter": [633, 634, 635, 636, 637, 649, 650, 651, 652, 653, 654, 655, 656, 660, 661, 662, 663, 664, 665], "charact": [454, 468], "check": [468, 523, 559, 587, 589, 606, 625], "checkout": [529, 591], "choos": [518, 603, 655], "chrome": 629, "chunk": 602, "cl": 509, "clamp": 445, "clang": [447, 449, 510, 525, 529, 547, 548, 549, 550, 551, 602, 613, 624], "clangattrclass": 613, "clangattrdump": 613, "clangattrimpl": 613, "clangattrlist": 613, "clangattrparsedattrimpl": 613, "clangattrparsedattrkind": 613, "clangattrparsedattrlist": 613, "clangattrparserstringswitch": 613, "clangattrpchread": 613, "clangattrpchwrit": 613, "clangattrspel": 613, "clangattrspellinglistindex": 613, "clangattrtemplateinstanti": 613, "clangattrvisitor": 613, "clangcommentcommandinfo": 613, "clangcommentcommandlist": 613, "clangcommenthtmlnamedcharacterrefer": 613, "clangcommenthtmltag": 613, "clangcommenthtmltagsproperti": 613, "clangcommentnod": 613, "clangdeclnod": 613, "clangdiaggroup": 613, "clangdiagsdef": 613, "clangdiagsindexnam": 613, "clangsacheck": 613, "clangstmtnod": 613, "class": [442, 447, 450, 464, 467, 509, 510, 552, 556, 559, 589, 615, 616, 626, 627], "classof": 552, "cleanup": [519, 557], "cleanuppad": 559, "cleanupret": 559, "clear_cach": 559, "client": 450, "clobber": [464, 559, 570], "clone": 591, "close": [457, 563, 587, 650, 661], "cmake": [460, 462, 463, 549, 550, 619], "cmath": 510, "cmp": 561, "cmpconstant": 571, "cmpgep": 571, "cmpoper": 571, "cmptype": 571, "cmpvalu": 571, "cmpxchg": 559, "co": 559, "coalescingbitvector": 589, "code": [447, 458, 464, 465, 466, 467, 474, 487, 493, 506, 508, 510, 514, 515, 517, 519, 522, 526, 529, 532, 553, 559, 564, 565, 582, 587, 588, 589, 590, 594, 601, 605, 607, 611, 615, 622, 624, 626, 627, 633, 634, 635, 636, 637, 649, 650, 651, 652, 653, 654, 655, 656, 660, 661, 662, 663, 664, 665], "codeemitt": 613, "codegen": [451, 595, 605], "codegenprepar": 587, "codeview": [521, 559, 575, 576, 580, 584, 585, 605], "coff": [501, 505, 521, 668], "collabor": 603, "collect": [509, 511, 526, 559, 597, 610, 657, 666], "collector": [526, 559], "color": 593, "column": 559, "com": 468, "combin": [464, 587], "comdat": 559, "command": [459, 463, 471, 476, 481, 491, 496, 498, 509, 588, 597, 625], "commandlin": 509, "comment": [467, 615], "commit": [466, 517, 529, 588, 591], "committe": 601, "common": [529, 531, 572, 589, 619], "commun": [465, 528, 551, 562, 632], "compar": [527, 571], "comparison": 571, "compat": [489, 517, 561, 592], "compil": [462, 467, 473, 480, 510, 511, 522, 529, 549, 550, 553, 559, 573, 586, 606, 619, 635, 636, 651, 655, 656, 662], "complain": 572, "complex": [449, 510, 559, 589], "complexpattern": 536, "complic": 561, "compon": [448, 457, 464, 480, 517, 558, 596], "composit": [442, 538, 603], "compr": 445, "comprehens": 598, "compress": 559, "compressstor": 559, "comput": [447, 526, 527, 572], "compute_pgm_rsrc1": 447, "compute_pgm_rsrc2": 447, "compute_pgm_rsrc3": 447, "concaten": 589, "concept": [514, 610, 617, 627], "conclus": [649, 657, 660, 666], "concret": 552, "concurr": [451, 559], "condit": [466, 559, 587, 606], "conduct": [465, 601], "confidenti": 603, "config": 480, "configur": [449, 472, 473, 525, 529, 546, 550, 619, 620, 655], "consid": [524, 603], "consider": [453, 557], "consist": [457, 493, 611], "const": 571, "constant": [446, 521, 534, 535, 559, 565, 587, 589, 605, 606, 651, 662], "constants_block": 454, "constmerg": 587, "constprop": 587, "constrain": [448, 559, 621], "constraint": [447, 559], "construct": [464, 516, 522, 587], "constructor": [467, 589], "consum": [589, 605], "consumeaft": 509, "contain": [467, 497, 585, 589, 600], "content": [442, 454, 552, 592, 595, 605, 667], "context": 631, "contextu": 567, "continu": [467, 513, 525, 619], "contract": 552, "contribut": [512, 577], "contributor": 517, "control": [442, 461, 463, 509, 510, 534, 606, 629, 652, 663], "convent": [445, 446, 447, 464, 522, 557, 559, 572, 606, 626], "convers": [442, 446, 534, 559, 572, 593, 625, 626], "convert": [506, 554, 559], "copi": [467, 495, 557], "copyright": 517, "copysign": 559, "copyvalu": 450, "copyweak": 559, "coral": 593, "core": [0, 2, 3, 4, 539, 589, 610], "coreclr": 526, "coro": 513, "corocleanup": 513, "coroearli": 513, "coroelid": 513, "corosplit": 513, "coroutin": 513, "corpu": 561, "cost": [519, 594], "could": 571, "count": [456, 468, 559, 587, 625], "counter": [514, 589], "cov": 481, "cover": 467, "coverag": [481, 514, 561], "cpu": 593, "crash": [458, 553, 561], "creat": [551, 573, 589, 590, 607, 627], "creation": [442, 564], "crit": 587, "criteria": [551, 603], "critic": 587, "cross": [462, 495, 505, 529, 549, 550, 619], "ctag": 613, "ctlz": 559, "ctpop": 559, "cttz": 559, "cuda": 510, "current": [517, 591, 592, 594, 603], "custom": [487, 509, 513, 526, 527, 536, 573, 589, 619, 620, 626, 631], "customeventmark": 630, "cv_def_rang": 521, "cv_file": 521, "cv_filechecksum": 521, "cv_filechecksumoffset": 521, "cv_fpo_data": 521, "cv_func_id": 521, "cv_inline_linet": 521, "cv_inline_site_id": 521, "cv_linet": 521, "cv_loc": 521, "cv_stringtabl": 521, "cxxfilt": 482, "cxxmap": 483, "cycl": 457, "d": [0, 2, 3, 4, 445, 447, 450, 522, 560, 623], "d16": 445, "da": [445, 587], "dag": [455, 464, 468, 598], "dagcombin": 595, "dagisel": 613, "darpa": 593, "data": [442, 447, 454, 464, 498, 514, 516, 559, 572, 587, 589, 606, 611, 628, 630, 631], "datalayout": 464, "date": 568, "dbg": [587, 605], "dbi": [497, 577], "dce": 587, "dead": 587, "deadargelim": 587, "deadarghax0r": 587, "deadtypeelim": 587, "deal": 457, "dealloc": 513, "debug": [442, 447, 450, 470, 471, 486, 492, 515, 539, 554, 559, 574, 577, 587, 589, 597, 598, 605, 621, 629, 656], "debug_info": 442, "debug_typ": 589, "debugg": [442, 447, 458, 559, 587, 605], "debugifi": 554, "debuginfo": 587, "debugtrap": 559, "declar": [467, 538, 587, 605, 616], "decod": 587, "deconstruct": 464, "decrement": 559, "deduc": 587, "deduct": 467, "deep": 566, "deeper": 552, "def": [589, 616], "default": [457, 467, 631], "defer": 606, "defici": [614, 617], "defin": [467, 606, 626, 653, 654, 664, 665], "define_abbrev": 454, "definit": [442, 467, 478, 560, 596, 608, 615], "defm": 616, "defset": 616, "defvar": 616, "delai": 602, "delet": [554, 579, 587, 589], "deletevalu": 450, "demangl": [482, 525], "demo": [522, 551], "demot": 587, "denorm": 447, "densemap": 589, "denseset": 589, "deoptim": 559, "depend": [450, 516, 521, 559, 565, 586, 587, 606], "deprec": [529, 595, 598, 619, 620], "dequ": 589, "dereferenc": [463, 527, 559], "dereferenceable_or_nul": 559, "deriv": [520, 589, 610], "describ": 524, "descript": [442, 458, 464, 468, 469, 470, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 562, 591], "descriptor": 447, "design": [458, 459, 461, 464, 516, 527, 543, 545, 557, 562, 564, 570, 573, 589, 596, 602, 632], "destroi": 513, "destroyweak": 559, "detail": [467, 478, 516, 567, 604, 605, 606, 625], "detect": [510, 545, 587, 593], "determin": [449, 467, 509], "determinist": 467, "develop": [462, 471, 517, 528, 529, 561, 591, 625], "deviat": [11, 92, 180, 277, 310, 337, 424], "devic": [510, 619], "dfapacket": 613, "dfmt": 445, "di": 485, "diagnos": 493, "diagnost": [497, 600, 625], "dialect": 510, "dibasictyp": 559, "dicompileunit": 559, "dicompositetyp": 559, "dictionari": 561, "did": 522, "diderivedtyp": 559, "didn": 594, "die": 587, "dienumer": 559, "diexpress": 559, "diff": [484, 600], "differ": [450, 460, 501, 510, 527, 620], "differenti": 594, "difil": 559, "diflag": 559, "diglobalvari": 559, "diglobalvariableexpress": 559, "diimportedent": 559, "dilexicalblock": 559, "dilexicalblockfil": 559, "diloc": 559, "dilocalvari": 559, "dim": 445, "dimacro": 559, "dimacrofil": 559, "dinamespac": 559, "diobjcproperti": 559, "direct": [447, 464, 468, 521, 559, 608, 625], "directli": [450, 474, 606], "directori": [529, 581], "disabl": 559, "disable_nonforc": 559, "disadvantag": [516, 594], "disassembl": [464, 485, 525, 613], "disassembli": 567, "disclosur": 603, "discoveri": 472, "discuss": 603, "disk": 579, "dispatch": [447, 493], "displai": 619, "dissect": [514, 572], "distanc": [527, 637], "distinct": 513, "distribut": [460, 551, 559, 622, 624], "disubprogram": 559, "disubrang": 559, "disubroutinetyp": 559, "ditemplatetypeparamet": 559, "ditemplatevalueparamet": 559, "dither": 593, "dlc": 445, "dll": 559, "dmask": 445, "do": [458, 467, 522, 527, 571, 587], "doc": 511, "docker": 518, "dockerfil": 518, "document": [447, 448, 461, 467, 511, 524, 551, 571, 631, 632], "doe": [522, 527, 561, 627], "doesn": 561, "doesnotaccessmemori": 450, "dofin": 627, "doiniti": 627, "dom": 587, "domfronti": 587, "domin": 587, "domtre": 587, "don": [466, 467, 522, 527, 606, 611], "done": [445, 513], "donoth": 559, "dot": 587, "down": 606, "downstream": 594, "doxygen": 467, "dpp": 445, "dpp16": [0, 1, 445], "dpp16_ctrl": 445, "dpp8": [0, 1, 445], "dpp8_sel": 445, "dpp_ctrl": 445, "drawback": 591, "driven": 450, "driver": [649, 650, 660, 661], "drop": [475, 554], "dse": [450, 587], "dst": [59, 144, 244, 330, 389], "dst_sel": 445, "dst_unus": 445, "dsymutil": 470, "due": 467, "dump": [486, 497], "dumper": 496, "duplic": [587, 611], "dure": [605, 625], "dw_at_llvm_active_lan": 447, "dw_at_llvm_augment": 447, "dw_at_llvm_lane_pc": 447, "dwarf": [442, 447, 470, 486, 492, 605, 656], "dwarfdump": [486, 525], "dyn_cast": 589, "dynam": [464, 509, 559, 627], "e_flag": 447, "each": 587, "earli": 467, "easier": 606, "ebpf": 464, "ec": 577, "ed": 515, "edg": [587, 606, 610], "edit": 495, "ef_amdgpu_mach": 447, "effect": [524, 527], "effici": [450, 466, 557], "eh": [519, 587], "either": 575, "element": [467, 527, 559], "elf": [447, 495, 501, 505, 521], "elimin": 587, "elis": 557, "els": [463, 467, 652, 663], "elseif": 463, "email": 591, "emb": 606, "embed": [462, 511, 565], "emiss": [464, 521, 656], "emit": [464, 481, 526, 600, 655], "emitt": 626, "empti": 468, "enabl": [559, 600], "encod": [442, 444, 454, 464, 514], "end": [467, 473, 513, 522, 527, 553, 559, 572, 589, 605, 613], "end_block": 454, "endcatch": 519, "endian": 453, "endl": 467, "endofbuff": 630, "engin": 564, "enhanc": 610, "enough": 458, "enter_subblock": 454, "entiti": [442, 615], "entri": [442, 447, 456, 559, 587, 608], "enumer": [447, 467], "environ": [447, 559, 627], "epilog": 464, "equal": 467, "equival": 559, "erlang": 526, "error": [467, 574, 589, 602, 611, 631], "error_cod": 589, "erroror": 589, "establish": 517, "etc": [520, 589], "eval": [450, 587], "evalu": [450, 467, 587], "even": 606, "event": 528, "everi": 467, "everyon": 466, "everyth": 606, "evolut": 587, "ex": 489, "exactli": 561, "exampl": [442, 447, 453, 472, 480, 482, 487, 492, 498, 504, 506, 513, 515, 526, 529, 531, 537, 544, 545, 556, 559, 561, 562, 566, 574, 589, 607, 617, 627], "except": [467, 519, 557, 559, 587, 610], "exceptionpoint": 519, "exec": 446, "execut": [447, 462, 472, 474, 572, 582, 589, 621], "execz": 446, "exegesi": 487, "exhaust": 587, "exist": [450, 627, 654, 665], "exit": [467, 468, 469, 470, 472, 473, 474, 476, 477, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 490, 492, 493, 494, 495, 498, 500, 501, 502, 503, 504, 505, 506, 507, 508, 587], "exitonerror": 589, "exp": [0, 2, 3, 4, 445, 559], "exp2": 559, "expand": [559, 626], "expandload": 559, "expans": 605, "expect": [456, 559], "experi": 591, "experiment": [559, 595, 608, 610], "expert": 466, "explicit": 610, "exploit": 509, "explor": 629, "export": 481, "expos": 611, "express": [442, 446, 447, 514, 519, 559, 587, 606, 615, 649, 650, 652, 660, 661, 663], "extend": [464, 520, 652, 653, 654, 663, 664, 665], "extens": [509, 521, 534, 593, 605, 627, 652, 663], "extern": [509, 565, 587, 598, 619, 620, 667], "externalfnconst": 587, "extra": [493, 527, 621], "extract": [488, 587], "extractel": 559, "extractvalu": 559, "extrahelp": 509, "extrem": 636, "f": [560, 571], "fab": 559, "fadd": 559, "fail": 549, "fair": 594, "fallibl": 589, "faq": [522, 561], "fast": 559, "fastisel": [543, 613], "fault": 523, "faultmap": 523, "fcmp": 559, "fconst": 446, "fdiv": 559, "featur": [447, 464, 526, 561, 573, 582, 586, 592, 593, 598, 621, 625], "feedback": 466, "fenc": 559, "ffmpeg": 593, "fi": 445, "fidel": 629, "field": 571, "file": [454, 464, 467, 468, 470, 472, 483, 494, 496, 497, 503, 509, 514, 529, 549, 562, 565, 577, 581, 585, 587, 600, 601, 605, 615, 621, 628], "filecheck": 468, "filenam": 559, "filter": [464, 497, 519], "final": [513, 551, 564], "find": [524, 525, 587, 588, 589], "findregress": 599, "fine": [561, 589, 606], "finer": 574, "firehos": 593, "first": [527, 559, 658], "fix": [454, 457, 464, 512, 559, 571, 589, 605], "flag": [509, 510, 559, 565, 586, 606, 619, 625], "flame": 629, "flat": [0, 2, 3, 4, 8, 445, 447], "flat_scratch": 446, "flexibl": 468, "flight": [628, 630], "float": [446, 447, 448, 474, 521, 534, 549, 559], "floor": 559, "flow": [442, 461, 463, 493, 534, 631, 652, 663], "flt": 559, "fma": 559, "fmax": 559, "fmin": 559, "fmul": 559, "fmuladd": 559, "fn": 587, "fneg": 559, "focu": 459, "fold": [464, 606, 626, 651, 662], "foldingset": 589, "follow": [527, 571], "followup": 559, "followup_al": 559, "followup_coincid": 559, "followup_epilogu": 559, "followup_fallback": 559, "followup_inn": 559, "followup_out": 559, "followup_remaind": 559, "followup_remainder_inn": 559, "followup_remainder_out": 559, "followup_sequenti": 559, "followup_vector": 559, "forbidden": 467, "forc": 587, "foreach": 616, "forens": 497, "fork": 561, "form": [442, 464, 563, 587], "format": [442, 447, 454, 464, 467, 472, 486, 495, 501, 509, 514, 519, 525, 558, 565, 579, 581, 585, 589, 605, 607, 608, 610, 630], "formatv": 589, "formed": 559, "fortran": 605, "fp16": 559, "fpext": 559, "fpmath": 559, "fptosi": 559, "fptoui": 559, "fptrunc": 559, "fragil": 621, "frame": [442, 447, 464, 513, 519, 657, 666], "frameaddress": 559, "framework": 517, "free": [513, 545, 581], "freeform": 509, "freelist": 602, "freepooma": 593, "freez": 559, "frem": 559, "frequenc": 455, "frequent": [462, 522], "friendli": 561, "from": [455, 464, 474, 488, 509, 510, 517, 527, 529, 550, 559, 573, 587, 588, 589, 606, 636], "front": [522, 527, 553, 605], "frontend": [524, 658], "frontier": 587, "fshl": 559, "fshr": 559, "fsub": 559, "ft": 463, "ftensor": 593, "full": [559, 633, 634, 635, 636, 637, 649, 650, 651, 652, 653, 654, 655, 656, 660, 661, 662, 663, 664, 665], "fulli": 467, "funclet": [519, 559], "function": [447, 456, 463, 464, 467, 488, 509, 513, 514, 520, 522, 535, 559, 565, 571, 572, 587, 589, 605, 606, 611, 625, 628, 630, 635, 650, 656, 661], "function_block": 454, "function_entry_count": 559, "function_ref": 589, "functionattr": 587, "functioncompar": 571, "functionpass": 627, "fundament": [520, 618], "further": [493, 590, 629], "futur": [464, 543, 573, 606, 627, 628], "fuzz": [525, 561], "fuzzer": [525, 561], "fx": [48, 293, 298, 303, 324], "g": 560, "g_add": 534, "g_addrspace_cast": 534, "g_and": 534, "g_anyext": 534, "g_ashr": 534, "g_atomic_cmpxchg": 534, "g_atomic_cmpxchg_with_success": 534, "g_atomicrmw_add": 534, "g_atomicrmw_and": 534, "g_atomicrmw_fadd": 534, "g_atomicrmw_fsub": 534, "g_atomicrmw_max": 534, "g_atomicrmw_min": 534, "g_atomicrmw_nand": 534, "g_atomicrmw_or": 534, "g_atomicrmw_sub": 534, "g_atomicrmw_umax": 534, "g_atomicrmw_umin": 534, "g_atomicrmw_xchg": 534, "g_atomicrmw_xor": 534, "g_bitcast": 534, "g_bitrevers": 534, "g_block_addr": 534, "g_br": 534, "g_brcond": 534, "g_brindirect": 534, "g_brjt": 534, "g_bswap": 534, "g_build_vector": 534, "g_build_vector_trunc": 534, "g_concat_vector": 534, "g_constant": 534, "g_ctlz": 534, "g_ctlz_zero_undef": 534, "g_ctpop": 534, "g_cttz": 534, "g_cttz_zero_undef": 534, "g_dyn_stackalloc": 534, "g_extract": 534, "g_extract_vector_elt": 534, "g_fab": 534, "g_fadd": 534, "g_fcanonic": 534, "g_fceil": 534, "g_fcmp": 534, "g_fco": 534, "g_fconstant": 534, "g_fcopysign": 534, "g_fdiv": 534, "g_fenc": 534, "g_fexp": 534, "g_fexp2": 534, "g_ffloor": 534, "g_flog": 534, "g_flog10": 534, "g_flog2": 534, "g_fma": 534, "g_fmad": 534, "g_fmaximum": 534, "g_fmaxnum": 534, "g_fmaxnum_iee": 534, "g_fminimum": 534, "g_fminnum": 534, "g_fminnum_iee": 534, "g_fmul": 534, "g_fnearbyint": 534, "g_fneg": 534, "g_fpext": 534, "g_fpow": 534, "g_fptosi": 534, "g_fptoui": 534, "g_fptrunc": 534, "g_frame_index": 534, "g_frem": 534, "g_frint": 534, "g_fsin": 534, "g_fsqrt": 534, "g_fsub": 534, "g_global_valu": 534, "g_icmp": 534, "g_implicit_def": 534, "g_indexed_load": 534, "g_indexed_sextload": 534, "g_indexed_stor": 534, "g_indexed_zextload": 534, "g_insert": 534, "g_insert_vector_elt": 534, "g_intrins": 534, "g_intrinsic_round": 534, "g_intrinsic_trunc": 534, "g_intrinsic_w_side_effect": 534, "g_inttoptr": 534, "g_jump_tabl": 534, "g_load": 534, "g_lshr": 534, "g_merge_valu": 534, "g_mul": 534, "g_or": 534, "g_phi": 534, "g_ptr_add": 534, "g_ptrmask": 534, "g_ptrtoint": 534, "g_sadd": 534, "g_saddo": 534, "g_saddsat": 534, "g_sdiv": 534, "g_select": 534, "g_sext": 534, "g_sext_inreg": 534, "g_sextload": 534, "g_shl": 534, "g_shuffle_vector": 534, "g_sitofp": 534, "g_smax": 534, "g_smin": 534, "g_smulh": 534, "g_smulo": 534, "g_srem": 534, "g_ssube": 534, "g_ssubo": 534, "g_ssubsat": 534, "g_store": 534, "g_sub": 534, "g_trunc": 534, "g_uadd": 534, "g_uaddo": 534, "g_uaddsat": 534, "g_udiv": 534, "g_uitofp": 534, "g_umax": 534, "g_umin": 534, "g_umulh": 534, "g_umulo": 534, "g_unmerge_valu": 534, "g_urem": 534, "g_usub": 534, "g_usubo": 534, "g_usubsat": 534, "g_vaarg": 534, "g_vastart": 534, "g_xor": 534, "g_zext": 534, "g_zextload": 534, "garbag": [526, 559, 597, 610, 657, 666], "gather": [559, 625], "gc": [526, 559, 610], "gcmetadataprint": 526, "gcov": 481, "gcread": [526, 559], "gcroot": 559, "gcwrite": [526, 559], "gd": 445, "gdb": [515, 627], "gen": 572, "gener": [442, 452, 458, 460, 464, 466, 472, 474, 476, 495, 499, 501, 503, 505, 508, 519, 521, 522, 525, 526, 533, 534, 553, 559, 564, 565, 568, 587, 589, 593, 613, 615, 620, 624, 629, 630, 650, 652, 661, 663], "geometr": 593, "gep": [524, 527], "get": [455, 528, 529, 530, 531, 559, 561, 574, 629], "getanalysi": 627, "getanalysisifavail": 627, "getanalysisusag": 627, "getelementptr": [522, 559], "getmodrefinfo": 450, "getposit": 509, "getregisteredopt": 509, "gfx10": [0, 447], "gfx1011": 1, "gfx1012": 1, "gfx6": 447, "gfx7": 2, "gfx8": 3, "gfx9": 4, "gfx900": 5, "gfx902": 5, "gfx904": 6, "gfx906": 7, "gfx908": 8, "gfx909": 5, "gfx_generation_minor": 447, "gfx_generation_numb": 447, "gfx_generation_step": 447, "git": [529, 532, 591, 594], "github": 591, "given": 549, "glc": 445, "global": [447, 543, 559, 565, 571, 575, 578, 587, 605, 625], "global_ctor": [522, 559], "global_dtor": 559, "globaldc": 587, "globalisel": 540, "globalopt": 587, "globalsmodref": [450, 587], "globalvalu": 589, "globalvari": 589, "gnu": [471, 500], "gnupg": 593, "go": [467, 522, 575], "goal": [526, 570], "gold": [544, 598], "good": 561, "got": 553, "grain": [589, 606], "grammar": 630, "granular": 574, "graph": [516, 521, 587, 589, 593, 606, 629], "graph500": 593, "graphic": 447, "group": [509, 559, 603, 627], "guarante": [657, 666], "guard": [545, 559, 606], "guid": [447, 451, 471, 509, 518, 548, 554, 558, 561, 565, 572, 587, 601, 619, 620, 621, 624], "guidanc": 460, "guidelin": [467, 566, 596, 607], "gvn": [450, 587], "gwp": 545, "h": [464, 510, 560, 589], "hack": [550, 587], "half": [559, 610], "handl": [463, 464, 519, 559, 587, 589, 631], "handler": [447, 589], "happen": [522, 527, 601], "har": 593, "hard": [606, 654, 656, 665], "harden": [602, 606], "hardwar": [511, 529, 531, 559], "hasglobalalias": 571, "hash": [579, 605], "haswel": 606, "have": 527, "hcc": 447, "header": [442, 447, 467, 514, 549, 577, 582, 584, 602, 605, 611, 630], "heap": [513, 526, 569, 589], "heavi": 606, "hello": 627, "help": [509, 510, 512, 522, 589, 590], "heterogen": 442, "hex": 631, "hexadecim": 521, "hexagon": 511, "hide": 509, "hierarchi": [552, 589], "high": [445, 464, 467, 514, 516, 559, 565, 593, 596, 606, 611], "higher": 522, "hint": [559, 589, 625], "histor": [459, 533], "histori": 591, "hook": 529, "hopefulli": 566, "host": [510, 522, 529, 549, 568], "how": [448, 457, 464, 466, 493, 512, 522, 527, 544, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 561, 568, 571, 573, 599, 603, 605, 607, 609, 613], "hpc": 593, "hsa": 447, "hsa_code_object_isa": 447, "hsa_code_object_vers": 447, "hwreg": [46, 136, 231, 376], "hydrobench": 593, "hyphen": 509, "i": [464, 466, 467, 518, 522, 524, 526, 527, 559, 560, 561, 571, 591, 603, 605, 606, 627, 631, 654, 656, 665], "i32": 527, "ia": 473, "ia64": 511, "ibm": 511, "icmp": 559, "iconst": 446, "id": [447, 454, 513, 514, 559], "idea": [461, 610, 653, 664], "identif": 447, "identifi": [447, 526, 559], "idxen": 445, "ifunc": 559, "ilist": 589, "ilist_nod": 589, "ilist_trait": 589, "imag": [447, 518, 593], "imask": [232, 377], "imm16": [22, 76, 93, 119, 156, 181, 203, 259, 278, 352, 406, 425], "imm3": [58, 243, 388], "imm32": [23, 44, 45, 120, 135, 204, 229, 230, 353, 374, 375], "immedi": 565, "immutablemap": 589, "immutablepass": 627, "immutableset": 589, "impl": 587, "implement": [450, 453, 455, 459, 464, 467, 516, 526, 543, 559, 562, 564, 569, 571, 573, 574, 593, 604, 606, 611, 626, 627, 649, 657, 660, 666, 667], "implicit": [442, 447, 523], "implicitnullcheck": 523, "import": [536, 589, 591], "inalloca": 557, "includ": [467, 522, 529, 611], "inclus": 615, "incorrect": 553, "increment": [517, 559], "incub": 517, "indent": 467, "independ": [464, 522, 657, 666], "index": [442, 499, 527, 559, 565, 574], "indexedmap": 589, "indic": [524, 527, 565, 584, 632], "indirect": [559, 606], "indirectbr": 559, "indirectbrinst": 456, "individu": [565, 589], "induct": [587, 625], "indvar": 587, "info": [554, 575, 577, 582, 587, 589, 598, 605, 615, 626], "inform": [442, 447, 464, 467, 481, 486, 502, 511, 512, 517, 559, 569, 580, 587, 589, 598, 605, 621, 623, 656], "infrastructur": [450, 472, 546, 598, 621], "init": 559, "initi": [447, 450, 464, 467, 526, 561, 589], "initweak": 559, "inlin": [446, 464, 467, 559, 587], "input": [495, 498, 525, 559, 631], "insert": [464, 589, 610], "insertel": 559, "insertvalu": 559, "inspect": 589, "instal": [460, 550], "instanc": 615, "instcombin": [522, 587, 595], "instcount": 587, "instnam": 587, "instrinfo": 613, "instrmap": 556, "instrprof": 559, "instruct": [0, 1, 2, 3, 4, 5, 6, 7, 8, 442, 443, 444, 445, 446, 447, 451, 453, 456, 464, 487, 493, 519, 520, 522, 527, 533, 543, 554, 556, 559, 561, 565, 567, 587, 589, 595, 605, 606, 626, 629], "instructionselect": 536, "instructionselector": 536, "instrument": [569, 628, 629], "instsimplifi": 595, "integ": [446, 454, 527, 534, 559], "integr": [472, 558, 559, 587, 606], "intel": [452, 473], "intend": 557, "inteqclass": 589, "interact": [589, 627], "interchang": 622, "interfac": [450, 459, 522, 588, 589, 611], "interleav": [559, 622], "intern": [447, 467, 509, 587, 606], "interoper": 589, "interprocedur": [587, 606], "interv": [464, 587], "intervalmap": 589, "intrins": [447, 448, 453, 513, 519, 520, 526, 535, 559, 572, 587, 595, 605, 608, 610, 613], "intrinsicid": 565, "introduc": 517, "introduct": [0, 1, 2, 3, 4, 5, 6, 7, 8, 442, 443, 447, 449, 450, 451, 452, 453, 455, 456, 457, 459, 460, 462, 463, 464, 467, 509, 510, 513, 514, 516, 517, 518, 519, 520, 521, 525, 526, 527, 532, 543, 544, 545, 546, 547, 548, 549, 550, 551, 553, 554, 555, 556, 557, 558, 559, 561, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 580, 584, 585, 587, 589, 591, 592, 594, 598, 599, 600, 602, 604, 605, 609, 613, 614, 615, 616, 617, 626, 627, 628, 630, 631, 633, 634, 635, 636, 637, 648, 649, 650, 651, 652, 653, 654, 655, 656, 659, 660, 661, 662, 663, 664, 665], "inttoptr": [527, 559], "invalid": 570, "invari": [559, 587, 606, 630], "invok": [510, 559, 587], "invokeinst": 456, "involv": 528, "iostream": [467, 522], "ipconstprop": 587, "ipi": 584, "iplist": 589, "ipsccp": 587, "ir": [447, 448, 451, 453, 454, 514, 517, 522, 524, 525, 526, 527, 533, 554, 565, 587, 589, 595, 597, 598, 650, 652, 657, 661, 663, 666], "irc": 528, "irr_loop": 559, "irtransformlay": 634, "irtransl": 535, "isa": 589, "isel": 525, "isn": 458, "isol": [589, 637], "issu": [450, 459, 467, 493, 512, 572, 603], "itanium": [511, 519], "item": [447, 529], "iter": [559, 589, 625], "its": 582, "iv": 587, "ival": 446, "jam": [587, 622], "jit": [464, 515, 589, 598, 624, 626, 633, 634, 635, 636, 637, 651, 662, 667], "jitdylib": 573, "jite": 637, "joinerror": 589, "json": 613, "jump": [464, 565, 587], "kaleidoscop": [638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 659, 660, 661, 662, 663, 664, 665, 666, 667], "kaleidoscopejit": 633, "keep": [467, 594, 603, 611], "kei": [563, 631], "kernel": [447, 572], "keyword": 467, "kick": [653, 664], "kind": 594, "know": 571, "known": [537, 614], "kokko": 593, "l": 560, "label": [47, 137, 233, 378, 467, 468, 559], "laissez": 594, "lambda": 467, "lanai": 511, "landingpad": 559, "lane": [447, 453, 559], "languag": [442, 447, 467, 522, 524, 559, 598, 605, 615, 616, 648, 652, 653, 654, 657, 658, 659, 663, 664, 665, 666, 667], "larg": [524, 606], "late": 464, "launder": 559, "layer": [464, 467, 592, 634], "layout": [447, 464, 529, 559, 572, 580, 581, 585, 587, 589, 590, 605, 623], "lazi": [573, 587, 589, 635, 636, 637], "lcssa": [563, 587], "ld": 445, "ld1": 453, "ldr": 453, "lds_direct": 446, "leaf": 576, "leak": 561, "leb128": 514, "leftov": 622, "legaci": 517, "legal": [464, 524, 538, 626], "legalizerinfo": 538, "legalizetyp": 464, "length": 521, "less": 606, "let": [615, 616], "level": [453, 464, 467, 509, 514, 516, 522, 533, 554, 559, 565, 573, 587, 595, 596, 605, 606, 611, 616], "lexer": [648, 652, 659, 663], "lexic": 616, "lexicon": 560, "lf_arglist": 576, "lf_arrai": 576, "lf_bclass": 576, "lf_binterfac": 576, "lf_bitfield": 576, "lf_buildinfo": 576, "lf_class": 576, "lf_endprecomp": 576, "lf_enum": 576, "lf_enumer": 576, "lf_fieldlist": 576, "lf_func_id": 576, "lf_index": 576, "lf_interfac": 576, "lf_ivbclass": 576, "lf_label": 576, "lf_member": 576, "lf_method": 576, "lf_methodlist": 576, "lf_mfunc_id": 576, "lf_mfunction": 576, "lf_modifi": 576, "lf_nesttyp": 576, "lf_onemethod": 576, "lf_padn": 576, "lf_pointer": 576, "lf_precomp": 576, "lf_procedur": 576, "lf_stmember": 576, "lf_string_id": 576, "lf_structur": 576, "lf_substr_list": 576, "lf_typeserver2": 576, "lf_udt_mod_src_lin": 576, "lf_udt_src_lin": 576, "lf_union": 576, "lf_vbclass": 576, "lf_vftabl": 576, "lf_vfunctab": 576, "lf_vtshape": 576, "lfenc": 606, "lgtm": 466, "lib": [489, 529, 559], "libc": 592, "libcal": [451, 587], "libdevic": 572, "liber": 467, "libfuzz": [561, 597], "liblto": 562, "libm": 559, "libprotobuf": 525, "librari": [460, 467, 489, 509, 510, 521, 525, 529, 559, 561, 573, 586, 589, 590, 592, 593, 602, 611, 612, 628], "licens": [517, 522, 544], "licm": [450, 559, 587, 622], "licm_vers": 559, "life": 457, "lifetim": [557, 559, 605], "lift": 595, "like": [467, 522, 589], "limit": [450, 565, 574, 610, 623], "line": [442, 447, 459, 509, 588, 597, 625], "link": [490, 529, 531, 544, 559, 562, 572, 607], "linkag": [559, 573], "linker": [490, 521, 559, 562], "linkonc": 521, "lint": 587, "linux": [452, 511], "lipo": 491, "list": [442, 463, 467, 494, 509, 511, 528, 559, 584, 589, 598, 607, 631, 633, 634, 635, 636, 637, 649, 650, 651, 652, 653, 654, 655, 656, 660, 661, 662, 663, 664, 665], "lit": 472, "liter": [442, 446], "littl": 467, "live": [464, 559, 565], "livedebugvalu": 605, "ll": 503, "llc": 473, "lli": 474, "lljit": 573, "lllazyjit": 573, "llrint": 559, "llround": 559, "llvm": [447, 450, 451, 453, 454, 455, 456, 457, 458, 460, 462, 463, 464, 465, 466, 467, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 525, 526, 527, 529, 531, 532, 544, 546, 547, 548, 550, 551, 552, 553, 554, 559, 560, 561, 562, 563, 567, 568, 572, 586, 587, 589, 590, 591, 592, 595, 596, 597, 598, 600, 603, 604, 605, 608, 610, 611, 613, 621, 624, 625, 626, 627, 628, 629, 632, 650, 651, 652, 654, 657, 658, 661, 662, 663, 665, 666, 667], "llvm_debug": 589, "llvm_shutdown": 589, "llvmbuild": 558, "llvmcontext": 589, "lnt": 619, "load": [447, 464, 493, 524, 559, 564, 606, 627], "loadweak": 559, "loadweakretain": 559, "local": [472, 529, 559, 591, 654, 665], "localescap": 559, "localrecov": 559, "locat": [442, 461, 492, 506, 529, 554, 570, 605, 606, 656], "locstat": 492, "log": [559, 571], "log10": 559, "log2": 559, "logarithm": 571, "logic": 442, "long": 594, "longjmp": 519, "look": 524, "lookup": [442, 447, 605], "loop": [455, 463, 467, 559, 563, 587, 615, 622, 625, 627, 652, 663], "loopinfo": 563, "looppass": 627, "lostdebuglocobserv": 554, "low": [467, 533], "lower": [513, 526, 527, 559, 587, 610], "loweratom": 587, "lowerinvok": 587, "lowerswitch": 587, "lppassmanag": 627, "lrint": 559, "lround": 559, "lsda": 519, "lshr": 559, "lto": [544, 559], "lto_code_gen_t": 562, "lto_module_t": 562, "lwe": 445, "m": [49, 50, 51, 138, 234, 235, 236, 294, 299, 304, 305, 306, 325, 326, 327, 379, 380, 381, 524, 527, 549, 560], "m0": [446, 447], "m_op_sel": 445, "m_op_sel_hi": 445, "mach": [494, 496, 501, 506, 605], "machin": [464, 487, 493, 521, 524, 533, 565, 610, 626, 655], "machine_version_major": 447, "machine_version_minor": 447, "machine_version_step": 447, "machinebasicblock": 464, "machinefunct": [464, 627], "machinefunctionpass": 627, "machineinstr": [464, 554], "machineinstrbuild": 464, "machineverifi": 539, "machsuit": 593, "maco": 511, "macro": [463, 589, 631], "magic": 454, "mai": [450, 571], "mail": 528, "main": 571, "mainten": 457, "major": [447, 517, 559], "make": [466, 467, 517, 522, 523, 589, 606], "makefil": [590, 619, 620], "man": 591, "manag": [573, 591], "managedstat": 589, "mangl": 483, "manipul": [470, 491, 513, 559], "manual": [509, 511, 559, 565, 589], "map": [447, 448, 464, 514, 523, 526, 556, 559, 577, 581, 582, 589, 608, 610, 626, 631], "mapvector": 589, "mark": 572, "markdown": 566, "marker": [493, 559], "markup": 567, "mask": [559, 595], "mass": 455, "match": [464, 468, 582], "math": [510, 559], "matrix": [464, 559], "mattr": 447, "maximum": 559, "maxnum": 559, "mc": [464, 525], "mca": 493, "mccontext": 464, "mcinst": 464, "mcjit": [515, 564], "mcsection": 464, "mcstreamer": 464, "mcsymbol": [464, 565], "me": 561, "mechan": 467, "medium": 603, "meetup": [528, 568], "mem2reg": 587, "member": [527, 576, 589, 601, 603, 605], "membership": [603, 623], "memcpi": [559, 587], "memcpyopt": [450, 587], "memdep": 587, "memmov": 559, "memori": [442, 447, 450, 493, 524, 534, 559, 587, 589, 654, 665], "memorydependenceanalysi": 450, "memoryssa": 570, "memset": 559, "memtagsanit": 569, "merg": [497, 498, 551, 554, 561, 571, 587, 591, 594], "mergefunc": 587, "mergefunct": 571, "mergereturn": 587, "mergetwofunct": 571, "messag": [467, 517], "meta_block": 600, "metadata": [447, 456, 457, 523, 559, 572, 600, 605, 622, 623, 630], "metadata_attach": 454, "metadata_block": 454, "method": [450, 467, 589, 611, 627], "mf": 627, "mfma": 445, "microscop": 467, "microsoft": [462, 531], "middl": 522, "migrat": 591, "mimg": [0, 2, 3, 4, 445], "minim": [518, 611], "minimis": 594, "minimum": [538, 559], "minnum": 559, "minor": 447, "mip": 511, "mir": [554, 565, 605], "mirror": 591, "miscellan": [445, 497, 509, 511, 565, 590, 627], "miscompil": [458, 553], "mismatch": 522, "miss": 587, "misunderstood": 527, "mitig": 606, "mix": [610, 625], "mnemon": [444, 464], "mod": 587, "mode": [447, 453, 464, 541, 561, 600, 628, 656], "model": [447, 493, 510, 524, 559, 606, 610], "modern": 529, "modif": [456, 549], "modifi": [443, 444, 445, 447, 476, 509, 522, 559], "modul": [463, 488, 497, 559, 565, 575, 577, 580, 587, 589, 627, 634, 655], "module_block": 454, "module_code_alia": 454, "module_code_asm": 454, "module_code_datalayout": 454, "module_code_deplib": 454, "module_code_funct": 454, "module_code_gcnam": 454, "module_code_globalvar": 454, "module_code_sectionnam": 454, "module_code_tripl": 454, "module_code_vers": 454, "modulepass": 627, "monorepo": [517, 591], "monoton": 451, "more": [449, 467, 532, 561, 563, 569, 589, 628], "most": 587, "motion": 587, "motiv": [442, 523, 595, 608], "move": [591, 612, 618], "moveweak": 559, "mri": 476, "msf": [497, 581, 585], "msg": [52, 139, 237, 382], "mtbuf": 445, "mubuf": [0, 2, 3, 4, 8, 445, 447], "mul": 559, "multi": [449, 501, 562], "multiclass": [615, 616], "multigrid": 593, "multipl": [513, 532, 589, 591], "multipli": 559, "multithread": 627, "must": [450, 466, 509], "mutabl": [654, 665], "mutat": [525, 554, 561, 654, 665], "my": [522, 527, 561, 658], "n": [560, 571, 576], "na": 593, "name": [442, 447, 464, 467, 482, 483, 509, 559, 582, 587, 594, 605, 626], "namespac": 467, "narr": 571, "narrow": 459, "nativ": [454, 464], "natur": 587, "nearbyint": 559, "need": [527, 566], "neg": [445, 527], "neg_hi": 445, "neg_lo": 445, "neon": 453, "nest": [557, 607], "new": [450, 459, 517, 519, 520, 540, 587, 589, 592, 599, 603, 605, 606, 607, 621, 627, 654, 665], "newbuff": 630, "newcpuid": 630, "newer": 606, "newlin": 468, "next": [468, 629], "next_free_sgpr": 447, "next_free_vgpr": 447, "nfmt": 445, "nightli": 599, "nm": 494, "noalia": 559, "node": [448, 520, 559, 587], "nomin": 603, "non": [447, 449, 466, 467, 526, 559, 570, 587, 598, 610], "nondebug": 587, "noop": 513, "normal": [513, 631], "notat": [0, 1, 2, 3, 4, 5, 6, 7, 8, 443, 529, 616], "notatom": 451, "note": [447, 460, 461, 464, 511, 533, 547, 598], "null": [446, 526, 527], "number": [442, 446, 447, 454, 509, 587, 591, 594], "numer": [468, 510], "nv": 445, "nvcc": 510, "nvptx": [464, 511, 572], "nvvm": 572, "nwchem": 593, "o": [447, 464, 494, 496, 501, 506, 560, 571, 605, 631], "objc": 559, "objcopi": 495, "objdump": 496, "object": [447, 454, 461, 494, 495, 496, 500, 501, 505, 527, 529, 559, 564, 589, 590, 600, 605, 610, 628, 655, 667], "objects": 559, "obtain": [510, 517], "ocaml": 526, "occurr": 509, "off": [446, 516], "offen": 445, "offici": [511, 551], "offset": [559, 606, 623], "offset11": 445, "offset12": 445, "offset13": 445, "offset16": 445, "offset8": 445, "offsetof": [657, 666], "often": 527, "omod": 445, "omp2012": 593, "onc": 513, "one": [522, 527, 587], "ongo": 625, "onli": [460, 496, 587, 589, 591], "onlyreadsmemori": 450, "op_sel": 445, "op_sel_hi": 445, "opaqu": 559, "opcod": [443, 444, 533, 534], "open": [552, 598], "openbenchmark": 593, "opencl": 447, "opencv": 593, "openmp": 593, "oper": [442, 446, 447, 476, 524, 532, 534, 538, 559, 589, 606, 653, 654, 664, 665], "operand": [443, 444, 445, 446, 447, 559, 565, 608, 610, 626], "opt": [56, 142, 241, 329, 386, 507, 509, 525, 574, 600, 627], "optim": [447, 451, 460, 464, 507, 510, 522, 544, 548, 553, 559, 562, 570, 574, 587, 600, 605, 606, 619, 624, 634, 651, 657, 662, 666], "option": [447, 459, 460, 462, 468, 469, 470, 472, 473, 474, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 490, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 521, 529, 545, 561, 567, 577, 589, 594, 602, 619, 621], "optioncategori": 509, "optparserdef": 613, "orc": [573, 634], "orcv1": 573, "orcv2": 573, "order": [447, 451, 453, 467, 524, 559, 622, 630, 631], "org": 593, "organ": [558, 611, 621], "other": [442, 450, 456, 461, 463, 476, 497, 509, 511, 522, 524, 527, 534, 549, 559, 572, 589, 621, 657, 666], "out": [462, 527, 633], "output": [472, 478, 486, 495, 509, 559, 561, 567, 620, 631], "outsid": 451, "outstand": 591, "over": [467, 524, 589, 592], "overflow": [527, 545, 559], "overhead": [606, 610], "overlap": 498, "overload": 510, "overrid": 450, "overridden": 571, "overview": [0, 1, 2, 3, 4, 5, 6, 7, 8, 450, 454, 463, 467, 513, 514, 518, 519, 526, 529, 531, 556, 558, 559, 565, 572, 573, 586, 590, 599, 607, 608, 610, 620, 621, 622, 632], "own": 589, "owner": 517, "p": 560, "packag": 586, "packedvector": 589, "packet": 464, "pad": [442, 576], "page": [522, 551], "pal": 447, "parallel": [561, 593], "parallel_access": 559, "param": [57, 143, 242, 387, 513, 559], "paramattr_block": 454, "paramattr_code_entri": 454, "paramattr_code_entry_old": 454, "paramattr_group_block": 454, "paramattr_grp_code_entri": 454, "paramet": [559, 572], "parboil": 593, "parent": 519, "parenthes": 467, "parr": 593, "pars": [464, 509, 649, 660], "parsec": 593, "parsecommandlineopt": 509, "parseenvironmentopt": 509, "parser": [464, 509, 649, 652, 660, 663], "partial": [587, 625], "partit": [521, 587], "pass": [450, 462, 513, 523, 524, 549, 554, 565, 571, 574, 587, 589, 606, 610, 622, 627, 651, 662], "passmanag": 627, "patch": [466, 512, 517, 529, 551, 608], "patchpoint": 608, "patent": 517, "path": [447, 559], "patleaf": 536, "pattern": [445, 468, 587], "pcmarker": 559, "pdb": [497, 577, 578, 579, 582, 583, 584, 585], "pdb2yaml": 497, "pdbutil": 497, "pe": 501, "per": 635, "perform": [493, 524, 593, 606, 625], "person": 559, "pgo": [449, 548], "phabric": 588, "phase": [464, 562, 626], "phi": [559, 570], "philosophi": [458, 562, 605], "physic": 464, "pick": [568, 589], "piec": 512, "pipelin": 539, "placement": [570, 587, 590], "placesafepoint": 610, "plan": [591, 594, 596, 627], "platform": [462, 495, 505, 511, 522, 592, 621, 628], "plugin": [526, 544, 598, 627], "point": [446, 447, 448, 474, 513, 521, 526, 534, 559, 608], "pointer": [447, 450, 467, 527, 538, 559, 589, 606, 610, 625], "pointstoconstantmemori": 450, "poison": 559, "polici": [466, 517, 603], "polybench": 593, "polymag": 593, "polymorph": 589, "pool": [545, 565], "port": 540, "portabl": [467, 522, 611, 657, 666], "posit": 509, "possibl": [467, 509, 571], "post": [559, 587, 591], "postdom": 587, "postdomfronti": 587, "postdomin": 587, "postdomtre": 587, "potenti": 588, "pow": 559, "powerpc": [464, 511, 598], "powi": 559, "practic": [466, 524], "pragma": 625, "pre": [529, 599], "prealloc": 559, "preassign": 464, "precis": [559, 570, 587], "predecessor": 589, "predefin": 447, "predic": [467, 536, 538, 559, 565, 595, 606], "preemption": 559, "prefer": [467, 524], "prefetch": 559, "prefix": [468, 559], "preincrement": 467, "preliminari": 626, "prepar": 564, "preprocess": 616, "prerequisit": [510, 549, 626], "present": [571, 579], "preserv": [554, 559, 606], "pretti": 497, "previous": 467, "primer": 463, "primit": [454, 615], "print": [450, 480, 502, 504, 587, 627], "printer": [587, 626], "prior": 466, "privat": [447, 467], "privileg": 603, "probabl": [455, 456, 559], "probe": 521, "problem": [453, 529, 531, 561, 606, 614, 627, 654, 656, 665], "process": [464, 528, 538, 551, 571, 573, 593, 596, 599, 603, 637], "processor": [447, 511, 593, 606], "product": 457, "prof": 559, "profdata": 498, "profil": [498, 521, 548, 559, 561, 587, 619], "program": [442, 464, 474, 516, 590, 598, 617], "programm": 589, "programmat": 589, "progress": 543, "project": [462, 463, 479, 517, 529, 544, 558, 590, 591, 598], "prolog": [447, 464], "prologu": 559, "promis": 513, "promot": [587, 626], "propag": [587, 589, 606], "properli": 467, "properti": [447, 524, 605, 657, 666], "propos": [442, 459, 528, 591, 605], "protect": 606, "proto": 525, "prototyp": 587, "provid": 467, "provision": 594, "prune": 587, "pseudo": [468, 514], "pseudolow": 613, "ptr": [559, 572], "ptrmask": 559, "ptrtoint": [527, 559], "ptx": 572, "ptxa": 572, "public": [510, 551, 575, 583, 589], "push": 529, "put": 655, "pwm": 593, "py": [599, 600], "q": 561, "qemu": 549, "qualif": 551, "qualifi": 467, "qualiti": [517, 610], "queri": 587, "question": [465, 522, 591], "queue": 447, "quick": [462, 509, 526, 621, 627], "quickstart": [544, 566, 607, 619], "quirki": 459, "r": 560, "r128": 445, "raja": 593, "random": [503, 525, 571, 602], "rang": [467, 514, 559, 589], "ranlib": 499, "rare": 462, "rational": [527, 559], "raw": 610, "raw_ostream": 467, "rawspe": 593, "read": [526, 562, 572, 591, 594, 626], "readabl": 467, "readcyclecount": 559, "readelf": [500, 501], "reader": [500, 501], "readobj": 501, "reassoci": 587, "reciproc": 466, "record": [447, 454, 497, 514, 575, 576, 584, 610, 628, 630], "recover": 589, "redesign": 459, "redistribut": 522, "reduc": [460, 559, 587, 594, 595], "reduct": [459, 469, 559, 587, 625], "redund": 587, "reexport": 573, "ref": [559, 587], "refer": [442, 509, 516, 526, 533, 543, 558, 559, 565, 587, 589, 591, 593, 594, 595, 596, 597, 610, 616], "reflect": 572, "reg": 559, "reg2mem": 587, "regbankselect": 541, "regex": 468, "region": [514, 587, 610, 627], "regionpass": 627, "regist": [442, 447, 464, 522, 524, 533, 565, 572, 587, 605, 606, 626, 627], "registeranalysisgroup": 627, "registerbankinfo": 541, "registerinfo": 613, "registr": [626, 627], "registri": 627, "regress": [551, 554, 621], "reject": 522, "rel": [442, 559, 606], "relat": [596, 626], "relationship": [573, 589], "releas": [451, 551, 559, 598, 599], "releasememori": 627, "relev": [460, 511], "reliabl": 464, "relicens": 517, "reloc": [447, 521, 610], "relocat": 446, "remap": [483, 564], "remark": 600, "remark_block": 600, "remot": 637, "remov": [587, 598], "removeus": 571, "replac": [471, 475, 543, 587, 589], "replacedirectcal": 571, "replacewithnewvalu": 450, "report": [457, 481, 512, 551, 553, 587, 599, 601, 603], "repositori": 591, "repres": [464, 623], "represent": [442, 450, 513, 514, 522, 559, 610], "request": [466, 551, 588], "requir": [450, 464, 466, 509, 513, 517, 526, 527, 529, 531, 590, 621, 627], "resampl": 593, "resolut": 562, "resolv": 457, "resourc": [447, 511, 532, 542], "respons": [450, 509, 587, 603], "rest": [649, 660], "restrict": [519, 524], "result": [450, 472, 610, 619], "resum": [513, 559, 561], "ret": 559, "retain": 559, "retainautoreleas": 559, "retainautoreleasedreturnvalu": 559, "retainautoreleasereturnvalu": 559, "retainblock": 559, "retcon": 513, "retir": 493, "return": [467, 513, 589, 606], "returnaddress": 559, "revers": 625, "revert": 529, "review": [466, 517, 588], "revis": 591, "rewrit": 606, "rewritestatepointsforgc": 610, "rfc": 466, "rgpassmanag": 627, "rich": 567, "right": 589, "rint": 559, "rip": 606, "risc": [511, 598], "roadmap": [595, 596], "rodinia": 593, "role": 442, "root": [459, 526, 532], "rotat": [563, 587], "round": [447, 559], "roundeven": 559, "routin": 589, "row": 442, "row_mask": 445, "rt": 549, "rtti": [467, 552], "rule": [442, 527, 536, 538, 551, 552, 554, 559], "run": [472, 525, 532, 550, 561, 572, 617, 619, 620, 627], "runonfunct": 627, "runonloop": 627, "runonmachinefunct": 627, "runonmodul": [571, 627], "runonregion": 627, "runonscc": 627, "runtim": [519, 559, 625, 628], "s_block32": 575, "s_bprel32": 575, "s_buildinfo": 575, "s_calle": 575, "s_caller": 575, "s_callsiteinfo": 575, "s_coffgroup": 575, "s_compile2": 575, "s_compile3": 575, "s_constant": 575, "s_defrang": 575, "s_defrange_framepointer_rel": 575, "s_defrange_framepointer_rel_full_scop": 575, "s_defrange_regist": 575, "s_defrange_register_rel": 575, "s_defrange_subfield": 575, "s_defrange_subfield_regist": 575, "s_end": 575, "s_envblock": 575, "s_export": 575, "s_fastlink": 575, "s_filestat": 575, "s_framecooki": 575, "s_frameproc": 575, "s_gdata32": 575, "s_gmandata": 575, "s_gproc32": 575, "s_gproc32_id": 575, "s_gthread32": 575, "s_heapallocsit": 575, "s_inline": 575, "s_inlinesit": 575, "s_inlinesite_end": 575, "s_label32": 575, "s_ldata32": 575, "s_lmandata": 575, "s_local": 575, "s_lproc32": 575, "s_lproc32_dpc": 575, "s_lproc32_dpc_id": 575, "s_lproc32_id": 575, "s_lprocref": 575, "s_lthread32": 575, "s_manconst": 575, "s_objnam": 575, "s_proc_id_end": 575, "s_procref": 575, "s_pub32": 575, "s_regist": 575, "s_regrel32": 575, "s_section": 575, "s_thunk32": 575, "s_trampolin": 575, "s_udt": 575, "s_unamespac": 575, "sadd": 559, "saddr": [62, 63, 332, 392, 393], "safe": [526, 589], "safepoint": 610, "safeti": [587, 609, 657, 666], "same": 468, "sampl": [514, 556], "sampler": 447, "sat": 559, "satur": 559, "save": 513, "sbase": [19, 20, 21, 117, 118, 201, 202, 349, 350, 351], "scalar": [534, 538, 587, 631], "scalarenumerationtrait": 631, "scalarevolut": 587, "scale": 455, "scatter": [559, 625], "scc": [446, 587], "sccp": 587, "scev": [450, 587], "schedul": [464, 605, 626], "scope": [442, 447, 463, 559, 605, 615], "scratch": 447, "script": [463, 476, 548, 599], "scrub": 591, "scudo": 602, "sdata": [31, 32, 33, 65, 66, 67, 248, 249, 250, 361, 362, 363, 395, 396, 397], "sdiv": 559, "sdnode": 536, "sdst": [68, 69, 70, 71, 72, 73, 74, 75, 110, 148, 149, 150, 151, 152, 153, 154, 155, 251, 252, 253, 254, 255, 256, 257, 258, 398, 399, 400, 401, 402, 403, 404, 405], "sdwa": [0, 445], "search": [571, 593], "searchablet": 613, "section": [442, 447, 521, 523, 566, 577, 607, 608, 630], "secur": [512, 603, 606], "see": [467, 469, 470, 472, 473, 474, 475, 477, 478, 482, 485, 486, 488, 492, 494, 495, 496, 499, 500, 501, 505, 506], "segment": [442, 447, 464, 604], "seh": 519, "select": [458, 464, 472, 509, 543, 548, 559, 605], "selectiondag": [448, 464, 520, 536, 626], "selector": [448, 626], "self": [467, 522], "semant": [513, 524, 559, 572, 608, 610, 611], "send": 529, "sentinel": 589, "sequenc": [447, 631], "sequenti": 589, "sequentiallyconsist": 451, "seri": 455, "serial": [579, 600], "server": 577, "set": [447, 450, 457, 509, 538, 552, 559, 573, 587, 589, 626, 627], "setjmp": 519, "setup": [552, 559, 650, 656, 661], "setvector": 589, "setversionprint": 509, "sext": [445, 524, 559], "sgpr": 447, "sgpr_count": 447, "sh": 599, "shader": 447, "shadow": 526, "share": 586, "shl": 559, "should": [466, 518, 522, 571], "show": [481, 498, 522], "sht_llvm_addrsig": 521, "sht_llvm_call_graph_profil": 521, "sht_llvm_dependent_librari": 521, "sht_llvm_sympart": 521, "shufflevector": 559, "sibl": 464, "sideeffect": 559, "sign": [454, 588], "signal": 447, "signific": 521, "simd": 593, "simm21": 446, "simpl": [467, 559, 572, 587, 589], "simplif": 610, "simplifi": [467, 563, 565, 587, 589], "simplifycfg": [522, 587], "sin": 559, "singl": [447, 467, 559, 587, 591, 606], "sink": 587, "site": [559, 589], "sitofp": 559, "size": [444, 446, 460, 464, 502, 513, 518, 589, 604], "sizeof": [657, 666], "sjlj": 519, "skip": 574, "slambench": 593, "slc": 445, "slightli": 589, "slot": 587, "slp": 625, "smallbitvector": 589, "smaller": 561, "smallptrset": 589, "smallset": 589, "smallstr": 589, "smallvector": 589, "smax": 559, "smem": [0, 3, 4, 445, 447], "smin": 559, "smrd": [2, 445, 447], "smul": 559, "snippet": 487, "so": 561, "social": [528, 568], "soffset": [53, 54, 55, 140, 141, 238, 239, 240, 328, 383, 384, 385], "soft": [549, 611], "softwar": [529, 531], "solut": [561, 571], "someon": 588, "sop1": [0, 2, 3, 4, 447], "sop2": [0, 2, 3, 4, 447], "sopc": [0, 2, 3, 4, 447], "sopk": [0, 2, 3, 4], "sopp": [0, 2, 3, 4, 447], "sort": [467, 497, 589], "sourc": [442, 447, 462, 467, 506, 514, 522, 529, 559, 590, 598, 605, 656], "space": [442, 447, 464, 467, 527, 572], "span": 593, "sparc": 511, "spars": 587, "sparsebitvector": 589, "sparsemultiset": 589, "sparseset": 589, "spec": 593, "special": [442, 460, 559, 572, 605, 628], "specialis": 559, "specif": [462, 464, 473, 476, 493, 494, 495, 501, 505, 506, 521, 524, 534, 605, 611, 621, 622, 657, 666], "specifi": [450, 509, 524, 526, 559, 627], "spectr": 606, "specul": 606, "speed": 466, "sphinx": 607, "split": 466, "sponentri": 559, "sqrt": 559, "src": [9, 10, 77, 78, 79, 80, 81, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 260, 261, 262, 263, 264, 265, 295, 296, 300, 301, 307, 308, 309, 333, 334, 335, 336, 407, 408, 409, 410, 411, 412], "src0_sel": 445, "src1_sel": 445, "sreg": 572, "srem": 559, "sroa": 587, "srsrc": [60, 61, 145, 146, 245, 246, 331, 390, 391], "ssa": [464, 522, 563, 587], "ssa_copi": 559, "ssamp": [64, 147, 247, 394], "ssca": 593, "ssrc": [83, 84, 85, 86, 87, 88, 89, 90, 111, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 267, 268, 269, 270, 271, 272, 273, 274, 275, 414, 415, 416, 417, 418, 419, 420, 421, 422], "ssub": 559, "stabl": 518, "stack": [442, 447, 464, 521, 526, 559, 569, 587, 604, 606, 608, 609, 610, 629, 657, 666], "stackguard": 559, "stacklet": 604, "stackmap": [608, 610], "stackprotector": 559, "stackrestor": 559, "stacksav": 559, "stage": [449, 493, 549], "stai": 517, "standard": [442, 454, 467, 510, 513, 529, 559, 589, 592, 593, 594, 605, 611], "start": [462, 464, 509, 526, 529, 530, 531, 559, 561, 568, 574, 621, 627, 633], "startup": 561, "stash": 591, "stat": [589, 600], "state": [442, 447, 571, 606], "stateless": 587, "statement": [456, 467, 606], "statepoint": [526, 559, 610], "static": [467, 473, 587], "statist": [486, 492, 493, 589, 627], "statu": [468, 469, 470, 472, 473, 474, 476, 477, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 490, 492, 493, 494, 495, 498, 500, 501, 502, 503, 504, 505, 506, 507, 508, 588, 591, 592, 610], "std": [467, 510, 589], "stderr": 587, "steen": 450, "step": [447, 546, 559, 591, 626, 629], "still": 524, "storag": [509, 559, 589], "store": [464, 493, 522, 524, 559, 587, 606], "storestrong": 559, "storeweak": 559, "strategi": [526, 559, 606], "straw": 591, "stream": [497, 575, 577, 578, 580, 581, 582, 583, 584, 585], "streamer": 600, "strength": 587, "stress": 503, "string": [468, 504, 514, 559, 573, 589, 600], "stringerror": 589, "stringmap": 589, "stringref": 589, "stringset": 589, "strip": [505, 559, 587], "strtab_block": 454, "struct": [467, 527, 559], "structur": [442, 484, 513, 517, 525, 559, 565, 570, 571, 589, 619, 621, 622, 625], "studio": 531, "stuff": 522, "style": [450, 467, 500, 521, 552, 559, 590], "sub": [514, 559, 591], "subclass": [589, 626], "subcommand": 497, "subdirectori": 590, "submit": [512, 517, 553], "subregist": 565, "subsect": [566, 607], "substitut": [468, 472, 621], "substream": [577, 580], "subsubsect": 566, "subtarget": [613, 626], "successor": [565, 589], "suffic": 444, "suggest": 568, "suit": [472, 529, 593, 599, 619, 620, 621], "summari": [453, 478, 497, 527, 559], "superblock": 581, "suppli": 561, "support": [456, 464, 495, 510, 519, 522, 545, 559, 561, 573, 592, 595, 608, 610, 611, 616, 626, 651, 662], "suspend": 513, "svn": [517, 529, 591], "switch": [456, 467, 513, 559], "switchinst": [456, 587], "swizzl": 445, "symbol": [446, 447, 470, 482, 494, 497, 506, 521, 562, 565, 573, 575, 578, 580, 583, 587], "sync": 447, "synopsi": [468, 469, 470, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508], "syntax": [0, 1, 2, 3, 4, 5, 6, 7, 8, 444, 445, 446, 468, 513, 521, 559, 572, 608, 610, 615, 616, 617, 649, 660, 668], "system": [447, 529, 531, 559, 611, 612, 615], "systemz": [511, 598], "t": [458, 466, 467, 522, 524, 527, 560, 561, 566, 594, 606, 611], "tabl": [447, 464, 494, 519, 521, 565, 579, 592, 595, 600, 605, 623, 632, 667], "tablegen": [464, 613, 614, 615, 616, 617, 618], "tag": [442, 514, 551, 569, 605, 631], "tail": [464, 587], "tailcallelim": 587, "talk": 568, "target": [447, 464, 474, 508, 517, 519, 521, 527, 535, 540, 549, 559, 561, 565, 572, 587, 598, 626, 655, 657, 666], "targetdata": 587, "targetframelow": 464, "targetinstrinfo": [464, 626], "targetjitinfo": 464, "targetlow": 464, "targetmachin": 464, "targetregisterinfo": [464, 626], "targetsubtarget": 464, "task": [551, 589], "tba": 446, "tbaa": 559, "tblgen": 508, "teardown": 559, "tech": 568, "techniqu": 606, "tell": 527, "templat": [559, 566, 589, 607, 615], "tempt": 606, "termin": 559, "terminologi": [455, 529, 563], "test": [448, 459, 462, 469, 472, 517, 529, 539, 549, 551, 554, 559, 561, 565, 593, 597, 599, 609, 619, 620, 621, 623], "tester": 472, "text": [509, 607], "tfe": 445, "tgt": [91, 179, 276, 423], "than": 527, "thi": [522, 524, 527, 561, 566, 571, 591, 598, 607, 654, 656, 665], "thing": [522, 524], "thinlto": 559, "thought": [650, 661], "thread": [447, 559, 587, 589], "threadsafecontext": 573, "threadsafemodul": 573, "threshold": 629, "through": 467, "throw": [519, 611], "thumb": 552, "tidbit": [657, 666], "time": [466, 467, 544, 553, 562, 570, 606, 656], "timelin": [493, 551], "tinyptrvector": 589, "tip": [452, 524, 657, 666], "tire": [653, 664], "tl": 606, "tma": 446, "todo": [447, 462, 509, 552, 650], "togeth": 655, "toi": 561, "token": [519, 559], "too": 594, "tool": [458, 461, 466, 469, 471, 483, 489, 491, 495, 498, 505, 522, 525, 529, 531, 589, 598, 628, 629], "toolchain": [517, 529], "top": [509, 573, 616], "topic": [462, 589, 597, 624, 667], "tos": 573, "town": 568, "tpi": 584, "trace": [561, 628, 629, 630], "track": 619, "trade": 516, "tradeoff": [570, 606], "trampolin": 559, "transfer": 517, "transform": [450, 513, 554, 587, 605, 622], "transit": [519, 559, 573, 594, 606, 610], "translat": 535, "transpar": 603, "transpos": 559, "trap": [446, 447, 559], "travers": 589, "treat": 467, "tree": [587, 590, 593, 649, 660], "triag": 457, "trick": [657, 666], "trip": 625, "tripl": [447, 464, 559, 572], "trivial": [651, 662], "trophi": 561, "troubleshoot": 549, "trunc": 559, "truncat": 534, "try": [519, 549], "tscwrap": 630, "ttmp": 446, "tune": 473, "turn": [467, 522, 589], "tutori": [468, 530, 540, 572, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 657, 658, 659, 666, 667], "tvm": 593, "twine": 589, "two": [464, 527], "type": [11, 92, 180, 277, 310, 337, 424, 442, 444, 446, 448, 463, 467, 497, 514, 520, 524, 527, 533, 534, 559, 576, 577, 584, 587, 589, 602, 615, 616, 623, 625, 626, 631], "type_block": 454, "type_code_arrai": 454, "type_code_bfloat": 454, "type_code_doubl": 454, "type_code_float": 454, "type_code_fp128": 454, "type_code_funct": 454, "type_code_function_old": 454, "type_code_half": 454, "type_code_integ": 454, "type_code_label": 454, "type_code_metadata": 454, "type_code_numentri": 454, "type_code_opaqu": 454, "type_code_point": 454, "type_code_ppc_fp128": 454, "type_code_struct_anon": 454, "type_code_struct_nam": 454, "type_code_vector": 454, "type_code_void": 454, "type_code_x86_fp80": 454, "type_code_x86_mmx": 454, "typecheckedloadconstvcal": 559, "typecheckedloadvcal": 559, "typeid": 519, "typeidinfo": 559, "typetest": 559, "typetestassumeconstvcal": 559, "typetestassumevcal": 559, "uadd": 559, "udiv": 559, "uglygep": 527, "uimm20": 446, "uimm21": 446, "uimm32": 446, "uimm8": 446, "uitofp": 559, "umax": 559, "umin": 559, "umul": 559, "unabbrev_record": 454, "unari": [446, 559, 653, 664], "undef": 522, "undefin": [442, 559, 572], "underflow": 545, "underli": 527, "understand": 522, "unifi": 587, "uniform": 447, "unintention": 466, "union": 559, "uniqu": 631, "uniquevector": 589, "unit": [442, 447, 464, 493, 621, 656], "univers": 491, "unknown": 625, "unnecessari": 467, "unord": [451, 559], "unorm": 445, "unpack": 529, "unpredict": 559, "unreach": [522, 559], "unrol": [559, 587, 622, 625], "unroll_and_jam": 559, "unspecifi": 447, "unswitch": 587, "unus": [587, 611], "unwindless": 587, "up": [447, 522, 552, 573, 588, 627], "updat": [448, 450, 517, 551, 554, 570, 591], "urem": 559, "uri": 447, "us": [450, 453, 458, 462, 463, 464, 466, 467, 493, 510, 519, 522, 524, 525, 526, 527, 529, 531, 544, 545, 548, 549, 550, 554, 555, 556, 559, 561, 570, 573, 574, 587, 589, 598, 606, 607, 611, 623, 627, 628, 634, 636, 657, 666], "usabl": 594, "usag": [442, 458, 462, 498, 518, 537, 544, 545, 557, 561, 569, 574, 602, 608, 625], "user": [447, 473, 561, 572, 587, 589, 624, 631, 653, 654, 664, 665], "usub": 559, "util": [479, 525, 529, 554, 587, 597, 610, 631], "v": [446, 463, 509, 510, 511, 545, 584, 598], "v2": [447, 559], "v3": 447, "v_mad_mix": 445, "va_arg": 559, "va_copi": 559, "va_end": 559, "va_start": 559, "vaddr": [14, 15, 16, 17, 94, 95, 112, 113, 114, 115, 196, 197, 198, 199, 313, 338, 344, 345, 346, 347, 426, 427], "valid": [599, 631], "valu": [442, 446, 447, 509, 522, 527, 554, 559, 561, 565, 571, 574, 587, 589, 605, 606, 615, 616, 631], "value_symtab_block": 454, "valuemap": 589, "valuesymbolt": 589, "var": 559, "variabl": [454, 462, 463, 464, 467, 468, 521, 559, 587, 590, 594, 604, 605, 625, 654, 656, 665], "variad": 534, "variant": [591, 606], "variou": 587, "vasrc": [339, 340], "vbr": 454, "vcall_vis": 623, "vcc": [96, 182, 279, 428, 446], "vccz": 446, "vdata": [24, 25, 26, 27, 28, 29, 30, 97, 98, 99, 100, 121, 122, 123, 124, 125, 126, 183, 184, 185, 186, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 280, 281, 282, 283, 322, 341, 354, 355, 356, 357, 358, 359, 360, 429, 430, 431, 432], "vdst": [12, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 101, 102, 103, 104, 127, 128, 129, 130, 131, 132, 133, 134, 187, 188, 189, 190, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 284, 285, 286, 287, 297, 302, 311, 323, 342, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 433, 434, 435, 436], "vecmathlib": 593, "vector": [527, 534, 538, 559, 579, 587, 589, 595, 596, 622, 625], "vendor": 447, "verif": [461, 610], "verifi": [468, 486, 522, 587], "versa": 589, "version": [442, 467, 515, 551, 561, 622], "vgpr": 447, "vgpr_count": 447, "via": [529, 588, 619], "vice": 589, "view": [463, 493, 587, 589], "viewer": [600, 629], "vintrp": [0, 2, 3, 4, 445], "virtual": [464, 467, 522, 533, 611, 623], "visibl": 559, "visual": [462, 531, 629], "vla": 527, "vliw": 464, "vm": 445, "void": [559, 571], "volatil": 559, "vop1": [0, 2, 3, 4], "vop2": [0, 1, 2, 3, 4, 7, 8], "vop3": [0, 2, 3, 4, 7, 8, 445], "vop3p": [0, 1, 4, 5, 6, 7, 8, 445], "vopc": [0, 2, 3, 4], "vp": [559, 595], "vplan": 596, "vscale": 559, "vsrc": [13, 82, 105, 106, 107, 108, 167, 191, 192, 193, 194, 266, 288, 289, 290, 291, 312, 343, 413, 437, 438, 439, 440], "wai": [512, 527], "waitcnt": [109, 195, 292, 441], "walker": 570, "wallclocktim": 630, "warn": [467, 520, 587], "we": [457, 571], "web": 588, "webassembli": 598, "websit": 551, "weight": [455, 456, 498], "well": 559, "what": [458, 466, 522, 524, 526, 527, 561, 571, 591, 601, 603, 627], "when": [458, 466, 467, 522, 524, 554, 561], "where": [522, 568], "wherev": 467, "whether": 509, "which": [450, 518, 527, 575], "while": [589, 606], "whitespac": 467, "who": 466, "why": [518, 522, 527, 561, 591, 592, 654, 656, 665], "wide": 528, "widen": 559, "width": [454, 467, 524, 559], "window": [511, 519, 521, 561, 598], "wise": 559, "without": 522, "won": 566, "word": 454, "work": [447, 457, 493, 512, 527, 543, 561, 571, 605, 606, 609, 628], "workflow": [466, 591, 596], "world": 627, "wrapper": [454, 463], "write": [450, 464, 467, 493, 509, 522, 525, 526, 527, 590, 591, 613, 620, 621, 626, 627], "writer": 511, "written": 522, "x": [527, 593], "x86": [464, 511, 521, 598, 606], "x86_64": 550, "x86_mmx": 559, "x86evex2vex": 613, "xcoff": 496, "xcore": 511, "xnack": 446, "xor": 559, "xrai": [597, 628, 629, 630], "yaml": [600, 631], "yaml2obj": 668, "yaml2pdb": 497, "you": [566, 601], "your": [462, 546, 552, 568, 589, 627, 628], "yourself": 570, "zen": 606, "zero": 519, "zext": [524, 559], "zig": 598, "zip": 591}})